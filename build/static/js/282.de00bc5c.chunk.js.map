{"version":3,"file":"static/js/282.de00bc5c.chunk.js","mappings":"oGAcA,IAdU,CAAE,KAAQ,oBAAqB,SAAY,CAC7C,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,GAAI,IAAK,EAAE,GAAI,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,uBAAwB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SAC/5W,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,IAAK,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,IAAK,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QA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U,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAA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,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,QAAS,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,IAAK,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,cAAe,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACzoT,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,OAAQ,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,oBAAkB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACt+Q,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,OAAQ,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,iBAAkB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACnuR,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,EAAG,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,oBAAqB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACxmO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,OAAQ,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,WAAa,WAAc,CAAE,KAAQ,6BAAwB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACl2J,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,EAAG,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,WAAa,WAAc,CAAE,KAAQ,2BAAsB,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SACnvL,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,OAAQ,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,oBAAe,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SAC7qO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,MAAO,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,MAAO,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,IAAK,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,aAAc,GAAM,QAAS,KAAQ,SAAU,MAAS,WAAa,GAAM,SAC3gc,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SA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,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,aAAe,WAAc,CAAE,GAAM,KAAM,KAAQ,aAAe,GAAM,MACv1H,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,GAAM,KAAM,KAAQ,WAAa,GAAM,MACpd,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,YAAc,WAAc,CAAE,GAAM,KAAM,KAAQ,kBAAoB,GAAM,MACrO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,WAAY,CAAC,CAAC,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAS,SAAU,EAAE,OAAS,SAAU,CAAC,MAAQ,SAAU,CAAC,QAAS,MAAO,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,QAAS,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,KAAM,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,QAAS,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,aAAe,WAAc,CAAE,GAAM,KAAM,KAAQ,cAAgB,GAAM,MACn5W,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,GAAM,KAAM,KAAQ,uCAAyC,GAAM,MACpQ,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,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SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,MAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,OAAS,EAAE,MAAO,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,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AAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,QAAS,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,KAAM,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,UAAW,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,Q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AU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,aAAe,WAAc,CAAE,GAAM,KAAM,KAAQ,SAAW,GAAM,MACtyJ,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU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AAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,MAAO,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,Q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AAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,KAAM,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,Q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CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,OAAQ,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,OAAQ,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,KAAO,CAAC,SAAU,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,MAAQ,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,OAAS,CAAC,UAAW,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,MAAO,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,QAAS,MAAO,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,CAAC,CAAC,SAAU,MAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,UAAW,MAAQ,CAAC,UAAW,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,OAAQ,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAU,CAAC,CAAC,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,UAAW,MAAQ,CAAC,UAAW,OAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,OAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,QAAS,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,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AAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,Q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AQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,GAAI,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OA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QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,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SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,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AAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,S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,YAAe,CAAC,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,OAAQ,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,MAAO,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW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,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,QAAS,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,OAAQ,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,QAAS,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,IAAK,SAAU,CAAC,IAAK,QAAS,CAAC,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,IAAK,QAAS,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,IAAK,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,KAAM,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,IAAK,SAAU,CAAC,IAAK,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC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AE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,OAAQ,QAAS,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EA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","sources":["../node_modules/@amcharts/amcharts4-geodata/moroccoLow.js","../node_modules/@amcharts/amcharts4-geodata/worldMoroccoLow.js","../node_modules/src/.internal/core/elements/Grip.ts","../node_modules/src/.internal/charts/Chart.ts","../node_modules/src/.internal/charts/Legend.ts","../node_modules/src/.internal/charts/axes/Axis.ts","../node_modules/src/.internal/charts/axes/AxisBreak.ts","../node_modules/src/.internal/charts/axes/AxisBullet.ts","../node_modules/src/.internal/charts/axes/AxisFill.ts","../node_modules/src/.internal/charts/axes/AxisLabel.ts","../node_modules/src/.internal/charts/axes/AxisLine.ts","../node_modules/src/.internal/charts/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/axes/AxisTick.ts","../node_modules/src/.internal/charts/axes/Grid.ts","../node_modules/src/.internal/charts/axes/ValueAxis.ts","../node_modules/src/.internal/charts/axes/ValueAxisBreak.ts","../node_modules/src/.internal/charts/elements/Bullet.ts","../node_modules/src/.internal/charts/elements/HeatLegend.ts","../node_modules/src/.internal/charts/elements/Tick.ts","../node_modules/src/.internal/charts/series/Series.ts","../node_modules/src/.internal/charts/types/SerialChart.ts","../node_modules/src/.internal/charts/axes/DateAxisBreak.ts","../node_modules/src/.internal/charts/axes/DateAxis.ts","../node_modules/src/.internal/charts/axes/CategoryAxisBreak.ts","../node_modules/src/.internal/charts/axes/CategoryAxis.ts","../node_modules/src/.internal/charts/series/XYSeries.ts","../node_modules/src/.internal/charts/elements/XYChartScrollbar.ts","../node_modules/src/.internal/charts/types/XYChart.ts","../node_modules/src/.internal/charts/series/LineSeriesSegment.ts","../node_modules/src/.internal/charts/axes/DurationAxis.ts","../node_modules/src/.internal/charts/series/LineSeries.ts","../node_modules/src/.internal/charts/series/RadarSeries.ts","../node_modules/src/.internal/charts/axes/AxisFillCircular.ts","../node_modules/src/.internal/charts/axes/GridCircular.ts","../node_modules/src/.internal/charts/axes/AxisLabelCircular.ts","../node_modules/src/.internal/charts/axes/AxisRendererCircular.ts","../node_modules/src/.internal/charts/axes/AxisRendererRadial.ts","../node_modules/src/.internal/charts/types/RadarChart.ts","../node_modules/src/.internal/charts/elements/ClockHand.ts","../node_modules/src/.internal/charts/types/GaugeChart.ts","../node_modules/src/.internal/charts/series/PercentSeries.ts","../node_modules/src/.internal/charts/types/PercentChart.ts","../node_modules/src/.internal/charts/elements/PieTick.ts","../node_modules/src/.internal/charts/series/PieSeries.ts","../node_modules/src/.internal/charts/types/PieChart.ts","../node_modules/src/.internal/charts/series/PieSeries3D.ts","../node_modules/src/.internal/charts/types/PieChart3D.ts","../node_modules/src/.internal/charts/types/SlicedChart.ts","../node_modules/src/.internal/charts/elements/FlowDiagramNode.ts","../node_modules/src/.internal/charts/elements/FlowDiagramLink.ts","../node_modules/src/.internal/charts/types/FlowDiagram.ts","../node_modules/src/.internal/charts/elements/LabelBullet.ts","../node_modules/src/.internal/charts/elements/SankeyNode.ts","../node_modules/src/.internal/charts/elements/SankeyLink.ts","../node_modules/src/.internal/charts/types/SankeyDiagram.ts","../node_modules/src/.internal/charts/elements/ChordNode.ts","../node_modules/src/.internal/core/elements/QuadraticCurve.ts","../node_modules/src/.internal/charts/elements/ChordLink.ts","../node_modules/src/.internal/charts/types/ChordDiagram.ts","../node_modules/src/.internal/charts/elements/Column.ts","../node_modules/src/.internal/charts/series/ColumnSeries.ts","../node_modules/src/.internal/charts/series/TreeMapSeries.ts","../node_modules/src/.internal/charts/types/TreeMap.ts","../node_modules/src/.internal/charts/axes/AxisRendererX3D.ts","../node_modules/src/.internal/charts/axes/AxisRendererY3D.ts","../node_modules/src/.internal/charts/elements/Column3D.ts","../node_modules/src/.internal/charts/series/ColumnSeries3D.ts","../node_modules/src/.internal/charts/types/XYChart3D.ts","../node_modules/src/.internal/charts/elements/Candlestick.ts","../node_modules/src/.internal/charts/series/CandlestickSeries.ts","../node_modules/src/.internal/charts/elements/OHLC.ts","../node_modules/src/.internal/charts/series/OHLCSeries.ts","../node_modules/src/.internal/charts/series/StepLineSeriesSegment.ts","../node_modules/src/.internal/charts/series/StepLineSeries.ts","../node_modules/src/.internal/charts/elements/RadarColumn.ts","../node_modules/src/.internal/charts/series/RadarColumnSeries.ts","../node_modules/src/.internal/charts/elements/FunnelSlice.ts","../node_modules/src/.internal/charts/elements/FunnelTick.ts","../node_modules/src/.internal/charts/series/FunnelSeries.ts","../node_modules/src/.internal/charts/series/PyramidSeries.ts","../node_modules/src/.internal/charts/series/PictorialStackedSeries.ts","../node_modules/src/.internal/charts/elements/ConeColumn.ts","../node_modules/src/.internal/charts/series/ConeSeries.ts","../node_modules/src/.internal/charts/elements/CurvedColumn.ts","../node_modules/src/.internal/charts/series/CurvedColumnSeries.ts","../node_modules/src/.internal/charts/elements/CircleBullet.ts","../node_modules/src/.internal/charts/elements/ErrorBullet.ts","../node_modules/src/.internal/charts/elements/NavigationBar.ts","../node_modules/src/.internal/charts/cursors/Cursor.ts","../node_modules/src/.internal/charts/cursors/XYCursor.ts","../node_modules/src/.internal/charts/cursors/RadarCursor.ts","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/src/.internal/charts/map/MapObject.ts","../node_modules/src/.internal/charts/map/MapImage.ts","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/projections/Projection.ts","../node_modules/src/.internal/charts/map/SmallMap.ts","../node_modules/src/.internal/charts/map/Geo.ts","../node_modules/src/.internal/charts/map/MapLineObject.ts","../node_modules/src/.internal/charts/map/MapImageSeries.ts","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/src/.internal/charts/map/Graticule.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/src/.internal/charts/types/MapChart.ts","../node_modules/src/.internal/charts/map/MapSpline.ts","../node_modules/src/.internal/charts/map/MapArc.ts","../node_modules/src/.internal/charts/map/MapSplineSeries.ts","../node_modules/src/.internal/charts/map/MapArcSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/src/.internal/charts/map/projections/Mercator.ts","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/src/.internal/charts/map/projections/Miller.ts","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/src/.internal/charts/map/projections/Eckert6.ts","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/src/.internal/charts/map/projections/Orthographic.ts","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/src/.internal/charts/map/projections/Stereographic.ts","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/src/.internal/charts/map/projections/Albers.ts","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/src/.internal/charts/map/projections/AlbersUSA.ts","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/src/.internal/charts/map/projections/NaturalEarth1.ts","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/src/.internal/charts/map/projections/AzimuthalEqualArea.ts","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/src/.internal/charts/map/projections/EqualEarth.ts","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/src/.internal/plugins/WordCloud/WordCloudSeries.ts","../node_modules/src/.internal/plugins/WordCloud/WordCloud.ts","../node_modules/src/.internal/themes/animated.ts","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js"],"sourcesContent":["var map = { \"type\": \"FeatureCollection\", \"features\": [\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-14.9062, 24.6829], [-14.8688, 24.6032], [-14.7499, 24.627], [-14.6904, 24.5913], [-14.6547, 24.4902], [-14.5833, 24.4426], [-14.4584, 24.5199], [-14.393, 24.4783], [-14.3156, 24.5259], [-14.2383, 24.5259], [-14.155, 24.5794], [-14.0717, 24.5378], [-14.0063, 24.5437], [-13.8457, 24.5021], [-13.6077, 24.4485], [-13.4114, 24.5794], [-13.3163, 24.5616], [-13.1735, 24.5497], [-12.9415, 24.5675], [-12.7154, 24.4961], [-12.5489, 24.4485], [-12.4418, 24.4664], [-12.3228, 24.5199], [-12.186, 24.5378], [-12.0194, 24.5021], [-12.0033, 24.4948], [-12.0049, 24.3786], [-12.003, 24.2394], [-12.0039, 24.1052], [-12, 24], [-12, 23.4545], [-12.0379, 23.4477], [-12.0761, 23.4443], [-12.1241, 23.4441], [-12.1265, 23.4373], [-12.3585, 23.3242], [-12.5905, 23.2885], [-13.0129, 23.0208], [-13.1313, 22.8136], [-13.1383, 22.7863], [-13.1447, 22.7521], [-13.1457, 22.7314], [-13.138, 22.6486], [-13.1341, 22.6278], [-13.1285, 22.5576], [-13.1062, 22.3357], [-13.0921, 22.2094], [-13.084, 22.115], [-13.0802, 22.0908], [-13.0635, 21.9291], [-13.0583, 21.8739], [-13.0591, 21.8601], [-13.0565, 21.8539], [-13.0548, 21.84], [-13.0555, 21.8201], [-13.053, 21.8145], [-13.0468, 21.7441], [-13.0444, 21.7298], [-13.045, 21.7096], [-13.042, 21.7026], [-13.0315, 21.5927], [-13.0245, 21.542], [-13.0248, 21.5213], [-13.0229, 21.5168], [-13.0143, 21.4505], [-13.0018, 21.3308], [-13.1092, 21.3329], [-13.1427, 21.333], [-13.1501, 21.3317], [-13.2016, 21.3338], [-13.4296, 21.3367], [-13.8829, 21.3404], [-14.2227, 21.3424], [-14.2326, 21.3413], [-14.5479, 21.3431], [-14.5818, 21.3418], [-14.5965, 21.3436], [-14.6443, 21.3433], [-14.6517, 21.3419], [-14.7228, 21.3433], [-14.7367, 21.342], [-14.8282, 21.3436], [-14.9609, 21.3436], [-15.3653, 21.3432], [-15.8771, 21.3412], [-16.309, 21.337], [-16.8285, 21.3306], [-16.9193, 21.3304], [-16.9397, 21.3266], [-16.9702, 21.2208], [-16.9774, 21.202], [-16.9873, 21.1695], [-17.0031, 21.1046], [-17.0093, 21.0927], [-17.0261, 21.0697], [-17.0398, 21.0403], [-17.0488, 20.9802], [-17.0664, 20.923], [-17.0665, 20.8398], [-17.0519, 20.7742], [-17.0588, 20.7787], [-17.0629, 20.7907], [-17.0662, 20.7901], [-17.0735, 20.8043], [-17.0729, 20.8124], [-17.0793, 20.8152], [-17.0854, 20.8285], [-17.0957, 20.8257], [-17.0999, 20.8338], [-17.104, 20.836], [-17.104, 20.8493], [-17.0946, 20.8568], [-17.0804, 20.8788], [-17.0782, 20.8851], [-17.0815, 20.9015], [-17.0849, 20.9093], [-17.0915, 20.9115], [-17.096, 20.9224], [-17.0885, 20.939], [-17.0863, 20.956], [-17.0826, 20.966], [-17.0737, 20.9776], [-17.0643, 21.0007], [-17.0654, 21.006], [-17.0632, 21.0363], [-17.0626, 21.0707], [-17.0651, 21.0793], [-17.0638, 21.0874], [-17.0593, 21.0954], [-17.0579, 21.1068], [-17.0538, 21.1179], [-17.0546, 21.124], [-17.0515, 21.1446], [-17.0443, 21.1621], [-17.0507, 21.1735], [-17.051, 21.1846], [-17.0488, 21.1924], [-17.0479, 21.2104], [-17.0449, 21.229], [-17.0404, 21.2404], [-17.0357, 21.2746], [-17.0279, 21.2915], [-17.031, 21.2985], [-17.0307, 21.3182], [-17.0329, 21.3199], [-17.0304, 21.3399], [-17.0276, 21.346], [-17.0271, 21.3599], [-17.0168, 21.3854], [-17.0129, 21.4023], [-17.0143, 21.4215], [-17.0118, 21.4287], [-17.011, 21.4451], [-17.0035, 21.4618], [-17.0032, 21.4676], [-16.9954, 21.4885], [-16.9932, 21.4982], [-16.9929, 21.5263], [-16.9876, 21.5479], [-16.9821, 21.5599], [-16.9804, 21.5863], [-16.984, 21.5904], [-16.9857, 21.6018], [-16.9832, 21.6201], [-16.9768, 21.6346], [-16.9746, 21.6454], [-16.9754, 21.666], [-16.9796, 21.6726], [-16.9788, 21.6826], [-16.9815, 21.6887], [-16.9826, 21.7007], [-16.9821, 21.7188], [-16.9768, 21.7262], [-16.9701, 21.7287], [-16.9662, 21.7368], [-16.9593, 21.7426], [-16.9507, 21.7599], [-16.9501, 21.7685], [-16.9562, 21.7724], [-16.9654, 21.7729], [-16.9649, 21.7865], [-16.9671, 21.7935], [-16.9607, 21.8051], [-16.9615, 21.8124], [-16.9571, 21.821], [-16.9551, 21.8332], [-16.9443, 21.8482], [-16.934, 21.8549], [-16.926, 21.8654], [-16.9107, 21.8813], [-16.9085, 21.8876], [-16.9007, 21.899], [-16.8937, 21.9204], [-16.894, 21.9271], [-16.8996, 21.9299], [-16.8974, 21.9418], [-16.8876, 21.9552], [-16.8801, 21.9699], [-16.879, 21.9813], [-16.8721, 21.9885], [-16.8715, 21.9998], [-16.8593, 22.0315], [-16.8499, 22.0454], [-16.8371, 22.0882], [-16.8313, 22.1015], [-16.824, 22.1132], [-16.8237, 22.1207], [-16.8174, 22.1307], [-16.8157, 22.141], [-16.8071, 22.1623], [-16.7888, 22.1671], [-16.774, 22.1765], [-16.7693, 22.1832], [-16.7699, 22.1946], [-16.7757, 22.2021], [-16.7574, 22.2265], [-16.7365, 22.2388], [-16.7218, 22.2518], [-16.7082, 22.2665], [-16.7076, 22.2724], [-16.7001, 22.2812], [-16.6815, 22.2957], [-16.6712, 22.2965], [-16.6529, 22.294], [-16.6463, 22.2804], [-16.641, 22.2776], [-16.6363, 22.269], [-16.6079, 22.2715], [-16.5843, 22.2779], [-16.569, 22.284], [-16.5604, 22.2856], [-16.5218, 22.3043], [-16.4949, 22.3243], [-16.4965, 22.3335], [-16.4932, 22.3423], [-16.4957, 22.3474], [-16.4776, 22.3624], [-16.4687, 22.3774], [-16.4665, 22.3854], [-16.4599, 22.3924], [-16.4615, 22.4082], [-16.4557, 22.4187], [-16.4551, 22.429], [-16.4518, 22.4337], [-16.4502, 22.4524], [-16.4524, 22.4582], [-16.446, 22.4721], [-16.4424, 22.4757], [-16.4399, 22.4857], [-16.4418, 22.4896], [-16.4404, 22.5015], [-16.431, 22.5179], [-16.4215, 22.5274], [-16.4093, 22.5332], [-16.3982, 22.5429], [-16.3943, 22.5435], [-16.3704, 22.5638], [-16.3599, 22.5785], [-16.3593, 22.6018], [-16.3546, 22.6224], [-16.3551, 22.6251], [-16.3429, 22.6507], [-16.3463, 22.6582], [-16.346, 22.6652], [-16.3418, 22.6768], [-16.3399, 22.6907], [-16.3432, 22.706], [-16.3437, 22.7246], [-16.3396, 22.734], [-16.3354, 22.7535], [-16.3365, 22.7571], [-16.3279, 22.7674], [-16.3304, 22.7746], [-16.3235, 22.7787], [-16.3159, 22.7904], [-16.3162, 22.794], [-16.3029, 22.8091], [-16.2907, 22.8268], [-16.2879, 22.8349], [-16.2879, 22.8446], [-16.2938, 22.8518], [-16.3015, 22.8524], [-16.3032, 22.8626], [-16.301, 22.8693], [-16.2912, 22.8868], [-16.2882, 22.8949], [-16.2868, 22.9071], [-16.2821, 22.9037], [-16.2799, 22.8968], [-16.2676, 22.8976], [-16.2546, 22.9035], [-16.2279, 22.9118], [-16.2143, 22.9182], [-16.1943, 22.9329], [-16.179, 22.9485], [-16.1574, 22.9746], [-16.1468, 22.9949], [-16.1421, 23.0129], [-16.1415, 23.0337], [-16.1437, 23.0463], [-16.1479, 23.0588], [-16.1554, 23.0712], [-16.1621, 23.079], [-16.1713, 23.0863], [-16.1815, 23.091], [-16.1899, 23.0913], [-16.1999, 23.0879], [-16.2065, 23.0913], [-16.1993, 23.1074], [-16.1943, 23.1138], [-16.1888, 23.1268], [-16.1637, 23.1432], [-16.1629, 23.1474], [-16.156, 23.1532], [-16.1451, 23.1663], [-16.1437, 23.1718], [-16.1312, 23.1798], [-16.124, 23.1896], [-16.1221, 23.1971], [-16.114, 23.209], [-16.1182, 23.226], [-16.1157, 23.2329], [-16.0985, 23.2501], [-16.0969, 23.2549], [-16.0882, 23.2649], [-16.0743, 23.2912], [-16.0654, 23.299], [-16.0601, 23.311], [-16.0621, 23.3229], [-16.0668, 23.329], [-16.0565, 23.3349], [-16.0335, 23.3546], [-16.0093, 23.3771], [-15.9976, 23.3893], [-15.9879, 23.4068], [-15.981, 23.4135], [-15.9793, 23.4237], [-15.974, 23.4318], [-15.9674, 23.4468], [-15.9579, 23.4571], [-15.9518, 23.4735], [-15.9526, 23.4801], [-15.9587, 23.4874], [-15.9663, 23.4901], [-15.9649, 23.4996], [-15.9763, 23.504], [-15.9754, 23.509], [-15.9599, 23.5215], [-15.9429, 23.5271], [-15.9376, 23.5365], [-15.926, 23.5471], [-15.9221, 23.556], [-15.9065, 23.5646], [-15.9004, 23.5749], [-15.9013, 23.5813], [-15.8915, 23.5932], [-15.8818, 23.6129], [-15.8763, 23.6171], [-15.8757, 23.6274], [-15.8651, 23.629], [-15.8599, 23.6323], [-15.8565, 23.6401], [-15.8482, 23.6454], [-15.8474, 23.651], [-15.8421, 23.6551], [-15.8396, 23.6657], [-15.8329, 23.6698], [-15.8218, 23.6882], [-15.8146, 23.6921], [-15.8021, 23.7096], [-15.7954, 23.7296], [-15.7826, 23.7451], [-15.7813, 23.7513], [-15.7638, 23.7615], [-15.754, 23.7721], [-15.7468, 23.7774], [-15.7418, 23.7857], [-15.739, 23.8001], [-15.7349, 23.8079], [-15.7282, 23.8132], [-15.7176, 23.8159], [-15.7135, 23.8226], [-15.7143, 23.8274], [-15.7212, 23.8276], [-15.7271, 23.819], [-15.7324, 23.8179], [-15.7462, 23.8096], [-15.7462, 23.8251], [-15.7424, 23.831], [-15.7424, 23.8382], [-15.736, 23.8554], [-15.7218, 23.8721], [-15.7232, 23.8787], [-15.7182, 23.8871], [-15.7101, 23.8924], [-15.7132, 23.9015], [-15.7126, 23.9085], [-15.7204, 23.9179], [-15.7143, 23.934], [-15.7115, 23.9454], [-15.7074, 23.9507], [-15.7054, 23.959], [-15.7007, 23.9674], [-15.6996, 23.9796], [-15.7149, 23.9729], [-15.7224, 23.9601], [-15.7326, 23.951], [-15.7499, 23.9457], [-15.7515, 23.9354], [-15.7471, 23.9288], [-15.7482, 23.9188], [-15.7538, 23.9185], [-15.7568, 23.906], [-15.7651, 23.9051], [-15.7651, 23.9215], [-15.7754, 23.914], [-15.7829, 23.9118], [-15.7851, 23.8998], [-15.7943, 23.8924], [-15.7946, 23.8865], [-15.801, 23.8737], [-15.8101, 23.8668], [-15.819, 23.8646], [-15.8288, 23.856], [-15.8346, 23.8551], [-15.8396, 23.861], [-15.8474, 23.8579], [-15.8571, 23.8454], [-15.8637, 23.8307], [-15.8735, 23.8282], [-15.879, 23.821], [-15.8849, 23.8054], [-15.8896, 23.8026], [-15.896, 23.7937], [-15.8988, 23.7846], [-15.9004, 23.7701], [-15.9063, 23.7673], [-15.9087, 23.7413], [-15.9135, 23.7351], [-15.9165, 23.7254], [-15.9168, 23.7151], [-15.9224, 23.7096], [-15.9246, 23.7015], [-15.9351, 23.6918], [-15.939, 23.6829], [-15.951, 23.676], [-15.9565, 23.6696], [-15.9649, 23.666], [-15.9671, 23.6565], [-15.9821, 23.6371], [-15.9813, 23.6301], [-15.9965, 23.6307], [-16.0018, 23.6335], [-16.0071, 23.6418], [-16.006, 23.6496], [-15.9996, 23.6554], [-15.9887, 23.669], [-15.9846, 23.6801], [-15.9679, 23.6907], [-15.9582, 23.7035], [-15.9596, 23.7196], [-15.9582, 23.724], [-15.9446, 23.7335], [-15.9304, 23.7465], [-15.9215, 23.7621], [-15.9257, 23.7671], [-15.9235, 23.7774], [-15.9182, 23.7865], [-15.9168, 23.7976], [-15.9046, 23.8187], [-15.8679, 23.8554], [-15.8651, 23.861], [-15.8462, 23.8832], [-15.8332, 23.8957], [-15.8149, 23.9063], [-15.8032, 23.9179], [-15.8049, 23.9226], [-15.7924, 23.9265], [-15.7818, 23.936], [-15.7699, 23.9424], [-15.7638, 23.9493], [-15.7488, 23.9579], [-15.7338, 23.964], [-15.731, 23.9671], [-15.6979, 23.9818], [-15.6837, 23.9896], [-15.6801, 23.9899], [-15.6615, 23.999], [-15.6565, 24.0052], [-15.6338, 24.0162], [-15.6087, 24.036], [-15.5996, 24.039], [-15.5929, 24.044], [-15.581, 24.0579], [-15.5768, 24.0696], [-15.5837, 24.0785], [-15.5735, 24.0943], [-15.5551, 24.1026], [-15.544, 24.1132], [-15.5399, 24.1149], [-15.5263, 24.1293], [-15.5215, 24.1371], [-15.5207, 24.1448], [-15.5035, 24.1546], [-15.4999, 24.1596], [-15.4865, 24.1707], [-15.479, 24.1829], [-15.4654, 24.1946], [-15.4538, 24.2079], [-15.4385, 24.2221], [-15.426, 24.231], [-15.4176, 24.241], [-15.4093, 24.2457], [-15.396, 24.2571], [-15.3715, 24.269], [-15.354, 24.2851], [-15.3324, 24.3021], [-15.3251, 24.3093], [-15.3132, 24.3268], [-15.2951, 24.3443], [-15.2882, 24.3551], [-15.2779, 24.3657], [-15.264, 24.3849], [-15.2643, 24.3874], [-15.256, 24.401], [-15.2351, 24.4246], [-15.2279, 24.4301], [-15.2215, 24.4401], [-15.2076, 24.4479], [-15.2051, 24.4526], [-15.1915, 24.4618], [-15.1671, 24.4887], [-15.1551, 24.4935], [-15.1501, 24.4988], [-15.1135, 24.5146], [-15.0976, 24.5201], [-15.0835, 24.5235], [-15.0718, 24.5288], [-15.0554, 24.5321], [-15.0518, 24.5357], [-15.0343, 24.5421], [-15.0221, 24.5485], [-15.0065, 24.5613], [-15.0024, 24.5693], [-15.0021, 24.5851], [-14.9943, 24.5932], [-14.989, 24.6088], [-14.9857, 24.6321], [-14.9735, 24.6399], [-14.959, 24.6446], [-14.9376, 24.6565], [-14.924, 24.6673], [-14.9138, 24.6779], [-14.9062, 24.6829]]] }, \"properties\": { \"name\": \"Dakhla-Oued Ed-Dahab\", \"id\": \"MA-12\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-12\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-11.7752, 28.2151], [-11.7453, 28.1471], [-11.714, 28.0712], [-11.6738, 28.0396], [-11.644, 28.0066], [-11.6197, 27.9515], [-11.6106, 27.9182], [-11.5637, 27.8509], [-11.5142, 27.7987], [-11.3139, 27.7974], [-11.195, 27.7319], [-11.1474, 27.726], [-11.0938, 27.7795], [-10.7726, 27.7795], [-10.5823, 27.7855], [-10.5287, 27.7438], [-10.3741, 27.8033], [-10.3205, 27.7914], [-10.2372, 27.7795], [-10.1599, 27.6844], [-10.0528, 27.5951], [-9.8922, 27.6546], [-9.7137, 27.4405], [-9.6245, 27.4286], [-9.5591, 27.3869], [-9.3925, 27.3988], [-9.339, 27.4524], [-9.2736, 27.4583], [-8.9761, 27.0122], [-8.8512, 26.9765], [-8.7025, 26.9527], [-8.6729, 26.952], [-8.672, 26.3044], [-8.6742, 25.9976], [-8.9791, 25.9969], [-9.2838, 25.9993], [-9.4871, 25.9979], [-9.5629, 26], [-9.686, 25.9975], [-9.697, 25.999], [-9.8889, 25.9978], [-10.2179, 25.9997], [-10.3741, 25.9987], [-10.6862, 26], [-10.8413, 25.9985], [-11.5652, 25.9985], [-11.9186, 25.9978], [-12.0039, 25.9986], [-12.0051, 25.8631], [-12.0034, 25.7292], [-12.0063, 24.7866], [-12.003, 24.5133], [-12.0033, 24.4948], [-12.0194, 24.5021], [-12.186, 24.5378], [-12.3228, 24.5199], [-12.4418, 24.4664], [-12.5489, 24.4485], [-12.7154, 24.4961], [-12.9415, 24.5675], [-13.1735, 24.5497], [-13.3163, 24.5616], [-13.4114, 24.5794], [-13.6077, 24.4485], [-13.8457, 24.5021], [-14.0063, 24.5437], [-14.0717, 24.5378], [-14.155, 24.5794], [-14.2383, 24.5259], [-14.3156, 24.5259], [-14.393, 24.4783], [-14.4584, 24.5199], [-14.5833, 24.4426], [-14.6547, 24.4902], [-14.6904, 24.5913], [-14.7499, 24.627], [-14.8688, 24.6032], [-14.9062, 24.6829], [-14.8938, 24.6904], [-14.8826, 24.7018], [-14.8818, 24.7104], [-14.8846, 24.716], [-14.8843, 24.7346], [-14.8879, 24.741], [-14.8824, 24.759], [-14.8826, 24.7687], [-14.8754, 24.7879], [-14.8751, 24.7951], [-14.8679, 24.8154], [-14.8593, 24.8287], [-14.859, 24.8349], [-14.8504, 24.8485], [-14.8474, 24.8649], [-14.841, 24.8735], [-14.8387, 24.884], [-14.8329, 24.8957], [-14.8307, 24.9071], [-14.831, 24.9274], [-14.8338, 24.9435], [-14.8321, 24.9574], [-14.8265, 24.9671], [-14.8238, 24.989], [-14.8232, 25.0213], [-14.8193, 25.0393], [-14.8207, 25.0571], [-14.8254, 25.0635], [-14.829, 25.0743], [-14.8415, 25.0818], [-14.8421, 25.0885], [-14.8374, 25.1004], [-14.841, 25.1176], [-14.846, 25.1254], [-14.8396, 25.1374], [-14.8396, 25.1479], [-14.8371, 25.1615], [-14.841, 25.1807], [-14.8449, 25.1915], [-14.846, 25.2046], [-14.8432, 25.2149], [-14.8387, 25.2213], [-14.8332, 25.2385], [-14.829, 25.2432], [-14.826, 25.2529], [-14.8248, 25.2648], [-14.829, 25.284], [-14.8288, 25.2957], [-14.8168, 25.3135], [-14.8126, 25.3221], [-14.8146, 25.3376], [-14.8104, 25.3407], [-14.8004, 25.3574], [-14.7929, 25.3782], [-14.7949, 25.3957], [-14.7874, 25.419], [-14.7774, 25.4301], [-14.776, 25.4382], [-14.7668, 25.449], [-14.7615, 25.4582], [-14.7499, 25.4704], [-14.7418, 25.4762], [-14.7321, 25.4871], [-14.7288, 25.4951], [-14.721, 25.5027], [-14.7096, 25.524], [-14.7071, 25.5312], [-14.6979, 25.5446], [-14.6957, 25.5532], [-14.6879, 25.5732], [-14.6854, 25.5904], [-14.6871, 25.5954], [-14.6849, 25.6129], [-14.6865, 25.6188], [-14.6801, 25.6265], [-14.6732, 25.6493], [-14.6651, 25.6652], [-14.6651, 25.6735], [-14.6621, 25.6818], [-14.6621, 25.6912], [-14.6563, 25.7082], [-14.6518, 25.7143], [-14.6485, 25.7271], [-14.6424, 25.741], [-14.6385, 25.7574], [-14.6388, 25.7649], [-14.6346, 25.7735], [-14.6146, 25.7857], [-14.6099, 25.7935], [-14.601, 25.8018], [-14.5863, 25.826], [-14.5774, 25.8348], [-14.5674, 25.8476], [-14.5635, 25.856], [-14.5627, 25.8638], [-14.5362, 25.9043], [-14.5299, 25.916], [-14.5262, 25.9368], [-14.5168, 25.9462], [-14.5093, 25.971], [-14.5046, 25.9757], [-14.4985, 25.9873], [-14.496, 25.9962], [-14.4932, 26.0232], [-14.4879, 26.036], [-14.4899, 26.0499], [-14.4896, 26.0738], [-14.4876, 26.0774], [-14.486, 26.094], [-14.4896, 26.1076], [-14.4976, 26.1221], [-14.5015, 26.126], [-14.4851, 26.1585], [-14.4829, 26.1662], [-14.4779, 26.1704], [-14.4743, 26.1807], [-14.4613, 26.1954], [-14.4429, 26.2215], [-14.439, 26.224], [-14.4293, 26.2379], [-14.4171, 26.246], [-14.4035, 26.2626], [-14.396, 26.2651], [-14.386, 26.2651], [-14.364, 26.2676], [-14.3443, 26.2718], [-14.3279, 26.2768], [-14.3126, 26.2851], [-14.3124, 26.2882], [-14.2979, 26.301], [-14.2707, 26.3174], [-14.266, 26.3226], [-14.2529, 26.3307], [-14.2449, 26.3374], [-14.231, 26.3579], [-14.221, 26.3649], [-14.2054, 26.3826], [-14.1901, 26.4079], [-14.189, 26.4154], [-14.1829, 26.4246], [-14.174, 26.4274], [-14.1571, 26.4251], [-14.1418, 26.4251], [-14.1079, 26.429], [-14.0807, 26.4346], [-14.036, 26.4465], [-14.0285, 26.4507], [-14.016, 26.4538], [-14.0046, 26.4585], [-13.996, 26.4643], [-13.9776, 26.4707], [-13.9704, 26.4774], [-13.9615, 26.4823], [-13.9504, 26.4938], [-13.9387, 26.4998], [-13.9313, 26.5074], [-13.9196, 26.5154], [-13.9029, 26.5246], [-13.8946, 26.5268], [-13.8804, 26.5349], [-13.866, 26.541], [-13.8471, 26.5562], [-13.8268, 26.5635], [-13.8113, 26.5735], [-13.8035, 26.5757], [-13.7854, 26.5857], [-13.7768, 26.5921], [-13.7679, 26.594], [-13.7416, 26.6096], [-13.7107, 26.6254], [-13.7018, 26.6318], [-13.6774, 26.6457], [-13.631, 26.6779], [-13.6132, 26.6924], [-13.6082, 26.6987], [-13.5801, 26.7262], [-13.5737, 26.7315], [-13.5624, 26.746], [-13.5613, 26.7513], [-13.5493, 26.769], [-13.5418, 26.7863], [-13.5324, 26.7974], [-13.5268, 26.8118], [-13.5268, 26.8179], [-13.5165, 26.8363], [-13.4988, 26.8732], [-13.486, 26.9096], [-13.4885, 26.9149], [-13.486, 26.9246], [-13.4785, 26.9376], [-13.4729, 26.961], [-13.4626, 26.9821], [-13.4499, 27.0113], [-13.4404, 27.0293], [-13.4343, 27.0443], [-13.4321, 27.0576], [-13.4274, 27.069], [-13.4204, 27.0776], [-13.4185, 27.0924], [-13.4224, 27.0973], [-13.4168, 27.111], [-13.4157, 27.1271], [-13.4115, 27.1385], [-13.409, 27.1535], [-13.4088, 27.1651], [-13.4007, 27.1737], [-13.391, 27.1874], [-13.3876, 27.1965], [-13.3763, 27.2115], [-13.3721, 27.2246], [-13.349, 27.2601], [-13.3362, 27.2721], [-13.3232, 27.2907], [-13.3149, 27.3074], [-13.3049, 27.3238], [-13.3015, 27.344], [-13.2907, 27.3571], [-13.2771, 27.3855], [-13.2749, 27.399], [-13.2705, 27.4121], [-13.2637, 27.4263], [-13.2585, 27.4432], [-13.2496, 27.4624], [-13.2435, 27.4782], [-13.2299, 27.5046], [-13.2265, 27.5237], [-13.2224, 27.5335], [-13.2171, 27.5554], [-13.2101, 27.5679], [-13.2049, 27.5815], [-13.2035, 27.6001], [-13.1976, 27.6171], [-13.1979, 27.6221], [-13.1918, 27.634], [-13.1851, 27.6429], [-13.1671, 27.6831], [-13.1668, 27.6904], [-13.1599, 27.6971], [-13.129, 27.7074], [-13.1129, 27.721], [-13.0887, 27.7304], [-13.0707, 27.7354], [-13.0501, 27.7512], [-13.0446, 27.759], [-13.0376, 27.7754], [-13.0274, 27.7951], [-13.0085, 27.8085], [-13.0063, 27.8224], [-13.0013, 27.8313], [-13.0018, 27.8362], [-12.9965, 27.851], [-12.989, 27.8582], [-12.9885, 27.8665], [-12.9826, 27.8826], [-12.9826, 27.8879], [-12.9654, 27.9043], [-12.959, 27.921], [-12.9368, 27.9301], [-12.9326, 27.941], [-12.9193, 27.9496], [-12.9171, 27.9532], [-12.8743, 27.9549], [-12.8512, 27.959], [-12.8443, 27.9585], [-12.8296, 27.9646], [-12.7868, 27.9687], [-12.759, 27.9721], [-12.7476, 27.9724], [-12.7218, 27.9754], [-12.7168, 27.9776], [-12.6838, 27.9807], [-12.669, 27.9807], [-12.6318, 27.9865], [-12.6187, 27.9876], [-12.6046, 27.9915], [-12.5785, 27.9938], [-12.5682, 27.9962], [-12.5404, 28.0007], [-12.5251, 28.0063], [-12.4896, 28.0124], [-12.4632, 28.0154], [-12.4563, 28.0179], [-12.4354, 28.0207], [-12.381, 28.0304], [-12.3746, 28.0304], [-12.344, 28.0377], [-12.2932, 28.0446], [-12.2729, 28.0485], [-12.2585, 28.0532], [-12.2337, 28.0537], [-12.2112, 28.0587], [-12.1938, 28.061], [-12.1593, 28.0704], [-12.109, 28.0821], [-12.0843, 28.0859], [-12.0651, 28.0946], [-12.0515, 28.0971], [-12.0463, 28.1046], [-12.0196, 28.1179], [-12.0101, 28.1204], [-11.9954, 28.1279], [-11.9754, 28.136], [-11.9574, 28.1476], [-11.9451, 28.1518], [-11.9226, 28.1621], [-11.9157, 28.1635], [-11.9051, 28.169], [-11.8393, 28.1907], [-11.8215, 28.199], [-11.7963, 28.2088], [-11.7752, 28.2151]]] }, \"properties\": { \"name\": \"Laâyoune-Sakia El Hamra\", \"id\": \"MA-11\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-11\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-10.0304, 29.6072], [-9.9922, 29.514], [-9.8994, 29.5711], [-9.8779, 29.4426], [-9.8137, 29.3962], [-9.7637, 29.4462], [-9.6995, 29.4747], [-9.6424, 29.4176], [-9.5603, 29.4854], [-9.5139, 29.4605], [-9.4996, 29.4105], [-9.4675, 29.4391], [-9.4318, 29.4283], [-9.4104, 29.4497], [-9.3961, 29.514], [-9.2462, 29.4997], [-9.1784, 29.3998], [-9.1605, 29.3034], [-9.1393, 29.2769], [-9.1403, 29.2743], [-9.0784, 29.2356], [-9.082, 29.1678], [-9.1177, 29.1535], [-9.1248, 29.0928], [-9.1534, 29.0786], [-9.2176, 29.0821], [-9.2569, 29.0572], [-9.2426, 29], [-9.2176, 28.9857], [-9.1891, 28.9715], [-9.2034, 28.9108], [-9.1141, 28.9108], [-9.1427, 28.8501], [-9.1534, 28.793], [-9.1391, 28.7538], [-9.0713, 28.7538], [-9.0642, 28.6788], [-8.9392, 28.6574], [-8.9357, 28.5646], [-8.7179, 28.3255], [-8.6674, 28.3191], [-8.6677, 28.2403], [-8.6663, 27.9247], [-8.6668, 27.6701], [-8.67, 27.6701], [-8.6721, 27.6079], [-8.6713, 27.4471], [-8.6739, 27.2981], [-8.6725, 27.2883], [-8.6733, 27.2079], [-8.6711, 27.1265], [-8.673, 27.0457], [-8.6729, 26.952], [-8.7025, 26.9527], [-8.8512, 26.9765], [-8.9761, 27.0122], [-9.2736, 27.4583], [-9.339, 27.4524], [-9.3925, 27.3988], [-9.5591, 27.3869], [-9.6245, 27.4286], [-9.7137, 27.4405], [-9.8922, 27.6546], [-10.0528, 27.5951], [-10.1599, 27.6844], [-10.2372, 27.7795], [-10.3205, 27.7914], [-10.3741, 27.8033], [-10.5287, 27.7438], [-10.5823, 27.7855], [-10.7726, 27.7795], [-11.0938, 27.7795], [-11.1474, 27.726], [-11.195, 27.7319], [-11.3139, 27.7974], [-11.5142, 27.7987], [-11.5637, 27.8509], [-11.6106, 27.9182], [-11.6197, 27.9515], [-11.644, 28.0066], [-11.6738, 28.0396], [-11.714, 28.0712], [-11.7453, 28.1471], [-11.7752, 28.2151], [-11.7568, 28.2235], [-11.7407, 28.2276], [-11.734, 28.2321], [-11.711, 28.238], [-11.7035, 28.2432], [-11.6976, 28.2432], [-11.6713, 28.2518], [-11.6638, 28.2518], [-11.6462, 28.2582], [-11.6165, 28.2654], [-11.6121, 28.2687], [-11.5874, 28.2765], [-11.571, 28.2849], [-11.5535, 28.2896], [-11.5435, 28.2946], [-11.5351, 28.2921], [-11.536, 28.2857], [-11.5265, 28.2852], [-11.529, 28.2918], [-11.5263, 28.299], [-11.5179, 28.3063], [-11.5074, 28.3087], [-11.4926, 28.3226], [-11.4729, 28.3315], [-11.4624, 28.3379], [-11.4504, 28.3538], [-11.446, 28.3718], [-11.4424, 28.3776], [-11.4318, 28.3824], [-11.4268, 28.3913], [-11.4201, 28.3935], [-11.4046, 28.4088], [-11.3951, 28.4254], [-11.3899, 28.4285], [-11.3887, 28.4396], [-11.3815, 28.4465], [-11.3701, 28.4512], [-11.3574, 28.4618], [-11.3504, 28.471], [-11.3532, 28.4749], [-11.3479, 28.4871], [-11.3246, 28.5112], [-11.3199, 28.5174], [-11.3101, 28.5238], [-11.3054, 28.5312], [-11.2818, 28.5457], [-11.2624, 28.5626], [-11.2529, 28.5688], [-11.226, 28.5968], [-11.2185, 28.6084], [-11.2065, 28.6201], [-11.1812, 28.6346], [-11.1665, 28.6451], [-11.1335, 28.6774], [-11.1135, 28.6871], [-11.1118, 28.6923], [-11.0971, 28.7043], [-11.0893, 28.7162], [-11.0749, 28.7315], [-11.0749, 28.7415], [-11.0676, 28.7443], [-11.0457, 28.7599], [-11.0335, 28.7651], [-11.0254, 28.7663], [-11.0054, 28.7732], [-10.991, 28.7835], [-10.9754, 28.7896], [-10.9721, 28.7932], [-10.9632, 28.7949], [-10.9501, 28.8029], [-10.9426, 28.804], [-10.9149, 28.8171], [-10.9079, 28.8188], [-10.8918, 28.8276], [-10.8668, 28.8379], [-10.8587, 28.8429], [-10.8451, 28.8479], [-10.8132, 28.8643], [-10.7679, 28.8846], [-10.7632, 28.8885], [-10.7129, 28.9115], [-10.699, 28.9198], [-10.671, 28.9335], [-10.6482, 28.9468], [-10.6413, 28.9496], [-10.6118, 28.966], [-10.6007, 28.9737], [-10.5949, 28.9757], [-10.5824, 28.9843], [-10.5521, 29.0004], [-10.5099, 29.0285], [-10.4913, 29.0499], [-10.4865, 29.0515], [-10.4829, 29.059], [-10.4751, 29.0635], [-10.4643, 29.0749], [-10.4576, 29.0857], [-10.449, 29.0896], [-10.4476, 29.0946], [-10.4404, 29.0943], [-10.4396, 29.1018], [-10.4329, 29.114], [-10.4249, 29.1246], [-10.4246, 29.1299], [-10.4135, 29.1373], [-10.4063, 29.1379], [-10.4057, 29.1468], [-10.3935, 29.1613], [-10.3918, 29.1688], [-10.3785, 29.1829], [-10.3679, 29.191], [-10.3412, 29.2176], [-10.3388, 29.2263], [-10.3151, 29.2432], [-10.2957, 29.2632], [-10.2849, 29.2646], [-10.2629, 29.2762], [-10.2571, 29.2821], [-10.2521, 29.2826], [-10.2374, 29.2971], [-10.2326, 29.2982], [-10.2254, 29.3062], [-10.2154, 29.3135], [-10.2146, 29.3207], [-10.2071, 29.3371], [-10.1876, 29.3618], [-10.1821, 29.3774], [-10.1688, 29.3943], [-10.1565, 29.4071], [-10.1557, 29.4112], [-10.1238, 29.4371], [-10.1157, 29.4471], [-10.0954, 29.4871], [-10.0851, 29.4946], [-10.0771, 29.5029], [-10.0765, 29.5126], [-10.0707, 29.529], [-10.074, 29.5326], [-10.0649, 29.5382], [-10.0674, 29.544], [-10.0635, 29.551], [-10.0568, 29.5518], [-10.0601, 29.561], [-10.0546, 29.574], [-10.0493, 29.5779], [-10.0454, 29.5893], [-10.034, 29.5951], [-10.0304, 29.6072]]] }, \"properties\": { \"name\": \"Guelmim-Oued Noun\", \"id\": \"MA-10\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-10\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.4568, 29.5621], [-6.467, 29.559], [-6.4861, 29.5505], [-6.4953, 29.5442], [-6.5137, 29.5346], [-6.5211, 29.524], [-6.5264, 29.5204], [-6.5337, 29.5202], [-6.5471, 29.5245], [-6.561, 29.5222], [-6.5753, 29.522], [-6.5892, 29.5249], [-6.6176, 29.5292], [-6.623, 29.5265], [-6.623, 29.5207], [-6.6302, 29.5192], [-6.6444, 29.5197], [-6.6582, 29.5171], [-6.6796, 29.5175], [-6.6935, 29.5147], [-6.7198, 29.5052], [-6.7454, 29.4751], [-6.762, 29.4635], [-6.7761, 29.4616], [-6.7902, 29.4632], [-6.8045, 29.4633], [-6.8326, 29.4675], [-6.8453, 29.4729], [-6.8549, 29.4822], [-6.8616, 29.4842], [-6.8758, 29.4827], [-6.8898, 29.4844], [-6.9075, 29.4951], [-6.9214, 29.4971], [-6.9356, 29.496], [-6.9498, 29.497], [-6.9636, 29.4939], [-6.9706, 29.4947], [-6.9813, 29.5028], [-6.9883, 29.5034], [-7.0023, 29.5011], [-7.0146, 29.4947], [-7.0215, 29.4931], [-7.0343, 29.4982], [-7.0415, 29.4984], [-7.062, 29.5033], [-7.0798, 29.5137], [-7.1066, 29.522], [-7.1137, 29.5228], [-7.1276, 29.52], [-7.1487, 29.5222], [-7.1553, 29.5201], [-7.1863, 29.5045], [-7.2196, 29.4934], [-7.2387, 29.4849], [-7.251, 29.477], [-7.2931, 29.4602], [-7.336, 29.4388], [-7.3949, 29.4138], [-7.5037, 29.4049], [-7.5986, 29.3758], [-7.6174, 29.367], [-7.6257, 29.3569], [-7.6237, 29.345], [-7.6241, 29.3333], [-7.6327, 29.3244], [-7.6347, 29.3184], [-7.6448, 29.3102], [-7.65, 29.2983], [-7.6627, 29.3019], [-7.6831, 29.2972], [-7.6948, 29.2901], [-7.7083, 29.2868], [-7.7478, 29.2732], [-7.7853, 29.2554], [-7.7963, 29.2476], [-7.8169, 29.2303], [-7.8284, 29.223], [-7.8437, 29.2101], [-7.8623, 29.201], [-7.8758, 29.197], [-7.8841, 29.1878], [-7.898, 29.1866], [-7.9102, 29.1801], [-7.9323, 29.1645], [-7.9563, 29.1416], [-7.9591, 29.1298], [-7.9995, 29.1055], [-8.0308, 29.0909], [-8.0547, 29.0777], [-8.065, 29.0692], [-8.0783, 29.0657], [-8.1052, 29.0455], [-8.1232, 29.0355], [-8.1341, 29.0275], [-8.1462, 29.0211], [-8.1508, 29.0164], [-8.1642, 29.0128], [-8.1777, 29.0157], [-8.1999, 29.0001], [-8.2232, 28.986], [-8.2478, 28.9636], [-8.2714, 28.95], [-8.3071, 28.926], [-8.3539, 28.89], [-8.4026, 28.8458], [-8.4328, 28.8153], [-8.4627, 28.7952], [-8.5034, 28.7812], [-8.583, 28.7468], [-8.5891, 28.7431], [-8.6509, 28.7184], [-8.6677, 28.7135], [-8.6669, 28.4602], [-8.6674, 28.3191], [-8.7179, 28.3255], [-8.9357, 28.5646], [-8.9392, 28.6574], [-9.0642, 28.6788], [-9.0713, 28.7538], [-9.1391, 28.7538], [-9.1534, 28.793], [-9.1427, 28.8501], [-9.1141, 28.9108], [-9.2034, 28.9108], [-9.1891, 28.9715], [-9.2176, 28.9857], [-9.2426, 29], [-9.2569, 29.0572], [-9.2176, 29.0821], [-9.1534, 29.0786], [-9.1248, 29.0928], [-9.1177, 29.1535], [-9.082, 29.1678], [-9.0784, 29.2356], [-9.1403, 29.2743], [-9.1393, 29.2769], [-9.1605, 29.3034], [-9.1784, 29.3998], [-9.2462, 29.4997], [-9.3961, 29.514], [-9.4104, 29.4497], [-9.4318, 29.4283], [-9.4675, 29.4391], [-9.4996, 29.4105], [-9.5139, 29.4605], [-9.5603, 29.4854], [-9.6424, 29.4176], [-9.6995, 29.4747], [-9.7637, 29.4462], [-9.8137, 29.3962], [-9.8779, 29.4426], [-9.8994, 29.5711], [-9.9922, 29.514], [-10.0304, 29.6072], [-10.0251, 29.6118], [-10.0107, 29.6304], [-10.0099, 29.6371], [-10.004, 29.644], [-9.9935, 29.6504], [-9.991, 29.6576], [-9.986, 29.661], [-9.9829, 29.676], [-9.9685, 29.6871], [-9.9662, 29.6935], [-9.951, 29.7057], [-9.9343, 29.721], [-9.9182, 29.734], [-9.9132, 29.7365], [-9.8865, 29.7571], [-9.8699, 29.7715], [-9.8632, 29.779], [-9.8499, 29.7901], [-9.839, 29.8032], [-9.8321, 29.8057], [-9.8274, 29.8193], [-9.8154, 29.8351], [-9.8007, 29.8493], [-9.7893, 29.8651], [-9.7876, 29.8718], [-9.7913, 29.8751], [-9.7743, 29.8982], [-9.7676, 29.9051], [-9.7618, 29.9154], [-9.7629, 29.9213], [-9.7576, 29.9346], [-9.7432, 29.9535], [-9.7379, 29.9668], [-9.7349, 29.9699], [-9.7321, 29.9807], [-9.7224, 29.9932], [-9.7163, 30.0079], [-9.7124, 30.0121], [-9.7082, 30.0238], [-9.7032, 30.0304], [-9.6949, 30.051], [-9.6699, 30.0782], [-9.6679, 30.0921], [-9.6637, 30.1051], [-9.6543, 30.1226], [-9.6535, 30.141], [-9.6487, 30.1488], [-9.6426, 30.1685], [-9.6387, 30.1868], [-9.6387, 30.1982], [-9.6413, 30.2085], [-9.6351, 30.2213], [-9.629, 30.2468], [-9.629, 30.2579], [-9.6221, 30.2857], [-9.6199, 30.304], [-9.6146, 30.3257], [-9.611, 30.336], [-9.6076, 30.3568], [-9.6043, 30.3621], [-9.6051, 30.3693], [-9.6026, 30.3829], [-9.5993, 30.386], [-9.5985, 30.4001], [-9.601, 30.4026], [-9.6051, 30.4168], [-9.614, 30.424], [-9.6187, 30.4207], [-9.6337, 30.4215], [-9.6482, 30.4293], [-9.6465, 30.4354], [-9.6501, 30.4396], [-9.6601, 30.4443], [-9.6685, 30.464], [-9.6707, 30.4762], [-9.6749, 30.4813], [-9.6754, 30.4904], [-9.6804, 30.5032], [-9.6851, 30.5035], [-9.6885, 30.5154], [-9.6951, 30.5304], [-9.7035, 30.5424], [-9.7168, 30.5465], [-9.7268, 30.5454], [-9.7399, 30.5504], [-9.7463, 30.5732], [-9.7513, 30.5746], [-9.7579, 30.5826], [-9.7635, 30.5929], [-9.7735, 30.5957], [-9.7832, 30.6093], [-9.8051, 30.6154], [-9.8179, 30.6243], [-9.8404, 30.6282], [-9.8593, 30.6235], [-9.8818, 30.6246], [-9.8893, 30.6299], [-9.8868, 30.6599], [-9.8776, 30.691], [-9.8729, 30.701], [-9.8596, 30.7093], [-9.8499, 30.7212], [-9.8518, 30.7332], [-9.8393, 30.7474], [-9.8296, 30.7649], [-9.8301, 30.7751], [-9.8165, 30.7882], [-9.8149, 30.7987], [-9.8057, 30.8146], [-9.8068, 30.834], [-9.8104, 30.839], [-9.8174, 30.8407], [-9.8271, 30.8471], [-9.8215, 30.8565], [-9.8163, 30.8715], [-9.8129, 30.8743], [-9.8121, 30.886], [-9.8079, 30.8926], [-9.8204, 30.9107], [-9.8174, 30.9271], [-9.819, 30.9307], [-9.8204, 30.9508], [-9.8058, 30.9402], [-9.7754, 30.9152], [-9.7453, 30.8853], [-9.7394, 30.8725], [-9.7462, 30.7768], [-9.7212, 30.759], [-9.6748, 30.759], [-9.6392, 30.7733], [-9.6142, 30.8089], [-9.6132, 30.8203], [-9.5981, 30.8152], [-9.5842, 30.8177], [-9.5694, 30.8265], [-9.5417, 30.8635], [-9.5328, 30.8718], [-9.5253, 30.8719], [-9.5225, 30.8655], [-9.5295, 30.8421], [-9.5251, 30.8362], [-9.5149, 30.8317], [-9.4918, 30.8297], [-9.4757, 30.8239], [-9.4573, 30.8135], [-9.4434, 30.8141], [-9.4301, 30.8169], [-9.4121, 30.8277], [-9.3912, 30.8269], [-9.3464, 30.8338], [-9.3231, 30.8157], [-9.3065, 30.8117], [-9.2871, 30.8092], [-9.2685, 30.8107], [-9.2535, 30.8164], [-9.2516, 30.8191], [-9.2323, 30.784], [-9.193, 30.7697], [-9.168, 30.8018], [-9.1701, 30.837], [-9.1479, 30.8455], [-9.1351, 30.848], [-9.1099, 30.8469], [-9.0836, 30.8439], [-9.0445, 30.8361], [-9.0395, 30.8304], [-8.9789, 30.7983], [-8.9706, 30.8921], [-8.9529, 30.9004], [-8.9213, 30.9057], [-8.8866, 30.9222], [-8.8583, 30.939], [-8.836, 30.959], [-8.819, 30.9789], [-8.7981, 30.9805], [-8.7808, 30.977], [-8.7743, 30.9692], [-8.7704, 30.955], [-8.7655, 30.9539], [-8.7576, 30.9053], [-8.7683, 30.8554], [-8.7576, 30.8232], [-8.729, 30.8339], [-8.7005, 30.8625], [-8.6949, 30.8692], [-8.6855, 30.8481], [-8.6726, 30.8469], [-8.6501, 30.8517], [-8.6362, 30.8661], [-8.6154, 30.88], [-8.5859, 30.8858], [-8.5505, 30.8889], [-8.5161, 30.8859], [-8.4854, 30.8816], [-8.4478, 30.8805], [-8.4359, 30.8815], [-8.4328, 30.8768], [-8.3757, 30.8446], [-8.3328, 30.8411], [-8.2864, 30.8661], [-8.2079, 30.9232], [-8.1819, 30.9297], [-8.1567, 30.94], [-8.1255, 30.9503], [-8.0982, 30.9639], [-8.0831, 30.9529], [-8.0782, 30.9465], [-8.0664, 30.9411], [-8.0669, 30.9328], [-8.0716, 30.918], [-8.07, 30.9089], [-8.0616, 30.9053], [-8.0259, 30.8732], [-7.983, 30.8875], [-7.9581, 30.9303], [-7.9515, 30.9717], [-7.9364, 30.9828], [-7.9052, 31.0032], [-7.8993, 31.0152], [-7.8978, 31.0299], [-7.9069, 31.0427], [-7.9026, 31.0492], [-7.879, 31.0585], [-7.8559, 31.0687], [-7.8317, 31.0822], [-7.8011, 31.109], [-7.7769, 31.1316], [-7.7495, 31.1488], [-7.7301, 31.159], [-7.7133, 31.1651], [-7.7225, 31.1302], [-7.7582, 31.0945], [-7.7618, 31.0374], [-7.6761, 31.0445], [-7.7189, 31.0017], [-7.7225, 30.9696], [-7.7296, 30.8554], [-7.6154, 30.8482], [-7.6583, 30.8161], [-7.7011, 30.7768], [-7.7225, 30.7304], [-7.5904, 30.7233], [-7.594, 30.6412], [-7.5548, 30.6091], [-7.5298, 30.5984], [-7.4798, 30.527], [-7.5654, 30.527], [-7.594, 30.4734], [-7.6547, 30.4627], [-7.7047, 30.4627], [-7.6797, 30.4163], [-7.6725, 30.3664], [-7.644, 30.3735], [-7.6226, 30.3806], [-7.5976, 30.3557], [-7.5762, 30.3128], [-7.5668, 30.269], [-7.5928, 30.2544], [-7.6318, 30.2248], [-7.6401, 30.2118], [-7.4511, 30.209], [-7.446, 30.1998], [-7.446, 30.1791], [-7.4413, 30.1601], [-7.4179, 30.1623], [-7.4031, 30.1742], [-7.3822, 30.1891], [-7.3525, 30.1683], [-7.3481, 30.1686], [-7.3151, 30.137], [-7.2951, 30.1113], [-7.2694, 30.1042], [-7.2637, 30.1299], [-7.3109, 30.1872], [-7.3109, 30.2397], [-7.2573, 30.2754], [-7.2365, 30.317], [-7.2187, 30.3557], [-7.2038, 30.3973], [-7.1681, 30.4062], [-7.1324, 30.3854], [-7.0967, 30.3586], [-7.0551, 30.3378], [-7.051, 30.3315], [-7.0383, 30.3306], [-7.0169, 30.3265], [-6.9906, 30.318], [-6.9867, 30.3408], [-6.948, 30.3527], [-6.8974, 30.3616], [-6.8677, 30.3378], [-6.8617, 30.4657], [-6.8082, 30.433], [-6.7814, 30.433], [-6.7576, 30.4449], [-6.7279, 30.4746], [-6.6892, 30.5014], [-6.6714, 30.4984], [-6.6595, 30.4836], [-6.6625, 30.4389], [-6.6671, 30.4124], [-6.6334, 30.3967], [-6.5494, 30.4151], [-6.5256, 30.3884], [-6.4989, 30.3527], [-6.4899, 30.3319], [-6.5048, 30.3051], [-6.5349, 30.2969], [-6.5946, 30.2436], [-6.5982, 30.1936], [-6.5554, 30.1722], [-6.509, 30.1437], [-6.5233, 30.1008], [-6.5554, 30.0723], [-6.5554, 30.0366], [-6.5233, 30.0259], [-6.4769, 30.0402], [-6.4483, 30.058], [-6.4126, 30.0473], [-6.3783, 30.0473], [-6.3756, 30.0304], [-6.3763, 30.0089], [-6.3912, 29.9973], [-6.4483, 29.9581], [-6.4947, 29.9188], [-6.4733, 29.8688], [-6.4519, 29.8367], [-6.4697, 29.8082], [-6.5018, 29.7653], [-6.5018, 29.7368], [-6.4769, 29.7368], [-6.4376, 29.7153], [-6.4412, 29.6261], [-6.459, 29.5868], [-6.4568, 29.5621]]] }, \"properties\": { \"name\": \"Souss-Massa\", \"id\": \"MA-09\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-09\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-3.9981, 32.6029], [-3.9861, 32.5908], [-3.9783, 32.5777], [-3.9455, 32.5699], [-3.9098, 32.5371], [-3.9247, 32.4866], [-3.9399, 32.489], [-3.9514, 32.4806], [-3.9603, 32.4658], [-3.9336, 32.4479], [-3.8949, 32.4366], [-3.8931, 32.4331], [-3.8741, 32.4331], [-3.8235, 32.4182], [-3.7938, 32.3765], [-3.7857, 32.2949], [-3.7819, 32.2338], [-3.764, 32.1951], [-3.6956, 32.1832], [-3.6848, 32.1851], [-3.6685, 32.1768], [-3.6481, 32.1751], [-3.6599, 32.1445], [-3.6748, 32.1089], [-3.6302, 32.1207], [-3.5826, 32.1564], [-3.5545, 32.1845], [-3.541, 32.1837], [-3.4988, 32.1785], [-3.4836, 32.1778], [-3.4666, 32.1505], [-3.425, 32.1356], [-3.3595, 32.1237], [-3.303, 32.1326], [-3.2713, 32.1489], [-3.2701, 32.1486], [-3.1811, 32.1951], [-3.2197, 32.1326], [-3.2525, 32.0494], [-3.2525, 32.0166], [-3.2197, 31.9215], [-3.1959, 31.856], [-3.1156, 31.8174], [-3.184, 31.7787], [-3.2197, 31.7638], [-3.2698, 31.7388], [-3.2626, 31.7097], [-3.2502, 31.6956], [-3.1117, 31.6971], [-3.1102, 31.6343], [-3.3558, 31.6357], [-3.3801, 31.6257], [-3.4015, 31.6085], [-3.42, 31.5857], [-3.4372, 31.56], [-3.4657, 31.5415], [-3.4828, 31.5286], [-3.5043, 31.5143], [-3.5414, 31.5072], [-3.5757, 31.4886], [-3.6014, 31.4758], [-3.6228, 31.4744], [-3.6485, 31.4815], [-3.6784, 31.5131], [-3.7106, 31.5039], [-3.722, 31.4867], [-3.7277, 31.4658], [-3.722, 31.4487], [-3.7182, 31.4296], [-3.7106, 31.4068], [-3.7106, 31.3916], [-3.7297, 31.3763], [-3.7658, 31.3744], [-3.7887, 31.363], [-3.8039, 31.3459], [-3.7982, 31.3173], [-3.7906, 31.2907], [-3.7906, 31.245], [-3.8039, 31.1955], [-3.8267, 31.1803], [-3.8325, 31.1536], [-3.8058, 31.1384], [-3.7906, 31.1384], [-3.7677, 31.1498], [-3.7258, 31.1384], [-3.7235, 31.1115], [-3.7049, 31.1022], [-3.6745, 31.1232], [-3.669, 31.1193], [-3.6752, 31.1086], [-3.673, 31.0968], [-3.6785, 31.0861], [-3.6615, 31.082], [-3.644, 31.0815], [-3.6361, 31.0553], [-3.6064, 31.0316], [-3.5737, 31.0197], [-3.5677, 30.9869], [-3.5915, 30.9602], [-3.6332, 30.9066], [-3.6897, 30.8709], [-3.7284, 30.8293], [-3.764, 30.7847], [-3.8354, 30.7163], [-3.8592, 30.6717], [-3.8643, 30.6226], [-3.9062, 30.6132], [-3.9683, 30.598], [-3.9948, 30.5924], [-4.0514, 30.5894], [-4.1455, 30.5848], [-4.1683, 30.577], [-4.2565, 30.549], [-4.278, 30.5414], [-4.3202, 30.5284], [-4.4567, 30.4109], [-4.5344, 30.4099], [-4.6474, 30.3118], [-4.7604, 30.2523], [-4.8943, 30.1809], [-4.9214, 30.146], [-4.9355, 30.14], [-4.9716, 30.1144], [-5.1176, 30.0061], [-5.1229, 30.0025], [-5.1366, 30.0008], [-5.1762, 30.0034], [-5.2047, 29.9806], [-5.2218, 29.9549], [-5.2228, 29.9437], [-5.2397, 29.9334], [-5.2517, 29.9153], [-5.2736, 29.9054], [-5.285, 29.8971], [-5.302, 29.8741], [-5.3218, 29.8707], [-5.3389, 29.8364], [-5.3489, 29.805], [-5.3732, 29.7864], [-5.4289, 29.7479], [-5.496, 29.6908], [-5.5388, 29.6066], [-5.5616, 29.5594], [-5.5788, 29.518], [-5.5775, 29.4891], [-5.5816, 29.4709], [-5.5902, 29.4409], [-5.6159, 29.4252], [-5.6559, 29.4267], [-5.6744, 29.4467], [-5.6787, 29.4866], [-5.7101, 29.4966], [-5.7372, 29.4923], [-5.7644, 29.4938], [-5.7901, 29.5594], [-5.8129, 29.5609], [-5.8372, 29.548], [-5.8586, 29.5209], [-5.8843, 29.5052], [-5.9371, 29.5038], [-6.0228, 29.4823], [-6.087, 29.4709], [-6.1641, 29.4695], [-6.2212, 29.4695], [-6.2584, 29.4895], [-6.2912, 29.5137], [-6.3426, 29.5209], [-6.3854, 29.5337], [-6.4183, 29.5252], [-6.4554, 29.5437], [-6.4568, 29.5621], [-6.459, 29.5868], [-6.4412, 29.6261], [-6.4376, 29.7153], [-6.4769, 29.7368], [-6.5018, 29.7368], [-6.5018, 29.7653], [-6.4697, 29.8082], [-6.4519, 29.8367], [-6.4733, 29.8688], [-6.4947, 29.9188], [-6.4483, 29.9581], [-6.3912, 29.9973], [-6.3763, 30.0089], [-6.3756, 30.0304], [-6.3783, 30.0473], [-6.4126, 30.0473], [-6.4483, 30.058], [-6.4769, 30.0402], [-6.5233, 30.0259], [-6.5554, 30.0366], [-6.5554, 30.0723], [-6.5233, 30.1008], [-6.509, 30.1437], [-6.5554, 30.1722], [-6.5982, 30.1936], [-6.5946, 30.2436], [-6.5349, 30.2969], [-6.5048, 30.3051], [-6.4899, 30.3319], [-6.4989, 30.3527], [-6.5256, 30.3884], [-6.5494, 30.4151], [-6.6334, 30.3967], [-6.6671, 30.4124], [-6.6625, 30.4389], [-6.6595, 30.4836], [-6.6714, 30.4984], [-6.6892, 30.5014], [-6.7279, 30.4746], [-6.7576, 30.4449], [-6.7814, 30.433], [-6.8082, 30.433], [-6.8617, 30.4657], [-6.8677, 30.3378], [-6.8974, 30.3616], [-6.948, 30.3527], [-6.9867, 30.3408], [-6.9906, 30.318], [-7.0169, 30.3265], [-7.0383, 30.3306], [-7.051, 30.3315], [-7.0551, 30.3378], [-7.0967, 30.3586], [-7.1324, 30.3854], [-7.1681, 30.4062], [-7.2038, 30.3973], [-7.2187, 30.3557], [-7.2365, 30.317], [-7.2573, 30.2754], [-7.3109, 30.2397], [-7.3109, 30.1872], [-7.2637, 30.1299], [-7.2694, 30.1042], [-7.2951, 30.1113], [-7.3151, 30.137], [-7.3481, 30.1686], [-7.3525, 30.1683], [-7.3822, 30.1891], [-7.4031, 30.1742], [-7.4179, 30.1623], [-7.4413, 30.1601], [-7.446, 30.1791], [-7.446, 30.1998], [-7.4511, 30.209], [-7.6401, 30.2118], [-7.6318, 30.2248], [-7.5928, 30.2544], [-7.5668, 30.269], [-7.5762, 30.3128], [-7.5976, 30.3557], [-7.6226, 30.3806], [-7.644, 30.3735], [-7.6725, 30.3664], [-7.6797, 30.4163], [-7.7047, 30.4627], [-7.6547, 30.4627], [-7.594, 30.4734], [-7.5654, 30.527], [-7.4798, 30.527], [-7.5298, 30.5984], [-7.5548, 30.6091], [-7.594, 30.6412], [-7.5904, 30.7233], [-7.7225, 30.7304], [-7.7011, 30.7768], [-7.6583, 30.8161], [-7.6154, 30.8482], [-7.7296, 30.8554], [-7.7225, 30.9696], [-7.7189, 31.0017], [-7.6761, 31.0445], [-7.7618, 31.0374], [-7.7582, 31.0945], [-7.7225, 31.1302], [-7.7133, 31.1651], [-7.6929, 31.1725], [-7.6599, 31.1738], [-7.6245, 31.1915], [-7.5731, 31.2315], [-7.5219, 31.2376], [-7.4877, 31.2697], [-7.4597, 31.2809], [-7.4387, 31.2901], [-7.3466, 31.2945], [-7.3105, 31.3001], [-7.2803, 31.3071], [-7.2679, 31.3172], [-7.2279, 31.3691], [-7.2021, 31.3839], [-7.1962, 31.3858], [-7.1962, 31.4066], [-7.1828, 31.4199], [-7.1542, 31.4302], [-7.1531, 31.4249], [-7.1428, 31.3991], [-7.1383, 31.3994], [-7.12, 31.3628], [-7.0781, 31.3609], [-7.0496, 31.3723], [-7.0353, 31.3886], [-7.0029, 31.3822], [-7.0001, 31.3609], [-6.9696, 31.3305], [-6.9106, 31.3305], [-6.8592, 31.3381], [-6.7526, 31.3457], [-6.7241, 31.3723], [-6.7227, 31.5111], [-6.7028, 31.5119], [-6.6769, 31.5169], [-6.6713, 31.5191], [-6.6457, 31.5035], [-6.5962, 31.494], [-6.5486, 31.5035], [-6.5219, 31.5244], [-6.4838, 31.5397], [-6.4153, 31.5435], [-6.3792, 31.5701], [-6.3411, 31.6101], [-6.292, 31.6482], [-6.2634, 31.6581], [-6.2381, 31.6661], [-6.2002, 31.6577], [-6.1659, 31.6729], [-6.1165, 31.671], [-6.0708, 31.6958], [-6.0099, 31.7281], [-5.9832, 31.7795], [-5.9489, 31.8233], [-5.9204, 31.829], [-5.8614, 31.8252], [-5.8276, 31.8448], [-5.8166, 31.8621], [-5.8009, 31.9021], [-5.7994, 31.9392], [-5.8194, 31.9649], [-5.8466, 31.9806], [-5.8737, 31.9977], [-5.8708, 32.0348], [-5.8537, 32.0748], [-5.8409, 32.0977], [-5.8187, 32.1112], [-5.8173, 32.1069], [-5.7659, 32.1084], [-5.6945, 32.1098], [-5.6731, 32.1369], [-5.656, 32.2154], [-5.616, 32.2326], [-5.5532, 32.2297], [-5.5203, 32.2269], [-5.5018, 32.2226], [-5.4604, 32.2054], [-5.4361, 32.2026], [-5.4447, 32.2183], [-5.4718, 32.2411], [-5.4804, 32.2711], [-5.4704, 32.2925], [-5.4661, 32.3225], [-5.4789, 32.3368], [-5.4875, 32.3496], [-5.5318, 32.3568], [-5.542, 32.367], [-5.544, 32.3767], [-5.5262, 32.3993], [-5.5232, 32.4125], [-5.523, 32.423], [-5.5063, 32.442], [-5.5007, 32.4506], [-5.4299, 32.4452], [-5.3971, 32.4424], [-5.3971, 32.5223], [-5.3243, 32.5223], [-5.31, 32.5594], [-5.2886, 32.6265], [-5.2929, 32.8293], [-5.2543, 32.8635], [-5.2347, 32.8819], [-5.2326, 32.8818], [-5.1869, 32.9347], [-5.1683, 32.9447], [-5.1384, 32.9432], [-5.1127, 32.9347], [-5.0813, 32.9332], [-5.0627, 32.9461], [-5.0513, 32.9675], [-5.0413, 33.006], [-5.0242, 33.0546], [-5.0027, 33.076], [-4.9456, 33.0646], [-4.9199, 33.0689], [-4.9014, 33.086], [-4.8814, 33.0974], [-4.8528, 33.0931], [-4.8388, 33.0889], [-4.8247, 33.068], [-4.8001, 33.0543], [-4.7505, 33.0073], [-4.7439, 32.9957], [-4.7472, 32.9776], [-4.7598, 32.961], [-4.7628, 32.9374], [-4.7532, 32.9176], [-4.7139, 32.8917], [-4.6687, 32.8761], [-4.6462, 32.8824], [-4.612, 32.8799], [-4.579, 32.89], [-4.548, 32.8916], [-4.5148, 32.8917], [-4.4812, 32.8868], [-4.4663, 32.8787], [-4.4501, 32.8633], [-4.435, 32.8338], [-4.4253, 32.8181], [-4.3849, 32.7961], [-4.3555, 32.7713], [-4.3208, 32.7444], [-4.2932, 32.7182], [-4.2883, 32.6799], [-4.2905, 32.6413], [-4.2399, 32.5818], [-4.1983, 32.5699], [-4.1269, 32.5818], [-4.1031, 32.6026], [-4.0905, 32.6252], [-4.0541, 32.6376], [-4.0194, 32.6246], [-3.9981, 32.6029]]] }, \"properties\": { \"name\": \"Drâa-Tafilalet\", \"id\": \"MA-08\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-08\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-7.0942, 32.3046], [-7.0948, 32.2936], [-7.1047, 32.262], [-7.1026, 32.2487], [-7.094, 32.2267], [-7.0876, 32.2047], [-7.0845, 32.1832], [-7.0949, 32.1474], [-7.1004, 32.0736], [-7.0897, 32.0201], [-7.0612, 31.9963], [-7.0303, 31.982], [-7.0241, 31.9556], [-7.0314, 31.9472], [-7.0342, 31.9321], [-7.0224, 31.9201], [-7.0262, 31.9027], [-7.0198, 31.8903], [-7.0069, 31.8853], [-6.9757, 31.85], [-6.9772, 31.8481], [-6.9616, 31.829], [-6.9712, 31.81], [-6.9807, 31.7776], [-7.0035, 31.7453], [-7.1044, 31.7395], [-7.1482, 31.73], [-7.1748, 31.73], [-7.192, 31.751], [-7.2129, 31.7643], [-7.251, 31.7567], [-7.27, 31.7395], [-7.2967, 31.7129], [-7.3127, 31.711], [-7.3199, 31.6922], [-7.3089, 31.664], [-7.3005, 31.6634], [-7.2529, 31.6634], [-7.23, 31.6444], [-7.2224, 31.6253], [-7.2074, 31.5798], [-7.1543, 31.5703], [-7.1438, 31.5675], [-7.1082, 31.5682], [-7.0987, 31.5587], [-7.0949, 31.5378], [-7.1101, 31.4978], [-7.1531, 31.4249], [-7.1542, 31.4302], [-7.1828, 31.4199], [-7.1962, 31.4066], [-7.1962, 31.3858], [-7.2021, 31.3839], [-7.2279, 31.3691], [-7.2679, 31.3172], [-7.2803, 31.3071], [-7.3105, 31.3001], [-7.3466, 31.2945], [-7.4387, 31.2901], [-7.4597, 31.2809], [-7.4877, 31.2697], [-7.5219, 31.2376], [-7.5731, 31.2315], [-7.6245, 31.1915], [-7.6599, 31.1738], [-7.6929, 31.1725], [-7.7301, 31.159], [-7.7495, 31.1488], [-7.7769, 31.1316], [-7.8011, 31.109], [-7.8317, 31.0822], [-7.8559, 31.0687], [-7.879, 31.0585], [-7.9026, 31.0492], [-7.9069, 31.0427], [-7.8978, 31.0299], [-7.8993, 31.0152], [-7.9052, 31.0032], [-7.9364, 30.9828], [-7.9515, 30.9717], [-7.9581, 30.9303], [-7.983, 30.8875], [-8.0259, 30.8732], [-8.0616, 30.9053], [-8.07, 30.9089], [-8.0716, 30.918], [-8.0669, 30.9328], [-8.0664, 30.9411], [-8.0782, 30.9465], [-8.0831, 30.9529], [-8.0982, 30.9639], [-8.1255, 30.9503], [-8.1567, 30.94], [-8.1819, 30.9297], [-8.2079, 30.9232], [-8.2864, 30.8661], [-8.3328, 30.8411], [-8.3757, 30.8446], [-8.4328, 30.8768], [-8.4359, 30.8815], [-8.4478, 30.8805], [-8.4854, 30.8816], [-8.5161, 30.8859], [-8.5505, 30.8889], [-8.5859, 30.8858], [-8.6154, 30.88], [-8.6362, 30.8661], [-8.6501, 30.8517], [-8.6726, 30.8469], [-8.6855, 30.8481], [-8.6949, 30.8692], [-8.7005, 30.8625], [-8.729, 30.8339], [-8.7576, 30.8232], [-8.7683, 30.8554], [-8.7576, 30.9053], [-8.7655, 30.9539], [-8.7704, 30.955], [-8.7743, 30.9692], [-8.7808, 30.977], [-8.7981, 30.9805], [-8.819, 30.9789], [-8.836, 30.959], [-8.8583, 30.939], [-8.8866, 30.9222], [-8.9213, 30.9057], [-8.9529, 30.9004], [-8.9706, 30.8921], [-8.9789, 30.7983], [-9.0395, 30.8304], [-9.0445, 30.8361], [-9.0836, 30.8439], [-9.1099, 30.8469], [-9.1351, 30.848], [-9.1479, 30.8455], [-9.1701, 30.837], [-9.168, 30.8018], [-9.193, 30.7697], [-9.2323, 30.784], [-9.2516, 30.8191], [-9.2535, 30.8164], [-9.2685, 30.8107], [-9.2871, 30.8092], [-9.3065, 30.8117], [-9.3231, 30.8157], [-9.3464, 30.8338], [-9.3912, 30.8269], [-9.4121, 30.8277], [-9.4301, 30.8169], [-9.4434, 30.8141], [-9.4573, 30.8135], [-9.4757, 30.8239], [-9.4918, 30.8297], [-9.5149, 30.8317], [-9.5251, 30.8362], [-9.5295, 30.8421], [-9.5225, 30.8655], [-9.5253, 30.8719], [-9.5328, 30.8718], [-9.5417, 30.8635], [-9.5694, 30.8265], [-9.5842, 30.8177], [-9.5981, 30.8152], [-9.6132, 30.8203], [-9.6142, 30.8089], [-9.6392, 30.7733], [-9.6748, 30.759], [-9.7212, 30.759], [-9.7462, 30.7768], [-9.7394, 30.8725], [-9.7453, 30.8853], [-9.7754, 30.9152], [-9.8058, 30.9402], [-9.8204, 30.9508], [-9.8257, 30.964], [-9.8243, 30.9771], [-9.8213, 30.984], [-9.8135, 30.9918], [-9.8101, 30.9996], [-9.8093, 31.0115], [-9.8176, 31.0257], [-9.8163, 31.0354], [-9.8185, 31.054], [-9.8246, 31.0574], [-9.8168, 31.0751], [-9.8168, 31.0918], [-9.8201, 31.0952], [-9.8335, 31.1004], [-9.8401, 31.0999], [-9.8424, 31.1049], [-9.8404, 31.1165], [-9.834, 31.1227], [-9.8393, 31.1376], [-9.8371, 31.1493], [-9.8315, 31.1568], [-9.8318, 31.1671], [-9.8249, 31.1699], [-9.8199, 31.1782], [-9.8151, 31.1918], [-9.816, 31.1974], [-9.8226, 31.1993], [-9.8229, 31.2099], [-9.8193, 31.216], [-9.8179, 31.2287], [-9.8204, 31.2329], [-9.8182, 31.2443], [-9.8137, 31.2488], [-9.7999, 31.2746], [-9.796, 31.2879], [-9.7999, 31.2932], [-9.794, 31.3146], [-9.794, 31.3274], [-9.7982, 31.331], [-9.7965, 31.339], [-9.7974, 31.3535], [-9.8013, 31.3554], [-9.804, 31.3685], [-9.8113, 31.3801], [-9.8168, 31.3846], [-9.8343, 31.3854], [-9.8413, 31.3879], [-9.8337, 31.4138], [-9.8218, 31.4221], [-9.8096, 31.4329], [-9.7899, 31.4562], [-9.786, 31.4649], [-9.7774, 31.4763], [-9.774, 31.4871], [-9.7632, 31.499], [-9.7651, 31.5068], [-9.7807, 31.5087], [-9.7721, 31.5171], [-9.766, 31.5171], [-9.7574, 31.5268], [-9.7387, 31.5387], [-9.7185, 31.5615], [-9.7057, 31.5793], [-9.6874, 31.6018], [-9.6851, 31.6143], [-9.6815, 31.6162], [-9.6746, 31.6362], [-9.6776, 31.6471], [-9.6776, 31.6637], [-9.6751, 31.6896], [-9.6788, 31.6999], [-9.6599, 31.7112], [-9.6496, 31.719], [-9.6249, 31.7429], [-9.6176, 31.7543], [-9.6074, 31.7626], [-9.6057, 31.7707], [-9.5962, 31.7782], [-9.5865, 31.791], [-9.5865, 31.794], [-9.5726, 31.806], [-9.569, 31.8112], [-9.5582, 31.8154], [-9.5468, 31.8304], [-9.5304, 31.8443], [-9.5254, 31.8507], [-9.5257, 31.8563], [-9.5151, 31.8657], [-9.5035, 31.8737], [-9.4932, 31.8865], [-9.4715, 31.9074], [-9.4715, 31.9118], [-9.4604, 31.9232], [-9.4535, 31.9276], [-9.4418, 31.939], [-9.4274, 31.9507], [-9.4251, 31.9563], [-9.399, 31.9801], [-9.3943, 31.9871], [-9.3568, 32.0224], [-9.3457, 32.0304], [-9.3401, 32.0473], [-9.3399, 32.0557], [-9.3299, 32.0657], [-9.3301, 32.0849], [-9.3243, 32.0924], [-9.3246, 32.0982], [-9.3199, 32.1046], [-9.3229, 32.1126], [-9.294, 32.1421], [-9.2782, 32.1574], [-9.2696, 32.1693], [-9.2621, 32.1751], [-9.2626, 32.1826], [-9.2537, 32.201], [-9.2546, 32.2074], [-9.2513, 32.2176], [-9.2546, 32.231], [-9.2585, 32.2337], [-9.261, 32.2424], [-9.266, 32.2451], [-9.2665, 32.2521], [-9.2607, 32.2582], [-9.256, 32.2699], [-9.2529, 32.2721], [-9.2449, 32.2962], [-9.2465, 32.3065], [-9.2513, 32.3187], [-9.2615, 32.3204], [-9.2815, 32.3293], [-9.2821, 32.3471], [-9.291, 32.3593], [-9.2901, 32.3693], [-9.2863, 32.3771], [-9.2779, 32.386], [-9.2615, 32.3987], [-9.2501, 32.4199], [-9.2468, 32.4296], [-9.239, 32.4429], [-9.2346, 32.4549], [-9.2318, 32.476], [-9.2513, 32.4974], [-9.2596, 32.5004], [-9.2651, 32.5118], [-9.2718, 32.5157], [-9.2718, 32.5262], [-9.281, 32.5351], [-9.2863, 32.5429], [-9.2607, 32.5604], [-9.2524, 32.564], [-9.2335, 32.5771], [-9.2199, 32.5901], [-9.2001, 32.6018], [-9.189, 32.6113], [-9.1793, 32.6165], [-9.1635, 32.6304], [-9.146, 32.6426], [-9.1351, 32.6532], [-9.1204, 32.6626], [-9.1115, 32.6726], [-9.101, 32.6804], [-9.0815, 32.6996], [-9.0746, 32.7051], [-9.0579, 32.7243], [-9.0276, 32.7178], [-8.9895, 32.7236], [-8.961, 32.7064], [-8.9476, 32.676], [-8.9476, 32.6531], [-8.9591, 32.6322], [-8.9838, 32.6169], [-8.9876, 32.5922], [-8.9838, 32.5675], [-8.9667, 32.5541], [-8.9229, 32.5256], [-8.8848, 32.4913], [-8.8429, 32.4875], [-8.803, 32.5027], [-8.763, 32.5085], [-8.7249, 32.5161], [-8.6716, 32.5199], [-8.6183, 32.5161], [-8.584, 32.4913], [-8.565, 32.438], [-8.5764, 32.4133], [-8.5726, 32.3733], [-8.5365, 32.3409], [-8.5212, 32.3029], [-8.4965, 32.3029], [-8.4737, 32.3105], [-8.4422, 32.3105], [-8.4228, 32.3139], [-8.3764, 32.3264], [-8.3461, 32.3478], [-8.3373, 32.4042], [-8.3095, 32.4144], [-8.2736, 32.4142], [-8.2658, 32.4085], [-8.2265, 32.4245], [-8.1926, 32.4495], [-8.1894, 32.4672], [-8.1821, 32.4687], [-8.1685, 32.4825], [-8.1522, 32.49], [-8.1386, 32.4942], [-8.1239, 32.5126], [-8.0983, 32.5283], [-8.0804, 32.5563], [-8.063, 32.5711], [-8.0515, 32.5666], [-8.0455, 32.5712], [-8.0386, 32.5996], [-8.0442, 32.6244], [-8.0612, 32.6445], [-8.0723, 32.6609], [-8.0658, 32.6775], [-8.0724, 32.688], [-8.0675, 32.6921], [-8.0359, 32.712], [-8.0337, 32.7211], [-8.036, 32.728], [-8.0273, 32.7372], [-8.0295, 32.7445], [-8.0394, 32.7615], [-8.0329, 32.7775], [-8.0335, 32.7867], [-8.0095, 32.8097], [-7.9865, 32.8157], [-7.9673, 32.8144], [-7.9602, 32.803], [-7.9579, 32.7915], [-7.9513, 32.776], [-7.9392, 32.7595], [-7.9227, 32.7463], [-7.9078, 32.7234], [-7.9017, 32.707], [-7.9028, 32.6983], [-7.8839, 32.6637], [-7.8678, 32.6512], [-7.7822, 32.6512], [-7.7495, 32.6502], [-7.7342, 32.6415], [-7.72, 32.6269], [-7.709, 32.599], [-7.6992, 32.5853], [-7.6937, 32.5693], [-7.6833, 32.5551], [-7.6555, 32.546], [-7.6418, 32.5273], [-7.6309, 32.5099], [-7.6151, 32.4701], [-7.5981, 32.4454], [-7.5867, 32.4303], [-7.5769, 32.4304], [-7.5687, 32.4409], [-7.5616, 32.4409], [-7.5475, 32.4286], [-7.5142, 32.431], [-7.4585, 32.4365], [-7.4109, 32.4603], [-7.3586, 32.4555], [-7.3277, 32.4389], [-7.3146, 32.3972], [-7.2789, 32.3711], [-7.2254, 32.3532], [-7.1849, 32.3449], [-7.1456, 32.3282], [-7.1087, 32.3247], [-7.0942, 32.3046]]] }, \"properties\": { \"name\": \"Marrakech-Safi\", \"id\": \"MA-07\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-07\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-7.1268, 33.8296], [-7.1234, 33.8196], [-7.1134, 33.8094], [-7.1018, 33.8081], [-7.0817, 33.8083], [-7.0689, 33.8066], [-7.0612, 33.7884], [-7.0459, 33.7736], [-7.0372, 33.7471], [-7.0362, 33.7289], [-7.0336, 33.7102], [-7.0365, 33.7034], [-7.0255, 33.6921], [-7.0229, 33.6839], [-7.0125, 33.6739], [-7.0055, 33.6593], [-7.0155, 33.6411], [-7.0145, 33.6347], [-7, 33.6341], [-6.999, 33.6429], [-6.9818, 33.6422], [-6.9882, 33.5614], [-6.9273, 33.5633], [-6.912, 33.5823], [-6.9028, 33.5884], [-6.8974, 33.5805], [-6.888, 33.5791], [-6.8726, 33.5823], [-6.8621, 33.5838], [-6.8568, 33.5557], [-6.8454, 33.5386], [-6.8112, 33.5366], [-6.8019, 33.5419], [-6.7179, 33.5366], [-6.7655, 33.4891], [-6.7959, 33.4662], [-6.7959, 33.4453], [-6.7616, 33.4186], [-6.7521, 33.3958], [-6.775, 33.3672], [-6.7845, 33.3292], [-6.7959, 33.293], [-6.7997, 33.2321], [-6.8224, 33.2215], [-6.8267, 33.223], [-6.8414, 33.2163], [-6.861, 33.2092], [-6.8842, 33.1896], [-6.8913, 33.1182], [-6.8985, 33.0522], [-6.911, 33.0093], [-6.9181, 32.9879], [-6.9538, 32.9736], [-6.9788, 32.9594], [-6.9859, 32.9076], [-7.0091, 32.8362], [-7.0163, 32.7952], [-7.0216, 32.7595], [-7.0359, 32.7381], [-7.0413, 32.7059], [-7.0341, 32.6827], [-7.0198, 32.6542], [-7.0002, 32.6256], [-6.9753, 32.6228], [-6.9866, 32.5963], [-6.9852, 32.5684], [-6.9891, 32.5537], [-6.9903, 32.5391], [-6.9898, 32.5221], [-6.9932, 32.5061], [-7.0064, 32.48], [-7.0251, 32.4383], [-7.0323, 32.4109], [-7.04, 32.3985], [-7.0482, 32.3884], [-7.0705, 32.3706], [-7.0798, 32.366], [-7.0963, 32.3493], [-7.0935, 32.3403], [-7.0936, 32.3147], [-7.0942, 32.3046], [-7.1087, 32.3247], [-7.1456, 32.3282], [-7.1849, 32.3449], [-7.2254, 32.3532], [-7.2789, 32.3711], [-7.3146, 32.3972], [-7.3277, 32.4389], [-7.3586, 32.4555], [-7.4109, 32.4603], [-7.4585, 32.4365], [-7.5142, 32.431], [-7.5475, 32.4286], [-7.5616, 32.4409], [-7.5687, 32.4409], [-7.5769, 32.4304], [-7.5867, 32.4303], [-7.5981, 32.4454], [-7.6151, 32.4701], [-7.6309, 32.5099], [-7.6418, 32.5273], [-7.6555, 32.546], [-7.6833, 32.5551], [-7.6937, 32.5693], [-7.6992, 32.5853], [-7.709, 32.599], [-7.72, 32.6269], [-7.7342, 32.6415], [-7.7495, 32.6502], [-7.7822, 32.6512], [-7.8678, 32.6512], [-7.8839, 32.6637], [-7.9028, 32.6983], [-7.9017, 32.707], [-7.9078, 32.7234], [-7.9227, 32.7463], [-7.9392, 32.7595], [-7.9513, 32.776], [-7.9579, 32.7915], [-7.9602, 32.803], [-7.9673, 32.8144], [-7.9865, 32.8157], [-8.0095, 32.8097], [-8.0335, 32.7867], [-8.0329, 32.7775], [-8.0394, 32.7615], [-8.0295, 32.7445], [-8.0273, 32.7372], [-8.036, 32.728], [-8.0337, 32.7211], [-8.0359, 32.712], [-8.0675, 32.6921], [-8.0724, 32.688], [-8.0658, 32.6775], [-8.0723, 32.6609], [-8.0612, 32.6445], [-8.0442, 32.6244], [-8.0386, 32.5996], [-8.0455, 32.5712], [-8.0515, 32.5666], [-8.063, 32.5711], [-8.0804, 32.5563], [-8.0983, 32.5283], [-8.1239, 32.5126], [-8.1386, 32.4942], [-8.1522, 32.49], [-8.1685, 32.4825], [-8.1821, 32.4687], [-8.1894, 32.4672], [-8.1926, 32.4495], [-8.2265, 32.4245], [-8.2658, 32.4085], [-8.2736, 32.4142], [-8.3095, 32.4144], [-8.3373, 32.4042], [-8.3461, 32.3478], [-8.3764, 32.3264], [-8.4228, 32.3139], [-8.4422, 32.3105], [-8.4737, 32.3105], [-8.4965, 32.3029], [-8.5212, 32.3029], [-8.5365, 32.3409], [-8.5726, 32.3733], [-8.5764, 32.4133], [-8.565, 32.438], [-8.584, 32.4913], [-8.6183, 32.5161], [-8.6716, 32.5199], [-8.7249, 32.5161], [-8.763, 32.5085], [-8.803, 32.5027], [-8.8429, 32.4875], [-8.8848, 32.4913], [-8.9229, 32.5256], [-8.9667, 32.5541], [-8.9838, 32.5675], [-8.9876, 32.5922], [-8.9838, 32.6169], [-8.9591, 32.6322], [-8.9476, 32.6531], [-8.9476, 32.676], [-8.961, 32.7064], [-8.9895, 32.7236], [-9.0276, 32.7178], [-9.0579, 32.7243], [-9.0524, 32.7315], [-9.0438, 32.7374], [-9.039, 32.734], [-9.0315, 32.7396], [-9.0399, 32.7424], [-9.0171, 32.7601], [-8.9749, 32.7885], [-8.9501, 32.8082], [-8.9332, 32.8196], [-8.926, 32.8212], [-8.8993, 32.8424], [-8.8979, 32.8474], [-8.8671, 32.8749], [-8.8521, 32.8899], [-8.8229, 32.9138], [-8.8087, 32.9262], [-8.7987, 32.9368], [-8.7857, 32.9479], [-8.7807, 32.9593], [-8.7752, 32.9604], [-8.7612, 32.9743], [-8.7485, 32.9746], [-8.7463, 32.9804], [-8.754, 32.9815], [-8.7471, 32.9901], [-8.744, 32.999], [-8.729, 33.0054], [-8.709, 33.026], [-8.7049, 33.0396], [-8.6901, 33.0479], [-8.689, 33.0562], [-8.6729, 33.0707], [-8.666, 33.0787], [-8.6543, 33.0874], [-8.6499, 33.0965], [-8.6329, 33.1112], [-8.6263, 33.1249], [-8.6265, 33.1312], [-8.6132, 33.1401], [-8.614, 33.1437], [-8.6296, 33.1604], [-8.6212, 33.1751], [-8.6112, 33.1829], [-8.591, 33.2012], [-8.579, 33.2146], [-8.5718, 33.2182], [-8.5615, 33.2185], [-8.554, 33.2268], [-8.5574, 33.2349], [-8.5504, 33.2365], [-8.5479, 33.2449], [-8.5401, 33.2468], [-8.5326, 33.2543], [-8.5182, 33.2607], [-8.5107, 33.2674], [-8.5002, 33.2635], [-8.4973, 33.2557], [-8.5007, 33.2521], [-8.4893, 33.2443], [-8.4607, 33.2457], [-8.426, 33.2601], [-8.3963, 33.276], [-8.381, 33.2868], [-8.3743, 33.294], [-8.3601, 33.3035], [-8.3524, 33.311], [-8.3421, 33.3171], [-8.336, 33.3171], [-8.3318, 33.3282], [-8.3226, 33.339], [-8.3113, 33.3571], [-8.2971, 33.3671], [-8.2757, 33.3679], [-8.2657, 33.3737], [-8.2524, 33.3749], [-8.2421, 33.3796], [-8.2254, 33.3804], [-8.2063, 33.3865], [-8.1893, 33.3954], [-8.1818, 33.4029], [-8.169, 33.4026], [-8.1646, 33.4063], [-8.1521, 33.4065], [-8.1493, 33.4087], [-8.1254, 33.4135], [-8.1104, 33.4218], [-8.0996, 33.4243], [-8.0926, 33.4293], [-8.0668, 33.4374], [-8.0615, 33.4412], [-8.0268, 33.4521], [-8.0185, 33.4532], [-7.9846, 33.4699], [-7.9579, 33.4799], [-7.9402, 33.4799], [-7.9326, 33.4818], [-7.9107, 33.4924], [-7.8976, 33.4943], [-7.8882, 33.5032], [-7.8774, 33.506], [-7.869, 33.5146], [-7.8543, 33.516], [-7.8485, 33.5229], [-7.8315, 33.529], [-7.8315, 33.5329], [-7.8196, 33.5357], [-7.8174, 33.5279], [-7.8012, 33.5282], [-7.7937, 33.5349], [-7.7799, 33.539], [-7.7551, 33.549], [-7.7349, 33.5626], [-7.7276, 33.5638], [-7.7104, 33.5718], [-7.7076, 33.581], [-7.7038, 33.584], [-7.6946, 33.5832], [-7.6807, 33.5915], [-7.6804, 33.5965], [-7.6685, 33.5979], [-7.6612, 33.6021], [-7.6554, 33.611], [-7.6482, 33.6057], [-7.636, 33.6046], [-7.6349, 33.6087], [-7.6199, 33.6062], [-7.6079, 33.6074], [-7.5988, 33.6021], [-7.571, 33.609], [-7.561, 33.6132], [-7.5538, 33.6196], [-7.5451, 33.6215], [-7.5362, 33.6201], [-7.5299, 33.624], [-7.5218, 33.6249], [-7.5051, 33.6387], [-7.4865, 33.6474], [-7.481, 33.6538], [-7.4668, 33.6624], [-7.4429, 33.679], [-7.4321, 33.6907], [-7.416, 33.6979], [-7.4132, 33.704], [-7.4024, 33.7137], [-7.3996, 33.7218], [-7.3932, 33.7287], [-7.3957, 33.7093], [-7.3871, 33.7063], [-7.3613, 33.7101], [-7.3485, 33.7179], [-7.3413, 33.719], [-7.346, 33.726], [-7.3426, 33.7307], [-7.3321, 33.7324], [-7.3304, 33.7368], [-7.3146, 33.7476], [-7.3004, 33.7549], [-7.2943, 33.7626], [-7.274, 33.7743], [-7.2663, 33.7821], [-7.2476, 33.7874], [-7.2388, 33.7968], [-7.2326, 33.7957], [-7.2288, 33.804], [-7.2174, 33.8021], [-7.1935, 33.8054], [-7.1785, 33.8107], [-7.1751, 33.8168], [-7.1632, 33.816], [-7.1529, 33.819], [-7.1485, 33.8235], [-7.1385, 33.8246], [-7.1268, 33.8296]]] }, \"properties\": { \"name\": \"Casablanca-Settat\", \"id\": \"MA-06\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-06\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.2315, 32.885], [-5.2543, 32.8635], [-5.2929, 32.8293], [-5.2886, 32.6265], [-5.31, 32.5594], [-5.3243, 32.5223], [-5.3971, 32.5223], [-5.3971, 32.4424], [-5.4299, 32.4452], [-5.5007, 32.4506], [-5.5063, 32.442], [-5.523, 32.423], [-5.5232, 32.4125], [-5.5262, 32.3993], [-5.544, 32.3767], [-5.542, 32.367], [-5.5318, 32.3568], [-5.4875, 32.3496], [-5.4789, 32.3368], [-5.4661, 32.3225], [-5.4704, 32.2925], [-5.4804, 32.2711], [-5.4718, 32.2411], [-5.4447, 32.2183], [-5.4361, 32.2026], [-5.4604, 32.2054], [-5.5018, 32.2226], [-5.5203, 32.2269], [-5.5532, 32.2297], [-5.616, 32.2326], [-5.656, 32.2154], [-5.6731, 32.1369], [-5.6945, 32.1098], [-5.7659, 32.1084], [-5.8173, 32.1069], [-5.8187, 32.1112], [-5.8409, 32.0977], [-5.8537, 32.0748], [-5.8708, 32.0348], [-5.8737, 31.9977], [-5.8466, 31.9806], [-5.8194, 31.9649], [-5.7994, 31.9392], [-5.8009, 31.9021], [-5.8166, 31.8621], [-5.8276, 31.8448], [-5.8614, 31.8252], [-5.9204, 31.829], [-5.9489, 31.8233], [-5.9832, 31.7795], [-6.0099, 31.7281], [-6.0708, 31.6958], [-6.1165, 31.671], [-6.1659, 31.6729], [-6.2002, 31.6577], [-6.2381, 31.6661], [-6.2634, 31.6581], [-6.292, 31.6482], [-6.3411, 31.6101], [-6.3792, 31.5701], [-6.4153, 31.5435], [-6.4838, 31.5397], [-6.5219, 31.5244], [-6.5486, 31.5035], [-6.5962, 31.494], [-6.6457, 31.5035], [-6.6713, 31.5191], [-6.6769, 31.5169], [-6.7028, 31.5119], [-6.7227, 31.5111], [-6.7241, 31.3723], [-6.7526, 31.3457], [-6.8592, 31.3381], [-6.9106, 31.3305], [-6.9696, 31.3305], [-7.0001, 31.3609], [-7.0029, 31.3822], [-7.0353, 31.3886], [-7.0496, 31.3723], [-7.0781, 31.3609], [-7.12, 31.3628], [-7.1383, 31.3994], [-7.1428, 31.3991], [-7.1531, 31.4249], [-7.1101, 31.4978], [-7.0949, 31.5378], [-7.0987, 31.5587], [-7.1082, 31.5682], [-7.1438, 31.5675], [-7.1543, 31.5703], [-7.2074, 31.5798], [-7.2224, 31.6253], [-7.23, 31.6444], [-7.2529, 31.6634], [-7.3005, 31.6634], [-7.3089, 31.664], [-7.3199, 31.6922], [-7.3127, 31.711], [-7.2967, 31.7129], [-7.27, 31.7395], [-7.251, 31.7567], [-7.2129, 31.7643], [-7.192, 31.751], [-7.1748, 31.73], [-7.1482, 31.73], [-7.1044, 31.7395], [-7.0035, 31.7453], [-6.9807, 31.7776], [-6.9712, 31.81], [-6.9616, 31.829], [-6.9772, 31.8481], [-6.9757, 31.85], [-7.0069, 31.8853], [-7.0198, 31.8903], [-7.0262, 31.9027], [-7.0224, 31.9201], [-7.0342, 31.9321], [-7.0314, 31.9472], [-7.0241, 31.9556], [-7.0303, 31.982], [-7.0612, 31.9963], [-7.0897, 32.0201], [-7.1004, 32.0736], [-7.0949, 32.1474], [-7.0845, 32.1832], [-7.0876, 32.2047], [-7.094, 32.2267], [-7.1026, 32.2487], [-7.1047, 32.262], [-7.0948, 32.2936], [-7.0936, 32.3147], [-7.0935, 32.3403], [-7.0963, 32.3493], [-7.0798, 32.366], [-7.0705, 32.3706], [-7.0482, 32.3884], [-7.04, 32.3985], [-7.0323, 32.4109], [-7.0251, 32.4383], [-7.0064, 32.48], [-6.9932, 32.5061], [-6.9898, 32.5221], [-6.9903, 32.5391], [-6.9891, 32.5537], [-6.9852, 32.5684], [-6.9866, 32.5963], [-6.9753, 32.6228], [-7.0002, 32.6256], [-7.0198, 32.6542], [-7.0341, 32.6827], [-7.0413, 32.7059], [-7.0359, 32.7381], [-7.0216, 32.7595], [-7.0163, 32.7952], [-7.0091, 32.8362], [-6.9859, 32.9076], [-6.9788, 32.9594], [-6.9538, 32.9736], [-6.9181, 32.9879], [-6.911, 33.0093], [-6.8985, 33.0522], [-6.8913, 33.1182], [-6.8842, 33.1896], [-6.861, 33.2092], [-6.8414, 33.2163], [-6.8267, 33.223], [-6.8224, 33.2215], [-6.8002, 33.2319], [-6.7978, 33.2302], [-6.7653, 33.2188], [-6.7531, 33.2221], [-6.7252, 33.2133], [-6.7051, 33.2036], [-6.6831, 33.2104], [-6.6436, 33.213], [-6.6266, 33.2166], [-6.6048, 33.2156], [-6.5651, 33.1921], [-6.5542, 33.1802], [-6.5435, 33.1659], [-6.5327, 33.1554], [-6.5225, 33.1421], [-6.518, 33.1236], [-6.478, 33.1407], [-6.4476, 33.1597], [-6.4209, 33.1845], [-6.3467, 33.2092], [-6.3257, 33.2378], [-6.384, 33.2549], [-6.4171, 33.2892], [-6.4057, 33.3215], [-6.3735, 33.346], [-6.3645, 33.3746], [-6.3497, 33.3849], [-6.3486, 33.4148], [-6.3353, 33.451], [-6.3124, 33.4586], [-6.2382, 33.4548], [-6.2115, 33.4453], [-6.1754, 33.4148], [-6.1869, 33.3906], [-6.1848, 33.3868], [-6.1982, 33.3768], [-6.2077, 33.3463], [-6.202, 33.3253], [-6.1658, 33.3311], [-6.122, 33.3311], [-6.0821, 33.3292], [-6.0726, 33.3025], [-6.0707, 33.2816], [-5.9895, 33.2828], [-5.9762, 33.2991], [-5.9382, 33.3092], [-5.9186, 33.3053], [-5.8631, 33.2888], [-5.8135, 33.2786], [-5.7904, 33.2856], [-5.7717, 33.3155], [-5.77, 33.3438], [-5.7806, 33.3677], [-5.8042, 33.3863], [-5.8156, 33.4472], [-5.8121, 33.4663], [-5.8099, 33.4643], [-5.7851, 33.4281], [-5.7781, 33.431], [-5.7611, 33.4286], [-5.7098, 33.3972], [-5.6598, 33.3787], [-5.5955, 33.3687], [-5.5484, 33.3529], [-5.4999, 33.3201], [-5.5142, 33.2402], [-5.4756, 33.2002], [-5.4556, 33.1788], [-5.4114, 33.116], [-5.2914, 33.1188], [-5.3114, 33.0774], [-5.32, 33.002], [-5.2715, 32.9463], [-5.2443, 32.9206], [-5.2315, 32.885]]] }, \"properties\": { \"name\": \"Béni-Mellal-Khénifra\", \"id\": \"MA-05\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-05\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.3212, 34.452], [-5.3375, 34.4029], [-5.3618, 34.3858], [-5.4103, 34.3815], [-5.4317, 34.373], [-5.4703, 34.3658], [-5.4883, 34.3803], [-5.5052, 34.3715], [-5.5167, 34.3694], [-5.5188, 34.353], [-5.5117, 34.3308], [-5.4895, 34.308], [-5.4503, 34.2694], [-5.4239, 34.248], [-5.4139, 34.2303], [-5.4139, 34.208], [-5.4196, 34.1781], [-5.4296, 34.1395], [-5.4539, 34.1181], [-5.4853, 34.1024], [-5.5253, 34.0938], [-5.561, 34.0738], [-5.6281, 34.0681], [-5.6738, 34.081], [-5.6923, 34.0881], [-5.6809, 34.1409], [-5.6895, 34.1538], [-5.7017, 34.1668], [-5.713, 34.1635], [-5.7355, 34.1693], [-5.7418, 34.1845], [-5.8037, 34.2023], [-5.8365, 34.188], [-5.8537, 34.1638], [-5.8752, 34.1374], [-5.906, 34.0966], [-5.8951, 34.0716], [-5.8694, 34.0387], [-5.8394, 34.0102], [-5.7794, 33.9887], [-5.7395, 33.9759], [-5.7273, 33.9803], [-5.7195, 33.9759], [-5.6852, 33.9459], [-5.7052, 33.9131], [-5.7423, 33.8731], [-5.7666, 33.8417], [-5.7566, 33.8203], [-5.7252, 33.8031], [-5.698, 33.776], [-5.6938, 33.7589], [-5.718, 33.7103], [-5.7366, 33.6761], [-5.7547, 33.6622], [-5.7593, 33.6235], [-5.7653, 33.6041], [-5.7494, 33.5776], [-5.7395, 33.5433], [-5.7494, 33.5048], [-5.768, 33.4848], [-5.7869, 33.4831], [-5.8118, 33.4681], [-5.8156, 33.4472], [-5.8042, 33.3863], [-5.7806, 33.3677], [-5.77, 33.3438], [-5.7717, 33.3155], [-5.7904, 33.2856], [-5.8135, 33.2786], [-5.8631, 33.2888], [-5.9186, 33.3053], [-5.9382, 33.3092], [-5.9762, 33.2991], [-5.9895, 33.2828], [-6.0707, 33.2816], [-6.0726, 33.3025], [-6.0821, 33.3292], [-6.122, 33.3311], [-6.1658, 33.3311], [-6.202, 33.3253], [-6.2077, 33.3463], [-6.1982, 33.3768], [-6.1848, 33.3868], [-6.1869, 33.3906], [-6.1754, 33.4148], [-6.2115, 33.4453], [-6.2382, 33.4548], [-6.3124, 33.4586], [-6.3353, 33.451], [-6.3486, 33.4148], [-6.3497, 33.3849], [-6.3645, 33.3746], [-6.3735, 33.346], [-6.4057, 33.3215], [-6.4171, 33.2892], [-6.384, 33.2549], [-6.3257, 33.2378], [-6.3467, 33.2092], [-6.4209, 33.1845], [-6.4476, 33.1597], [-6.478, 33.1407], [-6.518, 33.1236], [-6.5225, 33.1421], [-6.5327, 33.1554], [-6.5435, 33.1659], [-6.5542, 33.1802], [-6.5651, 33.1921], [-6.6048, 33.2156], [-6.6266, 33.2166], [-6.6436, 33.213], [-6.6831, 33.2104], [-6.7051, 33.2036], [-6.7252, 33.2133], [-6.7531, 33.2221], [-6.7653, 33.2188], [-6.7978, 33.2302], [-6.8002, 33.2319], [-6.7997, 33.2321], [-6.7959, 33.293], [-6.7845, 33.3292], [-6.775, 33.3672], [-6.7521, 33.3958], [-6.7616, 33.4186], [-6.7959, 33.4453], [-6.7959, 33.4662], [-6.7655, 33.4891], [-6.7179, 33.5366], [-6.8019, 33.5419], [-6.8112, 33.5366], [-6.8454, 33.5386], [-6.8568, 33.5557], [-6.8621, 33.5838], [-6.8726, 33.5823], [-6.888, 33.5791], [-6.8974, 33.5805], [-6.9028, 33.5884], [-6.912, 33.5823], [-6.9273, 33.5633], [-6.9882, 33.5614], [-6.9818, 33.6422], [-6.999, 33.6429], [-7, 33.6341], [-7.0145, 33.6347], [-7.0155, 33.6411], [-7.0055, 33.6593], [-7.0125, 33.6739], [-7.0229, 33.6839], [-7.0255, 33.6921], [-7.0365, 33.7034], [-7.0336, 33.7102], [-7.0362, 33.7289], [-7.0372, 33.7471], [-7.0459, 33.7736], [-7.0612, 33.7884], [-7.0689, 33.8066], [-7.0817, 33.8083], [-7.1018, 33.8081], [-7.1134, 33.8094], [-7.1234, 33.8196], [-7.1268, 33.8296], [-7.1101, 33.8393], [-7.1024, 33.8479], [-7.0921, 33.8557], [-7.0751, 33.8626], [-7.0663, 33.8712], [-7.0621, 33.8693], [-7.0485, 33.871], [-7.046, 33.874], [-7.0243, 33.8846], [-7.0135, 33.8932], [-7.0024, 33.8965], [-7.0032, 33.9021], [-6.9915, 33.9079], [-6.981, 33.909], [-6.9707, 33.9218], [-6.9643, 33.9249], [-6.9443, 33.9421], [-6.9152, 33.9646], [-6.9099, 33.9715], [-6.8946, 33.986], [-6.8837, 33.9946], [-6.8588, 34.0207], [-6.8446, 34.0329], [-6.8346, 34.0335], [-6.8304, 34.0376], [-6.8343, 34.0432], [-6.8173, 34.0612], [-6.8104, 34.0654], [-6.8076, 34.0721], [-6.8026, 34.0726], [-6.7862, 34.089], [-6.7768, 34.1047], [-6.7685, 34.1129], [-6.7576, 34.1271], [-6.7535, 34.1299], [-6.743, 34.1441], [-6.7329, 34.1549], [-6.7021, 34.2032], [-6.6954, 34.2168], [-6.6757, 34.2657], [-6.6499, 34.304], [-6.6174, 34.3462], [-6.6057, 34.3626], [-6.5901, 34.381], [-6.5807, 34.3946], [-6.5612, 34.4193], [-6.5512, 34.4346], [-6.5401, 34.4476], [-6.524, 34.4713], [-6.5146, 34.4899], [-6.5007, 34.5093], [-6.4882, 34.5321], [-6.4732, 34.5554], [-6.4651, 34.5713], [-6.4274, 34.6337], [-6.3963, 34.6888], [-6.3901, 34.6976], [-6.3868, 34.7071], [-6.3729, 34.7302], [-6.3493, 34.7779], [-6.3482, 34.784], [-6.3235, 34.8301], [-6.3124, 34.8493], [-6.3029, 34.8693], [-6.2924, 34.8712], [-6.286, 34.8676], [-6.2876, 34.8565], [-6.2951, 34.8382], [-6.2779, 34.8299], [-6.2679, 34.8232], [-6.259, 34.8271], [-6.2565, 34.8368], [-6.2502, 34.8368], [-6.2462, 34.8504], [-6.251, 34.8515], [-6.2496, 34.8596], [-6.2715, 34.8651], [-6.2746, 34.8693], [-6.2829, 34.8685], [-6.2896, 34.8754], [-6.2977, 34.8737], [-6.2965, 34.8843], [-6.2896, 34.8965], [-6.2843, 34.9132], [-6.2743, 34.9324], [-6.2705, 34.9438], [-6.2502, 34.987], [-6.2214, 34.9871], [-6.1859, 34.9821], [-6.1547, 34.9794], [-6.1234, 34.979], [-6.0881, 34.9826], [-6.0608, 34.9758], [-6.0101, 34.9686], [-5.9689, 34.9642], [-5.954, 34.94], [-5.9183, 34.9221], [-5.8594, 34.915], [-5.8164, 34.9248], [-5.8118, 34.9175], [-5.794, 34.914], [-5.7771, 34.9156], [-5.7671, 34.9122], [-5.7506, 34.8971], [-5.7488, 34.8579], [-5.7506, 34.7936], [-5.747, 34.7419], [-5.7363, 34.7133], [-5.722, 34.6883], [-5.706, 34.6758], [-5.6738, 34.6687], [-5.656, 34.6919], [-5.6453, 34.7187], [-5.6257, 34.7205], [-5.5953, 34.7062], [-5.5775, 34.6866], [-5.5525, 34.6794], [-5.5097, 34.658], [-5.4865, 34.6384], [-5.4561, 34.6187], [-5.4311, 34.608], [-5.4044, 34.5795], [-5.4044, 34.5384], [-5.399, 34.5081], [-5.3723, 34.4956], [-5.3455, 34.476], [-5.3249, 34.4674], [-5.3212, 34.452]]] }, \"properties\": { \"name\": \"Rabat-Salé-Kénitra\", \"id\": \"MA-04\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-04\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-3.9981, 32.6029], [-4.0194, 32.6246], [-4.0541, 32.6376], [-4.0905, 32.6252], [-4.1031, 32.6026], [-4.1269, 32.5818], [-4.1983, 32.5699], [-4.2399, 32.5818], [-4.2905, 32.6413], [-4.2883, 32.6799], [-4.2932, 32.7182], [-4.3208, 32.7444], [-4.3555, 32.7713], [-4.3849, 32.7961], [-4.4253, 32.8181], [-4.435, 32.8338], [-4.4501, 32.8633], [-4.4663, 32.8787], [-4.4812, 32.8868], [-4.5148, 32.8917], [-4.548, 32.8916], [-4.579, 32.89], [-4.612, 32.8799], [-4.6462, 32.8824], [-4.6687, 32.8761], [-4.7139, 32.8917], [-4.7532, 32.9176], [-4.7628, 32.9374], [-4.7598, 32.961], [-4.7472, 32.9776], [-4.7439, 32.9957], [-4.7505, 33.0073], [-4.8001, 33.0543], [-4.8247, 33.068], [-4.8388, 33.0889], [-4.8528, 33.0931], [-4.8814, 33.0974], [-4.9014, 33.086], [-4.9199, 33.0689], [-4.9456, 33.0646], [-5.0027, 33.076], [-5.0242, 33.0546], [-5.0413, 33.006], [-5.0513, 32.9675], [-5.0627, 32.9461], [-5.0813, 32.9332], [-5.1127, 32.9347], [-5.1384, 32.9432], [-5.1683, 32.9447], [-5.1869, 32.9347], [-5.2326, 32.8818], [-5.2347, 32.8819], [-5.2315, 32.885], [-5.2443, 32.9206], [-5.2715, 32.9463], [-5.32, 33.002], [-5.3114, 33.0774], [-5.2914, 33.1188], [-5.4114, 33.116], [-5.4556, 33.1788], [-5.4756, 33.2002], [-5.5142, 33.2402], [-5.4999, 33.3201], [-5.5484, 33.3529], [-5.5955, 33.3687], [-5.6598, 33.3787], [-5.7098, 33.3972], [-5.7611, 33.4286], [-5.7781, 33.431], [-5.7851, 33.4281], [-5.8099, 33.4643], [-5.8121, 33.4663], [-5.8118, 33.4681], [-5.7869, 33.4831], [-5.768, 33.4848], [-5.7494, 33.5048], [-5.7395, 33.5433], [-5.7494, 33.5776], [-5.7653, 33.6041], [-5.7593, 33.6235], [-5.7547, 33.6622], [-5.7366, 33.6761], [-5.718, 33.7103], [-5.6938, 33.7589], [-5.698, 33.776], [-5.7252, 33.8031], [-5.7566, 33.8203], [-5.7666, 33.8417], [-5.7423, 33.8731], [-5.7052, 33.9131], [-5.6852, 33.9459], [-5.7195, 33.9759], [-5.7273, 33.9803], [-5.7395, 33.9759], [-5.7794, 33.9887], [-5.8394, 34.0102], [-5.8694, 34.0387], [-5.8951, 34.0716], [-5.906, 34.0966], [-5.8752, 34.1374], [-5.8537, 34.1638], [-5.8365, 34.188], [-5.8037, 34.2023], [-5.7418, 34.1845], [-5.7355, 34.1693], [-5.713, 34.1635], [-5.7017, 34.1668], [-5.6895, 34.1538], [-5.6809, 34.1409], [-5.6923, 34.0881], [-5.6738, 34.081], [-5.6281, 34.0681], [-5.561, 34.0738], [-5.5253, 34.0938], [-5.4853, 34.1024], [-5.4539, 34.1181], [-5.4296, 34.1395], [-5.4196, 34.1781], [-5.4139, 34.208], [-5.4139, 34.2303], [-5.4239, 34.248], [-5.4503, 34.2694], [-5.4895, 34.308], [-5.5117, 34.3308], [-5.5188, 34.353], [-5.5167, 34.3694], [-5.5052, 34.3715], [-5.4883, 34.3803], [-5.4703, 34.3658], [-5.4317, 34.373], [-5.4103, 34.3815], [-5.3618, 34.3858], [-5.3375, 34.4029], [-5.3212, 34.452], [-5.3189, 34.4586], [-5.2989, 34.4758], [-5.2761, 34.4872], [-5.2376, 34.4886], [-5.2076, 34.5072], [-5.1662, 34.5129], [-5.1533, 34.5371], [-5.1569, 34.5882], [-5.1723, 34.5944], [-5.1735, 34.6058], [-5.1653, 34.6321], [-5.1586, 34.6616], [-5.1584, 34.6975], [-5.1467, 34.7299], [-5.1198, 34.7555], [-5.0128, 34.7528], [-4.9386, 34.7585], [-4.8872, 34.7833], [-4.88, 34.8009], [-4.8691, 34.8036], [-4.8416, 34.8175], [-4.8239, 34.8197], [-4.8072, 34.8137], [-4.7806, 34.8004], [-4.7711, 34.7757], [-4.7596, 34.7509], [-4.752, 34.7148], [-4.7197, 34.6938], [-4.6721, 34.6862], [-4.6302, 34.6824], [-4.5921, 34.6672], [-4.5674, 34.6557], [-4.4817, 34.6481], [-4.4475, 34.6348], [-4.3904, 34.6481], [-4.337, 34.671], [-4.3009, 34.7071], [-4.2838, 34.7433], [-4.2533, 34.77], [-4.2324, 34.7623], [-4.2209, 34.7395], [-4.2038, 34.7224], [-4.1524, 34.7109], [-4.1143, 34.7243], [-4.0858, 34.749], [-4.0706, 34.7814], [-4.0458, 34.808], [-4.0039, 34.808], [-3.943, 34.8099], [-3.8802, 34.8232], [-3.8612, 34.8309], [-3.8421, 34.8461], [-3.8117, 34.8575], [-3.7793, 34.8632], [-3.7768, 34.8669], [-3.7705, 34.8647], [-3.7548, 34.8692], [-3.7338, 34.8708], [-3.7261, 34.8693], [-3.7229, 34.8634], [-3.7383, 34.8525], [-3.7299, 34.8425], [-3.7214, 34.8434], [-3.7142, 34.8475], [-3.7014, 34.8433], [-3.6904, 34.8441], [-3.6852, 34.8483], [-3.6767, 34.8479], [-3.6525, 34.8364], [-3.6361, 34.8265], [-3.6201, 34.827], [-3.6094, 34.831], [-3.593, 34.8311], [-3.5847, 34.8275], [-3.5816, 34.8205], [-3.5929, 34.8062], [-3.5924, 34.7985], [-3.5811, 34.7872], [-3.5849, 34.7572], [-3.5993, 34.7398], [-3.6086, 34.7236], [-3.6063, 34.7158], [-3.5993, 34.7105], [-3.5823, 34.7053], [-3.5743, 34.6999], [-3.5727, 34.6882], [-3.5792, 34.6835], [-3.5882, 34.6821], [-3.6171, 34.6838], [-3.6256, 34.6824], [-3.6321, 34.6768], [-3.6321, 34.6661], [-3.6368, 34.6245], [-3.6856, 34.6162], [-3.7225, 34.609], [-3.7415, 34.5817], [-3.7368, 34.4675], [-3.7534, 34.4508], [-3.7891, 34.4461], [-3.8296, 34.4353], [-3.8379, 34.4032], [-3.826, 34.3556], [-3.8213, 34.3069], [-3.8688, 34.3045], [-3.9033, 34.2961], [-3.9152, 34.2783], [-3.9081, 34.245], [-3.8736, 34.2164], [-3.8343, 34.2022], [-3.8034, 34.1677], [-3.801, 34.0832], [-3.8165, 34.0144], [-3.8593, 33.9228], [-3.8807, 33.8788], [-3.9117, 33.8395], [-3.9366, 33.8145], [-3.9557, 33.8038], [-3.97, 33.7908], [-3.9509, 33.7658], [-3.9533, 33.7348], [-3.9664, 33.711], [-3.9938, 33.7063], [-4.0199, 33.6956], [-4.0497, 33.6861], [-4.081, 33.6707], [-4.083, 33.6574], [-4.0932, 33.6413], [-4.1141, 33.621], [-4.1184, 33.6125], [-4.1122, 33.6032], [-4.0937, 33.5893], [-4.0825, 33.5475], [-4.0575, 33.538], [-4.0159, 33.5332], [-3.9945, 33.5142], [-3.9707, 33.4975], [-3.9385, 33.4987], [-3.9207, 33.5213], [-3.8981, 33.5439], [-3.8779, 33.5475], [-3.8553, 33.5225], [-3.8398, 33.4832], [-3.8232, 33.4666], [-3.8005, 33.4892], [-3.7708, 33.5249], [-3.7422, 33.5534], [-3.7363, 33.5665], [-3.772, 33.5701], [-3.8005, 33.5784], [-3.816, 33.5951], [-3.8101, 33.6189], [-3.7886, 33.6557], [-3.7458, 33.6772], [-3.6994, 33.7081], [-3.6471, 33.7509], [-3.5971, 33.8128], [-3.5388, 33.8711], [-3.5067, 33.8961], [-3.4969, 33.9057], [-3.4781, 33.9092], [-3.4567, 33.8913], [-3.4329, 33.8854], [-3.3901, 33.8711], [-3.3687, 33.8413], [-3.3601, 33.8178], [-3.3437, 33.7997], [-3.3128, 33.7878], [-3.2438, 33.783], [-3.2404, 33.7857], [-3.1533, 33.7747], [-3.1181, 33.7736], [-3.0855, 33.7676], [-3.0332, 33.764], [-3.0201, 33.7426], [-3.0248, 33.72], [-3.0689, 33.6831], [-3.0962, 33.6546], [-3.195, 33.582], [-3.2354, 33.5594], [-3.255, 33.5437], [-3.2573, 33.5381], [-3.2577, 33.5176], [-3.2548, 33.5045], [-3.247, 33.4934], [-3.2382, 33.4846], [-3.2308, 33.481], [-3.1631, 33.4801], [-3.1193, 33.4687], [-3.0736, 33.4383], [-3.0337, 33.4002], [-2.9803, 33.3431], [-2.9194, 33.265], [-2.8642, 33.2117], [-2.8414, 33.1737], [-2.9328, 33.1718], [-2.9765, 33.1622], [-3.0356, 33.1089], [-3.1136, 33.1108], [-3.1695, 33.1104], [-3.189, 33.1048], [-3.2203, 33.0944], [-3.2487, 33.0876], [-3.2797, 33.0835], [-3.3194, 33.0812], [-3.3519, 33.0808], [-3.3851, 33.0859], [-3.4114, 33.0879], [-3.4468, 33.0935], [-3.4825, 33.0923], [-3.5499, 33.0946], [-3.5802, 33.0917], [-3.5965, 33.0924], [-3.6142, 33.0728], [-3.6466, 33.0442], [-3.6771, 33.0271], [-3.698, 32.9681], [-3.7456, 32.93], [-3.7799, 32.9129], [-3.8065, 32.8786], [-3.8465, 32.8405], [-3.8693, 32.8063], [-3.8845, 32.7549], [-3.8998, 32.7149], [-3.934, 32.6864], [-3.9626, 32.6692], [-3.9778, 32.6369], [-3.9911, 32.6064], [-3.9981, 32.6029]]] }, \"properties\": { \"name\": \"Fès- Meknès\", \"id\": \"MA-03\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-03\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-3.1117, 31.6971], [-3.2502, 31.6956], [-3.2626, 31.7097], [-3.2698, 31.7388], [-3.2197, 31.7638], [-3.184, 31.7787], [-3.1156, 31.8174], [-3.1959, 31.856], [-3.2197, 31.9215], [-3.2525, 32.0166], [-3.2525, 32.0494], [-3.2197, 32.1326], [-3.1811, 32.1951], [-3.2701, 32.1486], [-3.2713, 32.1489], [-3.303, 32.1326], [-3.3595, 32.1237], [-3.425, 32.1356], [-3.4666, 32.1505], [-3.4836, 32.1778], [-3.4988, 32.1785], [-3.541, 32.1837], [-3.5545, 32.1845], [-3.5826, 32.1564], [-3.6302, 32.1207], [-3.6748, 32.1089], [-3.6599, 32.1445], [-3.6481, 32.1751], [-3.6685, 32.1768], [-3.6848, 32.1851], [-3.6956, 32.1832], [-3.764, 32.1951], [-3.7819, 32.2338], [-3.7857, 32.2949], [-3.7938, 32.3765], [-3.8235, 32.4182], [-3.8741, 32.4331], [-3.8931, 32.4331], [-3.8949, 32.4366], [-3.9336, 32.4479], [-3.9603, 32.4658], [-3.9514, 32.4806], [-3.9399, 32.489], [-3.9247, 32.4866], [-3.9098, 32.5371], [-3.9455, 32.5699], [-3.9783, 32.5777], [-3.9861, 32.5908], [-3.9981, 32.6029], [-3.9911, 32.6064], [-3.9778, 32.6369], [-3.9626, 32.6692], [-3.934, 32.6864], [-3.8998, 32.7149], [-3.8845, 32.7549], [-3.8693, 32.8063], [-3.8465, 32.8405], [-3.8065, 32.8786], [-3.7799, 32.9129], [-3.7456, 32.93], [-3.698, 32.9681], [-3.6771, 33.0271], [-3.6466, 33.0442], [-3.6142, 33.0728], [-3.5965, 33.0924], [-3.5802, 33.0917], [-3.5499, 33.0946], [-3.4825, 33.0923], [-3.4468, 33.0935], [-3.4114, 33.0879], [-3.3851, 33.0859], [-3.3519, 33.0808], [-3.3194, 33.0812], [-3.2797, 33.0835], [-3.2487, 33.0876], [-3.2203, 33.0944], [-3.189, 33.1048], [-3.1695, 33.1104], [-3.1136, 33.1108], [-3.0356, 33.1089], [-2.9765, 33.1622], [-2.9328, 33.1718], [-2.8414, 33.1737], [-2.8642, 33.2117], [-2.9194, 33.265], [-2.9803, 33.3431], [-3.0337, 33.4002], [-3.0736, 33.4383], [-3.1193, 33.4687], [-3.1631, 33.4801], [-3.2308, 33.481], [-3.2382, 33.4846], [-3.247, 33.4934], [-3.2548, 33.5045], [-3.2577, 33.5176], [-3.2573, 33.5381], [-3.255, 33.5437], [-3.2354, 33.5594], [-3.195, 33.582], [-3.0962, 33.6546], [-3.0689, 33.6831], [-3.0248, 33.72], [-3.0201, 33.7426], [-3.0332, 33.764], [-3.0855, 33.7676], [-3.1181, 33.7736], [-3.1533, 33.7747], [-3.2404, 33.7857], [-3.2438, 33.783], [-3.3128, 33.7878], [-3.3437, 33.7997], [-3.3601, 33.8178], [-3.3687, 33.8413], [-3.3901, 33.8711], [-3.4329, 33.8854], [-3.4567, 33.8913], [-3.4781, 33.9092], [-3.4969, 33.9057], [-3.5067, 33.8961], [-3.5388, 33.8711], [-3.5971, 33.8128], [-3.6471, 33.7509], [-3.6994, 33.7081], [-3.7458, 33.6772], [-3.7886, 33.6557], [-3.8101, 33.6189], [-3.816, 33.5951], [-3.8005, 33.5784], [-3.772, 33.5701], [-3.7363, 33.5665], [-3.7422, 33.5534], [-3.7708, 33.5249], [-3.8005, 33.4892], [-3.8232, 33.4666], [-3.8398, 33.4832], [-3.8553, 33.5225], [-3.8779, 33.5475], [-3.8981, 33.5439], [-3.9207, 33.5213], [-3.9385, 33.4987], [-3.9707, 33.4975], [-3.9945, 33.5142], [-4.0159, 33.5332], [-4.0575, 33.538], [-4.0825, 33.5475], [-4.0937, 33.5893], [-4.1122, 33.6032], [-4.1184, 33.6125], [-4.1141, 33.621], [-4.0932, 33.6413], [-4.083, 33.6574], [-4.081, 33.6707], [-4.0497, 33.6861], [-4.0199, 33.6956], [-3.9938, 33.7063], [-3.9664, 33.711], [-3.9533, 33.7348], [-3.9509, 33.7658], [-3.97, 33.7908], [-3.9557, 33.8038], [-3.9366, 33.8145], [-3.9117, 33.8395], [-3.8807, 33.8788], [-3.8593, 33.9228], [-3.8165, 34.0144], [-3.801, 34.0832], [-3.8034, 34.1677], [-3.8343, 34.2022], [-3.8736, 34.2164], [-3.9081, 34.245], [-3.9152, 34.2783], [-3.9033, 34.2961], [-3.8688, 34.3045], [-3.8213, 34.3069], [-3.826, 34.3556], [-3.8379, 34.4032], [-3.8296, 34.4353], [-3.7891, 34.4461], [-3.7534, 34.4508], [-3.7368, 34.4675], [-3.7415, 34.5817], [-3.7225, 34.609], [-3.6856, 34.6162], [-3.6368, 34.6245], [-3.6321, 34.6661], [-3.6321, 34.6768], [-3.6256, 34.6824], [-3.6171, 34.6838], [-3.5882, 34.6821], [-3.5792, 34.6835], [-3.5727, 34.6882], [-3.5743, 34.6999], [-3.5823, 34.7053], [-3.5993, 34.7105], [-3.6063, 34.7158], [-3.6086, 34.7236], [-3.5993, 34.7398], [-3.5849, 34.7572], [-3.5811, 34.7872], [-3.5924, 34.7985], [-3.5929, 34.8062], [-3.5816, 34.8205], [-3.5847, 34.8275], [-3.593, 34.8311], [-3.6094, 34.831], [-3.6201, 34.827], [-3.6361, 34.8265], [-3.6525, 34.8364], [-3.6767, 34.8479], [-3.6852, 34.8483], [-3.6904, 34.8441], [-3.7014, 34.8433], [-3.7142, 34.8475], [-3.7214, 34.8434], [-3.7299, 34.8425], [-3.7383, 34.8525], [-3.7229, 34.8634], [-3.7261, 34.8693], [-3.7338, 34.8708], [-3.7548, 34.8692], [-3.7705, 34.8647], [-3.7808, 34.8683], [-3.7828, 34.8869], [-3.797, 34.8934], [-3.7991, 34.9059], [-3.796, 34.9363], [-3.7996, 34.9478], [-3.799, 34.9591], [-3.7926, 34.9995], [-3.7932, 35.0142], [-3.8012, 35.0235], [-3.7991, 35.037], [-3.8014, 35.0755], [-3.8036, 35.088], [-3.811, 35.1109], [-3.8105, 35.1221], [-3.8025, 35.1466], [-3.7986, 35.1633], [-3.7976, 35.1746], [-3.8058, 35.2029], [-3.8015, 35.2037], [-3.7801, 35.2143], [-3.7718, 35.2221], [-3.7654, 35.2313], [-3.7621, 35.2446], [-3.7607, 35.2576], [-3.756, 35.2685], [-3.7504, 35.2749], [-3.739, 35.2754], [-3.7351, 35.2812], [-3.7196, 35.286], [-3.7154, 35.2835], [-3.7085, 35.2885], [-3.6849, 35.2843], [-3.6782, 35.2863], [-3.6746, 35.2774], [-3.6657, 35.2685], [-3.6513, 35.2615], [-3.6493, 35.2585], [-3.6368, 35.2543], [-3.6301, 35.2482], [-3.6229, 35.2474], [-3.616, 35.2404], [-3.5907, 35.2268], [-3.5699, 35.2201], [-3.559, 35.2213], [-3.5363, 35.2174], [-3.5204, 35.2093], [-3.4907, 35.199], [-3.4735, 35.1985], [-3.4518, 35.2063], [-3.446, 35.1985], [-3.4282, 35.1926], [-3.4026, 35.1924], [-3.389, 35.1896], [-3.3574, 35.189], [-3.349, 35.186], [-3.3382, 35.1857], [-3.3248, 35.1896], [-3.3124, 35.1974], [-3.3049, 35.2049], [-3.2773, 35.2113], [-3.259, 35.2129], [-3.251, 35.2176], [-3.2362, 35.2221], [-3.2276, 35.2215], [-3.2187, 35.2276], [-3.2093, 35.2276], [-3.2012, 35.2232], [-3.1832, 35.2318], [-3.1699, 35.2404], [-3.1574, 35.2524], [-3.1421, 35.2704], [-3.1429, 35.274], [-3.1346, 35.2799], [-3.1346, 35.2851], [-3.124, 35.2835], [-3.121, 35.2779], [-3.106, 35.2718], [-3.0829, 35.2807], [-3.0665, 35.2965], [-3.0398, 35.3329], [-3.0293, 35.3535], [-3.0099, 35.3837], [-3.0118, 35.3932], [-3.0035, 35.3982], [-3.0101, 35.4013], [-3.006, 35.4101], [-2.996, 35.4174], [-2.9943, 35.4351], [-2.9832, 35.434], [-2.9768, 35.4396], [-2.971, 35.436], [-2.9537, 35.4349], [-2.9496, 35.4243], [-2.9604, 35.419], [-2.9643, 35.4093], [-2.959, 35.4043], [-2.9582, 35.3976], [-2.9637, 35.3901], [-2.9588, 35.3843], [-2.9651, 35.3787], [-2.9651, 35.3729], [-2.9707, 35.3671], [-2.971, 35.3615], [-2.9629, 35.3574], [-2.9612, 35.3504], [-2.956, 35.3468], [-2.961, 35.3296], [-2.954, 35.324], [-2.9604, 35.3112], [-2.9626, 35.3], [-2.9603, 35.2909], [-2.9517, 35.2828], [-2.9368, 35.2804], [-2.9215, 35.2629], [-2.8915, 35.2343], [-2.8693, 35.2151], [-2.876, 35.2115], [-2.8793, 35.2213], [-2.8932, 35.2332], [-2.9004, 35.2337], [-2.9046, 35.2438], [-2.9151, 35.2457], [-2.9149, 35.2512], [-2.9229, 35.2554], [-2.9293, 35.2507], [-2.9313, 35.2388], [-2.9251, 35.2318], [-2.924, 35.2243], [-2.9193, 35.2187], [-2.9057, 35.2179], [-2.899, 35.2096], [-2.9035, 35.2049], [-2.9101, 35.206], [-2.9251, 35.1979], [-2.9271, 35.1913], [-2.924, 35.1829], [-2.9118, 35.166], [-2.9035, 35.1604], [-2.9029, 35.1485], [-2.8876, 35.1357], [-2.866, 35.1246], [-2.8593, 35.124], [-2.8293, 35.1079], [-2.8118, 35.1026], [-2.7876, 35.1032], [-2.7635, 35.0985], [-2.751, 35.1004], [-2.746, 35.1115], [-2.7562, 35.1232], [-2.7682, 35.1274], [-2.7754, 35.1368], [-2.784, 35.1387], [-2.7893, 35.1518], [-2.7993, 35.1557], [-2.8129, 35.1646], [-2.8163, 35.1699], [-2.8246, 35.1751], [-2.8196, 35.1782], [-2.8088, 35.1685], [-2.7893, 35.1554], [-2.7837, 35.149], [-2.7677, 35.1363], [-2.7399, 35.121], [-2.7221, 35.1179], [-2.7174, 35.1132], [-2.7026, 35.1082], [-2.6982, 35.1046], [-2.6818, 35.0987], [-2.6682, 35.0985], [-2.664, 35.0951], [-2.6468, 35.0901], [-2.6246, 35.0865], [-2.606, 35.0857], [-2.5976, 35.0874], [-2.5926, 35.0849], [-2.5807, 35.0843], [-2.566, 35.0812], [-2.556, 35.0838], [-2.5437, 35.084], [-2.5204, 35.089], [-2.5065, 35.0943], [-2.5007, 35.0996], [-2.4946, 35.0996], [-2.4815, 35.1043], [-2.4685, 35.1151], [-2.4526, 35.1246], [-2.4401, 35.1363], [-2.4257, 35.1476], [-2.4199, 35.1407], [-2.4063, 35.136], [-2.3546, 35.1246], [-2.3388, 35.1232], [-2.3157, 35.1168], [-2.2949, 35.1096], [-2.274, 35.1007], [-2.2371, 35.0896], [-2.2119, 35.0843], [-2.2111, 35.062], [-2.2153, 35.0473], [-2.1864, 35.0318], [-2.1813, 35.0203], [-2.1692, 35.0104], [-2.1573, 35.0086], [-2.1452, 35.0003], [-2.1293, 34.998], [-2.123, 34.9946], [-2.1203, 34.9827], [-2.1087, 34.976], [-2.1083, 34.9726], [-2.0961, 34.9645], [-2.0889, 34.9553], [-2.0379, 34.9254], [-2.017, 34.9286], [-2.0138, 34.9316], [-2.0006, 34.9296], [-1.9719, 34.9338], [-1.9718, 34.9163], [-1.9697, 34.9076], [-1.9718, 34.9036], [-1.972, 34.8883], [-1.9673, 34.8769], [-1.9487, 34.871], [-1.9385, 34.8626], [-1.9212, 34.857], [-1.8918, 34.8422], [-1.8879, 34.8283], [-1.8865, 34.808], [-1.8569, 34.8032], [-1.8377, 34.7883], [-1.8191, 34.7824], [-1.7966, 34.7725], [-1.7874, 34.7664], [-1.7807, 34.7648], [-1.7623, 34.7561], [-1.751, 34.7528], [-1.7426, 34.7421], [-1.7593, 34.7326], [-1.7702, 34.7249], [-1.77, 34.7137], [-1.7739, 34.6994], [-1.7877, 34.6885], [-1.8022, 34.6686], [-1.8111, 34.6614], [-1.8317, 34.6343], [-1.8333, 34.6302], [-1.8502, 34.6172], [-1.8365, 34.6187], [-1.8319, 34.614], [-1.8217, 34.6116], [-1.8137, 34.6059], [-1.809, 34.5954], [-1.7976, 34.5864], [-1.7948, 34.5785], [-1.7874, 34.5723], [-1.7859, 34.5651], [-1.7759, 34.5514], [-1.769, 34.5484], [-1.7619, 34.5401], [-1.7626, 34.5322], [-1.7532, 34.53], [-1.7507, 34.52], [-1.7461, 34.5148], [-1.733, 34.5073], [-1.7223, 34.5081], [-1.7072, 34.5], [-1.6932, 34.4973], [-1.6888, 34.4905], [-1.7091, 34.4691], [-1.7764, 34.3972], [-1.7812, 34.3915], [-1.7673, 34.3724], [-1.7517, 34.3624], [-1.7308, 34.3442], [-1.7214, 34.3303], [-1.7041, 34.3093], [-1.7041, 34.3044], [-1.7098, 34.2904], [-1.7066, 34.2731], [-1.7132, 34.2534], [-1.7118, 34.2388], [-1.7048, 34.2222], [-1.6747, 34.1627], [-1.6476, 34.1067], [-1.6511, 34.0934], [-1.6691, 34.0002], [-1.699, 33.8703], [-1.6855, 33.8272], [-1.6703, 33.7728], [-1.7285, 33.7353], [-1.7371, 33.7003], [-1.7104, 33.688], [-1.7063, 33.6783], [-1.687, 33.6764], [-1.6653, 33.6828], [-1.6528, 33.6824], [-1.6449, 33.6716], [-1.6429, 33.6602], [-1.6356, 33.6413], [-1.6303, 33.6311], [-1.624, 33.6247], [-1.6072, 33.6194], [-1.5985, 33.6151], [-1.5951, 33.6052], [-1.6, 33.5931], [-1.5969, 33.5869], [-1.6019, 33.5761], [-1.5937, 33.5742], [-1.5974, 33.5599], [-1.6035, 33.5573], [-1.5979, 33.5413], [-1.5882, 33.5303], [-1.5963, 33.5208], [-1.601, 33.5094], [-1.6053, 33.5042], [-1.6207, 33.4918], [-1.6224, 33.4782], [-1.6187, 33.4763], [-1.6242, 33.4646], [-1.6233, 33.4537], [-1.6323, 33.4318], [-1.6453, 33.4241], [-1.6492, 33.4087], [-1.6634, 33.38], [-1.6643, 33.3546], [-1.6598, 33.3372], [-1.6626, 33.3304], [-1.6631, 33.3179], [-1.6609, 33.3033], [-1.6707, 33.2846], [-1.6678, 33.2754], [-1.658, 33.2578], [-1.6453, 33.2494], [-1.6371, 33.2344], [-1.6266, 33.2209], [-1.6091, 33.2138], [-1.6013, 33.2047], [-1.6009, 33.1982], [-1.59, 33.1843], [-1.5798, 33.1669], [-1.5756, 33.157], [-1.575, 33.1485], [-1.5658, 33.1422], [-1.55, 33.1266], [-1.5381, 33.1173], [-1.5336, 33.1072], [-1.5136, 33.0936], [-1.4984, 33.0904], [-1.4744, 33.0762], [-1.4673, 33.0621], [-1.4607, 33.0418], [-1.4757, 33.0213], [-1.4761, 33.0137], [-1.4712, 33.0033], [-1.4849, 32.975], [-1.4954, 32.9667], [-1.5095, 32.9691], [-1.5365, 32.9582], [-1.5427, 32.9574], [-1.4972, 32.8984], [-1.3812, 32.7393], [-1.2701, 32.6955], [-1.0439, 32.547], [-1.0139, 32.5264], [-0.9992, 32.5192], [-0.9974, 32.5127], [-1.0008, 32.5056], [-1.0204, 32.4966], [-1.046, 32.4765], [-1.0499, 32.468], [-1.0585, 32.463], [-1.0671, 32.4498], [-1.0785, 32.4425], [-1.0879, 32.4396], [-1.1028, 32.4317], [-1.1101, 32.422], [-1.116, 32.4224], [-1.1214, 32.4144], [-1.1381, 32.4151], [-1.1509, 32.4179], [-1.1767, 32.4124], [-1.1988, 32.4036], [-1.209, 32.3918], [-1.2063, 32.387], [-1.2111, 32.3701], [-1.2171, 32.3603], [-1.2214, 32.3471], [-1.2334, 32.3357], [-1.2496, 32.327], [-1.2474, 32.3191], [-1.2357, 32.31], [-1.2372, 32.3048], [-1.2357, 32.2923], [-1.2413, 32.2749], [-1.2432, 32.2589], [-1.2464, 32.2537], [-1.2475, 32.2407], [-1.2432, 32.2252], [-1.2423, 32.2054], [-1.2633, 32.1944], [-1.2739, 32.1869], [-1.2807, 32.1798], [-1.2973, 32.1715], [-1.2977, 32.1625], [-1.288, 32.1589], [-1.2753, 32.1634], [-1.2639, 32.1616], [-1.2551, 32.1665], [-1.249, 32.1651], [-1.2361, 32.1686], [-1.2318, 32.1736], [-1.2162, 32.1754], [-1.1909, 32.1684], [-1.1821, 32.1632], [-1.1789, 32.1584], [-1.1713, 32.1356], [-1.165, 32.1304], [-1.1552, 32.1281], [-1.1574, 32.1207], [-1.1558, 32.1105], [-1.1672, 32.1103], [-1.1734, 32.105], [-1.1862, 32.1024], [-1.1969, 32.0956], [-1.2051, 32.0848], [-1.2332, 32.0798], [-1.241, 32.0769], [-1.2546, 32.0762], [-1.2631, 32.0789], [-1.2716, 32.0864], [-1.3143, 32.0826], [-1.3372, 32.0828], [-1.3512, 32.0899], [-1.3645, 32.0911], [-1.3813, 32.086], [-1.4223, 32.0878], [-1.4488, 32.0929], [-1.4855, 32.0956], [-1.4971, 32.1026], [-1.5078, 32.1033], [-1.5333, 32.0981], [-1.5646, 32.093], [-1.5793, 32.0918], [-1.6167, 32.101], [-1.6751, 32.0968], [-1.7608, 32.0968], [-1.8312, 32.1063], [-1.9073, 32.1235], [-1.9492, 32.1311], [-1.993, 32.1501], [-2.0292, 32.152], [-2.0539, 32.1368], [-2.0882, 32.112], [-2.0977, 32.0759], [-2.1167, 32.0568], [-2.1567, 32.0587], [-2.2005, 32.0645], [-2.2405, 32.0587], [-2.2557, 32.034], [-2.2671, 32.0035], [-2.2881, 32.0169], [-2.3052, 32.034], [-2.3261, 32.0625], [-2.3547, 32.093], [-2.3851, 32.112], [-2.4213, 32.1235], [-2.4651, 32.1254], [-2.5146, 32.1082], [-2.5355, 32.0854], [-2.5755, 32.0664], [-2.6136, 32.0568], [-2.6516, 32.0683], [-2.6973, 32.0797], [-2.7659, 32.0721], [-2.802, 32.0568], [-2.8344, 32.0378], [-2.8686, 32.0093], [-2.8686, 31.9921], [-2.8572, 31.9788], [-2.8249, 31.9693], [-2.8134, 31.9426], [-2.8211, 31.9217], [-2.8363, 31.9141], [-2.8439, 31.9026], [-2.8249, 31.8608], [-2.8192, 31.8265], [-2.8172, 31.7904], [-2.8344, 31.7713], [-2.8724, 31.7542], [-2.8991, 31.7256], [-2.941, 31.7085], [-2.9905, 31.7066], [-3.0304, 31.7142], [-3.0799, 31.7066], [-3.0982, 31.709], [-3.1117, 31.6971]]] }, \"properties\": { \"name\": \"L'Oriental\", \"id\": \"MA-02\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-02\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-3.8058, 35.2029], [-3.7976, 35.1746], [-3.7986, 35.1633], [-3.8025, 35.1466], [-3.8105, 35.1221], [-3.811, 35.1109], [-3.8036, 35.088], [-3.8014, 35.0755], [-3.7991, 35.037], [-3.8012, 35.0235], [-3.7932, 35.0142], [-3.7926, 34.9995], [-3.799, 34.9591], [-3.7996, 34.9478], [-3.796, 34.9363], [-3.7991, 34.9059], [-3.797, 34.8934], [-3.7828, 34.8869], [-3.7808, 34.8683], [-3.7768, 34.8669], [-3.7793, 34.8632], [-3.8117, 34.8575], [-3.8421, 34.8461], [-3.8612, 34.8309], [-3.8802, 34.8232], [-3.943, 34.8099], [-4.0039, 34.808], [-4.0458, 34.808], [-4.0706, 34.7814], [-4.0858, 34.749], [-4.1143, 34.7243], [-4.1524, 34.7109], [-4.2038, 34.7224], [-4.2209, 34.7395], [-4.2324, 34.7623], [-4.2533, 34.77], [-4.2838, 34.7433], [-4.3009, 34.7071], [-4.337, 34.671], [-4.3904, 34.6481], [-4.4475, 34.6348], [-4.4817, 34.6481], [-4.5674, 34.6557], [-4.5921, 34.6672], [-4.6302, 34.6824], [-4.6721, 34.6862], [-4.7197, 34.6938], [-4.752, 34.7148], [-4.7596, 34.7509], [-4.7711, 34.7757], [-4.7806, 34.8004], [-4.8072, 34.8137], [-4.8239, 34.8197], [-4.8416, 34.8175], [-4.8691, 34.8036], [-4.88, 34.8009], [-4.8872, 34.7833], [-4.9386, 34.7585], [-5.0128, 34.7528], [-5.1198, 34.7555], [-5.1467, 34.7299], [-5.1584, 34.6975], [-5.1586, 34.6616], [-5.1653, 34.6321], [-5.1735, 34.6058], [-5.1723, 34.5944], [-5.1569, 34.5882], [-5.1533, 34.5371], [-5.1662, 34.5129], [-5.2076, 34.5072], [-5.2376, 34.4886], [-5.2761, 34.4872], [-5.2989, 34.4758], [-5.3189, 34.4586], [-5.3212, 34.452], [-5.3249, 34.4674], [-5.3455, 34.476], [-5.3723, 34.4956], [-5.399, 34.5081], [-5.4044, 34.5384], [-5.4044, 34.5795], [-5.4311, 34.608], [-5.4561, 34.6187], [-5.4865, 34.6384], [-5.5097, 34.658], [-5.5525, 34.6794], [-5.5775, 34.6866], [-5.5953, 34.7062], [-5.6257, 34.7205], [-5.6453, 34.7187], [-5.656, 34.6919], [-5.6738, 34.6687], [-5.706, 34.6758], [-5.722, 34.6883], [-5.7363, 34.7133], [-5.747, 34.7419], [-5.7506, 34.7936], [-5.7488, 34.8579], [-5.7506, 34.8971], [-5.7671, 34.9122], [-5.7771, 34.9156], [-5.794, 34.914], [-5.8118, 34.9175], [-5.8164, 34.9248], [-5.8594, 34.915], [-5.9183, 34.9221], [-5.954, 34.94], [-5.9689, 34.9642], [-6.0101, 34.9686], [-6.0608, 34.9758], [-6.0881, 34.9826], [-6.1234, 34.979], [-6.1547, 34.9794], [-6.1859, 34.9821], [-6.2214, 34.9871], [-6.2502, 34.987], [-6.2443, 34.9988], [-6.2332, 35.0265], [-6.229, 35.0413], [-6.2232, 35.0529], [-6.2232, 35.0582], [-6.2126, 35.0926], [-6.2085, 35.099], [-6.2038, 35.1129], [-6.1915, 35.1363], [-6.1785, 35.1674], [-6.1771, 35.1749], [-6.1699, 35.1937], [-6.1579, 35.1971], [-6.1501, 35.2035], [-6.1415, 35.2243], [-6.1421, 35.2282], [-6.1343, 35.2418], [-6.1304, 35.2559], [-6.1268, 35.2613], [-6.121, 35.2804], [-6.114, 35.2935], [-6.1074, 35.3124], [-6.1057, 35.3224], [-6.0921, 35.3588], [-6.0818, 35.3885], [-6.0815, 35.3957], [-6.0679, 35.4118], [-6.061, 35.4262], [-6.059, 35.4371], [-6.0515, 35.4551], [-6.0474, 35.461], [-6.0287, 35.4726], [-6.0265, 35.4821], [-6.0198, 35.4943], [-6.0132, 35.5118], [-6.014, 35.5168], [-6.0082, 35.526], [-6.0079, 35.5343], [-6.004, 35.5529], [-5.999, 35.5649], [-5.9912, 35.5715], [-5.996, 35.5771], [-5.9846, 35.6138], [-5.9832, 35.6249], [-5.9768, 35.639], [-5.9743, 35.6526], [-5.969, 35.6707], [-5.9604, 35.6949], [-5.9554, 35.7046], [-5.9546, 35.7115], [-5.9349, 35.7687], [-5.9346, 35.7757], [-5.9301, 35.7885], [-5.9071, 35.8012], [-5.8829, 35.7996], [-5.8782, 35.7979], [-5.8412, 35.7982], [-5.8207, 35.7921], [-5.8071, 35.7903], [-5.7903, 35.7684], [-5.7475, 35.7523], [-5.6975, 35.763], [-5.6707, 35.788], [-5.6547, 35.8076], [-5.6011, 35.8041], [-5.569, 35.8005], [-5.5333, 35.8059], [-5.5066, 35.8308], [-5.4655, 35.8772], [-5.4298, 35.8897], [-5.3804, 35.8985], [-5.3352, 35.8969], [-5.321, 35.8808], [-5.296, 35.8772], [-5.2674, 35.8772], [-5.2496, 35.8665], [-5.2781, 35.8522], [-5.2835, 35.8183], [-5.3085, 35.7898], [-5.2983, 35.6856], [-5.2896, 35.6879], [-5.2738, 35.686], [-5.2796, 35.6757], [-5.2843, 35.6629], [-5.2796, 35.6449], [-5.2699, 35.6179], [-5.2674, 35.6063], [-5.2596, 35.5871], [-5.2526, 35.5796], [-5.2526, 35.5749], [-5.2465, 35.5593], [-5.2387, 35.5485], [-5.2335, 35.5468], [-5.2252, 35.5507], [-5.2204, 35.5418], [-5.2096, 35.5376], [-5.2001, 35.5418], [-5.1946, 35.5363], [-5.1846, 35.5368], [-5.1732, 35.5318], [-5.1696, 35.5235], [-5.1585, 35.5146], [-5.1554, 35.5074], [-5.1421, 35.4965], [-5.1313, 35.4935], [-5.121, 35.4868], [-5.111, 35.4771], [-5.1057, 35.4771], [-5.0957, 35.4601], [-5.0943, 35.4549], [-5.0863, 35.4446], [-5.0799, 35.4299], [-5.074, 35.4246], [-5.0643, 35.409], [-5.0582, 35.4054], [-5.0412, 35.4035], [-5.0301, 35.3993], [-5.0165, 35.4035], [-5.0124, 35.396], [-5.0012, 35.3882], [-4.9879, 35.374], [-4.9713, 35.3649], [-4.9613, 35.3524], [-4.9571, 35.3504], [-4.9413, 35.3351], [-4.939, 35.3285], [-4.9279, 35.3185], [-4.8974, 35.3051], [-4.8899, 35.3046], [-4.8787, 35.3001], [-4.8674, 35.3018], [-4.8537, 35.289], [-4.8463, 35.279], [-4.8407, 35.2768], [-4.8249, 35.2626], [-4.8124, 35.2565], [-4.7949, 35.2504], [-4.7826, 35.2379], [-4.7654, 35.2346], [-4.7476, 35.2237], [-4.7343, 35.2243], [-4.7251, 35.2179], [-4.7096, 35.2143], [-4.6985, 35.2093], [-4.6824, 35.2046], [-4.669, 35.2071], [-4.6649, 35.2121], [-4.6507, 35.2135], [-4.631, 35.1951], [-4.6137, 35.1893], [-4.5999, 35.1879], [-4.5924, 35.1918], [-4.564, 35.1868], [-4.5601, 35.1846], [-4.5376, 35.1799], [-4.5207, 35.1749], [-4.5076, 35.1774], [-4.4907, 35.1762], [-4.476, 35.1704], [-4.4668, 35.1646], [-4.4268, 35.154], [-4.4046, 35.1585], [-4.3915, 35.154], [-4.3824, 35.1529], [-4.3757, 35.149], [-4.359, 35.1485], [-4.346, 35.1515], [-4.3404, 35.1571], [-4.3254, 35.1582], [-4.3201, 35.1643], [-4.3063, 35.169], [-4.2899, 35.1724], [-4.2868, 35.181], [-4.2779, 35.179], [-4.2685, 35.1835], [-4.2524, 35.1882], [-4.2404, 35.1849], [-4.2179, 35.1849], [-4.214, 35.1896], [-4.2013, 35.1918], [-4.1907, 35.1979], [-4.1768, 35.1982], [-4.1651, 35.2018], [-4.1565, 35.1982], [-4.1346, 35.2001], [-4.1221, 35.206], [-4.114, 35.2049], [-4.0963, 35.2174], [-4.079, 35.2232], [-4.0648, 35.2246], [-4.0615, 35.229], [-4.0521, 35.2287], [-4.0399, 35.2357], [-4.0329, 35.234], [-4.0235, 35.2388], [-4.0093, 35.2324], [-3.996, 35.236], [-3.9799, 35.2365], [-3.9618, 35.2468], [-3.9501, 35.2518], [-3.9426, 35.2593], [-3.9271, 35.2621], [-3.9193, 35.259], [-3.916, 35.2526], [-3.9221, 35.2499], [-3.924, 35.2415], [-3.9215, 35.2321], [-3.914, 35.2257], [-3.9071, 35.214], [-3.8988, 35.2099], [-3.8793, 35.2035], [-3.8493, 35.1968], [-3.8329, 35.1974], [-3.8058, 35.2029]]] }, \"properties\": { \"name\": \"Tanger-Tétouan-Al Hoceïma\", \"id\": \"MA-01\", \"TYPE\": \"Region\", \"CNTRY\": \"Morooco\" }, \"id\": \"MA-01\" }\r\n    ] };\r\nexport default map;\r\n","var map = { \"type\": \"FeatureCollection\", \"features\": [\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.8992, 12.4518], [-69.9421, 12.4385], [-70.0662, 12.5469], [-69.9732, 12.5677], [-69.8992, 12.4518]]] }, \"properties\": { \"id\": \"AW\", \"name\": \"Aruba\" }, \"id\": \"AW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7161, 17.0368], [-61.8597, 17.0133], [-61.8173, 17.169], [-61.7161, 17.0368]]] }, \"properties\": { \"id\": \"AG\", \"name\": \"Antigua and Barbuda\" }, \"id\": \"AG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[74.8912, 37.2317], [74.5414, 37.0221], [74.0016, 36.8233], [73.7691, 36.8885], [72.623, 36.8295], [71.6207, 36.4367], [71.1852, 36.042], [71.4275, 35.8338], [71.6207, 35.1831], [70.9654, 34.5306], [71.0516, 34.0498], [69.8681, 33.8976], [70.2841, 33.3689], [69.9201, 33.1123], [69.5015, 33.02], [69.2414, 32.4336], [69.2791, 31.9369], [68.869, 31.6342], [68.2137, 31.8073], [67.5781, 31.5064], [67.2874, 31.2178], [66.9242, 31.3057], [66.3973, 30.9124], [66.1771, 29.8355], [65.0954, 29.5594], [64.521, 29.5643], [64.0988, 29.3921], [63.5675, 29.4982], [62.4765, 29.4085], [60.8433, 29.8586], [61.104, 30.1285], [61.7844, 30.8321], [61.6602, 31.3825], [60.8541, 31.4833], [60.8292, 32.2494], [60.5606, 33.1376], [60.9171, 33.5052], [60.5109, 33.6389], [60.4856, 34.0947], [61.0799, 34.8554], [61.262, 35.6194], [62.6105, 35.2333], [63.0567, 35.4459], [63.1086, 35.8187], [63.8622, 36.0123], [64.5107, 36.3408], [64.8162, 37.1322], [65.5549, 37.2512], [65.7648, 37.569], [66.5221, 37.3484], [67.069, 37.3347], [67.7592, 37.1721], [68.0678, 36.9498], [68.9604, 37.3248], [69.2649, 37.1083], [69.4921, 37.553], [70.2513, 37.664], [70.2148, 37.9246], [70.8789, 38.4563], [71.2557, 38.3067], [71.5518, 37.933], [71.4329, 37.1273], [71.8021, 36.6941], [72.8955, 37.2676], [73.4815, 37.4718], [73.7495, 37.2317], [74.2596, 37.4154], [74.8912, 37.2317]]] }, \"properties\": { \"id\": \"AF\", \"name\": \"Afghanistan\" }, \"id\": \"AF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[23.9665, -10.8716], [23.9914, -12.4221], [23.8431, -13.001], [21.9788, -13.001], [21.9798, -15.9555], [22.1506, -16.5973], [23.3807, -17.6406], [21.4169, -18.0006], [20.6249, -17.9965], [20.3928, -17.8874], [19.6395, -17.8687], [18.8259, -17.7662], [18.3962, -17.3995], [16.9137, -17.3915], [13.9382, -17.3889], [13.4038, -17.0079], [13.1011, -16.9675], [12.548, -17.2125], [11.7431, -17.2495], [11.819, -16.7044], [11.7507, -15.8321], [11.9677, -15.634], [12.2802, -14.6376], [12.5506, -13.4377], [12.9834, -12.7758], [13.417, -12.5202], [13.7855, -11.8127], [13.8477, -11.0545], [13.2093, -9.7033], [12.9984, -9.0481], [13.3588, -8.6872], [13.3784, -8.3699], [12.8623, -7.2317], [12.8236, -6.9547], [12.5213, -6.5903], [12.3024, -6.0926], [13.0681, -5.865], [14.3986, -5.8925], [16.3153, -5.8658], [16.7178, -6.2413], [16.7094, -6.4718], [16.9847, -7.2574], [17.5359, -8.076], [18.6532, -7.9361], [19.3408, -7.9667], [19.5276, -7.1447], [19.8752, -6.9862], [20.482, -6.9162], [20.6076, -7.2779], [21.7512, -7.3053], [21.9056, -8.6934], [21.8132, -9.4689], [22.1976, -10.0406], [22.3068, -10.6913], [22.5613, -11.0558], [23.8339, -11.0136], [23.9665, -10.8716]]], [[[12.2137, -5.7589], [12.0183, -5.0042], [12.3846, -4.6189], [12.8809, -4.4454], [13.0726, -4.635], [12.8297, -4.7366], [12.5221, -5.1489], [12.5035, -5.6959], [12.2137, -5.7589]]]] }, \"properties\": { \"id\": \"AO\", \"name\": \"Angola\" }, \"id\": \"AO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0012, 18.222], [-63.1534, 18.2002], [-63.026, 18.27], [-63.0012, 18.222]]] }, \"properties\": { \"id\": \"AI\", \"name\": \"Anguilla\" }, \"id\": \"AI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.0638, 42.5473], [20.4856, 42.2232], [20.5659, 41.8739], [20.4891, 41.2724], [20.9641, 40.8498], [21.0312, 40.6585], [20.6575, 40.1175], [20.0013, 39.7095], [19.8518, 40.0437], [19.398, 40.2848], [19.4407, 41.4246], [19.3426, 41.869], [19.2808, 42.1727], [19.6546, 42.6285], [20.0638, 42.5473]]] }, \"properties\": { \"id\": \"AL\", \"name\": \"Albania\" }, \"id\": \"AL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.9893, 60.3511], [20.2588, 60.2612], [19.746, 60.0989], [19.687, 60.2677], [19.9893, 60.3511]]] }, \"properties\": { \"id\": \"AX\", \"name\": \"Aland Islands\" }, \"id\": \"AX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[1.7059, 42.5033], [1.4861, 42.4345], [1.4285, 42.5961], [1.7059, 42.5033]]] }, \"properties\": { \"id\": \"AD\", \"name\": \"Andorra\" }, \"id\": \"AD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[56.2979, 25.6505], [56.388, 24.9793], [56.064, 24.7387], [55.7959, 24.8679], [55.7608, 24.2425], [55.1997, 23.0347], [55.186, 22.7039], [55.1043, 22.6214], [52.5551, 22.933], [51.5927, 24.0786], [51.5682, 24.286], [51.9061, 23.9855], [52.6482, 24.1546], [53.8933, 24.0769], [54.3973, 24.278], [54.7469, 24.8102], [55.0981, 25.0415], [55.523, 25.4983], [55.9411, 25.7939], [56.0804, 26.0624], [56.2979, 25.6505]]] }, \"properties\": { \"id\": \"AE\", \"name\": \"United Arab Emirates\" }, \"id\": \"AE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-68.6533, -54.8538], [-68.6299, -52.6525], [-68.2781, -52.984], [-68.0085, -53.5638], [-67.2943, -54.0499], [-65.3461, -54.8777], [-66.5112, -55.0321], [-66.9305, -54.9248], [-68.6533, -54.8538]]], [[[-62.6509, -22.2339], [-62.3726, -22.439], [-61.7985, -23.1821], [-61.033, -23.7557], [-59.8924, -24.0933], [-59.373, -24.4539], [-58.3654, -24.9594], [-57.8216, -25.1366], [-57.5873, -25.405], [-57.8907, -26.0065], [-58.2031, -26.3816], [-58.1913, -26.6302], [-58.6186, -27.1322], [-57.1118, -27.47], [-56.3705, -27.5375], [-56.0673, -27.3076], [-55.7147, -27.4151], [-55.4266, -27.0094], [-55.1359, -26.9311], [-54.7552, -26.533], [-54.6159, -25.576], [-54.1546, -25.5231], [-53.8912, -25.6687], [-53.6712, -26.225], [-53.8381, -27.1212], [-54.3271, -27.4235], [-54.8291, -27.5509], [-55.1015, -27.8669], [-55.7256, -28.2043], [-56.9387, -29.5949], [-57.609, -30.188], [-57.8724, -30.5911], [-57.8105, -30.8587], [-58.189, -31.924], [-58.2011, -32.4718], [-58.1709, -32.9592], [-58.4244, -33.1115], [-58.5471, -33.6637], [-58.2834, -34.6837], [-57.3036, -35.1885], [-57.1589, -35.5057], [-57.354, -35.7202], [-57.265, -36.1441], [-56.6982, -36.4265], [-56.6721, -36.8514], [-57.3957, -37.7448], [-57.5471, -38.0858], [-58.1792, -38.4359], [-59.8282, -38.8381], [-61.1122, -38.9931], [-62.067, -38.9189], [-62.3382, -39.1507], [-62.0537, -39.3739], [-62.2869, -39.8955], [-62.3951, -40.8906], [-62.959, -41.1096], [-63.7731, -41.1499], [-64.8531, -40.8139], [-65.1334, -40.8804], [-65.0591, -41.9698], [-64.4205, -42.4336], [-63.596, -42.4066], [-63.6925, -42.8052], [-64.1306, -42.8615], [-64.6504, -42.5313], [-65.0269, -42.759], [-64.4323, -43.0591], [-64.9856, -43.2935], [-65.2837, -43.6299], [-65.3614, -44.4773], [-65.6476, -44.6615], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.9414, -45.2573], [-67.5566, -45.9702], [-67.5633, -46.3453], [-66.7769, -47.0057], [-65.9986, -47.0936], [-65.7382, -47.3449], [-65.8101, -47.941], [-66.3934, -48.3423], [-67.033, -48.6277], [-67.6849, -49.2465], [-67.7835, -49.8592], [-68.9396, -50.3824], [-69.2352, -50.9506], [-69.0326, -51.6364], [-68.4432, -52.3568], [-69.9603, -52.0084], [-71.9188, -51.9897], [-72.4077, -51.541], [-72.2763, -50.9102], [-72.5098, -50.6075], [-73.153, -50.7384], [-73.5012, -50.1254], [-73.5762, -49.5829], [-72.6143, -48.7929], [-72.3549, -48.3658], [-72.518, -47.8762], [-72.346, -47.4926], [-71.905, -47.2015], [-71.9402, -46.8312], [-71.6952, -46.5782], [-71.8757, -46.1606], [-71.6315, -45.9537], [-71.7463, -45.5791], [-71.3537, -45.2306], [-71.5962, -44.9793], [-71.2611, -44.7633], [-71.2128, -44.4413], [-71.82, -44.3832], [-71.6802, -43.9295], [-71.905, -43.44], [-71.7816, -43.1669], [-72.1464, -42.9898], [-72.1247, -42.2983], [-71.75, -42.0466], [-71.9114, -41.6506], [-71.9321, -40.6918], [-71.6952, -40.3354], [-71.7199, -39.6354], [-71.5394, -39.6025], [-71.4256, -38.9855], [-70.9517, -38.7383], [-71.0281, -38.0414], [-71.1677, -37.7621], [-71.0556, -36.5237], [-70.4049, -36.0616], [-70.4703, -35.326], [-70.2899, -34.733], [-69.8524, -34.2243], [-69.7978, -33.3987], [-70.0198, -33.2717], [-70.1696, -32.4718], [-70.5853, -31.5695], [-70.5196, -31.1487], [-70.1613, -30.4401], [-69.9563, -30.358], [-69.9277, -29.7695], [-70.0269, -29.3241], [-69.8278, -29.1031], [-69.6569, -28.4139], [-69.1744, -27.9246], [-68.8463, -27.1536], [-68.346, -27.028], [-68.5811, -26.5183], [-68.4144, -26.1538], [-68.6002, -25.4859], [-68.3843, -25.0921], [-68.562, -24.8378], [-68.2502, -24.3921], [-67.3562, -24.0338], [-67.0088, -23.0014], [-67.1948, -22.8216], [-66.7117, -22.2162], [-66.3652, -22.1136], [-66.0986, -21.8352], [-65.771, -22.0994], [-65.058, -22.103], [-64.6056, -22.229], [-64.3739, -22.7613], [-63.9762, -22.0728], [-63.8186, -22.0053], [-62.8433, -21.9973], [-62.6509, -22.2339]]]] }, \"properties\": { \"id\": \"AR\", \"name\": \"Argentina\" }, \"id\": \"AR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4906, 38.9065], [46.1146, 38.8776], [45.7661, 39.3783], [45.0315, 39.7649], [44.7683, 39.7037], [44.2893, 40.0406], [43.7918, 40.0703], [43.5693, 40.4823], [43.7225, 40.7193], [43.4392, 41.1073], [45.0014, 41.2911], [45.5876, 40.8467], [45.3759, 40.6381], [45.9645, 40.2336], [45.7897, 39.8812], [46.55, 39.2012], [46.4906, 38.9065]]] }, \"properties\": { \"id\": \"AM\", \"name\": \"Armenia\" }, \"id\": \"AM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-170.7262, -14.3512], [-170.8205, -14.3122], [-170.6892, -14.2576], [-170.7262, -14.3512]]] }, \"properties\": { \"id\": \"AS\", \"name\": \"American Samoa\" }, \"id\": \"AS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-73.7068, -70.6349], [-74.205, -70.9239], [-76.1763, -71.1327], [-76.5004, -70.9413], [-75.0076, -70.6088], [-73.7068, -70.6349]]], [[[-98.091, -71.9125], [-96.8695, -71.8508], [-95.6095, -72.0682], [-96.0518, -72.5775], [-98.4078, -72.5477], [-100.1951, -72.2725], [-102.2647, -72.1353], [-102.128, -71.9853], [-98.6155, -71.7638], [-98.091, -71.9125]]], [[[-91.1608, -73.182], [-91.6699, -72.6236], [-90.8072, -72.6107], [-91.1608, -73.182]]], [[[-74.3544, -73.0986], [-74.5748, -73.6113], [-75.9009, -73.3325], [-75.3769, -72.8202], [-74.3544, -73.0986]]], [[[-126.3299, -73.2863], [-124.9933, -73.8298], [-124.8731, -74.2084], [-127.4143, -73.5163], [-126.3299, -73.2863]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-121.0625, -74.3375], [-122.8591, -74.3429], [-122.6248, -73.9655], [-123.1121, -73.6823], [-120.5562, -73.756]]], [[[-45.2226, -78.8107], [-43.722, -78.8186], [-42.9654, -79.4769], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.773, -80.7841], [-54.1626, -80.8702], [-53.4823, -80.1889], [-52.2972, -80.1414], [-50.3391, -79.4795], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0812, -78.0475], [-46.8258, -77.7853], [-45.5303, -77.8816], [-43.8086, -78.2863], [-43.9473, -78.5975], [-45.2226, -78.8107]]], [[[-70.334, -79.6797], [-71.7836, -79.4446], [-70.544, -78.8839], [-67.4785, -78.3628], [-66.7281, -78.3836], [-69.251, -79.2102], [-70.334, -79.6797]]], [[[-159.053, -79.8075], [-161.8655, -79.7037], [-164.2259, -79.3206], [-163.2562, -78.7223], [-161.643, -78.9011], [-159.6842, -79.4024], [-159.053, -79.8075]]], [[[-59.7339, -80.3443], [-60.5828, -80.9484], [-64.2683, -80.7486], [-65.9802, -80.3846], [-62.5188, -80.3736], [-61.3432, -79.8866], [-59.7063, -79.8756], [-59.7339, -80.3443]]], [[[-57.0206, -63.373], [-58.2631, -63.7635], [-58.8954, -64.389], [-59.9632, -64.4312], [-61.0598, -64.9811], [-61.7361, -65.0335], [-62.1454, -65.3319], [-62.3051, -65.8406], [-61.8755, -66.2959], [-63.7525, -66.2778], [-64.0779, -66.6542], [-64.6862, -66.8064], [-64.8193, -67.3076], [-65.4433, -67.3263], [-65.6394, -68.1306], [-64.8984, -68.6735], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.4505, -69.5844], [-61.9611, -70.1201], [-61.9611, -70.9005], [-61.0172, -71.1668], [-61.2136, -71.564], [-60.7193, -72.0727], [-60.3846, -73.0072], [-61.4054, -73.467], [-60.8789, -73.6122], [-61.0108, -74.4782], [-62.2257, -74.5058], [-63.9247, -75.0047], [-63.3633, -75.4517], [-66.3706, -76.0131], [-69.3045, -76.3505], [-70.0955, -76.6546], [-71.7987, -76.7527], [-75.2684, -76.5814], [-77.1899, -76.6298], [-76.2487, -77.2748], [-75.3869, -77.474], [-72.852, -77.5904], [-73.2515, -77.8943], [-74.8121, -78.1776], [-80.6015, -77.7519], [-81.4411, -77.8856], [-77.4325, -78.4346], [-77.8691, -78.7454], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.26, -78.7742], [-80.1512, -79.2682], [-76.499, -79.3256], [-76.5578, -79.9034], [-75.2366, -80.8028], [-73.0296, -80.9173], [-70.239, -80.8565], [-64.7501, -81.5219], [-64.1371, -81.8695], [-65.9133, -82.1833], [-62.7357, -82.5272], [-61.5898, -83.3414], [-59.5159, -83.4585], [-57.3535, -82.8403], [-53.9862, -82.2006], [-48.3607, -81.8921], [-43.6693, -82.2699], [-41.4338, -81.2977], [-38.7717, -80.8823], [-37.2093, -81.0639], [-35.3269, -80.6505], [-29.3291, -80.172], [-24.2402, -80.062], [-25.2586, -79.7624], [-29.9494, -79.599], [-30.3161, -79.163], [-32.9943, -79.2288], [-36.2392, -78.7742], [-36.181, -78.4684], [-34.0758, -77.4253], [-32.0635, -77.1598], [-28.9336, -76.3701], [-26.0594, -75.9572], [-24.2696, -75.7669], [-19.4931, -75.5399], [-17.2989, -74.334], [-15.6725, -74.4072], [-15.7489, -73.9455], [-16.5188, -73.6441], [-15.5959, -73.0968], [-14.3211, -73.1229], [-14.2978, -72.7329], [-13.2087, -72.7853], [-11.4971, -72.4128], [-10.8255, -71.5535], [-9.888, -71.0274], [-9.2308, -71.1739], [-8.6466, -71.6727], [-7.7138, -71.5464], [-7.8736, -70.9403], [-5.9364, -70.7126], [-5.5879, -70.8569], [-5.9499, -71.3417], [-2.8121, -71.3208], [-0.8958, -71.3492], [-0.5431, -71.7127], [0.835, -71.2023], [2.6096, -70.9], [5.1132, -70.6558], [8.5231, -70.4738], [9.1415, -70.1835], [10.2175, -70.508], [11.7014, -70.7664], [12.9292, -70.2133], [13.8228, -70.3434], [15.8069, -70.3238], [18.1245, -70.5405], [19.1965, -70.2932], [19.2649, -70.9023], [21.0706, -70.8437], [21.7049, -70.2586], [22.9789, -70.8104], [23.8037, -70.4047], [24.7568, -70.8921], [25.9743, -71.0371], [27.2071, -70.9111], [30.0035, -70.2999], [31.3787, -70.2257], [32.6212, -70.0007], [32.9892, -69.6242], [32.5674, -69.0743], [33.1214, -68.6889], [34.193, -68.7023], [35.2245, -69.6371], [37.56, -69.7183], [38.8592, -70.006], [39.7052, -69.4258], [39.8637, -68.9669], [41.1328, -68.5749], [42.409, -68.3521], [42.8196, -68.123], [44.6999, -67.9042], [44.9893, -67.7693], [47.1173, -67.5726], [48.6479, -67.7941], [48.7136, -67.217], [49.247, -66.9413], [50.6058, -67.1501], [50.3325, -66.4447], [51.8843, -66.0199], [53.6718, -65.8588], [54.948, -65.9164], [55.7102, -66.0797], [57.1852, -66.6133], [56.4533, -66.7799], [56.8918, -67.0564], [57.6274, -67.0142], [58.7375, -67.2295], [59.2507, -67.4852], [60.4821, -67.3853], [62.6878, -67.6476], [63.6989, -67.5083], [68.3277, -67.8895], [69.4162, -67.743], [69.9822, -68.4644], [69.5343, -68.7368], [69.6292, -69.2314], [68.9062, -69.3726], [69.0825, -69.8667], [68.1782, -69.8374], [67.2678, -70.2732], [67.9408, -70.4228], [69.2502, -70.4313], [68.8725, -71.0354], [68.0375, -71.391], [67.432, -72.0031], [66.8919, -72.9486], [67.9714, -73.0857], [68.4197, -72.5149], [69.5547, -72.3746], [71.2766, -71.624], [71.9047, -70.7069], [72.7601, -70.3958], [72.8223, -70.0962], [73.9422, -69.7433], [75.4239, -69.8933], [75.8913, -69.5755], [77.8174, -69.069], [78.7264, -68.278], [79.288, -68.1195], [82.0171, -67.6902], [83.3043, -67.6032], [84.4851, -67.1146], [85.7107, -67.161], [87.9803, -66.7883], [89.6985, -66.8228], [92.0733, -66.5078], [93.9644, -66.6897], [94.8397, -66.5015], [95.5411, -66.6312], [98.2577, -66.4673], [99.37, -66.6484], [100.889, -66.3581], [101.4746, -65.9511], [102.674, -65.8655], [103.951, -65.9879], [108.1578, -66.6391], [109.4629, -66.9085], [110.6224, -66.5241], [110.9069, -66.0767], [113.0992, -65.8002], [113.7095, -65.9298], [114.3367, -66.3603], [115.3102, -66.5609], [115.2738, -67.0279], [113.9911, -67.2117], [114.0266, -67.4412], [116.7135, -67.0471], [118.1388, -67.0826], [119.133, -67.3706], [121.4874, -67.0905], [122.1825, -66.8593], [123.9692, -66.608], [124.5978, -66.7083], [125.8655, -66.3643], [126.6645, -66.4976], [127.5412, -67.051], [129.2369, -67.0418], [129.7411, -66.4686], [130.9517, -66.1912], [131.831, -66.2356], [133.4447, -66.0815], [134.9716, -66.3302], [135.352, -66.1274], [136.1941, -66.2924], [137.7539, -66.4065], [139.9001, -66.715], [141.9726, -66.8069], [142.8883, -66.9999], [143.4481, -66.877], [144.6213, -67.1416], [143.9422, -67.7941], [145.9752, -67.6241], [146.828, -67.9646], [146.7977, -68.2735], [148.4561, -68.467], [151.068, -68.3849], [151.5621, -68.6939], [153.082, -68.8567], [154.1996, -68.4178], [155.5202, -69.0246], [157.4814, -69.3087], [158.1578, -69.2088], [159.7838, -69.5217], [160.2095, -69.975], [161.0369, -70.3171], [161.4245, -70.8268], [162.6748, -70.3047], [163.3487, -70.6208], [164.4034, -70.5103], [166.6269, -70.6643], [167.5692, -70.8104], [168.1725, -71.1832], [170.1624, -71.6307], [169.8287, -72.7288], [169.545, -73.0502], [167.1555, -73.1475], [167.6158, -73.3369], [164.7757, -74.0286], [165.3027, -74.5937], [163.1672, -74.6021], [162.5337, -75.1672], [161.6797, -75.2177], [162.8156, -75.8463], [162.7627, -76.7456], [164.4296, -78.0423], [166.2086, -78.4515], [164.6347, -78.6034], [160.483, -79.2017], [160.5419, -80.4251], [160.9078, -81.3901], [162.8213, -81.8663], [167.2327, -82.9521], [168.1099, -83.3618], [171.9172, -83.6441], [179.403, -84.2061], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1752], [-180, -86.4696], [-180, -85.7633], [-180, -85.0574], [-180, -84.3518], [-171.7037, -84.5426], [-162.9334, -84.9012], [-157.1276, -85.1857], [-156.9864, -84.8112], [-163.5685, -84.5289], [-164.951, -83.8058], [-167.5528, -83.811], [-169.1677, -83.4497], [-174.066, -82.9002], [-171.8213, -82.8474], [-168.4178, -83.2286], [-163.111, -83.329], [-159.4445, -83.5434], [-157.6795, -83.1293], [-155.4594, -82.9806], [-153.0098, -82.4497], [-154.7174, -81.941], [-153.9566, -81.7004], [-157.0326, -81.3191], [-156.5283, -81.1624], [-148.1228, -80.9009], [-150.5755, -80.3535], [-148.3172, -80.0708], [-148.1765, -79.7761], [-152.0914, -79.2417], [-155.21, -78.9647], [-156.4693, -78.6353], [-154.7164, -78.3983], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.5003, -77.7786], [-158.2135, -77.1571], [-154.8149, -77.1269], [-153.4606, -77.4159], [-151.719, -77.4261], [-149.7177, -77.7977], [-145.967, -77.0688], [-145.7504, -76.7492], [-147.3404, -76.4384], [-146.3829, -76.0998], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6906], [-139.6911, -75.2129], [-137.6181, -75.0757], [-136.5494, -75.1397], [-135.362, -74.6904], [-133.4748, -74.8519], [-132.0495, -74.7658], [-129.7907, -74.8915], [-127.8633, -74.7193], [-123.8894, -74.773], [-119.6771, -74.6545], [-118.3421, -74.3814], [-115.1052, -74.4552], [-114.7909, -73.9887], [-113.5085, -74.0889], [-113.9318, -74.982], [-111.6963, -74.7921], [-111.8064, -74.2696], [-110.307, -74.3668], [-110.3005, -74.7109], [-111.4631, -75.1334], [-109.2723, -75.1848], [-106.6189, -75.3438], [-104.9019, -75.1152], [-101.7081, -75.1272], [-101.0394, -75.422], [-98.5578, -75.1898], [-101.2518, -74.4858], [-101.7154, -74.0236], [-102.7663, -73.8839], [-102.4108, -73.6167], [-100.9855, -73.7573], [-99.7812, -73.7201], [-100.0209, -73.4027], [-102.6751, -73.321], [-102.4092, -72.9876], [-98.0125, -73.0333], [-96.1521, -73.3094], [-94.2463, -73.313], [-92.241, -73.1785], [-90.9209, -73.3193], [-90.2954, -72.9779], [-88.1945, -72.8585], [-88.4193, -73.2291], [-87.0379, -73.3538], [-85.9808, -73.2087], [-84.9812, -73.5021], [-82.1835, -73.8568], [-81.3088, -73.7382], [-81.2624, -73.3148], [-80.4422, -72.9446], [-79.5217, -73.0897], [-78.4078, -73.5559], [-76.8506, -73.4603], [-77.1349, -73.8176], [-75.293, -73.6389], [-73.9962, -73.6997], [-72.9293, -73.448], [-68.8211, -73.1053], [-67.6671, -72.8345], [-66.8277, -72.0906], [-67.4603, -71.5268], [-67.8884, -70.4214], [-68.4033, -70.0197], [-68.7079, -69.4321], [-67.3718, -69.4125], [-66.9749, -69.1608], [-67.3906, -68.8612], [-66.7933, -68.2403], [-67.1498, -68.0245], [-66.705, -67.5273], [-67.5859, -67.435], [-67.4933, -67.1128], [-66.371, -66.6088], [-65.7664, -66.6249], [-65.6172, -66.1353], [-64.0659, -65.5538], [-64.0381, -65.1792], [-62.5762, -64.7557], [-61.6317, -64.6047], [-60.8643, -64.0734], [-59.5102, -63.8209], [-58.8721, -63.5518], [-57.3897, -63.2264], [-57.0206, -63.373]]], [[[-67.9885, -67.4746], [-68.5804, -67.7328], [-69.0825, -67.403], [-68.3358, -66.802], [-67.6877, -67.1473], [-67.9885, -67.4746]]], [[[-70.0511, -69.1892], [-69.417, -69.5834], [-68.3361, -70.8561], [-68.2411, -71.822], [-69.2092, -72.5344], [-72.3675, -72.6698], [-73.0864, -72.4079], [-71.1066, -72.0471], [-72.4121, -71.6622], [-73.8994, -72.1522], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.1873, -71.383], [-72.6217, -71.3882], [-71.1941, -70.9847], [-71.0611, -70.5368], [-70.3281, -70.3611], [-71.8537, -69.9692], [-71.869, -68.9411], [-70.4171, -68.7889], [-70.0511, -69.1892]]], [[[-74.9871, -69.7277], [-74.8488, -70.1791], [-75.7267, -70.0962], [-74.9871, -69.7277]]]] }, \"properties\": { \"id\": \"AQ\", \"name\": \"Antarctica\" }, \"id\": \"AQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[69.185, -49.1094], [69.9157, -49.3485], [69.6129, -49.6509], [68.872, -49.4445], [69.185, -49.1094]]] }, \"properties\": { \"id\": \"TF\", \"name\": \"French Southern and Antarctic Lands\" }, \"id\": \"TF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[143.1787, -11.9548], [143.1103, -12.3036], [143.4014, -12.64], [143.5866, -13.4434], [143.5484, -13.7409], [143.7562, -14.3491], [143.9618, -14.4626], [144.473, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2717, -15.4765], [145.458, -16.0563], [145.4261, -16.4061], [145.9019, -17.0701], [146.1257, -17.6351], [146.0325, -18.273], [146.3334, -18.5536], [146.4813, -19.0786], [147.1387, -19.3929], [147.4183, -19.3783], [147.9154, -19.8693], [148.7593, -20.2897], [148.6839, -20.5804], [149.205, -21.1251], [149.7039, -22.4408], [150.0764, -22.1647], [150.5415, -22.5593], [150.7639, -22.5762], [150.8429, -23.4582], [151.1537, -23.784], [151.9025, -24.2008], [152.1297, -24.5976], [152.4565, -24.8023], [152.9137, -25.4321], [153.165, -25.9643], [153.0841, -26.304], [153.1171, -27.1944], [153.5756, -28.2406], [153.6044, -28.8545], [153.3482, -29.2905], [153.2723, -29.8923], [153.0304, -30.5635], [152.9438, -31.4349], [152.5595, -32.0457], [152.4703, -32.439], [151.8128, -32.901], [151.4839, -33.3477], [151.2314, -34.0294], [150.96, -34.2971], [150.6902, -35.1777], [150.1953, -35.8334], [149.9605, -36.8455], [149.9324, -37.5286], [149.2986, -37.8021], [148.2625, -37.8309], [147.3957, -38.2189], [146.8568, -38.6633], [145.9352, -38.9017], [145.791, -38.6668], [144.6653, -38.21], [143.5392, -38.8208], [142.6122, -38.4515], [141.7248, -38.2713], [141.4244, -38.3636], [141.0112, -38.0769], [140.6272, -38.0285], [139.7842, -37.2459], [139.8575, -36.6622], [139.5485, -36.0966], [139.0377, -35.6892], [138.1844, -35.6128], [138.5111, -35.0243], [138.4898, -34.7636], [138.0895, -34.1697], [137.6917, -35.1432], [136.8834, -35.24], [137.0144, -34.9158], [137.3908, -34.9133], [137.4937, -34.1613], [137.9318, -33.5788], [137.8524, -33.2007], [137.4423, -33.1935], [137.2372, -33.6295], [136.4306, -34.0299], [135.6477, -34.9394], [135.1856, -33.907], [134.7909, -33.3285], [134.3013, -33.1652], [134.1002, -32.7488], [134.2343, -32.5487], [133.551, -32.1828], [133.2119, -32.1837], [132.7575, -31.956], [132.2146, -32.007], [131.7214, -31.6964], [131.1434, -31.4957], [130.783, -31.604], [130.1296, -31.5791], [128.9462, -31.7025], [128.0677, -32.0666], [127.3198, -32.2642], [125.917, -32.2969], [124.759, -32.8829], [124.1259, -33.1292], [123.6506, -33.8364], [123.2075, -33.9882], [122.7774, -33.8909], [122.1511, -33.9917], [121.4052, -33.8266], [119.854, -33.9749], [119.4505, -34.3681], [118.8951, -34.4801], [118.1356, -34.9865], [117.5816, -35.0978], [116.5171, -34.9878], [115.9868, -34.7952], [115.7261, -34.5262], [115.0088, -34.2559], [115.1815, -33.6433], [115.5153, -33.5314], [115.6831, -33.1927], [115.6982, -31.6946], [115.1766, -30.8081], [114.9947, -30.2164], [114.9592, -29.4334], [114.5374, -28.543], [114.165, -28.0809], [114.0283, -27.347], [113.5817, -26.5583], [113.853, -26.3319], [113.5889, -26.0985], [113.5396, -25.6253], [114.2156, -26.2894], [114.2143, -25.8517], [113.6709, -24.9772], [113.4176, -24.4357], [113.5529, -23.7329], [113.7572, -23.4182], [113.683, -22.6379], [113.9586, -21.9392], [114.1637, -22.3231], [114.3777, -22.3413], [114.8588, -21.7359], [115.4564, -21.4917], [116.0107, -21.0305], [116.7068, -20.6536], [117.4064, -20.7211], [118.1992, -20.3754], [118.7513, -20.2616], [119.1046, -19.9953], [119.5858, -20.0384], [120.8784, -19.665], [121.4937, -19.1067], [121.8337, -18.4773], [122.2372, -17.9686], [122.1604, -17.3138], [122.7201, -16.7878], [122.9706, -16.4366], [123.5254, -17.4856], [123.7779, -16.8677], [123.4903, -16.4908], [124.5769, -16.1135], [124.3816, -15.758], [124.8389, -15.161], [125.2432, -14.9448], [125.1788, -14.7149], [125.6813, -14.3881], [126.0209, -14.4946], [126.1115, -14.1142], [126.5696, -14.1608], [126.9033, -13.744], [127.6727, -14.195], [128.1995, -14.7516], [129.4588, -14.9332], [129.7536, -14.7894], [129.3785, -14.3926], [129.7097, -13.9802], [129.8388, -13.5731], [130.2597, -13.3024], [130.1682, -12.9575], [130.3999, -12.6879], [130.898, -12.5238], [131.0458, -12.1896], [131.4381, -12.277], [132.3721, -12.2393], [132.6305, -12.035], [132.6829, -11.5055], [133.0246, -11.4527], [133.1853, -11.7057], [133.904, -11.8321], [134.2369, -12.0079], [134.7301, -11.9845], [135.218, -12.2214], [135.7884, -11.9071], [136.0817, -12.4225], [136.5403, -11.9577], [136.9474, -12.3497], [136.5372, -12.7843], [136.5944, -13.0036], [135.9272, -13.3041], [135.9894, -13.8101], [135.8833, -14.1532], [135.4052, -14.7583], [135.5308, -15.0002], [136.2051, -15.4033], [136.7845, -15.8942], [137.002, -15.8783], [137.7037, -16.2329], [138.2449, -16.7181], [139.0096, -16.8992], [139.2484, -17.3285], [140.0359, -17.7026], [140.5113, -17.6245], [140.8305, -17.4146], [141.2189, -16.6462], [141.412, -16.0695], [141.4515, -15.6052], [141.6255, -15.0566], [141.523, -14.4703], [141.5944, -14.1528], [141.4723, -13.7977], [141.6454, -13.2592], [141.6779, -12.4913], [141.9513, -11.8961], [142.1683, -10.9466], [142.4564, -10.7074], [142.8368, -11.307], [142.8723, -11.8215], [143.1787, -11.9548]]], [[[130.6188, -11.3763], [131.2682, -11.1898], [131.5385, -11.4366], [130.9508, -11.9263], [130.6449, -11.7425], [130.6188, -11.3763]]], [[[136.7147, -13.804], [136.8946, -14.2931], [136.3632, -14.2287], [136.4249, -13.8648], [136.7147, -13.804]]], [[[137.5964, -35.7384], [137.4484, -36.0749], [136.7552, -36.0331], [136.6388, -35.749], [137.334, -35.5924], [137.5964, -35.7384]]], [[[145.0431, -40.7868], [145.2832, -40.77], [146.3175, -41.1637], [146.9898, -40.9924], [147.4546, -41.0016], [147.9688, -40.7797], [148.2927, -40.9471], [148.3017, -42.0399], [147.9243, -42.5727], [147.9807, -43.1572], [147.4081, -42.894], [146.8741, -43.6126], [146.0431, -43.5474], [145.2681, -42.5442], [145.2384, -42.0195], [144.7781, -41.4189], [144.6462, -40.9808], [145.0431, -40.7868]]]] }, \"properties\": { \"id\": \"AU\", \"name\": \"Australia\" }, \"id\": \"AU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.9531, 48.5989], [17.1475, 48.0058], [16.4342, 47.3675], [16.4533, 47.0066], [16.0929, 46.8632], [15.9574, 46.6777], [15.0009, 46.6262], [14.5037, 46.4171], [13.6998, 46.5201], [12.3881, 46.7025], [12.1542, 46.9351], [11.2442, 46.9755], [11.025, 46.7971], [10.4527, 46.865], [9.5801, 47.0572], [9.5277, 47.2707], [9.5242, 47.5242], [10.3129, 47.3133], [10.4306, 47.541], [11.2979, 47.4248], [11.717, 47.5837], [12.6859, 47.6693], [12.8143, 48.1607], [13.4095, 48.3942], [13.8147, 48.7669], [14.0491, 48.6024], [14.6915, 48.5992], [14.9721, 48.9839], [16.0573, 48.7548], [16.4777, 48.8001], [16.9531, 48.5989]]] }, \"properties\": { \"id\": \"AT\", \"name\": \"Austria\" }, \"id\": \"AT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[46.1146, 38.8776], [45.4799, 39.0063], [44.8172, 39.6504], [44.7683, 39.7037], [45.0315, 39.7649], [45.7661, 39.3783], [46.1146, 38.8776]]], [[[48.5729, 41.8446], [49.1064, 41.3017], [49.2262, 41.0261], [49.7758, 40.584], [49.3244, 39.6082], [49.363, 39.3495], [49.0136, 39.1341], [48.8686, 38.4355], [48.5928, 38.4111], [48.0233, 38.819], [48.2422, 38.9788], [47.9957, 39.6842], [47.7729, 39.6486], [46.4906, 38.9065], [46.55, 39.2012], [45.7897, 39.8812], [45.9645, 40.2336], [45.3759, 40.6381], [45.5876, 40.8467], [45.0014, 41.2911], [45.281, 41.4495], [46.4577, 41.07], [46.6188, 41.3439], [46.182, 41.6573], [46.4298, 41.8907], [46.7494, 41.8127], [47.2612, 41.315], [47.8608, 41.2129], [48.5729, 41.8446]]]] }, \"properties\": { \"id\": \"AZ\", \"name\": \"Azerbaijan\" }, \"id\": \"AZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.5536, -2.4], [30.5149, -2.9175], [30.79, -3.2744], [30.4253, -3.5891], [30.1469, -4.0854], [29.7177, -4.456], [29.4034, -4.4493], [29.2231, -3.911], [29.2245, -3.0533], [29.0145, -2.7204], [29.3901, -2.8087], [29.8681, -2.7164], [29.9303, -2.3396], [30.5536, -2.4]]] }, \"properties\": { \"id\": \"BI\", \"name\": \"Burundi\" }, \"id\": \"BI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.5955, 11.6964], [3.4878, 11.3953], [3.7163, 11.0798], [3.8344, 10.6075], [3.5764, 10.2683], [3.5574, 9.9074], [3.3252, 9.7783], [3.0451, 9.084], [2.7748, 9.0485], [2.6859, 7.874], [2.7748, 6.7118], [2.7064, 6.3692], [1.6225, 6.2169], [1.6002, 9.0499], [1.4244, 9.2851], [1.33, 9.9971], [0.7798, 10.3598], [0.9007, 10.9931], [1.4266, 11.4473], [1.9803, 11.4184], [2.3889, 11.897], [2.366, 12.2218], [2.8782, 12.3679], [3.5955, 11.6964]]] }, \"properties\": { \"id\": \"BJ\", \"name\": \"Benin\" }, \"id\": \"BJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.2175, 14.9115], [0.1638, 14.4973], [0.6184, 13.7036], [0.978, 13.5518], [0.9872, 13.0418], [1.5651, 12.6356], [2.0739, 12.7142], [2.0912, 12.2778], [2.3889, 11.897], [1.9803, 11.4184], [1.4266, 11.4473], [0.9007, 10.9931], [-0.0686, 11.1157], [-0.7014, 10.9887], [-2.8298, 10.9985], [-2.9148, 10.5924], [-2.7866, 10.402], [-2.6958, 9.4812], [-3.2236, 9.8955], [-3.8777, 9.895], [-4.6258, 9.7134], [-4.9698, 9.93], [-5.0999, 10.2417], [-5.5236, 10.4259], [-5.4905, 11.0424], [-5.2998, 11.2058], [-5.2881, 11.8277], [-4.798, 12.0319], [-4.4287, 12.3377], [-4.4807, 12.6725], [-4.2272, 12.7937], [-4.3286, 13.119], [-4.0512, 13.3822], [-3.5758, 13.194], [-3.3017, 13.2806], [-3.1985, 13.6729], [-2.4572, 14.274], [-2.1132, 14.1684], [-1.7678, 14.4862], [-1.0496, 14.8195], [-0.7604, 15.0477], [-0.2359, 15.0592], [0.2175, 14.9115]]] }, \"properties\": { \"id\": \"BF\", \"name\": \"Burkina Faso\" }, \"id\": \"BF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[92.575, 21.9782], [92.5936, 21.4672], [92.1794, 21.2932], [92.3243, 20.7917], [92.0561, 21.1747], [92.0081, 21.6848], [91.6929, 22.5047], [91.4094, 22.7972], [90.9454, 22.597], [90.6335, 23.0941], [90.435, 22.7518], [90.5894, 22.2583], [90.1589, 21.817], [89.8117, 21.9835], [89.2343, 21.7225], [89.0515, 22.0932], [88.7407, 23.4369], [88.5671, 23.6743], [88.7335, 24.231], [88.1453, 24.4858], [88.4561, 25.1884], [88.4521, 25.5745], [88.0847, 25.8885], [88.4402, 26.3696], [89.1082, 26.2023], [89.2893, 26.0376], [89.8229, 25.9412], [89.814, 25.3052], [90.4394, 25.1578], [92.0498, 25.1694], [92.2514, 24.895], [91.8767, 24.1955], [91.3672, 24.0933], [91.1603, 23.6605], [91.3153, 23.1044], [91.6197, 22.9797], [91.938, 23.5047], [92.2461, 23.6837], [92.3615, 22.929], [92.4916, 22.6853], [92.575, 21.9782]]] }, \"properties\": { \"id\": \"BD\", \"name\": \"Bangladesh\" }, \"id\": \"BD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.5853, 43.7422], [28.4654, 43.3893], [27.9288, 43.1861], [27.8888, 42.7497], [27.4849, 42.4683], [28.0144, 41.9689], [27.295, 42.0793], [26.6154, 41.9649], [26.3209, 41.7167], [26.1355, 41.3856], [25.2511, 41.2435], [24.0558, 41.5272], [23.635, 41.3869], [22.9159, 41.3363], [23.0055, 41.7172], [22.8369, 41.9937], [22.3441, 42.3138], [22.4667, 42.8424], [22.9767, 43.1878], [22.5546, 43.4546], [22.421, 44.0077], [22.705, 44.2376], [23.2244, 43.8741], [25.4971, 43.6708], [26.2157, 44.0072], [27.0867, 44.1675], [28.5853, 43.7422]]] }, \"properties\": { \"id\": \"BG\", \"name\": \"Bulgaria\" }, \"id\": \"BG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.007, 44.8693], [19.3568, 44.8586], [19.1517, 44.3025], [19.4882, 43.7036], [19.1943, 43.5331], [18.9404, 43.4968], [18.4437, 42.9685], [18.4361, 42.5598], [17.6678, 42.8971], [17.5852, 42.9384], [17.6247, 43.0426], [16.2141, 44.215], [15.7368, 44.7658], [15.788, 45.1791], [16.2935, 45.0087], [16.5305, 45.2168], [17.813, 45.0779], [18.6625, 45.0774], [19.007, 44.8693]]] }, \"properties\": { \"id\": \"BA\", \"name\": \"Bosnia and Herzegovina\" }, \"id\": \"BA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[50.6072, 25.8831], [50.4661, 25.9657], [50.4524, 26.1907], [50.6099, 26.1246], [50.6072, 25.8831]]] }, \"properties\": { \"id\": \"BH\", \"name\": \"Bahrain\" }, \"id\": \"BH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-77.2257, 25.904], [-77.4033, 26.0247], [-77.2468, 26.1566], [-77.2062, 26.489], [-77.0384, 26.3332], [-77.1674, 26.2404], [-77.2257, 25.904]]], [[[-77.744, 24.7072], [-78.0449, 24.2873], [-78.2988, 24.7538], [-78.0333, 25.1432], [-77.744, 24.7072]]]] }, \"properties\": { \"id\": \"BS\", \"name\": \"Bahamas\" }, \"id\": \"BS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.832, 17.8766], [-62.8655, 17.9184], [-62.7996, 17.9085], [-62.832, 17.8766]]] }, \"properties\": { \"id\": \"BL\", \"name\": \"Saint Barthelemy\" }, \"id\": \"BL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.148, 56.143], [28.7948, 55.9426], [29.375, 55.9386], [29.4824, 55.6845], [30.2334, 55.8451], [30.9069, 55.5699], [31.1212, 54.6484], [31.4035, 54.1959], [31.792, 54.0558], [32.7042, 53.3363], [32.1421, 53.0913], [31.4178, 53.196], [31.5771, 52.3122], [31.7635, 52.1011], [30.9806, 52.0461], [30.533, 51.5965], [29.3465, 51.3825], [29.1357, 51.6173], [28.5991, 51.5427], [27.2701, 51.6135], [27.1422, 51.752], [25.925, 51.9136], [24.3616, 51.8675], [23.6053, 51.5179], [23.6522, 52.0403], [23.1969, 52.257], [23.8445, 52.6642], [23.8871, 53.0275], [23.4845, 53.9397], [24.7683, 53.9746], [25.5473, 54.3317], [25.8593, 54.9192], [26.175, 55.0033], [26.5936, 55.6676], [27.5767, 55.7987], [28.148, 56.143]]] }, \"properties\": { \"id\": \"BY\", \"name\": \"Belarus\" }, \"id\": \"BY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-88.894, 15.8907], [-89.2374, 15.8942], [-89.1615, 17.8149], [-88.8064, 17.9654], [-88.523, 18.4457], [-88.2957, 18.4723], [-88.0972, 18.1217], [-88.2717, 17.6099], [-88.3134, 16.6328], [-88.894, 15.8907]]] }, \"properties\": { \"id\": \"BZ\", \"name\": \"Belize\" }, \"id\": \"BZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7304, 32.2933], [-64.8202, 32.2597], [-64.6946, 32.387], [-64.7304, 32.2933]]] }, \"properties\": { \"id\": \"BM\", \"name\": \"Bermuda\" }, \"id\": \"BM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-58.1599, -20.1645], [-58.1803, -19.8178], [-59.0905, -19.286], [-60.0073, -19.2976], [-61.757, -19.6452], [-61.917, -20.0553], [-62.2763, -20.5626], [-62.2768, -21.066], [-62.6509, -22.2339], [-62.8433, -21.9973], [-63.8186, -22.0053], [-63.9762, -22.0728], [-64.3739, -22.7613], [-64.6056, -22.229], [-65.058, -22.103], [-65.771, -22.0994], [-66.0986, -21.8352], [-66.3652, -22.1136], [-66.7117, -22.2162], [-67.1948, -22.8216], [-67.8795, -22.823], [-67.9883, -22.0573], [-68.1969, -21.3004], [-68.4998, -20.612], [-68.7452, -20.4588], [-68.6983, -19.7211], [-68.4628, -19.4329], [-68.9684, -18.9682], [-69.094, -18.0507], [-69.3133, -17.9433], [-69.5109, -17.506], [-69.6249, -17.2002], [-69.0208, -16.6422], [-68.9134, -16.2618], [-69.2177, -16.149], [-69.4185, -15.6034], [-69.1727, -15.2368], [-69.3748, -14.9629], [-69.235, -14.5972], [-68.8803, -14.199], [-69.0741, -13.6828], [-68.9786, -12.8802], [-68.6852, -12.502], [-69.5786, -10.9519], [-68.398, -11.0185], [-68.0718, -10.7029], [-67.5824, -10.5058], [-66.7301, -9.9755], [-66.2636, -9.8262], [-65.3962, -9.7126], [-65.3132, -10.2533], [-65.4368, -10.449], [-65.334, -10.8929], [-65.39, -11.2462], [-64.9924, -11.9751], [-64.5135, -12.2508], [-64.4205, -12.4399], [-63.5858, -12.5188], [-63.0675, -12.6693], [-62.7655, -12.9973], [-62.1759, -13.1336], [-61.79, -13.5256], [-61.0769, -13.4897], [-60.5065, -13.7897], [-60.299, -14.6185], [-60.1756, -16.2693], [-58.5381, -16.3284], [-58.396, -17.2343], [-57.8325, -17.5123], [-57.5741, -18.2792], [-57.8005, -19.0809], [-58.1315, -19.7445], [-58.1599, -20.1645]]] }, \"properties\": { \"id\": \"BO\", \"name\": \"Bolivia\" }, \"id\": \"BO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-56.4828, 1.9422], [-56.0199, 1.8423], [-56.1295, 2.2995], [-55.0058, 2.593], [-54.6163, 2.3266], [-54.13, 2.1211], [-53.7678, 2.3551], [-52.9648, 2.1837], [-52.7006, 2.3635], [-51.9907, 3.7018], [-51.6526, 4.0614], [-51.4615, 4.314], [-51.2198, 4.0937], [-51.0525, 3.2819], [-50.659, 2.1309], [-50.459, 1.8295], [-49.9572, 1.6599], [-49.8988, 1.1627], [-50.2945, 0.8356], [-50.8163, 0.1724], [-51.2829, -0.085], [-51.7025, -0.7624], [-51.9476, -1.5866], [-51.2973, -1.2237], [-50.9178, -1.1154], [-50.69, -1.7616], [-50.4033, -2.0155], [-49.9991, -1.8317], [-49.7195, -1.9263], [-49.3138, -1.7318], [-48.9913, -1.8299], [-48.115, -0.7375], [-47.3981, -0.6265], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.2192, -1.0314], [-45.6448, -1.3478], [-45.0764, -1.4664], [-44.6513, -1.7456], [-44.3082, -2.5353], [-43.9329, -2.5832], [-42.9368, -2.4652], [-42.2496, -2.7918], [-41.8762, -2.7466], [-41.3182, -2.9361], [-40.4745, -2.7955], [-39.9647, -2.8616], [-38.4757, -3.7174], [-38.0489, -4.2163], [-37.1747, -4.9123], [-36.5907, -5.0975], [-35.9799, -5.0544], [-35.5493, -5.1293], [-35.2355, -5.5666], [-34.9882, -6.3936], [-34.8056, -7.2886], [-34.8347, -7.9716], [-35.1578, -8.9304], [-35.341, -9.2306], [-36.3983, -10.4842], [-36.9378, -10.8206], [-37.4119, -11.497], [-37.6887, -12.0998], [-38.2398, -12.8443], [-38.788, -12.7825], [-38.8353, -13.147], [-39.0894, -13.5882], [-38.9422, -14.0308], [-39.0596, -14.6548], [-38.8805, -15.8645], [-39.2152, -17.3156], [-39.154, -17.7039], [-39.4869, -17.9904], [-39.7399, -18.6397], [-39.6999, -19.278], [-40.0013, -19.7419], [-40.3959, -20.5693], [-40.7893, -20.9062], [-41.0472, -21.506], [-41.1226, -22.0843], [-41.7054, -22.3098], [-41.9804, -22.5806], [-42.0423, -22.9472], [-42.9583, -22.9672], [-43.5327, -23.0462], [-43.8661, -22.9103], [-44.6373, -23.0555], [-45.4232, -23.6854], [-45.9722, -23.7955], [-46.8672, -24.2363], [-47.8766, -24.9975], [-48.5452, -25.8162], [-48.6777, -26.703], [-48.5543, -27.1961], [-48.6208, -28.0755], [-48.7997, -28.5753], [-49.2714, -28.871], [-49.7461, -29.3632], [-50.2994, -30.4259], [-51.1572, -30.3641], [-51.4637, -31.0527], [-51.9725, -31.3839], [-52.1935, -31.8855], [-52.1274, -32.1678], [-52.6522, -33.1376], [-53.3707, -33.7422], [-53.5314, -33.1709], [-53.1255, -32.7368], [-53.6018, -32.403], [-53.7618, -32.0568], [-54.2206, -31.8553], [-54.5876, -31.4851], [-55.2546, -31.2258], [-55.5573, -30.876], [-55.8736, -31.0696], [-56.1761, -30.6283], [-56.8329, -30.1072], [-57.2143, -30.2835], [-57.609, -30.188], [-56.9387, -29.5949], [-55.7256, -28.2043], [-55.1015, -27.8669], [-54.8291, -27.5509], [-54.3271, -27.4235], [-53.8381, -27.1212], [-53.6712, -26.225], [-53.8912, -25.6687], [-54.1546, -25.5231], [-54.6159, -25.576], [-54.4731, -25.2204], [-54.2418, -24.0472], [-54.6253, -23.8123], [-55.3662, -23.9913], [-55.6541, -22.8105], [-55.8492, -22.3076], [-56.5239, -22.1024], [-56.9374, -22.2712], [-57.8203, -22.1424], [-57.9856, -22.0461], [-57.8303, -20.9981], [-58.1599, -20.1645], [-58.1315, -19.7445], [-57.8005, -19.0809], [-57.5741, -18.2792], [-57.8325, -17.5123], [-58.396, -17.2343], [-58.5381, -16.3284], [-60.1756, -16.2693], [-60.299, -14.6185], [-60.5065, -13.7897], [-61.0769, -13.4897], [-61.79, -13.5256], [-62.1759, -13.1336], [-62.7655, -12.9973], [-63.0675, -12.6693], [-63.5858, -12.5188], [-64.4205, -12.4399], [-64.5135, -12.2508], [-64.9924, -11.9751], [-65.39, -11.2462], [-65.334, -10.8929], [-65.4368, -10.449], [-65.3132, -10.2533], [-65.3962, -9.7126], [-66.2636, -9.8262], [-66.7301, -9.9755], [-67.5824, -10.5058], [-68.0718, -10.7029], [-68.398, -11.0185], [-69.5786, -10.9519], [-70.2202, -11.0478], [-70.6424, -11.0101], [-70.637, -9.4782], [-71.2381, -9.9661], [-72.1815, -10.0038], [-72.3791, -9.5102], [-73.2093, -9.4116], [-72.9741, -8.993], [-73.5492, -8.3458], [-74.0022, -7.5562], [-73.7496, -7.3356], [-73.758, -6.9058], [-73.1374, -6.466], [-73.2355, -6.0984], [-72.9799, -5.6351], [-72.8871, -5.1228], [-72.6987, -5.0673], [-71.8449, -4.5044], [-70.9737, -4.3505], [-70.7995, -4.1733], [-69.9658, -4.2358], [-69.6691, -2.6676], [-69.4003, -1.1948], [-69.6675, -0.4823], [-70.0706, -0.1387], [-70.0539, 0.5786], [-69.1632, 0.864], [-69.3615, 1.0642], [-69.8522, 1.0594], [-69.8486, 1.7087], [-68.1765, 1.7198], [-67.8152, 1.7899], [-67.352, 2.086], [-66.8761, 1.2231], [-66.4293, 0.8219], [-66.06, 0.7854], [-65.6814, 0.9835], [-65.3609, 0.8685], [-65.1037, 1.1082], [-64.1149, 1.6191], [-64.0354, 1.9045], [-63.394, 2.2224], [-63.3894, 2.4118], [-63.9243, 2.4523], [-64.2188, 3.2046], [-64.2212, 3.5873], [-64.5679, 3.8998], [-64.2556, 4.1404], [-64.0215, 3.9291], [-63.2948, 3.9224], [-62.9685, 3.594], [-62.7122, 4.0179], [-62.1531, 4.0982], [-61.0028, 4.5355], [-60.6046, 4.9944], [-60.7422, 5.2022], [-60.1421, 5.239], [-59.9907, 5.0828], [-60.1112, 4.511], [-59.8333, 4.476], [-59.5513, 3.9336], [-59.8544, 3.5873], [-59.9942, 2.6902], [-59.7552, 2.2742], [-59.7563, 1.9005], [-59.2312, 1.3758], [-58.8626, 1.2036], [-58.5119, 1.2848], [-58.3407, 1.5876], [-57.5943, 1.7043], [-57.119, 2.0141], [-56.8369, 1.8814], [-56.4828, 1.9422]]], [[[-49.6287, -0.2293], [-49.1169, -0.1635], [-48.3798, -0.3527], [-48.5396, -0.8011], [-48.9289, -1.4824], [-49.5879, -1.7123], [-50.5076, -1.7877], [-50.7597, -1.2405], [-50.7713, -0.6452], [-50.6454, -0.2728], [-50.2481, -0.1166], [-49.6287, -0.2293]]], [[[-51.8326, -1.4335], [-51.5461, -0.6496], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.8326, -1.4335]]]] }, \"properties\": { \"id\": \"BR\", \"name\": \"Brazil\" }, \"id\": \"BR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-59.4933, 13.0821], [-59.6114, 13.1022], [-59.5916, 13.3178], [-59.4276, 13.1527], [-59.4933, 13.0821]]] }, \"properties\": { \"id\": \"BB\", \"name\": \"Barbados\" }, \"id\": \"BB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[115.0267, 4.8999], [114.7465, 4.7179], [114.8402, 4.3934], [114.6084, 4.0241], [114.0638, 4.5928], [114.2995, 4.6074], [115.0267, 4.8999], [115.1399, 4.8999], [115.0267, 4.8999]]] }, \"properties\": { \"id\": \"BN\", \"name\": \"Brunei\" }, \"id\": \"BN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[91.6317, 27.7599], [91.5949, 27.5575], [92.0835, 27.2907], [91.9984, 26.8548], [90.7395, 26.7718], [90.3457, 26.8903], [89.7638, 26.7017], [88.8578, 26.9613], [88.8912, 27.316], [89.537, 28.1075], [89.9808, 28.3112], [90.353, 28.0804], [91.6056, 27.9516], [91.6317, 27.7599]]] }, \"properties\": { \"id\": \"BT\", \"name\": \"Bhutan\" }, \"id\": \"BT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.2588, -17.7936], [25.2241, -17.9152], [25.7613, -18.6496], [26.1683, -19.5381], [26.6783, -19.8928], [27.2217, -20.1458], [27.2807, -20.4787], [27.6997, -20.5308], [27.6695, -21.0643], [28.0455, -21.5729], [29.0371, -21.8113], [29.3648, -22.194], [28.8397, -22.4807], [28.2102, -22.6938], [27.8906, -23.0737], [27.1462, -23.5243], [26.8349, -24.2408], [26.3974, -24.6136], [25.9123, -24.7476], [25.5836, -25.6061], [24.7483, -25.8174], [23.8938, -25.6008], [23.2661, -25.2665], [22.8786, -25.4579], [22.6403, -26.0714], [22.0908, -26.5801], [21.6464, -26.8544], [20.7399, -26.849], [20.6267, -26.4438], [20.7932, -25.9155], [20.3454, -25.0299], [19.9804, -24.7769], [19.9774, -21.9999], [20.9708, -21.9999], [20.977, -20.1525], [20.9739, -18.3188], [23.2985, -18.0276], [23.5804, -18.4529], [24.3591, -17.9782], [25.2588, -17.7936]]] }, \"properties\": { \"id\": \"BW\", \"name\": \"Botswana\" }, \"id\": \"BW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[5.6937, 50.7745], [5.7973, 50.7546], [5.9939, 50.7504], [6.3645, 50.3162], [6.1163, 50.1209], [5.7439, 49.9196], [5.7896, 49.5384], [4.8677, 49.788], [4.1744, 50.2466], [2.8396, 50.7117], [2.5249, 51.0971], [3.35, 51.3776], [3.9022, 51.2076], [4.2262, 51.3865], [4.5032, 51.4746], [5.827, 51.1257], [5.6937, 50.7745]]] }, \"properties\": { \"id\": \"BE\", \"name\": \"Belgium\" }, \"id\": \"BE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [23.2559, 10.4579], [23.6461, 9.8231], [23.5373, 8.8159], [24.1472, 8.6654], [24.2916, 8.2912], [24.8534, 8.1377], [25.2472, 7.7244], [25.3808, 7.3333], [25.8891, 7.0648], [26.3619, 6.6355], [26.5141, 6.0692], [27.0837, 5.777], [27.4032, 5.1094], [27.1151, 5.1977], [26.8222, 5.0624], [25.525, 5.3122], [25.2494, 5.0247], [24.7655, 4.9301], [24.3199, 4.994], [23.417, 4.6633], [22.7557, 4.6469], [22.4223, 4.135], [21.5376, 4.2447], [20.558, 4.4627], [20.2264, 4.8297], [19.8064, 5.0894], [19.501, 5.1276], [19.0687, 4.8914], [18.5675, 4.2576], [18.6101, 3.4785], [18.161, 3.4998], [17.4378, 3.6845], [16.6734, 3.5354], [16.4683, 2.8318], [16.1835, 2.2703], [16.0636, 2.9086], [15.775, 3.1269], [15.1288, 3.827], [15.0226, 4.3584], [14.7088, 4.6655], [14.6169, 5.8649], [14.7394, 6.2799], [15.2459, 7.2636], [15.4803, 7.5237], [15.8451, 7.4754], [16.3787, 7.6835], [16.7848, 7.5508], [17.6496, 7.9836], [18.4553, 8.032], [19.1086, 8.6561], [19.1455, 9.0161], [20.3422, 9.127], [20.7732, 9.4058], [21.2637, 9.9745], [21.7258, 10.3665], [21.7063, 10.5746], [22.4938, 10.9963], [22.86, 10.9195]]] }, \"properties\": { \"id\": \"CF\", \"name\": \"Central African Republic\" }, \"id\": \"CF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-69.4889, 83.0169], [-63.641, 82.8127], [-61.3925, 82.4418], [-62.1766, 82.0435], [-64.5741, 81.7336], [-65.4839, 81.2848], [-70.1434, 80.3977], [-71.3878, 79.7618], [-75.2595, 79.4209], [-76.2558, 79.0068], [-74.4332, 78.724], [-75.866, 78.0098], [-78.0127, 77.9461], [-78.0762, 77.5191], [-79.3408, 77.1584], [-78.2888, 76.978], [-78.2844, 76.5711], [-80.6903, 76.1765], [-81.1708, 76.5128], [-83.8856, 76.453], [-85.1412, 76.3046], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-86.8737, 77.2004], [-88.0946, 77.7193], [-87.018, 77.8921], [-87.5517, 78.1767], [-86.808, 78.7744], [-84.3162, 78.9753], [-85.0899, 79.6122], [-86.4207, 79.8452], [-86.3073, 80.3193], [-83.7236, 80.2291], [-80.0511, 80.5286], [-83.4014, 80.714], [-85.3074, 80.526], [-88.9214, 80.8056], [-89.9474, 81.1725], [-88.8923, 81.4742], [-91.6476, 81.6839], [-82.1225, 82.6018], [-79.8864, 82.9386], [-69.97, 83.1161], [-69.4889, 83.0169]]], [[[-91.8857, 81.1328], [-90.643, 80.5937], [-87.6749, 80.3722], [-87.1442, 79.6626], [-85.5014, 79.5304], [-85.2899, 79.2083], [-87.0164, 78.8987], [-88.7911, 78.1925], [-90.6144, 78.1498], [-92.6782, 78.3891], [-95.1032, 79.29], [-95.297, 79.6531], [-96.7733, 80.1358], [-95.6146, 80.3961], [-96.1328, 80.6914], [-95.2697, 81.0007], [-91.8857, 81.1328]]], [[[-103.426, 79.3157], [-99.6094, 78.5831], [-99.1663, 77.8569], [-100.5859, 77.8917], [-101.0742, 78.1938], [-102.7313, 78.3711], [-103.5183, 78.7691], [-105.5358, 79.0325], [-105.3878, 79.3235], [-103.426, 79.3157]]], [[[-96.2045, 78.5314], [-94.8873, 78.3451], [-95.087, 77.9927], [-96.9895, 77.806], [-98.2549, 78.4293], [-96.2045, 78.5314]]], [[[-109.816, 78.6503], [-109.3906, 78.3367], [-113.1499, 78.4084], [-110.4077, 78.7566], [-109.816, 78.6503]]], [[[-110.4581, 78.1032], [-109.7719, 77.9574], [-110.1985, 77.5246], [-111.952, 77.3442], [-113.1643, 77.5302], [-113.2151, 77.9035], [-110.4581, 78.1032]]], [[[-95.4842, 77.7921], [-93.301, 77.7399], [-93.5196, 77.4744], [-95.987, 77.484], [-95.4842, 77.7921]]], [[[-115.5513, 77.3632], [-116.2205, 76.6111], [-119.3679, 76.2218], [-119.9127, 75.8589], [-121.9083, 76.0347], [-121.6138, 76.4415], [-119.0903, 77.3051], [-115.5513, 77.3632]]], [[[-94.2949, 76.9125], [-92.7162, 76.6029], [-91.305, 76.6808], [-90.2515, 76.0536], [-88.2014, 75.512], [-86.0687, 75.5022], [-83.932, 75.8189], [-82.1538, 75.8309], [-79.6602, 75.4494], [-79.508, 74.8801], [-80.2777, 74.5816], [-81.8089, 74.4767], [-85.0116, 74.6043], [-85.8079, 74.499], [-89.8444, 74.5486], [-91.9615, 74.7931], [-92.4281, 75.3828], [-92.1851, 75.8465], [-93.0917, 76.3541], [-95.2739, 76.2644], [-96.6397, 76.703], [-95.6383, 77.0639], [-94.2949, 76.9125]]], [[[-108.3869, 76.0666], [-105.4809, 75.7457], [-105.8625, 75.1915], [-107.1533, 74.9272], [-108.8312, 75.0648], [-110.9408, 74.6386], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.4518, 75.0879], [-115.7289, 74.9683], [-117.6001, 75.2717], [-116.6098, 76.0738], [-115.5806, 76.4375], [-114.1939, 76.4515], [-112.6975, 76.2016], [-111.0527, 75.5484], [-109.0865, 75.5064], [-108.9449, 75.6989], [-110.2701, 76.4169], [-109.3386, 76.76], [-108.467, 76.7376], [-108.3869, 76.0666]]], [[[-97.7008, 76.4664], [-97.4097, 75.5522], [-97.7994, 75.1167], [-100.2344, 75.0077], [-100.712, 75.4064], [-102.5413, 75.5136], [-101.4314, 75.9919], [-102.1378, 76.2848], [-100.388, 76.6135], [-97.7008, 76.4664]]], [[[-102.2275, 76.0149], [-103.3148, 75.7641], [-104.3506, 76.1823], [-102.5841, 76.2817], [-102.2275, 76.0149]]], [[[-93.5427, 75.0279], [-93.5471, 74.691], [-94.6973, 74.6422], [-96.5658, 75.0988], [-95.6707, 75.5287], [-94.4272, 75.5934], [-93.5427, 75.0279]]], [[[-119.7363, 74.1126], [-117.5149, 74.2318], [-115.5107, 73.6188], [-115.4468, 73.4388], [-118.9615, 72.6842], [-120.18, 72.2126], [-120.6192, 71.5057], [-123.2107, 71.1235], [-124.0077, 71.6775], [-125.7627, 72.1375], [-124.9872, 72.5881], [-124.8365, 73.0762], [-123.7973, 73.7681], [-124.6962, 74.3481], [-121.3153, 74.5299], [-119.7363, 74.1126]]], [[[-93.4102, 74.1788], [-92.2228, 73.9723], [-90.3547, 73.8687], [-92.118, 72.7539], [-93.3407, 72.8018], [-94.0377, 72.0288], [-95.1929, 72.0275], [-95.5475, 72.7816], [-95.633, 73.6954], [-95.0397, 74.0239], [-93.4102, 74.1788]]], [[[-100.002, 73.9459], [-99.158, 73.7316], [-97.5819, 73.8876], [-97.0017, 73.6665], [-97.7959, 73.2852], [-97.0519, 72.6367], [-96.6134, 71.8339], [-98.663, 71.3021], [-99.167, 71.3671], [-100.5944, 72.1524], [-101.7239, 72.3149], [-102.7137, 72.783], [-100.4848, 72.773], [-100.2827, 73.1203], [-101.4509, 73.4311], [-100.9151, 73.8052], [-100.002, 73.9459]]], [[[-86.5894, 71.0107], [-84.7896, 71.0933], [-84.6995, 71.6315], [-85.9116, 71.9866], [-85.3412, 72.4216], [-85.6446, 72.7745], [-85.0185, 73.3356], [-82.6596, 73.7296], [-81.4061, 73.6345], [-80.2748, 72.7454], [-80.9413, 72.2101], [-78.4531, 72.4351], [-77.7533, 72.7248], [-75.2943, 72.4809], [-74.9032, 72.1005], [-73.7137, 71.7198], [-71.6407, 71.5163], [-70.7926, 71.1033], [-70.5609, 70.7381], [-69.1686, 70.7642], [-67.3637, 70.0344], [-66.6853, 69.2857], [-67.7517, 69.0387], [-68.038, 68.5507], [-67.033, 68.3261], [-66.2252, 67.9587], [-64.5275, 67.8127], [-64.0079, 67.3473], [-61.9685, 67.019], [-61.2998, 66.6488], [-61.9915, 66.0353], [-62.6589, 65.6398], [-63.3642, 65.5433], [-63.4018, 65.1185], [-64.6653, 65.1689], [-65.4015, 65.7639], [-65.3055, 66.0085], [-66.4771, 66.2798], [-67.1833, 66.0345], [-68.2569, 65.9386], [-67.3034, 65.4829], [-66.8606, 65.0917], [-65.2748, 64.6316], [-65.0107, 64.0088], [-64.6785, 64.0281], [-64.5144, 63.2639], [-64.6724, 62.9219], [-65.3966, 62.7883], [-66.6364, 63.0802], [-67.6761, 63.0935], [-66.2813, 62.3026], [-66.2567, 61.8684], [-67.4401, 62.1513], [-69.0823, 62.4052], [-69.5452, 62.7445], [-70.2362, 62.7634], [-71.2538, 63.0424], [-73.4437, 64.4236], [-74.5124, 64.6702], [-75.0675, 64.4567], [-76.7239, 64.242], [-77.7912, 64.367], [-78.0957, 64.9392], [-77.4474, 65.1615], [-77.3267, 65.4532], [-75.8283, 65.2271], [-73.5607, 65.5429], [-74.434, 66.139], [-73.0334, 66.7283], [-72.2202, 67.2543], [-73.3283, 68.2668], [-74.648, 68.7076], [-74.9172, 68.9828], [-76.4034, 68.6923], [-75.7873, 69.3186], [-77.1289, 69.6527], [-78.9797, 70.5812], [-79.3475, 70.3722], [-78.7778, 70.0477], [-79.3033, 69.8948], [-81.0982, 70.0912], [-82.1387, 69.8413], [-86.3219, 70.1454], [-86.6244, 70.4012], [-87.9006, 70.2519], [-88.8483, 70.5229], [-89.3654, 71.0671], [-87.8449, 70.9443], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8458, 71.4924], [-90.0251, 71.9489], [-89.2631, 73.0691], [-87.7197, 73.7229], [-85.1106, 73.8081], [-86.6294, 72.8709], [-86.036, 71.7709], [-85.0233, 71.3532], [-86.5894, 71.0107]]], [[[-79.5373, 73.6545], [-78.2866, 73.6658], [-77.2066, 73.4996], [-76.2896, 73.081], [-76.4005, 72.8207], [-77.8361, 72.8968], [-79.5007, 72.7559], [-80.8241, 73.3807], [-80.849, 73.7212], [-79.5373, 73.6545]]], [[[-105.289, 72.9199], [-106.9216, 73.4799], [-105.5122, 73.7658], [-104.583, 73.3538], [-105.289, 72.9199]]], [[[-114.5215, 72.593], [-113.5001, 72.6944], [-112.7537, 72.986], [-111.2698, 72.7137], [-108.7549, 72.551], [-107.7199, 73.3289], [-106.4822, 73.1962], [-105.415, 72.7883], [-104.3495, 71.4339], [-104.5696, 71.1039], [-103.105, 70.5102], [-101.1486, 70.1476], [-100.935, 69.7152], [-102.2343, 69.8422], [-102.9197, 69.5648], [-101.9756, 69.407], [-101.857, 69.0239], [-103.4681, 68.8086], [-105.0195, 69.0814], [-106.1408, 69.1621], [-106.659, 69.4396], [-107.4398, 69.0021], [-108.946, 68.7597], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6941, 69.195], [-116.5134, 69.4247], [-117.1354, 70.1001], [-114.5923, 70.3125], [-112.6378, 70.2252], [-112.1143, 70.4467], [-113.7573, 70.6907], [-115.991, 70.5864], [-117.587, 70.6296], [-118.2642, 70.8882], [-117.814, 71.1585], [-118.8683, 71.6868], [-118.9447, 71.9855], [-118.2136, 72.2629], [-118.3745, 72.5339], [-117.5517, 72.8311], [-114.6382, 73.3726], [-114.1091, 72.8611], [-114.5215, 72.593]]], [[[-74.7088, 45.0038], [-75.1794, 44.8994], [-75.7919, 44.4969], [-76.8937, 44.0755], [-77.2102, 43.8638], [-77.7074, 44.0185], [-78.9957, 43.8352], [-79.5425, 43.5782], [-79.7162, 43.2304], [-79.0592, 43.278], [-79.0661, 43.1061], [-79.069, 42.8425], [-80.2135, 42.7783], [-80.4205, 42.5784], [-81.2024, 42.6616], [-82.4573, 42.0525], [-82.9832, 41.9883], [-83.0732, 42.3003], [-82.8817, 42.3798], [-82.5755, 42.6044], [-82.4173, 43.0174], [-81.7238, 43.3922], [-81.7309, 44.1095], [-81.2777, 44.5878], [-81.1956, 44.9804], [-80.6067, 44.6271], [-80.082, 44.4772], [-79.7244, 44.7806], [-80.6666, 45.8149], [-81.0021, 45.9613], [-83.5313, 46.2896], [-84.0377, 46.1587], [-84.1921, 46.5494], [-84.5035, 46.494], [-84.5806, 46.7653], [-84.455, 46.9466], [-84.8062, 47.0437], [-84.6149, 47.3083], [-85.0289, 47.5676], [-84.9314, 47.9436], [-85.8256, 47.9602], [-86.1539, 48.2291], [-86.4775, 48.7535], [-87.2537, 48.7535], [-88.0889, 48.9915], [-88.4791, 48.825], [-88.6528, 48.4704], [-89.163, 48.4299], [-89.5776, 48.0019], [-90.8403, 48.2007], [-91.5184, 48.0582], [-92.9962, 48.6117], [-93.2579, 48.629], [-93.378, 48.6165], [-93.3769, 48.617], [-93.378, 48.6165], [-93.7078, 48.5256], [-94.6209, 48.7426], [-95.162, 48.9917], [-97.5298, 48.9933], [-99.2354, 48.993], [-101.7935, 48.993], [-104.352, 48.993], [-106.4839, 48.993], [-109.4684, 48.993], [-112.0268, 48.993], [-113.7322, 48.993], [-116.2906, 48.993], [-118.849, 48.993], [-120.5544, 48.993], [-122.7888, 48.993], [-123.0491, 48.993], [-123.3356, 49.4591], [-123.859, 49.4829], [-124.1415, 49.7927], [-124.7823, 50.0202], [-125.0566, 50.4185], [-126.4045, 50.5298], [-126.6318, 50.9151], [-127.0577, 50.8675], [-127.7082, 51.1512], [-127.9022, 52.1509], [-128.3576, 52.1588], [-128.1088, 52.858], [-128.6524, 53.2437], [-129.2843, 53.3931], [-129.5637, 53.2515], [-130.3351, 53.724], [-130.0433, 54.1335], [-130.4303, 54.4209], [-129.6666, 55.4365], [-130.0251, 55.8882], [-130.4772, 56.2307], [-131.5751, 56.5989], [-131.8661, 56.7929], [-133.8208, 58.7049], [-134.9439, 59.2882], [-135.4758, 59.7933], [-136.3219, 59.6049], [-136.5787, 59.1522], [-137.4386, 58.9031], [-137.5933, 59.2263], [-139.1852, 60.0837], [-141.0021, 60.3003], [-141.0021, 62.9301], [-141.0021, 64.6832], [-141.0021, 67.021], [-141.0021, 69.6509], [-139.1815, 69.5155], [-138.1283, 69.1519], [-136.7174, 68.8892], [-135.8763, 68.9169], [-135.6913, 69.311], [-135.1409, 69.4677], [-133.1632, 69.4338], [-130.4985, 70.1431], [-128.9715, 69.7123], [-127.765, 70.2219], [-127.1385, 70.2392], [-126.0638, 69.4671], [-124.7678, 69.99], [-123.6091, 69.3774], [-123.0258, 69.81], [-120.9623, 69.6604], [-120.2925, 69.4205], [-118.8687, 69.2571], [-118.0953, 69.0429], [-116.0652, 68.8554], [-115.6312, 68.9726], [-114.4139, 68.6597], [-115.1332, 67.8191], [-112.4352, 67.6848], [-110.9901, 67.7907], [-110.0426, 67.9772], [-109.6305, 67.7328], [-108.5929, 67.591], [-107.6263, 67.003], [-108.261, 68.1498], [-108.3134, 68.6108], [-106.1645, 68.9197], [-105.4285, 68.4583], [-104.1935, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.0321, 67.7188], [-98.4171, 67.8265], [-98.2184, 68.3174], [-97.2659, 68.453], [-96.036, 68.1578], [-96.3714, 67.5539], [-95.7825, 67.1937], [-95.2588, 67.2625], [-95.6505, 67.7374], [-93.6517, 68.5431], [-93.6814, 68.8873], [-94.3382, 69.4742], [-96.0503, 69.8311], [-96.4924, 70.1249], [-96.2265, 70.5418], [-96.549, 70.8088], [-96.4056, 71.2737], [-95.2013, 71.9036], [-94.3084, 71.7649], [-92.9488, 71.2622], [-92.9814, 70.8522], [-91.5641, 70.1782], [-92.751, 69.7139], [-90.8221, 69.2904], [-90.4683, 68.8638], [-89.0568, 69.266], [-88.0413, 68.8117], [-87.8103, 68.4042], [-88.347, 68.2883], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-85.9526, 68.0724], [-85.7337, 68.6301], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5074, 69.8453], [-82.6183, 69.691], [-82.6421, 69.4585], [-81.3286, 69.12], [-81.2816, 68.6572], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.2702, 67.4598], [-81.4675, 67.0698], [-82.6416, 66.5876], [-84.4785, 66.1794], [-85.604, 66.5683], [-86.6331, 66.5314], [-86.0429, 66.0225], [-87.2914, 65.3548], [-87.9701, 65.3489], [-89.7495, 65.9359], [-89.9241, 65.7804], [-88.974, 65.3482], [-87.0275, 65.1982], [-87.2805, 64.8262], [-88.1057, 64.1832], [-88.653, 64.0094], [-90.1418, 63.982], [-90.0135, 63.8043], [-91.3301, 63.5067], [-90.7466, 63.3516], [-90.8712, 62.9459], [-91.4491, 62.804], [-92.3613, 62.8194], [-93.4207, 61.7058], [-93.9127, 61.4815], [-94.6466, 60.4163], [-94.7858, 59.9534], [-94.7134, 58.9033], [-94.2871, 58.716], [-93.2781, 58.7564], [-92.249, 57.0091], [-91.1113, 57.2412], [-90.5922, 57.2246], [-89.791, 56.9813], [-88.9484, 56.8512], [-88.0751, 56.4673], [-87.5608, 56.0564], [-85.8306, 55.657], [-85.061, 55.2856], [-83.9107, 55.3147], [-82.5775, 55.1487], [-82.2195, 54.8136], [-82.4181, 54.3559], [-82.1414, 53.8177], [-82.2605, 52.9612], [-81.5994, 52.4325], [-81.6613, 52.2938], [-80.6579, 51.7582], [-80.368, 51.3299], [-79.8362, 51.1734], [-79.4976, 51.5698], [-78.9777, 51.7339], [-78.4917, 52.2521], [-78.7238, 52.6278], [-79.2418, 54.0989], [-79.6656, 54.6975], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1073], [-76.573, 57.1812], [-77.1569, 58.0188], [-78.5152, 58.6822], [-77.7606, 59.3801], [-77.3119, 60.0424], [-77.8716, 60.7859], [-77.7362, 61.4373], [-78.1372, 62.1073], [-78.0682, 62.3555], [-77.3724, 62.5725], [-74.6899, 62.1834], [-73.63, 62.4543], [-72.0814, 61.7283], [-71.4227, 61.159], [-70.2792, 61.0686], [-69.4334, 60.8143], [-69.7595, 60.4403], [-69.682, 59.3417], [-69.1735, 58.8967], [-68.6981, 58.9044], [-67.5697, 58.2135], [-66.608, 58.5489], [-65.6061, 59.1106], [-64.9312, 60.2519], [-64.4996, 60.2683], [-63.1854, 58.8578], [-62.5939, 58.4741], [-62.3056, 57.9723], [-61.899, 57.8613], [-61.8511, 57.3812], [-61.3337, 57.0106], [-61.5146, 56.3902], [-59.9303, 55.2594], [-58.997, 55.1493], [-58.7802, 54.8384], [-58.1952, 54.8659], [-57.4045, 54.5705], [-58.1514, 54.3504], [-57.4161, 54.1628], [-57.1489, 53.8476], [-56.4651, 53.7651], [-55.7979, 53.212], [-55.8337, 52.3104], [-55.6952, 52.1377], [-56.976, 51.4577], [-58.5103, 51.295], [-59.1655, 50.7799], [-60.0801, 50.2545], [-61.2897, 50.202], [-62.7155, 50.3016], [-64.868, 50.2754], [-65.2686, 50.3201], [-66.4955, 50.212], [-66.9412, 49.9937], [-67.3719, 49.3486], [-68.282, 49.1972], [-68.9291, 48.829], [-69.775, 48.0981], [-69.9055, 47.8322], [-70.7058, 47.1397], [-71.2678, 46.7957], [-71.8797, 46.687], [-72.981, 46.2098], [-73.974, 45.3451], [-74.7088, 45.0038]]], [[[-97.4394, 69.6427], [-96.3, 69.3443], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.4721, 68.5438], [-99.2541, 68.8631], [-99.5641, 69.0341], [-97.4394, 69.6427]]], [[[-75.6759, 68.3225], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.7801, 67.2836], [-77.0048, 67.267], [-77.3058, 67.7061], [-76.7403, 68.2313], [-75.6759, 68.3225]]], [[[-85.0559, 65.4374], [-83.4071, 65.1038], [-82.0501, 64.6442], [-81.7161, 64.0219], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0462, 63.4615], [-82.3781, 63.7067], [-82.4672, 63.9268], [-83.4943, 64.0993], [-83.7283, 63.8134], [-84.633, 63.3092], [-85.4954, 63.1392], [-85.7142, 63.6579], [-87.1889, 63.6723], [-86.252, 64.1369], [-86.3743, 64.5659], [-85.9617, 65.7043], [-85.241, 65.7954], [-85.0559, 65.4374]]], [[[-82.0477, 62.9705], [-82.1138, 62.6522], [-83.0158, 62.2099], [-83.6989, 62.1602], [-83.8994, 62.4764], [-83.3765, 62.905], [-82.0477, 62.9705]]], [[[-79.5452, 62.4116], [-79.324, 62.0261], [-79.7143, 61.6126], [-80.2652, 61.8182], [-80.0216, 62.3431], [-79.5452, 62.4116]]], [[[-78.9356, 56.2662], [-79.1755, 55.8851], [-80.0009, 55.9321], [-79.5963, 56.2444], [-78.9356, 56.2662]]], [[[-132.6556, 54.1275], [-131.7026, 53.9863], [-132.0112, 53.2653], [-132.7475, 53.3105], [-133.0522, 53.7782], [-132.6556, 54.1275]]], [[[-131.8535, 53.2298], [-131.6524, 53.103], [-131.8097, 52.5417], [-132.3455, 53.1361], [-131.8535, 53.2298]]], [[[-80.7318, 52.7472], [-81.8391, 52.9579], [-81.8473, 53.1862], [-81.1357, 53.2058], [-80.7318, 52.7472]]], [[[-55.4588, 51.5365], [-55.8714, 50.9073], [-56.6939, 50.0597], [-55.7648, 49.9605], [-55.892, 49.5803], [-54.9827, 49.268], [-54.579, 49.4908], [-53.9578, 49.4418], [-53.5733, 49.1413], [-53.853, 48.8112], [-53.5312, 48.2317], [-52.955, 48.0293], [-53.1756, 47.6529], [-52.6536, 47.5494], [-53.0697, 46.6812], [-53.6164, 46.6803], [-54.1737, 46.8805], [-53.8692, 47.387], [-54.8567, 47.3848], [-56.2212, 47.6716], [-56.9524, 47.5744], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.3623, 47.8655], [-58.7105, 48.325], [-58.7165, 48.5979], [-58.0158, 49.5426], [-57.4656, 50.4637], [-56.7503, 51.2748], [-56.0256, 51.5685], [-55.4588, 51.5365]]], [[[-127.1972, 50.6402], [-125.4821, 50.3167], [-124.6429, 49.4287], [-123.9959, 49.2241], [-123.497, 48.582], [-123.5947, 48.3334], [-124.6892, 48.5975], [-125.8286, 49.0917], [-125.8354, 49.2767], [-126.5485, 49.4189], [-126.683, 49.8764], [-127.1143, 49.8797], [-128.2675, 50.6092], [-127.9181, 50.8605], [-127.1972, 50.6402]]], [[[-61.8011, 49.094], [-62.2195, 49.0791], [-63.5658, 49.3994], [-64.1315, 49.9416], [-62.8585, 49.7054], [-61.8171, 49.2835], [-61.8011, 49.094]]], [[[-74.7088, 45.0038], [-73.558, 45.425], [-73.1596, 46.0101], [-71.901, 46.632], [-71.2611, 46.7563], [-70.5196, 47.0323], [-68.9871, 48.2748], [-67.5608, 48.8558], [-66.1781, 49.2132], [-64.8365, 49.1916], [-64.2619, 48.9218], [-64.2538, 48.5505], [-65.2595, 48.0214], [-65.9267, 48.1887], [-65.6665, 47.6959], [-65.2282, 47.8114], [-64.7033, 47.7248], [-64.9121, 47.3688], [-65.3189, 47.1012], [-64.9057, 46.8881], [-64.5415, 46.2404], [-63.2928, 45.7521], [-62.4832, 45.6216], [-61.9556, 45.868], [-61.4924, 45.6869], [-61.2838, 45.2355], [-63.7611, 44.4861], [-64.286, 44.5501], [-64.8624, 43.8678], [-65.7382, 43.5607], [-66.1257, 43.8137], [-66.0995, 44.3677], [-65.6568, 44.7605], [-64.4489, 45.2558], [-64.8979, 45.6261], [-65.8845, 45.223], [-66.8726, 45.0672], [-67.1249, 45.1693], [-67.4725, 45.2759], [-67.4328, 45.603], [-67.7846, 45.7016], [-67.8067, 47.0829], [-68.311, 47.3546], [-68.8288, 47.2033], [-69.243, 47.4629], [-70.0078, 46.7087], [-70.2963, 45.9062], [-70.898, 45.2625], [-71.3272, 45.2901], [-71.5174, 45.0078], [-74.7088, 45.0038]]], [[[-63.8337, 46.4939], [-63.1295, 46.422], [-62.1636, 46.4872], [-62.8785, 46.0012], [-63.117, 46.2529], [-63.5689, 46.2093], [-63.8337, 46.4939]]], [[[-61.1053, 45.9448], [-60.8062, 45.738], [-60.5049, 46.204], [-59.8651, 46.1597], [-60.3862, 45.6545], [-61.2838, 45.5737], [-61.4953, 45.9413], [-60.8702, 46.7966], [-60.3318, 46.7678], [-60.5769, 46.1721], [-61.1053, 45.9448]]], [[[-82.8067, 45.9898], [-82.0036, 45.9755], [-81.589, 45.7729], [-81.818, 45.5329], [-82.7175, 45.8042], [-82.8067, 45.9898]]]] }, \"properties\": { \"id\": \"CA\", \"name\": \"Canada\" }, \"id\": \"CA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[96.8403, -12.1819], [96.8351, -12.1798], [96.8279, -12.1509], [96.8257, -12.1261], [96.8328, -12.1261], [96.8395, -12.1602], [96.8403, -12.1819]]] }, \"properties\": { \"id\": \"CC\", \"name\": \"Cocos (Keeling) Islands\" }, \"id\": \"CC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5242, 47.5242], [9.5277, 47.2707], [9.4877, 47.062], [9.5801, 47.0572], [10.4527, 46.865], [9.9391, 46.3616], [9.2511, 46.2866], [8.9537, 45.8298], [8.4583, 46.2457], [7.9931, 46.0158], [7.021, 45.9257], [6.7582, 46.4158], [6.06, 46.4282], [7.0007, 47.3226], [7.6154, 47.5925], [8.1982, 47.6067], [8.6177, 47.7661], [9.5242, 47.5242]]] }, \"properties\": { \"id\": \"CH\", \"name\": \"Switzerland\" }, \"id\": \"CH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-67.1948, -22.8216], [-67.0088, -23.0014], [-67.3562, -24.0338], [-68.2502, -24.3921], [-68.562, -24.8378], [-68.3843, -25.0921], [-68.6002, -25.4859], [-68.4144, -26.1538], [-68.5811, -26.5183], [-68.346, -27.028], [-68.8463, -27.1536], [-69.1744, -27.9246], [-69.6569, -28.4139], [-69.8278, -29.1031], [-70.0269, -29.3241], [-69.9277, -29.7695], [-69.9563, -30.358], [-70.1613, -30.4401], [-70.5196, -31.1487], [-70.5853, -31.5695], [-70.1696, -32.4718], [-70.0198, -33.2717], [-69.7978, -33.3987], [-69.8524, -34.2243], [-70.2899, -34.733], [-70.4703, -35.326], [-70.4049, -36.0616], [-71.0556, -36.5237], [-71.1677, -37.7621], [-71.0281, -38.0414], [-70.9517, -38.7383], [-71.4256, -38.9855], [-71.5394, -39.6025], [-71.7199, -39.6354], [-71.6952, -40.3354], [-71.9321, -40.6918], [-71.9114, -41.6506], [-71.75, -42.0466], [-72.1247, -42.2983], [-72.1464, -42.9898], [-71.7816, -43.1669], [-71.905, -43.44], [-71.6802, -43.9295], [-71.82, -44.3832], [-71.2128, -44.4413], [-71.2611, -44.7633], [-71.5962, -44.9793], [-71.3537, -45.2306], [-71.7463, -45.5791], [-71.6315, -45.9537], [-71.8757, -46.1606], [-71.6952, -46.5782], [-71.9402, -46.8312], [-71.905, -47.2015], [-72.346, -47.4926], [-72.518, -47.8762], [-72.3549, -48.3658], [-72.6143, -48.7929], [-73.5762, -49.5829], [-73.5012, -50.1254], [-73.153, -50.7384], [-72.5098, -50.6075], [-72.2763, -50.9102], [-72.4077, -51.541], [-71.9188, -51.9897], [-69.9603, -52.0084], [-68.4432, -52.3568], [-69.2409, -52.2055], [-69.5606, -52.4217], [-70.795, -52.7688], [-70.9959, -53.7791], [-71.2977, -53.8833], [-72.1744, -53.6321], [-71.8528, -53.2855], [-71.4002, -53.107], [-71.3878, -52.7643], [-72.4583, -53.2544], [-73.0527, -53.2433], [-74.0144, -52.6391], [-73.5183, -52.0408], [-73.9733, -51.7847], [-73.8958, -51.3315], [-74.8147, -51.0629], [-75.0948, -50.6812], [-74.3338, -49.9745], [-74.3411, -48.5957], [-74.5772, -48.2744], [-74.6549, -47.7022], [-74.1584, -47.1825], [-74.1519, -46.9742], [-75.6567, -46.6102], [-74.9246, -46.1597], [-75.0666, -45.8751], [-74.158, -45.7673], [-74.0377, -45.4175], [-73.5498, -45.4836], [-73.3625, -44.9781], [-72.7391, -44.7343], [-72.6638, -44.4365], [-73.2651, -44.1689], [-72.9965, -43.6317], [-72.7852, -42.3014], [-72.4994, -41.9808], [-72.6698, -41.6595], [-73.0149, -41.5441], [-73.5214, -41.7971], [-73.9659, -41.1184], [-73.6695, -40.0824], [-73.4104, -39.789], [-73.2264, -39.2244], [-73.5326, -38.3667], [-73.4648, -38.0404], [-73.6619, -37.6987], [-73.6017, -37.1886], [-73.216, -37.1669], [-73.1181, -36.6883], [-72.8746, -36.3905], [-72.6239, -35.5857], [-72.2237, -35.0961], [-72.0028, -34.1652], [-71.6644, -33.6526], [-71.743, -33.095], [-71.4522, -32.6597], [-71.5259, -31.8059], [-71.6619, -31.1695], [-71.6695, -30.3306], [-71.4005, -30.1432], [-71.3157, -29.6496], [-71.5192, -28.9264], [-71.1863, -28.3778], [-71.0527, -27.7274], [-70.6466, -26.3293], [-70.7138, -25.7842], [-70.4455, -25.1724], [-70.5742, -24.6442], [-70.4878, -23.7818], [-70.5633, -23.0568], [-70.3316, -22.8487], [-70.0875, -21.4931], [-70.1971, -20.7255], [-70.1483, -19.8049], [-70.4184, -18.3455], [-69.9263, -18.206], [-69.8522, -17.7039], [-69.5109, -17.506], [-69.3133, -17.9433], [-69.094, -18.0507], [-68.9684, -18.9682], [-68.4628, -19.4329], [-68.6983, -19.7211], [-68.7452, -20.4588], [-68.4998, -20.612], [-68.1969, -21.3004], [-67.9883, -22.0573], [-67.8795, -22.823], [-67.1948, -22.8216]]], [[[-73.7733, -43.3459], [-74.355, -43.2637], [-74.2095, -42.8789], [-74.0368, -41.7954], [-73.5279, -41.8961], [-73.4709, -42.4665], [-73.7893, -42.5859], [-73.4364, -42.9366], [-73.7733, -43.3459]]], [[[-73.7354, -44.3948], [-73.9833, -44.4947], [-73.7271, -45.1192], [-74.0991, -45.3252], [-74.6178, -44.6478], [-74.5017, -44.4733], [-73.7354, -44.3948]]], [[[-72.9861, -44.7801], [-73.4451, -44.6411], [-73.2078, -44.3348], [-72.7641, -44.5488], [-72.9861, -44.7801]]], [[[-74.5672, -48.5918], [-74.923, -48.6264], [-75.2129, -48.1416], [-74.7293, -48.1261], [-74.5672, -48.5918]]], [[[-74.4762, -49.148], [-74.5699, -49.991], [-75.3001, -49.8476], [-75.1842, -49.0836], [-74.7934, -48.705], [-74.4762, -49.148]]], [[[-68.6299, -52.6525], [-68.6533, -54.8538], [-69.4862, -54.8591], [-69.7235, -54.7121], [-70.4972, -54.8093], [-71.4409, -54.6198], [-70.8982, -54.3379], [-70.8678, -53.8843], [-70.0903, -53.4182], [-70.3906, -53.0262], [-69.7637, -52.7315], [-68.6299, -52.6525]]], [[[-72.9233, -53.4817], [-72.2055, -53.8076], [-73.3048, -53.9438], [-73.6865, -53.4266], [-72.9233, -53.4817]]], [[[-69.703, -54.919], [-68.9007, -55.0175], [-68.2826, -55.255], [-68.2933, -55.5214], [-69.4119, -55.4442], [-69.9798, -55.1475], [-69.703, -54.919]]], [[[-67.0799, -55.1538], [-68.07, -55.2213], [-68.1071, -54.9292], [-67.2453, -54.9777], [-67.0799, -55.1538]]]] }, \"properties\": { \"id\": \"CL\", \"name\": \"Chile\" }, \"id\": \"CL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[130.5269, 42.5353], [130.2405, 42.8917], [129.8983, 42.9982], [129.7199, 42.4749], [129.3138, 42.4137], [128.9236, 42.0381], [128.0451, 41.9875], [128.2909, 41.5627], [128.1112, 41.3891], [127.1795, 41.5312], [126.9033, 41.7811], [125.9889, 40.9049], [124.8895, 40.4596], [124.3621, 40.0042], [124.1055, 39.8409], [123.3482, 39.7632], [122.3348, 39.3663], [121.6499, 38.8652], [121.7853, 39.401], [121.5177, 39.6389], [122.2749, 40.5418], [121.859, 40.8423], [121.1745, 40.9013], [120.4789, 40.231], [119.5912, 39.9026], [118.9125, 39.1666], [118.2977, 39.0672], [117.7845, 39.1347], [117.5577, 38.6251], [118.0149, 38.1833], [118.94, 38.0426], [119.0891, 37.7008], [118.9527, 37.3311], [119.45, 37.1247], [120.3702, 37.7008], [120.7502, 37.8341], [121.6401, 37.4603], [122.6025, 37.4266], [122.5195, 36.9467], [121.9326, 36.9595], [120.9899, 36.5978], [120.3933, 36.054], [120.0545, 35.8613], [119.2156, 35.0117], [119.5827, 34.5821], [120.2015, 34.3255], [120.8709, 33.0164], [120.8531, 32.6613], [121.4009, 32.3719], [121.3521, 31.8588], [121.0556, 31.7194], [121.6605, 31.32], [121.8781, 30.9169], [120.9974, 30.5582], [121.1594, 30.3017], [121.9442, 29.8941], [121.7174, 29.2563], [121.6019, 28.3667], [121.0986, 28.2904], [120.2787, 27.0972], [119.6484, 25.9186], [119.5391, 25.5914], [119.0247, 25.2235], [118.5604, 24.5803], [118.0872, 24.6269], [118.0562, 24.246], [116.538, 23.1798], [116.4706, 22.9459], [115.4985, 22.7191], [115.1958, 22.8172], [114.8539, 22.6169], [114.2657, 22.5411], [114.0154, 22.5117], [113.6194, 22.8615], [113.5467, 22.2242], [113.4943, 22.2414], [113.4787, 22.1957], [113.0082, 22.1194], [112.5861, 21.7766], [111.9438, 21.8495], [111.6029, 21.5592], [110.771, 21.3865], [110.1935, 21.0376], [110.5113, 20.5182], [110.1229, 20.2638], [109.6626, 20.9169], [109.9308, 21.4806], [109.5441, 21.5379], [109.1486, 21.4256], [109.0305, 21.6267], [108.3247, 21.6936], [107.9727, 21.5081], [107.3512, 21.6089], [106.7294, 22.0004], [106.5363, 22.3955], [106.7804, 22.7789], [106.5421, 22.9081], [105.8429, 22.9228], [105.2751, 23.3454], [104.8646, 23.1363], [104.7958, 22.9113], [104.3719, 22.7039], [103.3563, 22.7546], [103.0052, 22.4532], [102.5172, 22.7408], [102.1276, 22.379], [101.6712, 22.4625], [101.5243, 22.2539], [101.744, 21.778], [101.705, 21.1503], [101.2241, 21.2236], [101.139, 21.5676], [100.8349, 21.6551], [100.2148, 21.4628], [99.9179, 22.0279], [99.193, 22.126], [99.3377, 22.498], [99.3407, 23.0959], [98.8636, 23.1913], [98.7642, 24.116], [98.2125, 24.1106], [97.6859, 23.898], [97.5315, 24.4916], [97.8196, 25.2519], [98.0109, 25.2922], [98.6545, 25.9178], [98.7318, 26.5835], [98.651, 27.5726], [98.299, 27.55], [98.0988, 28.1421], [97.5377, 28.5101], [97.3224, 28.2179], [96.776, 28.3672], [96.4355, 29.0507], [96.0351, 29.4472], [95.4204, 29.0543], [94.7696, 29.1759], [94.6231, 29.3126], [93.9022, 28.803], [93.2067, 28.5909], [92.7019, 28.1469], [92.6642, 27.949], [91.9775, 27.7301], [91.6317, 27.7599], [91.6056, 27.9516], [90.353, 28.0804], [89.9808, 28.3112], [89.537, 28.1075], [88.8912, 27.316], [88.8484, 27.8687], [88.6212, 28.0919], [88.1098, 27.8704], [87.1413, 27.8384], [86.5544, 28.0852], [86.4089, 27.9286], [85.6782, 28.2775], [85.1225, 28.316], [85.159, 28.5922], [84.7141, 28.5957], [84.2285, 28.9117], [84.1016, 29.2199], [83.5834, 29.1835], [83.1556, 29.6127], [82.8542, 29.6833], [82.1591, 30.1151], [82.0432, 30.327], [81.4169, 30.3375], [81.0103, 30.1645], [80.6823, 30.4149], [80.1912, 30.5684], [79.9246, 30.8889], [79.9166, 30.8942], [79.3696, 31.0797], [79.3386, 31.1055], [79.1073, 31.4025], [78.8446, 31.3017], [78.7198, 31.8876], [78.3895, 32.5197], [79.2191, 32.5011], [79.2165, 32.5641], [79.1353, 33.1718], [79.1126, 33.2265], [78.8018, 33.4998], [78.7532, 34.0875], [78.9364, 34.3522], [78.2821, 34.654], [77.8107, 35.4846], [77.7991, 35.496], [77.4467, 35.4756], [76.2518, 35.8108], [75.945, 36.0176], [75.8402, 36.6497], [75.3466, 36.9134], [74.5414, 37.0221], [74.8912, 37.2317], [74.7452, 38.5101], [74.2774, 38.6597], [73.8015, 38.6068], [73.6314, 39.4489], [73.9147, 39.6065], [73.9914, 40.0433], [74.4118, 40.1373], [75.0044, 40.4494], [75.5836, 40.6052], [75.8718, 40.3034], [76.4804, 40.4494], [76.8239, 40.9821], [78.1232, 41.0758], [78.3624, 41.3718], [79.2937, 41.7829], [80.2162, 42.0324], [80.2095, 42.1899], [80.1651, 42.6653], [80.7856, 43.1616], [80.355, 44.0973], [80.4554, 44.7463], [80.0589, 45.0064], [81.602, 45.3109], [82.4787, 45.1236], [82.3264, 45.52], [83.0042, 47.0337], [83.1929, 47.1864], [84.7861, 46.8308], [85.6565, 47.2547], [85.526, 47.9156], [85.7493, 48.3849], [86.5496, 48.5287], [86.7534, 49.0088], [87.3229, 49.0858], [87.8141, 49.1624], [87.9799, 48.5549], [88.5169, 48.3844], [89.0478, 48.0027], [89.561, 48.004], [90.3133, 47.676], [90.4962, 47.2854], [90.8699, 46.9546], [91.0338, 46.529], [91.0018, 46.0358], [90.6618, 45.5253], [90.8771, 45.1959], [91.5842, 45.0765], [92.7876, 45.0357], [93.6563, 44.9008], [94.7118, 44.3508], [95.3502, 44.278], [95.9127, 43.2065], [96.3854, 42.7204], [97.2057, 42.7897], [99.4677, 42.5682], [99.984, 42.6774], [101.7138, 42.4656], [101.973, 42.2157], [103.0726, 42.0061], [103.7109, 41.7513], [104.4984, 41.877], [104.4984, 41.6586], [105.1971, 41.7381], [106.7702, 42.2889], [108.1712, 42.4474], [109.4433, 42.4559], [110.4005, 42.7737], [111.0073, 43.3414], [111.9331, 43.7116], [111.4022, 44.3672], [111.8981, 45.0641], [113.5871, 44.7459], [114.0305, 44.9425], [114.517, 45.3647], [115.6809, 45.4583], [116.2406, 45.7961], [116.5625, 46.2897], [117.3334, 46.3621], [118.3087, 46.7172], [119.7065, 46.6062], [119.8979, 46.8579], [119.711, 47.1499], [118.4983, 47.984], [117.7685, 47.9881], [117.3508, 47.652], [116.7604, 47.8699], [115.8984, 47.6871], [115.5575, 47.9449], [116.6832, 49.8237], [117.8733, 49.5135], [118.4517, 49.8444], [119.26, 50.0663], [119.1921, 50.3797], [120.067, 51.6007], [120.7498, 52.0965], [120.656, 52.5666], [120.0945, 52.7872], [120.704, 53.1718], [122.3379, 53.485], [123.608, 53.5464], [124.8121, 53.1339], [125.649, 53.0422], [126.313, 52.3996], [126.9247, 51.1002], [127.5901, 50.2091], [127.5027, 49.8735], [127.9998, 49.5685], [128.5268, 49.5943], [129.5339, 49.3235], [130.1962, 48.8916], [130.8043, 48.3414], [130.712, 48.1279], [131.0027, 47.6915], [132.5616, 47.7683], [133.1441, 48.1057], [133.4686, 48.0972], [134.2933, 48.3733], [134.5637, 48.3218], [134.7522, 47.7155], [134.1677, 47.3022], [133.8614, 46.2476], [133.1857, 45.4947], [132.9358, 45.0299], [131.9774, 45.2439], [131.0822, 44.9101], [131.2553, 44.0716], [131.2619, 43.4332], [131.0685, 42.9024], [130.5771, 42.8118], [130.5269, 42.5353]]], [[[110.8886, 19.9917], [111.0138, 19.6553], [110.5722, 19.1719], [110.4514, 18.748], [109.5192, 18.2184], [108.7015, 18.5354], [108.6936, 19.3384], [109.6511, 19.9843], [110.5886, 20.0726], [110.8886, 19.9917]]]] }, \"properties\": { \"id\": \"CN\", \"name\": \"China\" }, \"id\": \"CN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.5236, 10.4259], [-5.0999, 10.2417], [-4.9698, 9.93], [-4.6258, 9.7134], [-3.8777, 9.895], [-3.2236, 9.8955], [-2.6958, 9.4812], [-2.7466, 9.1097], [-2.5058, 8.2087], [-2.7899, 7.9321], [-2.9858, 7.2051], [-3.2357, 6.8073], [-3.2007, 6.3483], [-2.7952, 5.1844], [-3.0191, 5.1307], [-4.0372, 5.2301], [-5.5647, 5.0894], [-6.9229, 4.6385], [-7.5451, 4.3512], [-7.5688, 5.0806], [-7.4299, 5.3247], [-7.4543, 5.8413], [-7.7965, 5.9749], [-7.8886, 6.2347], [-8.6035, 6.5076], [-8.3325, 6.8015], [-8.2965, 7.0741], [-8.4863, 7.5584], [-8.232, 7.5566], [-7.8236, 8.4674], [-7.951, 8.7866], [-7.8962, 9.416], [-8.137, 9.4955], [-8.1366, 10.0219], [-7.9908, 10.1627], [-7.6612, 10.4272], [-7.105, 10.2035], [-6.6932, 10.3496], [-6.2611, 10.7242], [-6.0345, 10.1947], [-5.5236, 10.4259]]] }, \"properties\": { \"id\": \"CI\", \"name\": \"Côte d'Ivoire\" }, \"id\": \"CI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[15.4803, 7.5237], [15.2459, 7.2636], [14.7394, 6.2799], [14.6169, 5.8649], [14.7088, 4.6655], [15.0226, 4.3584], [15.1288, 3.827], [15.775, 3.1269], [16.0636, 2.9086], [16.1835, 2.2703], [16.0595, 1.6764], [15.7417, 1.9152], [14.9024, 2.0124], [14.4842, 2.1549], [13.2937, 2.1615], [13.2203, 2.2565], [11.3485, 2.2995], [11.3285, 2.1673], [9.98, 2.1677], [9.8007, 2.3044], [9.8762, 3.3099], [9.4251, 3.9224], [8.9998, 4.0916], [8.9027, 4.4351], [8.5561, 4.7552], [8.801, 5.1973], [9.0602, 6.0092], [10.1438, 6.9964], [10.6064, 7.063], [11.0325, 6.6981], [11.1531, 6.4379], [11.5518, 6.6972], [11.7676, 7.272], [12.0161, 7.5898], [12.4036, 8.5957], [12.8067, 8.8865], [12.9296, 9.4262], [13.1756, 9.5394], [13.2697, 10.0362], [13.5351, 10.6052], [13.8921, 11.1401], [14.5596, 11.4922], [14.6271, 12.1086], [14.1975, 12.3839], [14.0639, 13.0786], [14.5161, 12.9796], [14.7611, 12.6556], [15.0811, 11.8455], [15.0297, 11.1135], [15.2761, 10.3575], [15.5412, 9.9602], [14.2432, 9.9798], [13.9772, 9.6917], [14.3323, 9.2034], [15.1162, 8.5572], [15.4429, 7.8518], [15.4803, 7.5237]]] }, \"properties\": { \"id\": \"CM\", \"name\": \"Cameroon\" }, \"id\": \"CM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.4032, 5.1094], [27.788, 4.6446], [28.192, 4.3504], [28.7269, 4.5049], [29.1513, 4.3881], [29.6768, 4.587], [30.1948, 3.9819], [30.5082, 3.8359], [30.8384, 3.4905], [30.7284, 2.4554], [31.1763, 2.2703], [31.2527, 2.0448], [30.9424, 1.683], [29.9427, 0.8192], [29.9343, 0.4992], [29.7177, 0.0983], [29.5619, -0.9772], [29.5769, -1.3878], [29.1295, -1.8602], [29.1064, -2.2334], [28.8765, -2.4003], [29.0145, -2.7204], [29.2245, -3.0533], [29.2231, -3.911], [29.4034, -4.4493], [29.3425, -4.9829], [29.5943, -5.651], [29.4801, -6.0251], [29.7097, -6.617], [30.3133, -7.2037], [30.751, -8.1936], [28.9723, -8.4648], [28.9178, -8.7005], [28.4006, -9.2247], [28.6302, -9.8311], [28.639, -10.6692], [28.3571, -11.4828], [28.4823, -11.8122], [29.0642, -12.3489], [29.4274, -12.4315], [29.7954, -12.1553], [29.7954, -13.393], [29.5543, -13.249], [29.0141, -13.3689], [28.3575, -12.4821], [27.5333, -12.1953], [27.0459, -11.616], [26.9495, -11.8989], [26.5962, -11.972], [26.0258, -11.8904], [25.3492, -11.6231], [25.1846, -11.2432], [24.5184, -11.4384], [24.3199, -11.0718], [23.9665, -10.8716], [23.8339, -11.0136], [22.5613, -11.0558], [22.3068, -10.6913], [22.1976, -10.0406], [21.8132, -9.4689], [21.9056, -8.6934], [21.7512, -7.3053], [20.6076, -7.2779], [20.482, -6.9162], [19.8752, -6.9862], [19.5276, -7.1447], [19.3408, -7.9667], [18.6532, -7.9361], [17.5359, -8.076], [16.9847, -7.2574], [16.7094, -6.4718], [16.7178, -6.2413], [16.3153, -5.8658], [14.3986, -5.8925], [13.0681, -5.865], [12.4116, -5.9866], [12.2137, -5.7589], [12.5035, -5.6959], [12.5221, -5.1489], [12.8297, -4.7366], [13.0726, -4.635], [13.4149, -4.8374], [14.3582, -4.2993], [14.4105, -4.8311], [14.7794, -4.8458], [15.6, -4.0307], [15.8722, -3.9344], [16.1466, -3.4639], [16.217, -3.0302], [16.2153, -2.178], [16.5407, -1.8401], [16.8799, -1.2259], [17.2789, -0.9995], [17.7529, -0.5488], [17.7241, -0.2777], [17.8875, 0.2341], [17.9026, 1.1179], [18.058, 1.5347], [18.0721, 2.0133], [18.4908, 2.9246], [18.6101, 3.4785], [18.5675, 4.2576], [19.0687, 4.8914], [19.501, 5.1276], [19.8064, 5.0894], [20.2264, 4.8297], [20.558, 4.4627], [21.5376, 4.2447], [22.4223, 4.135], [22.7557, 4.6469], [23.417, 4.6633], [24.3199, 4.994], [24.7655, 4.9301], [25.2494, 5.0247], [25.525, 5.3122], [26.8222, 5.0624], [27.1151, 5.1977], [27.4032, 5.1094]]] }, \"properties\": { \"id\": \"CD\", \"name\": \"Democratic Republic of Congo\" }, \"id\": \"CD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[18.6101, 3.4785], [18.4908, 2.9246], [18.0721, 2.0133], [18.058, 1.5347], [17.9026, 1.1179], [17.8875, 0.2341], [17.7241, -0.2777], [17.7529, -0.5488], [17.2789, -0.9995], [16.8799, -1.2259], [16.5407, -1.8401], [16.2153, -2.178], [16.217, -3.0302], [16.1466, -3.4639], [15.8722, -3.9344], [15.6, -4.0307], [14.7794, -4.8458], [14.4105, -4.8311], [14.3582, -4.2993], [13.4149, -4.8374], [13.0726, -4.635], [12.8809, -4.4454], [12.3846, -4.6189], [12.0183, -5.0042], [11.7773, -4.5657], [11.1301, -3.9163], [11.5043, -3.5202], [11.6859, -3.6819], [11.934, -3.3188], [11.5377, -2.8367], [11.5754, -2.3973], [12.4462, -2.3298], [12.432, -1.929], [12.7934, -1.9315], [12.9918, -2.3133], [13.465, -2.3955], [13.7841, -2.1638], [14.0873, -2.467], [14.3838, -1.8899], [14.4806, -0.6181], [13.8601, -0.2035], [13.8844, 0.1907], [14.0873, 0.5364], [14.4344, 0.8116], [14.1811, 1.3701], [13.8512, 1.4189], [13.2741, 1.2409], [13.1627, 1.6479], [13.2937, 2.1615], [14.4842, 2.1549], [14.9024, 2.0124], [15.7417, 1.9152], [16.0595, 1.6764], [16.1835, 2.2703], [16.4683, 2.8318], [16.6734, 3.5354], [17.4378, 3.6845], [18.161, 3.4998], [18.6101, 3.4785]]] }, \"properties\": { \"id\": \"CG\", \"name\": \"Republic of Congo\" }, \"id\": \"CG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-159.7406, -21.2494], [-159.8395, -21.2382], [-159.832, -21.2005], [-159.7683, -21.1885], [-159.7406, -21.2494]]] }, \"properties\": { \"id\": \"CK\", \"name\": \"Cook Islands\" }, \"id\": \"CK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.3197, 11.8618], [-71.958, 11.6666], [-72.2486, 11.1965], [-72.6903, 10.8361], [-72.8693, 10.4911], [-73.0065, 9.7894], [-73.3563, 9.2269], [-72.7963, 9.1089], [-72.6653, 8.6276], [-72.4166, 8.3817], [-72.443, 7.4549], [-72.0843, 7.0967], [-71.0134, 6.9946], [-70.6552, 7.083], [-70.095, 6.9378], [-69.4392, 6.1348], [-68.4717, 6.1565], [-67.8591, 6.2898], [-67.4394, 6.0256], [-67.825, 5.2706], [-67.8553, 4.5071], [-67.6616, 3.8643], [-67.3111, 3.4159], [-67.8347, 2.8926], [-67.2108, 2.3901], [-66.8761, 1.2231], [-67.352, 2.086], [-67.8152, 1.7899], [-68.1765, 1.7198], [-69.8486, 1.7087], [-69.8522, 1.0594], [-69.3615, 1.0642], [-69.1632, 0.864], [-70.0539, 0.5786], [-70.0706, -0.1387], [-69.6675, -0.4823], [-69.4003, -1.1948], [-69.6691, -2.6676], [-69.9658, -4.2358], [-70.3396, -3.8141], [-70.7351, -3.7817], [-70.0741, -2.7501], [-70.0959, -2.6582], [-70.9146, -2.2183], [-71.397, -2.3342], [-71.7525, -2.1527], [-72.3957, -2.4288], [-72.8871, -2.4084], [-73.1545, -2.2783], [-73.1969, -1.8305], [-73.4963, -1.6932], [-73.6644, -1.249], [-74.2465, -0.9706], [-74.4178, -0.5808], [-74.8019, -0.2], [-75.2846, -0.1063], [-75.8798, 0.1511], [-76.311, 0.4485], [-76.4946, 0.2355], [-77.4228, 0.425], [-77.4676, 0.6363], [-78.3121, 1.046], [-78.8596, 1.4552], [-78.5769, 1.774], [-78.6171, 2.3066], [-78.1201, 2.4882], [-77.67, 2.8789], [-77.2428, 3.5855], [-77.1667, 3.862], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.4017, 5.4161], [-77.2492, 5.7802], [-77.4694, 6.177], [-77.3599, 6.5046], [-77.9011, 7.2295], [-77.744, 7.5371], [-77.3509, 7.7057], [-77.2124, 8.0338], [-77.3742, 8.6583], [-76.8519, 8.0906], [-76.8879, 8.6197], [-76.2769, 8.9891], [-76.1355, 9.2656], [-75.6395, 9.4502], [-75.671, 10.1964], [-75.4459, 10.611], [-74.8446, 11.1095], [-74.4543, 10.9892], [-74.0592, 11.3407], [-73.3134, 11.2959], [-72.7219, 11.7123], [-72.2749, 11.8894], [-72.1358, 12.1886], [-71.7145, 12.4199], [-71.2622, 12.3351], [-71.3197, 11.8618]]] }, \"properties\": { \"id\": \"CO\", \"name\": \"Colombia\" }, \"id\": \"CO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.4659, -11.9014], [43.2267, -11.7519], [43.3793, -11.6142], [43.4659, -11.9014]]] }, \"properties\": { \"id\": \"KM\", \"name\": \"Comoros\" }, \"id\": \"KM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-23.4442, 15.0078], [-23.7054, 14.9611], [-23.7007, 15.2715], [-23.4442, 15.0078]]] }, \"properties\": { \"id\": \"CV\", \"name\": \"Cape Verde\" }, \"id\": \"CV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.642, 10.9173], [-83.4482, 10.4658], [-82.7783, 9.6695], [-82.5635, 9.5767], [-82.9399, 9.4493], [-82.9171, 8.7405], [-82.9976, 8.3676], [-82.8794, 8.0706], [-83.1626, 8.5882], [-83.7341, 8.6144], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.6589, 9.6468], [-85.1145, 9.5816], [-85.6248, 9.9026], [-85.8306, 10.3979], [-85.6672, 10.7451], [-85.7444, 11.062], [-85.6215, 11.1846], [-84.9093, 10.9452], [-84.3484, 10.9799], [-84.1684, 10.7806], [-83.8113, 10.7433], [-83.642, 10.9173]]] }, \"properties\": { \"id\": \"CR\", \"name\": \"Costa Rica\" }, \"id\": \"CR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-81.8375, 23.163], [-81.1786, 23.0595], [-80.6501, 23.1031], [-80.0753, 22.9423], [-79.183, 22.3879], [-78.6865, 22.3671], [-77.8651, 21.9005], [-77.4973, 21.8717], [-76.6476, 21.2844], [-75.7229, 21.1108], [-75.6428, 20.7335], [-74.8826, 20.6506], [-74.2529, 20.0796], [-75.1166, 19.9012], [-76.1586, 19.9895], [-77.7151, 19.8555], [-77.2135, 20.3002], [-77.2297, 20.6439], [-77.9974, 20.7153], [-78.4908, 21.0536], [-78.6366, 21.5157], [-79.2745, 21.5627], [-80.2313, 21.8721], [-80.4992, 22.0634], [-80.9619, 22.0528], [-81.8162, 22.2002], [-81.9034, 22.6791], [-82.7381, 22.6893], [-83.3796, 22.2227], [-84.3264, 22.0746], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.1014, 23.1904], [-81.8375, 23.163]]], [[[-82.5617, 21.5716], [-82.8531, 21.4437], [-83.0826, 21.7913], [-82.7147, 21.8903], [-82.5617, 21.5716]]]] }, \"properties\": { \"id\": \"CU\", \"name\": \"Cuba\" }, \"id\": \"CU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.7511, 12.0599], [-68.8032, 12.0457], [-68.995, 12.142], [-69.1539, 12.2982], [-69.0767, 12.3422], [-69.0133, 12.2312], [-68.8275, 12.1584], [-68.7511, 12.0599]]] }, \"properties\": { \"id\": \"CW\", \"name\": \"Curaçao\" }, \"id\": \"CW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[105.7254, -10.493], [105.6969, -10.564], [105.5841, -10.5125], [105.7053, -10.4308], [105.7254, -10.493]]] }, \"properties\": { \"id\": \"CX\", \"name\": \"Christmas Island\" }, \"id\": \"CX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-81.3696, 19.349], [-81.1306, 19.3468], [-81.3037, 19.2717], [-81.3696, 19.349]]] }, \"properties\": { \"id\": \"KY\", \"name\": \"Cayman Islands\" }, \"id\": \"KY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.4633, 35.5937], [33.9417, 35.2919], [34.05, 34.9882], [32.9416, 34.5759], [32.4489, 34.7294], [32.3171, 34.9532], [32.9416, 35.3904], [33.4587, 35.3359], [34.4633, 35.5937]]] }, \"properties\": { \"id\": \"CY\", \"name\": \"Cyprus\" }, \"id\": \"CY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.8096, 50.8589], [16.0072, 50.6117], [16.6793, 50.0974], [17.152, 50.3784], [17.8746, 49.9722], [18.5622, 49.8792], [18.8321, 49.5108], [18.161, 49.2573], [17.7583, 48.888], [17.1883, 48.8609], [16.9531, 48.5989], [16.4777, 48.8001], [16.0573, 48.7548], [14.9721, 48.9839], [14.6915, 48.5992], [14.0491, 48.6024], [13.8147, 48.7669], [12.6318, 49.4613], [12.2763, 50.0424], [12.4525, 50.3498], [14.3692, 50.8986], [14.8096, 50.8589]]] }, \"properties\": { \"id\": \"CZ\", \"name\": \"Czechia\" }, \"id\": \"CZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.7399, 54.8255], [10.3604, 54.4383], [11.3996, 53.9446], [12.1111, 54.1683], [12.5755, 54.4673], [13.0286, 54.4109], [13.8654, 53.8534], [14.2587, 53.7296], [14.4145, 53.2834], [14.1286, 52.8782], [14.6195, 52.5284], [14.7527, 52.0818], [14.6018, 51.8323], [15.0164, 51.2526], [14.8096, 50.8589], [14.3692, 50.8986], [12.4525, 50.3498], [12.2763, 50.0424], [12.6318, 49.4613], [13.8147, 48.7669], [13.4095, 48.3942], [12.8143, 48.1607], [12.6859, 47.6693], [11.717, 47.5837], [11.2979, 47.4248], [10.4306, 47.541], [10.3129, 47.3133], [9.5242, 47.5242], [8.6177, 47.7661], [8.1982, 47.6067], [7.6154, 47.5925], [7.5843, 48.0643], [8.1348, 48.9735], [7.4507, 49.1522], [6.7356, 49.1606], [6.344, 49.4527], [6.4875, 49.7984], [6.1163, 50.1209], [6.3645, 50.3162], [5.9939, 50.7504], [5.8948, 50.9843], [6.1932, 51.4888], [5.9486, 51.7624], [6.7417, 51.9109], [7.0352, 52.3801], [7.1973, 53.2824], [7.2852, 53.6814], [8.0091, 53.6907], [8.5387, 53.5569], [8.8978, 53.8357], [8.9573, 54.5383], [8.67, 54.9034], [9.7399, 54.8255]]] }, \"properties\": { \"id\": \"DE\", \"name\": \"Germany\" }, \"id\": \"DE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.2461, 11.4997], [42.9226, 10.9994], [42.5577, 11.0807], [41.7981, 10.9803], [41.7667, 11.5889], [42.3784, 12.4664], [42.67, 12.3764], [43.1165, 12.7084], [43.41, 12.1899], [43.2719, 11.9698], [42.7992, 11.7393], [43.2461, 11.4997]]] }, \"properties\": { \"id\": \"DJ\", \"name\": \"Djibouti\" }, \"id\": \"DJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.2817, 15.2492], [-61.481, 15.5253], [-61.3202, 15.5852], [-61.2817, 15.2492]]] }, \"properties\": { \"id\": \"DM\", \"name\": \"Dominica\" }, \"id\": \"DM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[10.645, 55.6099], [10.7852, 55.1333], [9.9889, 55.1631], [9.8606, 55.5155], [10.645, 55.6099]]], [[[12.5688, 55.785], [11.6539, 55.1868], [11.2864, 55.2044], [10.9788, 55.7215], [12.219, 56.1186], [12.5688, 55.785]]], [[[9.7399, 54.8255], [8.67, 54.9034], [8.6159, 55.4181], [8.1321, 55.5999], [8.1641, 56.6069], [8.6186, 57.1114], [9.5542, 57.2325], [9.9623, 57.581], [10.5371, 57.4485], [10.2827, 56.6204], [10.1828, 55.8651], [9.5911, 55.4931], [9.7399, 54.8255]]]] }, \"properties\": { \"id\": \"DK\", \"name\": \"Denmark\" }, \"id\": \"DK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.7683, 18.0391], [-71.6571, 19.1306], [-71.7791, 19.7184], [-71.5579, 19.8954], [-70.9542, 19.914], [-70.1294, 19.6362], [-69.7395, 19.2993], [-68.6848, 18.9047], [-68.3594, 18.538], [-68.6588, 18.222], [-68.9349, 18.4079], [-69.7707, 18.4434], [-70.1831, 18.2517], [-70.6447, 18.336], [-71.0278, 18.273], [-71.3958, 17.6463], [-71.7683, 18.0391]]] }, \"properties\": { \"id\": \"DO\", \"name\": \"Dominican Republic\" }, \"id\": \"DO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[8.5764, 36.9374], [8.2306, 36.5454], [8.3486, 36.3679], [8.2457, 35.8707], [8.3944, 35.204], [8.2457, 34.7339], [7.5138, 34.0804], [7.5, 33.8323], [7.7627, 33.2331], [8.2111, 32.9268], [8.3332, 32.5437], [9.0438, 32.0723], [9.5187, 30.2292], [9.3102, 30.1151], [9.64, 29.6362], [9.8424, 28.9669], [9.9162, 27.7857], [9.7474, 27.3306], [9.8593, 26.5521], [9.4912, 26.3337], [9.4482, 26.0673], [10.0009, 25.3322], [10.2556, 24.591], [10.6863, 24.5514], [11.5074, 24.3144], [11.9677, 23.5181], [9.3784, 21.9915], [7.4818, 20.8729], [5.8367, 19.4791], [4.2276, 19.1426], [3.4007, 18.9885], [3.106, 19.1502], [3.2559, 19.4108], [3.2035, 19.7898], [2.4063, 20.0637], [2.2195, 20.2479], [1.6855, 20.3784], [1.1657, 20.8174], [1.1457, 21.1024], [-1.2931, 22.6964], [-3.2579, 23.9811], [-4.8227, 24.9958], [-6.9908, 26.2906], [-8.6834, 27.2858], [-8.6599, 28.7187], [-7.6851, 29.3494], [-7.095, 29.6252], [-6.6353, 29.5687], [-6.5008, 29.8093], [-5.4488, 29.9567], [-4.9683, 30.4654], [-4.3228, 30.6989], [-3.8334, 31.1978], [-3.8268, 31.6617], [-3.0174, 31.8344], [-2.9308, 32.0426], [-2.4486, 32.13], [-1.2753, 32.0892], [-1.0656, 32.4682], [-1.5099, 32.8776], [-1.6792, 33.3188], [-1.7956, 34.7521], [-2.2197, 35.1041], [-1.9132, 35.0943], [-0.9175, 35.6683], [-0.4261, 35.8613], [0.0479, 35.9005], [0.5149, 36.2617], [1.2571, 36.5196], [2.5932, 36.6009], [2.9728, 36.7846], [3.7788, 36.8961], [4.758, 36.8965], [5.1957, 36.6768], [6.0649, 36.8641], [6.4865, 37.0856], [6.9274, 36.9196], [7.6078, 37], [7.9106, 36.8565], [8.5764, 36.9374]]] }, \"properties\": { \"id\": \"DZ\", \"name\": \"Algeria\" }, \"id\": \"DZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-75.2846, -0.1063], [-75.2632, -0.5555], [-75.5706, -1.5313], [-76.0897, -2.1332], [-76.679, -2.5628], [-77.8607, -2.9819], [-78.3472, -3.4311], [-78.4198, -3.7769], [-79.0763, -4.9905], [-79.3309, -4.9279], [-79.6385, -4.4547], [-80.1396, -4.2961], [-80.4885, -4.3939], [-80.5101, -4.0694], [-80.1794, -3.8776], [-80.3247, -3.388], [-79.9217, -3.0902], [-79.7299, -2.5793], [-80.4501, -2.6259], [-80.9628, -2.189], [-80.7704, -2.0767], [-80.8015, -1.3834], [-80.9024, -1.0789], [-80.554, -0.848], [-80.4823, -0.3683], [-80.1334, -0.006], [-80.0251, 0.4104], [-80.0884, 0.7846], [-79.7412, 0.9798], [-78.8996, 1.2063], [-78.8596, 1.4552], [-78.3121, 1.046], [-77.4676, 0.6363], [-77.4228, 0.425], [-76.4946, 0.2355], [-76.311, 0.4485], [-75.8798, 0.1511], [-75.2846, -0.1063]]], [[[-91.2722, 0.0251], [-90.7997, -0.7522], [-90.9056, -0.9404], [-91.3692, -0.2869], [-91.2722, 0.0251]]]] }, \"properties\": { \"id\": \"EC\", \"name\": \"Ecuador\" }, \"id\": \"EC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.1983, 31.3226], [34.2453, 31.2085], [34.9042, 29.4773], [34.7363, 29.2704], [34.3999, 28.016], [34.2201, 27.7643], [33.7602, 28.0475], [33.2474, 28.5677], [33.0757, 29.0729], [32.7215, 29.5217], [32.6318, 28.9921], [32.8982, 28.5651], [33.5471, 27.8984], [33.5498, 27.6072], [33.8929, 27.0497], [33.959, 26.6488], [34.565, 25.6913], [35.1939, 24.475], [35.6245, 24.0658], [35.5229, 23.4426], [35.6977, 22.9463], [36.2296, 22.629], [36.8713, 21.9969], [35.2308, 21.9963], [32.6061, 21.996], [30.7106, 21.9951], [28.8005, 21.9951], [26.1261, 21.9955], [24.9804, 21.996], [24.9804, 24.4662], [24.9804, 26.4872], [24.9804, 29.1817], [24.7114, 30.1316], [24.9738, 30.7766], [24.8526, 31.335], [25.1505, 31.655], [25.3822, 31.513], [25.8931, 31.6209], [27.2478, 31.378], [27.9673, 31.0975], [28.5147, 31.0505], [29.0722, 30.8303], [29.5915, 31.0114], [30.395, 31.4575], [30.7004, 31.4038], [31.1941, 31.5876], [32.1019, 31.0927], [33.1298, 31.1681], [33.6665, 31.1304], [34.1983, 31.3226]]] }, \"properties\": { \"id\": \"EG\", \"name\": \"Egypt\" }, \"id\": \"EG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-3.1097, 58.5154], [-3.2125, 58.3212], [-3.9902, 57.959], [-3.4029, 57.7082], [-2.0741, 57.7024], [-1.778, 57.4937], [-2.6527, 56.3183], [-3.1783, 56.0802], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-0.6714, 54.5039], [-0.2056, 54.0217], [0.5589, 52.967], [1.6566, 52.7537], [1.5589, 52.0869], [0.9553, 51.8077], [0.6867, 51.3865], [1.4151, 51.3632], [0.9601, 50.926], [0.205, 50.763], [-1.5168, 50.7475], [-2.5477, 50.6163], [-3.4047, 50.6323], [-3.7933, 50.2293], [-4.1726, 50.3908], [-5.3423, 50.2461], [-4.583, 50.7763], [-4.1881, 51.1885], [-3.1359, 51.2049], [-4.3864, 51.7411], [-4.9023, 51.6262], [-5.0881, 51.996], [-4.3832, 52.1972], [-3.9804, 52.5417], [-4.1111, 53.2189], [-3.0647, 53.4269], [-2.925, 53.7327], [-3.958, 54.7809], [-5.1354, 54.8575], [-4.7213, 55.4211], [-5.2457, 55.9293], [-5.6097, 56.0553], [-5.3919, 56.5148], [-5.9368, 56.6057], [-5.562, 57.2327], [-5.8181, 57.4361], [-5.3383, 58.2386], [-4.7155, 58.5101], [-3.1097, 58.5154]]], [[[-6.2181, 54.0887], [-7.3553, 54.1213], [-8.1184, 54.4143], [-7.2186, 55.0921], [-6.1293, 55.2175], [-5.4703, 54.5002], [-5.6068, 54.2727], [-6.2181, 54.0887]]]] }, \"properties\": { \"id\": \"GB\", \"name\": \"United Kingdom\" }, \"id\": \"GB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[38.6093, 18.0049], [38.9116, 17.427], [39.1423, 16.7291], [39.2991, 15.9213], [39.5063, 15.532], [39.8637, 15.4703], [40.2041, 15.014], [41.1762, 14.6202], [41.6584, 13.9833], [42.2451, 13.5878], [42.796, 12.8642], [43.1165, 12.7084], [42.67, 12.3764], [42.3784, 12.4664], [41.7649, 13.1838], [41.3627, 13.4999], [40.7697, 14.1444], [40.2216, 14.4312], [39.0741, 14.6282], [38.5045, 14.4245], [37.8844, 14.8524], [37.5709, 14.1493], [37.2572, 14.4537], [37.0245, 14.2718], [36.5243, 14.2567], [36.4266, 15.1321], [36.9135, 16.2964], [37.0091, 17.059], [37.4112, 17.0616], [37.7822, 17.458], [38.2537, 17.5846], [38.6093, 18.0049]]] }, \"properties\": { \"id\": \"ER\", \"name\": \"Eritrea\" }, \"id\": \"ER\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[3.1454, 39.7902], [3.4619, 39.6979], [3.0726, 39.3011], [2.3713, 39.6131], [2.785, 39.8547], [3.1454, 39.7902]]], [[[-1.794, 43.4075], [-1.2855, 43.0595], [-0.0411, 42.6893], [1.4285, 42.5961], [1.4861, 42.4345], [1.7059, 42.5033], [2.0326, 42.3537], [3.2115, 42.4309], [3.248, 41.9445], [2.0827, 41.2875], [1.0329, 41.062], [-0.327, 39.52], [-0.2049, 39.0628], [0.2015, 38.7591], [-0.3814, 38.4355], [-0.6468, 38.1519], [-0.8221, 37.581], [-1.3275, 37.5611], [-1.7975, 37.233], [-2.1116, 36.7766], [-4.3668, 36.718], [-4.6742, 36.5064], [-5.1716, 36.4238], [-5.6255, 36.0261], [-6.0407, 36.1885], [-6.4924, 36.9546], [-6.8846, 37.1944], [-7.4062, 37.1793], [-7.5035, 37.5855], [-7.1855, 38.0062], [-7.3431, 38.4572], [-7.0462, 38.9068], [-7.4452, 39.5363], [-7.0368, 39.7139], [-6.8102, 40.3429], [-6.9285, 41.0092], [-6.2125, 41.5321], [-6.6182, 41.9422], [-7.4037, 41.8335], [-7.9208, 41.8837], [-8.2131, 42.1336], [-8.7771, 41.9409], [-8.691, 42.2743], [-9.2352, 42.977], [-8.8736, 43.3342], [-7.6982, 43.7644], [-7.2621, 43.5948], [-5.6659, 43.5825], [-4.523, 43.416], [-3.6047, 43.5193], [-3.0456, 43.3716], [-2.3371, 43.3281], [-1.794, 43.4075]]], [[[-16.3346, 28.38], [-16.6579, 28.0072], [-16.9054, 28.3396], [-16.3346, 28.38]]]] }, \"properties\": { \"id\": \"ES\", \"name\": \"Spain\" }, \"id\": \"ES\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[22.6171, 58.6212], [23.2928, 58.4834], [22.1875, 58.1543], [22.0814, 58.4781], [22.6171, 58.6212]]], [[[28.0127, 59.4842], [27.4272, 58.7331], [27.753, 57.8411], [27.3517, 57.5282], [26.5328, 57.531], [25.9912, 57.8382], [25.1109, 58.0635], [24.3226, 57.8706], [24.5289, 58.3542], [23.7677, 58.3609], [23.5094, 58.6585], [23.4943, 59.1956], [24.3803, 59.4726], [25.5091, 59.6388], [26.9749, 59.4507], [28.0127, 59.4842]]]] }, \"properties\": { \"id\": \"EE\", \"name\": \"Estonia\" }, \"id\": \"EE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3784, 12.4664], [41.7667, 11.5889], [41.7981, 10.9803], [42.5577, 11.0807], [42.9226, 10.9994], [42.6594, 10.6212], [42.8417, 10.2031], [43.1818, 9.8799], [43.4827, 9.3796], [44.023, 8.9859], [46.9784, 7.9969], [47.9781, 7.9969], [45.9348, 5.9972], [44.9404, 4.9119], [44.0283, 4.9509], [43.5383, 4.8404], [43.0158, 4.5634], [42.7916, 4.2922], [42.0241, 4.1377], [41.8838, 3.9779], [41.2207, 3.9438], [40.7652, 4.2731], [39.8424, 3.8514], [39.4943, 3.4559], [38.0863, 3.649], [36.9056, 4.4116], [36.0817, 4.4498], [35.763, 4.808], [35.7448, 5.3442], [35.2681, 5.4925], [35.0821, 5.6731], [34.7105, 6.6604], [34.0643, 7.2259], [33.6661, 7.6711], [33.2262, 7.7608], [33.0126, 7.9516], [33.2342, 8.3964], [33.9533, 8.4434], [34.0945, 8.5824], [34.078, 9.4613], [34.2915, 10.125], [34.2756, 10.528], [34.5717, 10.88], [34.9312, 10.8649], [35.1123, 11.8167], [35.5961, 12.5375], [36.1076, 12.7266], [36.2123, 13.2713], [36.3907, 13.6259], [36.5243, 14.2567], [37.0245, 14.2718], [37.2572, 14.4537], [37.5709, 14.1493], [37.8844, 14.8524], [38.5045, 14.4245], [39.0741, 14.6282], [40.2216, 14.4312], [40.7697, 14.1444], [41.3627, 13.4999], [41.7649, 13.1838], [42.3784, 12.4664]]] }, \"properties\": { \"id\": \"ET\", \"name\": \"Ethiopia\" }, \"id\": \"ET\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.9657, 69.0219], [28.4708, 68.4883], [29.3439, 68.0619], [29.9413, 67.5475], [29.0869, 66.9708], [29.9032, 66.0911], [29.604, 64.9685], [30.0727, 64.7649], [30.1082, 64.3661], [30.5037, 64.0205], [30.0555, 63.689], [31.1808, 63.2082], [31.5341, 62.8855], [31.2855, 62.5679], [29.6901, 61.5461], [27.7978, 60.5362], [25.6565, 60.3331], [23.7215, 59.9656], [22.7934, 60.0768], [22.5759, 60.3591], [21.4359, 60.5963], [21.3606, 60.9674], [21.606, 61.5915], [21.2562, 61.9897], [21.1034, 62.6229], [22.2434, 63.438], [23.2488, 63.8963], [24.5579, 64.8009], [25.3728, 65.0096], [25.348, 65.4791], [24.1557, 65.8052], [23.7011, 66.4808], [23.9883, 66.8106], [23.4682, 67.45], [23.6391, 67.9543], [22.7823, 68.3911], [21.9974, 68.5207], [20.6223, 69.0369], [21.622, 69.2707], [22.4108, 68.7198], [23.8539, 68.8059], [24.9413, 68.5933], [25.7484, 68.9901], [26.0116, 69.6527], [26.5256, 69.915], [27.8896, 70.0617], [29.1414, 69.6715], [28.9657, 69.0219]]] }, \"properties\": { \"id\": \"FI\", \"name\": \"Finland\" }, \"id\": \"FI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[179.999, -16.1686], [179.7483, -16.4464], [179.928, -16.7443], [179.007, -16.9002], [178.805, -16.6316], [179.5516, -16.2498], [179.999, -16.1686]]], [[[178.2803, -17.372], [178.5914, -17.6516], [178.6679, -18.0808], [177.8471, -18.2548], [177.3215, -18.0773], [177.2639, -17.8633], [177.618, -17.4611], [178.2803, -17.372]]]] }, \"properties\": { \"id\": \"FJ\", \"name\": \"Fiji\" }, \"id\": \"FJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-60.2863, -51.462], [-59.2681, -51.4273], [-59.9215, -51.9693], [-60.2863, -51.462]]], [[[-58.8501, -51.2697], [-58.4737, -51.509], [-57.9765, -51.3843], [-57.8383, -51.7092], [-58.6834, -51.936], [-59.0681, -52.1731], [-59.5708, -51.9254], [-59.0596, -51.6857], [-58.8501, -51.2697]]]] }, \"properties\": { \"id\": \"FK\", \"name\": \"Falkland Islands\" }, \"id\": \"FK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.6311, 62.2279], [-7.0135, 62.0941], [-7.1722, 62.2856], [-6.6311, 62.2279]]] }, \"properties\": { \"id\": \"FO\", \"name\": \"Faroe Islands\" }, \"id\": \"FO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[158.315, 6.8135], [158.1836, 6.8011], [158.1347, 6.9449], [158.2945, 6.9511], [158.315, 6.8135]]] }, \"properties\": { \"id\": \"FM\", \"name\": \"Federated States of Micronesia\" }, \"id\": \"FM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.4802, 42.8056], [9.5507, 42.1295], [9.1863, 41.3847], [8.8077, 41.5885], [8.7131, 42.5499], [9.4802, 42.8056]]], [[[5.7896, 49.5384], [6.344, 49.4527], [6.7356, 49.1606], [7.4507, 49.1522], [8.1348, 48.9735], [7.5843, 48.0643], [7.6154, 47.5925], [7.0007, 47.3226], [6.06, 46.4282], [6.7582, 46.4158], [7.021, 45.9257], [6.8043, 45.8147], [7.1533, 45.401], [6.6277, 45.1178], [7.0307, 44.7166], [6.9673, 44.2802], [7.6514, 44.0339], [7.4929, 43.7671], [7.4387, 43.7507], [7.4143, 43.7711], [7.3779, 43.7316], [6.4941, 43.1692], [6.1159, 43.0724], [5.4065, 43.2286], [5.0599, 43.4444], [4.6288, 43.3872], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9153], [3.2115, 42.4309], [2.0326, 42.3537], [1.7059, 42.5033], [1.4285, 42.5961], [-0.0411, 42.6893], [-1.2855, 43.0595], [-1.794, 43.4075], [-1.4848, 43.5638], [-1.2456, 44.5599], [-1.066, 45.8059], [-1.1464, 46.3115], [-1.7866, 46.5148], [-2.0188, 47.0377], [-3.1588, 47.6946], [-4.312, 47.8229], [-4.6292, 48.0857], [-4.3932, 48.3676], [-4.7208, 48.5398], [-3.2315, 48.8407], [-2.6924, 48.5367], [-2.4463, 48.6483], [-1.4375, 48.6414], [-1.8564, 49.6837], [-1.2587, 49.6801], [-1.1386, 49.3879], [-0.1636, 49.2968], [0.1869, 49.703], [1.2456, 49.9982], [1.5514, 50.2939], [1.5793, 50.7393], [1.9122, 50.9905], [2.5249, 51.0971], [2.8396, 50.7117], [4.1744, 50.2466], [4.8677, 49.788], [5.7896, 49.5384]]]] }, \"properties\": { \"id\": \"FR\", \"name\": \"France\" }, \"id\": \"FR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.2937, 2.1615], [13.1627, 1.6479], [13.2741, 1.2409], [13.8512, 1.4189], [14.1811, 1.3701], [14.4344, 0.8116], [14.0873, 0.5364], [13.8844, 0.1907], [13.8601, -0.2035], [14.4806, -0.6181], [14.3838, -1.8899], [14.0873, -2.467], [13.7841, -2.1638], [13.465, -2.3955], [12.9918, -2.3133], [12.7934, -1.9315], [12.432, -1.929], [12.4462, -2.3298], [11.5754, -2.3973], [11.5377, -2.8367], [11.934, -3.3188], [11.6859, -3.6819], [11.5043, -3.5202], [11.1301, -3.9163], [10.3475, -3.0129], [9.6245, -2.367], [9.2658, -1.825], [9.3305, -1.5348], [9.0647, -1.2982], [8.8215, -0.7083], [9.2968, -0.3514], [9.5907, 1.0318], [11.3352, 0.9998], [11.3285, 2.1673], [11.3485, 2.2995], [13.2203, 2.2565], [13.2937, 2.1615]]] }, \"properties\": { \"id\": \"GA\", \"name\": \"Gabon\" }, \"id\": \"GA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4298, 41.8907], [46.182, 41.6573], [46.6188, 41.3439], [46.4577, 41.07], [45.281, 41.4495], [45.0014, 41.2911], [43.4392, 41.1073], [42.7876, 41.5636], [42.4663, 41.4398], [41.5101, 41.5175], [41.7632, 41.9702], [41.4888, 42.6591], [40.8368, 43.0635], [39.9783, 43.4199], [40.6481, 43.534], [41.5807, 43.2193], [42.4192, 43.2242], [43.7824, 42.747], [43.9573, 42.5663], [44.5059, 42.7488], [45.1603, 42.6751], [45.7275, 42.4749], [45.6388, 42.205], [46.4298, 41.8907]]] }, \"properties\": { \"id\": \"GE\", \"name\": \"Georgia\" }, \"id\": \"GE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.5124, 49.4946], [-2.5475, 49.4287], [-2.646, 49.4682], [-2.5124, 49.4946]]] }, \"properties\": { \"id\": \"GG\", \"name\": \"Guernsey\" }, \"id\": \"GG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-0.0686, 11.1157], [-0.0578, 10.6305], [0.3627, 10.2364], [0.2619, 9.4955], [0.5291, 9.3584], [0.4153, 8.6526], [0.688, 8.304], [0.5837, 8.1457], [0.6348, 7.3538], [0.5256, 6.8509], [0.7369, 6.4526], [1.1875, 6.0895], [0.9499, 5.8103], [0.2597, 5.7575], [-0.7977, 5.2266], [-1.6384, 4.9807], [-2.0018, 4.7623], [-3.1139, 5.0886], [-3.0869, 5.1285], [-3.0191, 5.1307], [-2.7952, 5.1844], [-3.2007, 6.3483], [-3.2357, 6.8073], [-2.9858, 7.2051], [-2.7899, 7.9321], [-2.5058, 8.2087], [-2.7466, 9.1097], [-2.6958, 9.4812], [-2.7866, 10.402], [-2.9148, 10.5924], [-2.8298, 10.9985], [-0.7014, 10.9887], [-0.0686, 11.1157]]] }, \"properties\": { \"id\": \"GH\", \"name\": \"Ghana\" }, \"id\": \"GH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-11.3894, 12.4043], [-11.3053, 12.0155], [-10.9333, 12.205], [-10.6774, 11.8996], [-10.2748, 12.2125], [-9.8207, 12.0426], [-9.043, 12.4026], [-8.8219, 11.6732], [-8.4075, 11.3865], [-8.2316, 10.4378], [-7.9908, 10.1627], [-8.1366, 10.0219], [-8.137, 9.4955], [-7.8962, 9.416], [-7.951, 8.7866], [-7.8236, 8.4674], [-8.232, 7.5566], [-8.4863, 7.5584], [-8.7083, 7.6591], [-8.8896, 7.2627], [-9.4638, 7.4158], [-9.3691, 7.7039], [-9.5182, 8.3462], [-9.7683, 8.5345], [-10.2832, 8.4852], [-10.5005, 8.6876], [-10.6905, 9.3144], [-11.2056, 9.9776], [-11.9109, 9.9931], [-12.5016, 9.8622], [-12.7559, 9.3734], [-13.2928, 9.0493], [-13.7005, 9.8511], [-14.427, 10.2484], [-14.7758, 10.9314], [-15.0431, 10.9404], [-14.6831, 11.5085], [-13.7327, 11.7358], [-13.7294, 12.6738], [-13.0828, 12.6334], [-12.2912, 12.328], [-11.3894, 12.4043]]] }, \"properties\": { \"id\": \"GN\", \"name\": \"Guinea\" }, \"id\": \"GN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.3272, 16.2302], [-61.5221, 16.228], [-61.529, 16.4339], [-61.4065, 16.4682], [-61.3272, 16.2302]]] }, \"properties\": { \"id\": \"GP\", \"name\": \"Guadeloupe\" }, \"id\": \"GP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-16.7633, 13.064], [-16.8249, 13.341], [-16.5623, 13.5873], [-15.5096, 13.5864], [-15.8343, 13.1563], [-16.6489, 13.154], [-16.7633, 13.064]]] }, \"properties\": { \"id\": \"GM\", \"name\": \"Gambia\" }, \"id\": \"GM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.0431, 10.9404], [-15.3931, 11.2173], [-15.5018, 11.7239], [-16.1384, 11.9174], [-16.7119, 12.3551], [-15.5748, 12.4904], [-15.1962, 12.6799], [-13.7294, 12.6738], [-13.7327, 11.7358], [-14.6831, 11.5085], [-15.0431, 10.9404]]] }, \"properties\": { \"id\": \"GW\", \"name\": \"Guinea-Bissau\" }, \"id\": \"GW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.5907, 1.0318], [9.3861, 1.1392], [9.8069, 1.9276], [9.8007, 2.3044], [9.98, 2.1677], [11.3285, 2.1673], [11.3352, 0.9998], [9.5907, 1.0318]]], [[[8.7358, 3.7582], [8.9462, 3.6277], [8.7038, 3.2238], [8.4748, 3.2646], [8.7358, 3.7582]]]] }, \"properties\": { \"id\": \"GQ\", \"name\": \"Equatorial Guinea\" }, \"id\": \"GQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[23.4153, 38.9589], [24.0989, 38.6712], [23.7588, 38.4013], [23.252, 38.8013], [23.4153, 38.9589]]], [[[26.0392, 40.7269], [25.1044, 40.9945], [24.3838, 40.9129], [23.8786, 40.5444], [23.6644, 40.224], [23.3118, 40.2164], [22.6295, 40.4956], [22.5923, 40.037], [22.9191, 39.6291], [22.9656, 39.0308], [23.2528, 38.6615], [23.9671, 38.2748], [23.5804, 38.0107], [23.1937, 37.9592], [23.1614, 37.3338], [22.7651, 37.3932], [23.0735, 36.7749], [22.6083, 36.7798], [22.0804, 37.0288], [21.5829, 37.0807], [21.5713, 37.541], [21.1448, 37.9192], [21.4036, 38.1967], [21.8248, 38.3281], [22.7996, 37.9814], [22.4218, 38.4386], [21.4724, 38.3214], [21.1133, 38.385], [20.7794, 39.0086], [20.301, 39.3273], [20.0013, 39.7095], [20.6575, 40.1175], [21.0312, 40.6585], [20.9641, 40.8498], [21.5758, 40.8689], [21.9296, 41.1073], [22.7246, 41.1783], [22.9159, 41.3363], [23.635, 41.3869], [24.0558, 41.5272], [25.2511, 41.2435], [26.1355, 41.3856], [26.3209, 41.7167], [26.6246, 41.4015], [26.0392, 40.7269]]], [[[23.8521, 35.5355], [24.3128, 35.3638], [24.7213, 35.425], [25.4758, 35.3061], [25.7449, 35.1427], [24.7997, 34.9345], [24.4638, 35.1604], [23.5618, 35.2949], [23.8521, 35.5355]]]] }, \"properties\": { \"id\": \"GR\", \"name\": \"Greece\" }, \"id\": \"GR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7154, 12.0128], [-61.715, 12.185], [-61.6071, 12.2233], [-61.6271, 12.0541], [-61.7154, 12.0128]]] }, \"properties\": { \"id\": \"GD\", \"name\": \"Grenada\" }, \"id\": \"GD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-29.953, 83.5649], [-25.9475, 83.2896], [-24.4703, 82.8772], [-21.5208, 82.5954], [-25.1489, 82.001], [-21.3379, 82.0687], [-21.1466, 81.6952], [-17.2261, 81.4304], [-15.5555, 81.8337], [-12.1929, 81.649], [-11.5288, 81.424], [-14.5035, 80.7633], [-16.7607, 80.5733], [-16.8683, 80.1982], [-19.4292, 80.2576], [-20.1385, 79.8033], [-19.2836, 79.6831], [-19.0749, 79.1524], [-20.9557, 78.5551], [-20.8625, 77.9119], [-20.232, 77.3684], [-18.339, 77.2152], [-18.5103, 76.7782], [-20.9422, 76.887], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.1037, 76.2191], [-19.509, 75.7575], [-19.4261, 75.2299], [-20.485, 75.3143], [-19.2252, 74.4795], [-19.3693, 74.284], [-21.1295, 74.1109], [-20.3673, 73.8483], [-20.5096, 73.493], [-22.1851, 73.2699], [-22.0364, 72.9184], [-22.2932, 72.1196], [-24.0692, 72.4986], [-24.6669, 72.4374], [-22.0133, 71.6888], [-21.7522, 71.4784], [-21.5228, 70.5262], [-23.3279, 70.451], [-23.7917, 70.555], [-24.377, 71.1463], [-25.7422, 71.1836], [-26.7179, 70.9505], [-27.6887, 70.9934], [-28.5409, 70.4769], [-28.0149, 70.4024], [-26.7472, 70.4756], [-23.1732, 70.1145], [-23.0882, 69.883], [-26.3414, 68.7023], [-29.2496, 68.2988], [-29.8687, 68.3117], [-30.9786, 68.0613], [-32.1373, 68.3849], [-32.2748, 67.9228], [-33.157, 67.6267], [-34.1016, 66.7258], [-34.6329, 66.4348], [-36.3792, 65.8307], [-37.7541, 65.593], [-39.961, 65.5562], [-39.5779, 65.3407], [-40.6554, 64.9154], [-40.1822, 64.48], [-40.6177, 64.1317], [-40.5504, 63.7254], [-42.1529, 62.5685], [-42.3216, 62.1526], [-42.1103, 61.8572], [-42.4188, 61.5369], [-42.7171, 60.7675], [-43.3202, 59.9281], [-44.0654, 59.9247], [-45.3793, 60.2028], [-46.0467, 60.6157], [-46.0116, 61.0969], [-46.8745, 60.8163], [-47.7963, 60.829], [-48.922, 61.2775], [-49.2892, 61.59], [-49.5534, 62.2328], [-50.3191, 62.4731], [-50.3383, 62.8287], [-51.4689, 63.6423], [-51.4511, 63.9047], [-52.0934, 64.4158], [-52.259, 65.1549], [-53.6346, 66.4136], [-53.0383, 66.8268], [-53.8845, 67.1356], [-53.4189, 67.5746], [-53.578, 67.8369], [-53.0393, 68.6108], [-51.2493, 68.74], [-50.5, 69.9358], [-52.2545, 70.0591], [-54.0143, 70.4217], [-54.1659, 70.8201], [-52.4052, 70.6867], [-51.5246, 70.4395], [-51.1302, 70.9716], [-53.117, 71.3128], [-53.4761, 71.6401], [-54.6891, 71.3671], [-55.5939, 71.5536], [-55.3156, 72.1106], [-55.6017, 72.4536], [-54.7732, 72.9175], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.7063, 74.2192], [-56.2555, 74.5268], [-58.6035, 75.3853], [-58.5163, 75.6891], [-61.3747, 76.18], [-63.4388, 76.3394], [-66.8262, 75.9687], [-69.3728, 76.3319], [-69.2521, 76.6861], [-70.7928, 76.869], [-70.863, 77.1755], [-69.3515, 77.4671], [-72.818, 78.1944], [-72.3957, 78.5043], [-68.9935, 78.8574], [-67.4823, 79.1168], [-65.9679, 79.1324], [-64.7923, 80.0006], [-66.8437, 80.0761], [-66.996, 80.413], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.203, 81.7469], [-58.7174, 82.0931], [-54.7259, 82.3513], [-52.7756, 82.3218], [-50.8944, 81.8952], [-48.8612, 82.4055], [-45.2912, 81.8288], [-44.239, 82.3681], [-46.4782, 82.9518], [-43.1945, 83.255], [-32.9846, 83.5995], [-29.953, 83.5649]]], [[[-52.7313, 69.9447], [-52.0452, 69.8071], [-52.1125, 69.489], [-53.5784, 69.2567], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.8304, 70.1611], [-53.3752, 70.2212], [-52.7313, 69.9447]]], [[[-25.4323, 70.9213], [-25.4022, 70.6527], [-27.898, 70.4541], [-27.7089, 70.8971], [-25.4323, 70.9213]]]] }, \"properties\": { \"id\": \"GL\", \"name\": \"Greenland\" }, \"id\": \"GL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.1615, 17.8149], [-89.2374, 15.8942], [-88.894, 15.8907], [-88.2284, 15.729], [-88.9764, 15.1427], [-89.2223, 14.8661], [-89.3626, 14.416], [-89.8726, 14.0454], [-90.0952, 13.7365], [-90.607, 13.929], [-91.1461, 13.9255], [-91.8191, 14.2283], [-92.2352, 14.5452], [-92.0748, 15.0743], [-92.1871, 15.3207], [-91.7365, 16.07], [-90.4472, 16.0727], [-90.4171, 16.3909], [-90.7107, 16.7083], [-91.4096, 17.256], [-90.993, 17.2525], [-90.9893, 17.8163], [-89.1615, 17.8149]]] }, \"properties\": { \"id\": \"GT\", \"name\": \"Guatemala\" }, \"id\": \"GT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-51.6526, 4.0614], [-51.9907, 3.7018], [-52.7006, 2.3635], [-52.9648, 2.1837], [-53.7678, 2.3551], [-54.13, 2.1211], [-54.6163, 2.3266], [-54.1955, 2.8181], [-54.2032, 3.1381], [-53.9904, 3.5895], [-54.3508, 4.0543], [-54.4522, 5.0135], [-54.1559, 5.3589], [-53.8472, 5.7824], [-53.4544, 5.5635], [-52.8993, 5.425], [-52.2905, 4.942], [-51.9196, 4.5244], [-51.6526, 4.0614]]] }, \"properties\": { \"id\": \"GF\", \"name\": \"French Guiana\" }, \"id\": \"GF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[144.7416, 13.2593], [144.6493, 13.4288], [144.7905, 13.5269], [144.7416, 13.2593]]] }, \"properties\": { \"id\": \"GU\", \"name\": \"Guam\" }, \"id\": \"GU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-57.1948, 5.5484], [-57.3309, 5.0202], [-57.7111, 4.9909], [-58.0544, 4.1719], [-57.8327, 3.6761], [-57.5497, 3.3529], [-57.3036, 3.3769], [-57.2097, 2.8829], [-56.7044, 2.0364], [-56.4828, 1.9422], [-56.8369, 1.8814], [-57.119, 2.0141], [-57.5943, 1.7043], [-58.3407, 1.5876], [-58.5119, 1.2848], [-58.8626, 1.2036], [-59.2312, 1.3758], [-59.7563, 1.9005], [-59.7552, 2.2742], [-59.9942, 2.6902], [-59.8544, 3.5873], [-59.5513, 3.9336], [-59.8333, 4.476], [-60.1112, 4.511], [-59.9907, 5.0828], [-60.1421, 5.239], [-60.7422, 5.2022], [-61.3768, 5.9071], [-61.1286, 6.2143], [-61.1457, 6.6946], [-60.3951, 6.9453], [-60.7192, 7.4989], [-60.5136, 7.8132], [-60.0324, 8.0537], [-59.8315, 8.3059], [-60.0175, 8.5491], [-59.2003, 8.0746], [-58.6266, 7.5459], [-58.4806, 7.0381], [-57.9825, 6.786], [-57.1902, 6.0975], [-57.1948, 5.5484]]] }, \"properties\": { \"id\": \"GY\", \"name\": \"Guyana\" }, \"id\": \"GY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[114.0154, 22.5117], [114.2657, 22.5411], [114.268, 22.2955], [114.0154, 22.5117]]] }, \"properties\": { \"id\": \"HK\", \"name\": \"Hong Kong\" }, \"id\": \"HK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.7074, -53.1372], [73.465, -53.1843], [73.3363, -53.0297], [73.5857, -53.0272], [73.7074, -53.1372]]] }, \"properties\": { \"id\": \"HM\", \"name\": \"Heard Island and McDonald Islands\" }, \"id\": \"HM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1577, 14.9931], [-83.4152, 15.0082], [-83.8674, 14.7947], [-84.646, 14.6611], [-84.9851, 14.7526], [-85.1796, 14.3433], [-85.7868, 13.8443], [-86.1512, 13.9948], [-86.3317, 13.7701], [-86.7336, 13.7635], [-86.7108, 13.3134], [-87.0593, 12.9916], [-87.3374, 12.9791], [-87.4891, 13.3529], [-87.8143, 13.3991], [-87.7153, 13.8128], [-88.151, 13.9872], [-88.449, 13.851], [-89.0572, 14.329], [-89.3626, 14.416], [-89.2223, 14.8661], [-88.9764, 15.1427], [-88.2284, 15.729], [-87.6181, 15.9097], [-86.9072, 15.7623], [-86.3568, 15.7832], [-85.784, 16.0029], [-85.4836, 15.8995], [-84.9738, 15.9901], [-84.2614, 15.8227], [-83.7604, 15.2203], [-83.3691, 15.2399], [-83.1577, 14.9931]]] }, \"properties\": { \"id\": \"HN\", \"name\": \"Honduras\" }, \"id\": \"HN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[17.6678, 42.8971], [18.4361, 42.5598], [18.5173, 42.4328], [17.6678, 42.8971]]], [[[18.9054, 45.9315], [19.0549, 45.5271], [19.007, 44.8693], [18.6625, 45.0774], [17.813, 45.0779], [16.5305, 45.2168], [16.2935, 45.0087], [15.788, 45.1791], [15.7368, 44.7658], [16.2141, 44.215], [17.6247, 43.0426], [17.5852, 42.9384], [16.9029, 43.3924], [15.9414, 43.6565], [15.1229, 44.2567], [14.8549, 45.081], [14.3861, 45.342], [13.9656, 44.8355], [13.6292, 45.1081], [13.5778, 45.5169], [13.8787, 45.4286], [15.3395, 45.4672], [15.6246, 45.8338], [15.6361, 46.2005], [16.5164, 46.4997], [17.3104, 45.9963], [17.9639, 45.7704], [18.9054, 45.9315]]]] }, \"properties\": { \"id\": \"HR\", \"name\": \"Croatia\" }, \"id\": \"HR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.7791, 19.7184], [-71.6571, 19.1306], [-71.7683, 18.0391], [-72.0599, 18.2286], [-72.8766, 18.1518], [-73.3851, 18.2513], [-73.885, 18.0418], [-74.4189, 18.3462], [-74.2276, 18.6627], [-72.7894, 18.4346], [-72.3478, 18.6748], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0527, 19.6109], [-73.1177, 19.9038], [-72.6369, 19.9008], [-71.7791, 19.7184]]] }, \"properties\": { \"id\": \"HT\", \"name\": \"Haiti\" }, \"id\": \"HT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.132, 48.4053], [22.8763, 47.9472], [22.2905, 47.7279], [21.1518, 46.3043], [20.2419, 46.1086], [19.5308, 46.1552], [18.9054, 45.9315], [17.9639, 45.7704], [17.3104, 45.9963], [16.5164, 46.4997], [16.0929, 46.8632], [16.4533, 47.0066], [16.4342, 47.3675], [17.1475, 48.0058], [17.7618, 47.7701], [18.7242, 47.787], [18.7917, 48.0005], [19.8988, 48.1314], [20.4901, 48.5269], [21.4515, 48.5522], [22.132, 48.4053]]] }, \"properties\": { \"id\": \"HU\", \"name\": \"Hungary\" }, \"id\": \"HU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[135.383, -0.6514], [135.8935, -0.726], [135.8389, -1.1193], [135.383, -0.6514]]], [[[99.1636, -1.7781], [98.8743, -1.6639], [98.6018, -1.1978], [98.8689, -0.9155], [99.2672, -1.6276], [99.1636, -1.7781]]], [[[128.153, -1.6604], [127.5617, -1.7283], [127.7428, -1.3602], [128.153, -1.6604]]], [[[106.0457, -1.6693], [106.3659, -2.4648], [106.6788, -2.7039], [106.547, -3.0555], [105.9987, -2.8248], [105.7857, -2.1815], [105.1331, -2.0425], [105.5855, -1.5268], [106.0457, -1.6693]]], [[[135.4741, -1.5916], [136.2016, -1.6551], [136.1927, -1.8593], [135.4741, -1.5916]]], [[[124.9694, -1.7057], [124.8344, -1.8943], [124.4176, -2.0053], [124.3808, -1.6875], [124.9694, -1.7057]]], [[[108.2071, -2.9978], [107.6145, -3.2096], [107.6664, -2.5664], [108.0743, -2.597], [108.2071, -2.9978]]], [[[129.7545, -2.866], [130.379, -2.9894], [130.8597, -3.5704], [130.8052, -3.8577], [129.8441, -3.3272], [129.4678, -3.4533], [128.9675, -3.3258], [128.4193, -3.416], [128.0819, -3.1838], [128.1987, -2.866], [129.4274, -2.7906], [129.7545, -2.866]]], [[[126.8613, -3.088], [127.2274, -3.3911], [127.2296, -3.633], [126.6863, -3.8235], [126.2144, -3.6051], [126.0262, -3.1704], [126.8613, -3.088]]], [[[122.6451, -5.2693], [122.3961, -5.0699], [122.369, -4.7671], [122.702, -4.6184], [122.6451, -5.2693]]], [[[134.7469, -5.7069], [134.7558, -6.1708], [134.4411, -6.335], [134.3412, -5.7128], [134.7469, -5.7069]]], [[[107.3739, -6.0075], [107.6669, -6.2156], [108.295, -6.2649], [108.6776, -6.7905], [110.4261, -6.9472], [110.7369, -6.4722], [111.1546, -6.6692], [111.5403, -6.6484], [112.0873, -6.8934], [112.5391, -6.9264], [112.7943, -7.5526], [113.2483, -7.7182], [114.0705, -7.633], [114.4442, -7.8957], [114.3869, -8.4054], [114.5835, -8.7698], [113.2532, -8.2869], [112.6789, -8.4093], [111.5101, -8.305], [110.6072, -8.1496], [110.0385, -7.8904], [109.2818, -7.7049], [108.7411, -7.6672], [108.4517, -7.7968], [107.9172, -7.7239], [107.2851, -7.4718], [106.6312, -7.4155], [106.5199, -7.0537], [105.4839, -6.7816], [105.8682, -6.1167], [106.075, -5.9142], [106.8252, -6.0984], [107.0463, -5.9044], [107.3739, -6.0075]]], [[[134.5371, -6.4424], [134.3559, -6.8149], [134.0589, -6.7692], [134.1682, -6.1761], [134.5371, -6.4424]]], [[[113.8445, -7.1051], [113.4707, -7.2183], [112.7637, -7.1398], [112.8679, -6.9001], [113.9746, -6.873], [113.8445, -7.1051]]], [[[131.3255, -7.9997], [131.0866, -7.8651], [131.2602, -7.4706], [131.6912, -7.439], [131.3255, -7.9997]]], [[[138.5351, -8.2735], [138.2963, -8.4054], [137.685, -8.2624], [138.0073, -7.6414], [138.2954, -7.4386], [138.7699, -7.3906], [138.9893, -7.696], [138.5351, -8.2735]]], [[[126.8008, -7.668], [126.472, -7.9503], [125.8434, -7.8167], [126.6096, -7.5716], [126.8008, -7.668]]], [[[115.4479, -8.1549], [115.7045, -8.4071], [115.236, -8.7977], [114.4752, -8.1196], [115.4479, -8.1549]]], [[[118.2426, -8.3179], [118.9879, -8.3379], [119.0061, -8.7497], [118.1898, -8.8403], [117.0613, -9.0991], [116.7884, -9.0064], [116.8349, -8.5323], [117.1649, -8.3671], [117.5671, -8.4266], [118.1174, -8.1221], [118.2426, -8.3179]]], [[[122.7827, -8.6117], [121.6512, -8.899], [121.0352, -8.9354], [119.8077, -8.6974], [119.9183, -8.4453], [120.6103, -8.2407], [121.4444, -8.578], [121.9663, -8.455], [122.263, -8.6251], [122.6034, -8.4027], [122.7827, -8.6117]]], [[[116.6407, -8.6139], [116.3774, -8.9292], [116.0764, -8.745], [116.0613, -8.4374], [116.4014, -8.2043], [116.7343, -8.3872], [116.6407, -8.6139]]], [[[125.0678, -9.5119], [124.4273, -10.1485], [123.8574, -10.3439], [123.5893, -9.967], [123.7092, -9.6149], [124.0362, -9.3416], [124.4441, -9.1902], [124.9223, -8.9424], [125.0678, -9.5119]]], [[[120.0123, -9.3748], [120.5038, -9.674], [120.8327, -10.0375], [120.439, -10.2941], [120.1447, -10.1999], [119.6009, -9.7734], [119.0855, -9.7069], [119.1855, -9.3846], [120.0123, -9.3748]]], [[[96.4924, 5.2293], [97.4512, 5.2359], [97.9084, 4.8799], [98.2483, 4.4147], [98.3074, 4.0928], [99.7323, 3.1829], [100.4572, 2.2574], [100.6854, 2.1202], [101.0463, 2.2574], [101.4768, 1.6933], [101.7848, 1.6214], [102.1572, 1.2591], [102.4694, 0.7792], [102.8493, 0.7153], [103.0663, 0.4921], [103.4787, 0.48], [103.7869, 0.0468], [103.4286, -0.1916], [103.4313, -0.5334], [103.7211, -0.8867], [104.3608, -1.0385], [104.5685, -1.9219], [104.8451, -2.0932], [104.6683, -2.3857], [105.3968, -2.3804], [105.5819, -2.4918], [106.0444, -3.1061], [105.8439, -3.6136], [105.8873, -5.0096], [105.8163, -5.6767], [105.6183, -5.7997], [105.3493, -5.5494], [105.0811, -5.7455], [104.6395, -5.5205], [104.6013, -5.9044], [103.8312, -5.0797], [102.9189, -4.4707], [102.5378, -4.1519], [102.1276, -3.5993], [101.5784, -3.1669], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.308, -0.8267], [99.5978, 0.1023], [99.1592, 0.3518], [98.7962, 1.4948], [98.5645, 1.9023], [97.7006, 2.3586], [97.591, 2.8465], [97.3912, 2.9752], [96.9691, 3.5753], [96.4448, 3.8163], [95.4949, 4.7613], [95.2068, 5.2839], [95.2277, 5.5648], [95.6289, 5.6092], [96.1332, 5.294], [96.4924, 5.2293]]], [[[117.5745, 4.1705], [117.6301, 3.6362], [117.1661, 3.5922], [117.6105, 3.0643], [118.0664, 2.3178], [117.8648, 1.9684], [118.0805, 1.7017], [118.9847, 0.982], [118.5346, 0.8135], [118.196, 0.8743], [117.745, 0.7295], [117.5221, 0.2359], [117.4626, -0.3238], [117.5626, -0.7708], [116.5544, -1.474], [116.4235, -2.0528], [116.5655, -2.2996], [116.3308, -2.9025], [115.956, -3.5949], [114.6937, -4.1698], [114.5361, -3.4946], [114.0825, -3.2789], [113.7957, -3.4564], [113.5258, -3.1838], [112.9714, -3.187], [112.6003, -3.4005], [112.2852, -3.3209], [111.8222, -3.5324], [111.8231, -3.0572], [111.3676, -2.9335], [111.0445, -3.0555], [110.5739, -2.8913], [110.2326, -2.925], [110.0191, -1.3989], [109.7873, -1.0114], [109.454, -0.8689], [109.1606, -0.4947], [109.2573, 0.0312], [108.9444, 0.3557], [108.9058, 0.7939], [109.0758, 1.4957], [109.3786, 1.9226], [109.6289, 2.0274], [109.6542, 1.615], [110.5056, 0.8618], [110.9378, 1.0172], [111.7698, 0.9994], [112.0783, 1.1432], [112.1857, 1.4393], [112.4761, 1.5591], [113.6222, 1.236], [113.9022, 1.4344], [114.5458, 1.4673], [114.8303, 1.98], [114.7865, 2.2503], [115.1509, 2.4931], [115.0861, 2.8411], [115.4545, 3.0342], [115.5686, 3.9389], [115.8962, 4.3486], [117.1005, 4.337], [117.5745, 4.1705]]], [[[96.4636, 2.36], [95.8087, 2.6556], [95.8061, 2.9162], [96.4174, 2.5153], [96.4636, 2.36]]], [[[127.7326, 0.848], [128.1609, 1.1578], [128.4241, 1.5175], [128.6882, 1.5725], [128.7025, 1.1064], [128.2989, 0.8769], [128.6914, 0.3602], [127.9829, 0.4721], [127.8875, 0.2985], [128.0464, -0.706], [127.6917, -0.2417], [127.7086, 0.2883], [127.5555, 0.4899], [127.42, 1.252], [127.6318, 1.8437], [128.0109, 1.7012], [128.0118, 1.3318], [127.6527, 1.014], [127.7326, 0.848]]], [[[124.889, 0.9954], [124.4273, 0.4707], [123.7539, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [121.8421, 0.4366], [121.4258, 0.4947], [120.349, 0.4494], [120.1273, 0.1667], [120.0119, -0.307], [120.0973, -0.6501], [120.5175, -1.0394], [120.6676, -1.3701], [121.0338, -1.4065], [121.5194, -0.8557], [121.9695, -0.9334], [122.2798, -0.7571], [122.8888, -0.7554], [122.5066, -1.3478], [121.7187, -1.8628], [121.349, -1.9459], [121.8484, -2.3315], [122.3993, -3.2007], [122.2528, -3.6206], [122.8772, -4.1089], [122.8973, -4.349], [122.2071, -4.4964], [121.9171, -4.848], [121.4866, -4.5812], [121.6179, -4.0929], [120.9144, -3.5557], [121.0542, -3.1669], [121.0521, -2.7515], [120.6539, -2.6676], [120.2539, -3.0529], [120.4369, -3.7072], [120.3627, -4.0858], [120.42, -4.6176], [120.2792, -5.1462], [120.3115, -5.5417], [119.7172, -5.6932], [119.3763, -5.425], [119.6116, -4.4237], [119.6235, -4.0344], [119.4199, -3.4755], [118.9945, -3.5376], [118.8126, -3.1567], [118.7836, -2.7647], [119.0922, -2.483], [119.3217, -1.9298], [119.3088, -1.4083], [119.7718, -0.4836], [119.8091, 0.2386], [120.2695, 0.971], [120.5167, 0.8174], [120.9122, 1.2888], [121.44, 1.2143], [121.5918, 1.0677], [122.4365, 1.0181], [122.8923, 0.8499], [123.2782, 0.9279], [123.8468, 0.8383], [124.2738, 1.022], [124.9893, 1.7012], [125.2339, 1.5024], [124.889, 0.9954]]], [[[97.4813, 1.4651], [97.9319, 0.9741], [97.8764, 0.6283], [97.4054, 0.9471], [97.2443, 1.4238], [97.4813, 1.4651]]], [[[140.9735, -2.6099], [140.9743, -4.8364], [140.9752, -6.9054], [140.976, -9.1187], [139.9347, -8.1013], [139.3856, -8.1892], [138.8561, -8.1452], [139.0878, -7.5873], [138.7477, -7.2516], [138.8645, -6.8583], [138.4388, -6.3435], [138.061, -5.4654], [137.0894, -4.9243], [136.6188, -4.8187], [135.9796, -4.531], [135.1956, -4.4507], [134.1473, -3.7968], [133.9736, -3.8182], [133.6532, -3.3645], [133.2489, -4.0623], [132.9687, -4.0947], [132.7539, -3.7037], [132.7512, -3.2948], [132.3481, -2.9752], [133.191, -2.4377], [133.6089, -2.5473], [133.905, -2.391], [133.9218, -2.102], [132.963, -2.2725], [132.3078, -2.2423], [132.0233, -1.9902], [131.9305, -1.5596], [131.2935, -1.3936], [131.2571, -0.8557], [131.8044, -0.7038], [132.1284, -0.4539], [132.6252, -0.3589], [133.4725, -0.7259], [133.9746, -0.7442], [134.2596, -1.363], [134.106, -1.7212], [134.1557, -2.1952], [135.0373, -3.333], [135.4865, -3.345], [136.2433, -2.5832], [136.3898, -2.2734], [136.8431, -2.1975], [137.1235, -1.8411], [137.8062, -1.4833], [138.6496, -1.7909], [139.7895, -2.3484], [140.6223, -2.4457], [140.9735, -2.6099]]]] }, \"properties\": { \"id\": \"ID\", \"name\": \"Indonesia\" }, \"id\": \"ID\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-4.4121, 54.1854], [-4.7457, 54.1189], [-4.5086, 54.3768], [-4.4121, 54.1854]]] }, \"properties\": { \"id\": \"IM\", \"name\": \"Isle of Man\" }, \"id\": \"IM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[78.7198, 31.8876], [78.8446, 31.3017], [79.1073, 31.4025], [79.3386, 31.1055], [79.3696, 31.0797], [79.9166, 30.8942], [79.9246, 30.8889], [80.1912, 30.5684], [80.6823, 30.4149], [81.0103, 30.1645], [80.4017, 29.7304], [80.0705, 28.8301], [80.5867, 28.6495], [81.8529, 27.8669], [81.9877, 27.9139], [82.7334, 27.5189], [83.2897, 27.371], [84.0909, 27.4913], [84.6103, 27.2987], [84.6852, 27.0413], [85.293, 26.7412], [86.3662, 26.5742], [86.7014, 26.4348], [87.0166, 26.5556], [87.2873, 26.3603], [88.0549, 26.43], [88.1614, 26.7248], [87.9842, 27.134], [88.1098, 27.8704], [88.6212, 28.0919], [88.8484, 27.8687], [88.8912, 27.316], [88.8578, 26.9613], [89.7638, 26.7017], [90.3457, 26.8903], [90.7395, 26.7718], [91.9984, 26.8548], [92.0835, 27.2907], [91.5949, 27.5575], [91.6317, 27.7599], [91.9775, 27.7301], [92.6642, 27.949], [92.7019, 28.1469], [93.2067, 28.5909], [93.9022, 28.803], [94.6231, 29.3126], [94.7696, 29.1759], [95.4204, 29.0543], [96.0351, 29.4472], [96.4355, 29.0507], [96.776, 28.3672], [97.3224, 28.2179], [97.3353, 27.9379], [96.666, 27.339], [96.0614, 27.217], [95.1287, 26.5973], [95.1323, 26.0412], [94.6227, 25.4099], [94.7074, 25.0486], [94.2929, 24.3219], [94.1278, 23.8763], [93.3075, 24.0219], [93.4148, 23.6823], [93.366, 23.1323], [93.0788, 22.7181], [93.1618, 22.3604], [92.9644, 22.0039], [92.575, 21.9782], [92.4916, 22.6853], [92.3615, 22.929], [92.2461, 23.6837], [91.938, 23.5047], [91.6197, 22.9797], [91.3153, 23.1044], [91.1603, 23.6605], [91.3672, 24.0933], [91.8767, 24.1955], [92.2514, 24.895], [92.0498, 25.1694], [90.4394, 25.1578], [89.814, 25.3052], [89.8229, 25.9412], [89.2893, 26.0376], [89.1082, 26.2023], [88.4402, 26.3696], [88.0847, 25.8885], [88.4521, 25.5745], [88.4561, 25.1884], [88.1453, 24.4858], [88.7335, 24.231], [88.5671, 23.6743], [88.7407, 23.4369], [89.0515, 22.0932], [89.0518, 21.6542], [88.2536, 21.6222], [87.9483, 21.8255], [87.1005, 21.5005], [86.8595, 21.2369], [86.9753, 20.7002], [86.7502, 20.3131], [86.2792, 19.9194], [85.5749, 19.6931], [84.7709, 19.1253], [84.1043, 18.2925], [83.654, 18.0697], [83.1981, 17.609], [82.3597, 17.0963], [82.2589, 16.56], [81.7618, 16.3297], [81.2384, 16.2639], [80.9787, 15.7584], [80.6468, 15.8951], [80.2933, 15.7109], [80.0532, 15.0739], [80.1656, 14.5777], [80.1118, 14.2123], [80.3422, 13.3613], [80.229, 12.6902], [79.8583, 11.9889], [79.7541, 11.5751], [79.8486, 11.197], [79.8379, 10.3225], [79.3905, 10.306], [78.9963, 9.6832], [78.9794, 9.2687], [78.4215, 9.1049], [78.1924, 8.891], [78.0602, 8.3845], [77.5178, 8.0782], [76.9669, 8.407], [76.5536, 8.9029], [76.3246, 9.452], [76.3464, 9.9221], [75.9224, 10.7841], [75.7239, 11.3616], [75.1966, 12.0577], [74.7705, 13.0773], [74.671, 13.6676], [74.3822, 14.4946], [73.9492, 15.0748], [73.9319, 15.3971], [73.476, 16.0544], [73.3375, 16.4598], [73.156, 17.6218], [72.8712, 18.6832], [72.6677, 19.8311], [72.8812, 20.563], [72.8139, 21.1171], [72.543, 21.6968], [72.5901, 22.2783], [72.3327, 22.2703], [72.037, 21.8233], [72.254, 21.5312], [72.0152, 21.1557], [71.0245, 20.7388], [70.7191, 20.7406], [70.1273, 21.0948], [69.0087, 22.1966], [70.1771, 22.5726], [70.2513, 22.9707], [69.6644, 22.7591], [69.236, 22.8487], [68.6408, 23.1901], [68.1649, 23.8572], [68.7242, 23.9646], [68.7282, 24.2656], [69.5592, 24.2731], [69.7163, 24.1728], [70.5468, 24.4183], [71.0439, 24.4001], [71.048, 24.6877], [70.6521, 25.4228], [70.2645, 25.7064], [70.0776, 26.0717], [70.1566, 26.4713], [69.47, 26.8047], [69.5681, 27.1744], [70.1446, 27.8492], [70.4035, 28.0249], [70.7373, 27.7293], [71.8701, 27.9624], [72.3419, 28.752], [72.903, 29.029], [73.3816, 29.9345], [73.809, 30.0934], [73.8991, 30.4352], [74.6329, 31.0345], [74.5099, 31.7127], [75.3333, 32.2792], [74.6578, 32.5189], [73.9941, 33.2424], [74.1499, 33.507], [73.9612, 34.6536], [74.3003, 34.7654], [75.7093, 34.5031], [76.5944, 34.7356], [77.0485, 35.1099], [77.7991, 35.496], [77.8107, 35.4846], [78.2821, 34.654], [78.9364, 34.3522], [78.7532, 34.0875], [78.8018, 33.4998], [79.1126, 33.2265], [79.1353, 33.1718], [79.2165, 32.5641], [79.2191, 32.5011], [78.3895, 32.5197], [78.7198, 31.8876]]] }, \"properties\": { \"id\": \"IN\", \"name\": \"India\" }, \"id\": \"IN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[72.4919, -7.3772], [72.467, -7.3676], [72.4737, -7.3097], [72.4357, -7.2303], [72.4938, -7.2618], [72.4919, -7.3772]]] }, \"properties\": { \"id\": \"IO\", \"name\": \"British Indian Ocean Territory\" }, \"id\": \"IO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.2181, 54.0887], [-6.0274, 52.927], [-6.5612, 52.1888], [-7.5273, 52.0989], [-8.8135, 51.5849], [-10.3787, 51.8687], [-9.9559, 52.1366], [-9.2993, 53.0974], [-9.7954, 53.3951], [-9.996, 54.276], [-8.623, 54.3468], [-8.764, 54.6812], [-8.2746, 55.1462], [-7.2468, 55.3531], [-7.2186, 55.0921], [-8.1184, 54.4143], [-7.3553, 54.1213], [-6.2181, 54.0887]]] }, \"properties\": { \"id\": \"IE\", \"name\": \"Ireland\" }, \"id\": \"IE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.1146, 38.8776], [46.4906, 38.9065], [47.7729, 39.6486], [47.9957, 39.6842], [48.2422, 38.9788], [48.0233, 38.819], [48.5928, 38.4111], [48.8686, 38.4355], [49.0811, 37.6676], [49.4699, 37.4966], [50.1304, 37.407], [50.5331, 37.0137], [51.1186, 36.7425], [52.1901, 36.6217], [54.0172, 36.9524], [53.9142, 37.3435], [54.7451, 37.502], [55.0754, 37.9023], [55.5783, 38.0999], [56.2286, 38.0733], [56.4409, 38.2495], [57.1937, 38.2162], [57.4236, 37.9476], [58.4357, 37.6387], [58.8157, 37.6836], [59.2409, 37.5206], [59.5622, 37.1788], [60.0625, 36.9631], [60.3413, 36.6377], [61.1195, 36.6426], [61.262, 35.6194], [61.0799, 34.8554], [60.4856, 34.0947], [60.5109, 33.6389], [60.9171, 33.5052], [60.5606, 33.1376], [60.8292, 32.2494], [60.8541, 31.4833], [61.6602, 31.3825], [61.7844, 30.8321], [61.104, 30.1285], [60.8433, 29.8586], [61.3183, 29.3726], [61.6229, 28.7915], [61.8901, 28.5465], [62.3531, 28.4146], [62.7397, 28.0023], [62.7632, 27.2503], [63.1667, 27.2526], [63.168, 26.6657], [62.4391, 26.5609], [61.8697, 26.2422], [61.6686, 25.769], [61.5878, 25.2022], [61.412, 25.1023], [60.664, 25.282], [59.4562, 25.4814], [59.0461, 25.4175], [58.7978, 25.5547], [57.796, 25.6532], [57.3344, 25.7916], [56.9824, 26.9054], [56.356, 27.2002], [55.6503, 26.9778], [54.8956, 26.5565], [53.7056, 26.7256], [53.4548, 26.9432], [52.6916, 27.3236], [52.4761, 27.6165], [51.6663, 27.8451], [51.2789, 28.1315], [51.0622, 28.7262], [50.6751, 29.1466], [50.6498, 29.4201], [49.9831, 30.2093], [49.5548, 30.029], [48.919, 30.1209], [48.5466, 29.9625], [48.0148, 30.4654], [48.0105, 30.9897], [47.6793, 31.0025], [47.8298, 31.7944], [47.3713, 32.4239], [47.1213, 32.4665], [46.3769, 32.9291], [45.3967, 33.9708], [45.4377, 34.4152], [45.6782, 34.7982], [46.1336, 35.1276], [45.7235, 35.8365], [45.3617, 36.0154], [45.031, 36.5263], [44.7651, 37.1424], [44.5614, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.023, 39.3774], [44.8172, 39.6504], [45.4799, 39.0063], [46.1146, 38.8776]]] }, \"properties\": { \"id\": \"IR\", \"name\": \"Iran\" }, \"id\": \"IR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[44.7651, 37.1424], [45.031, 36.5263], [45.3617, 36.0154], [45.7235, 35.8365], [46.1336, 35.1276], [45.6782, 34.7982], [45.4377, 34.4152], [45.3967, 33.9708], [46.3769, 32.9291], [47.1213, 32.4665], [47.3713, 32.4239], [47.8298, 31.7944], [47.6793, 31.0025], [48.0105, 30.9897], [48.0148, 30.4654], [48.5466, 29.9625], [47.9785, 29.983], [47.6727, 30.0956], [47.1143, 29.9612], [46.9056, 29.5377], [46.5314, 29.0965], [46.3565, 29.0636], [44.7164, 29.1937], [42.8577, 30.4952], [42.0743, 31.0802], [40.3693, 31.9391], [39.1455, 32.1247], [38.7736, 33.372], [40.6893, 34.3321], [40.9873, 34.4289], [41.1945, 34.769], [41.3543, 35.6403], [41.2455, 36.0735], [41.4169, 36.5148], [41.7885, 36.5973], [42.3588, 37.1087], [42.7748, 37.3719], [43.516, 37.2445], [44.1561, 37.2832], [44.2817, 36.9782], [44.7651, 37.1424]]] }, \"properties\": { \"id\": \"IQ\", \"name\": \"Iraq\" }, \"id\": \"IQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.5431, 66.2284], [-14.6981, 66.0203], [-14.7577, 65.7557], [-13.616, 65.4872], [-13.853, 64.8621], [-15.0215, 64.296], [-16.0604, 64.1113], [-16.6404, 63.8654], [-17.8156, 63.7129], [-18.6537, 63.4066], [-20.1982, 63.5558], [-21.8329, 64.2054], [-21.9503, 64.515], [-22.684, 65.0264], [-22.0057, 65.4934], [-22.9024, 65.5804], [-24.2241, 65.4872], [-23.7372, 66.0695], [-22.4261, 66.4302], [-21.3036, 65.8764], [-21.2301, 65.4205], [-20.3567, 65.7191], [-20.3567, 66.0331], [-18.7776, 66.1688], [-16.7485, 66.1317], [-15.9855, 66.5145], [-15.5431, 66.2284]]] }, \"properties\": { \"id\": \"IS\", \"name\": \"Iceland\" }, \"id\": \"IS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.7874, 32.735], [35.5512, 32.3955], [35.193, 32.5344], [34.956, 32.1611], [34.9507, 31.6023], [35.4506, 31.4792], [35.4394, 31.1326], [35.174, 30.524], [34.9734, 29.5549], [34.9042, 29.4773], [34.2453, 31.2085], [34.4775, 31.5849], [34.6786, 31.8956], [35.1088, 33.0835], [35.4109, 33.0755], [35.869, 33.432], [35.7874, 32.735]]] }, \"properties\": { \"id\": \"IL\", \"name\": \"Israel\" }, \"id\": \"IL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[13.6998, 46.5201], [13.3993, 46.3177], [13.7198, 45.5875], [13.2062, 45.7712], [12.2744, 45.4459], [12.5235, 44.9678], [12.2483, 44.7223], [12.3961, 44.2239], [13.564, 43.5713], [14.0105, 42.6897], [14.8659, 42.0523], [15.1687, 41.9338], [15.9641, 41.9396], [16.0124, 41.4353], [17.1032, 41.062], [17.955, 40.6554], [18.4858, 40.105], [18.0779, 39.9367], [17.8648, 40.2803], [16.9283, 40.4579], [16.5301, 39.8595], [16.5976, 39.6389], [17.1148, 39.3806], [17.1746, 38.9979], [16.5589, 38.7147], [16.5457, 38.4093], [16.0569, 37.9419], [15.7244, 37.9393], [15.9725, 38.7124], [16.1967, 38.7591], [16.0236, 39.3535], [15.6929, 39.99], [14.9507, 40.2391], [14.7656, 40.6683], [14.1024, 40.8272], [13.7332, 41.2356], [13.0887, 41.244], [12.6309, 41.4696], [11.6375, 42.2876], [10.7084, 42.9361], [10.0475, 44.0201], [8.7659, 44.4222], [8.0814, 43.9189], [7.4929, 43.7671], [7.6514, 44.0339], [6.9673, 44.2802], [7.0307, 44.7166], [6.6277, 45.1178], [7.1533, 45.401], [6.8043, 45.8147], [7.021, 45.9257], [7.9931, 46.0158], [8.4583, 46.2457], [8.9537, 45.8298], [9.2511, 46.2866], [9.9391, 46.3616], [10.4527, 46.865], [11.025, 46.7971], [11.2442, 46.9755], [12.1542, 46.9351], [12.3881, 46.7025], [13.6998, 46.5201]], [[12.397, 43.9345], [12.4854, 43.9016], [12.5146, 43.9531], [12.4409, 43.9824], [12.397, 43.9345]]], [[[15.5765, 38.2202], [15.0994, 37.4585], [15.2944, 37.0132], [15.1127, 36.6879], [14.5019, 36.7989], [12.4356, 37.8198], [13.3518, 38.1807], [13.6816, 38.0009], [14.5059, 38.0453], [14.8459, 38.1718], [15.5765, 38.2202]]], [[[9.6319, 40.8823], [9.8051, 40.4996], [9.5623, 39.1661], [9.0562, 39.2394], [8.8813, 38.9126], [8.4179, 39.2057], [8.4712, 40.2927], [8.1897, 40.6518], [9.2831, 41.2018], [9.6319, 40.8823]]]] }, \"properties\": { \"id\": \"IT\", \"name\": \"Italy\" }, \"id\": \"IT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.2614, 18.4572], [-76.3499, 18.1518], [-76.5246, 17.8664], [-76.8533, 17.9738], [-77.3615, 17.8336], [-77.7681, 17.8775], [-78.2167, 18.4479], [-77.8736, 18.522], [-77.2614, 18.4572]]] }, \"properties\": { \"id\": \"JM\", \"name\": \"Jamaica\" }, \"id\": \"JM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.0186, 49.2311], [-2.2359, 49.1763], [-2.2206, 49.2665], [-2.0186, 49.2311]]] }, \"properties\": { \"id\": \"JE\", \"name\": \"Jersey\" }, \"id\": \"JE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.1455, 32.1247], [38.9621, 31.995], [36.9584, 31.4917], [37.9803, 30.5], [37.6335, 30.3132], [37.4693, 29.9949], [36.7551, 29.8662], [36.476, 29.4951], [36.0155, 29.1905], [34.9507, 29.3535], [34.9734, 29.5549], [35.174, 30.524], [35.4394, 31.1326], [35.4506, 31.4792], [35.5589, 31.7656], [35.5512, 32.3955], [35.7874, 32.735], [36.372, 32.387], [36.8182, 32.3173], [38.7736, 33.372], [39.1455, 32.1247]]] }, \"properties\": { \"id\": \"JO\", \"name\": \"Jordan\" }, \"id\": \"JO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[143.8242, 44.1168], [144.7985, 43.9402], [145.1012, 43.7644], [145.3476, 43.1767], [144.6307, 42.9468], [143.9692, 42.8815], [143.4295, 42.419], [143.2364, 42.0004], [141.8514, 42.5793], [140.9864, 42.3421], [140.7098, 42.5557], [140.3151, 42.3342], [140.6601, 41.8157], [140.3849, 41.5192], [139.9951, 41.5764], [140.1083, 41.913], [139.821, 42.3875], [139.8913, 42.6494], [140.7808, 43.2149], [141.2962, 43.1998], [141.6446, 44.0196], [141.7822, 44.7166], [141.5828, 45.156], [141.9375, 45.5093], [142.7041, 44.8191], [143.8242, 44.1168]]], [[[141.2295, 41.3727], [141.4626, 40.611], [141.7968, 40.2914], [141.978, 39.8444], [141.9006, 39.1115], [141.6583, 38.9749], [141.4675, 38.4039], [141.1084, 38.3378], [140.9281, 37.9495], [141.0365, 37.4674], [140.9685, 37.0022], [140.6272, 36.5028], [140.6219, 36.0594], [140.874, 35.7251], [140.4571, 35.5102], [140.4163, 35.2669], [139.7993, 34.9567], [139.6502, 35.4091], [139.2494, 35.2781], [138.9826, 34.6984], [138.5773, 35.0863], [138.1888, 34.5963], [136.8848, 34.8058], [136.5332, 34.6784], [136.8536, 34.3241], [136.3299, 34.1767], [135.9162, 33.5615], [135.4528, 33.5536], [135.1752, 33.898], [135.1003, 34.2882], [135.3848, 34.5004], [134.7398, 34.7654], [134.208, 34.6975], [133.9683, 34.5274], [133.1423, 34.3024], [132.2381, 34.2269], [132.0902, 33.8554], [131.7405, 34.052], [130.9188, 33.9757], [131.0041, 34.3925], [131.3543, 34.4134], [132.923, 35.5111], [133.3766, 35.4587], [134.2139, 35.5391], [135.1744, 35.7473], [135.6804, 35.5032], [136.0955, 35.7677], [136.0062, 35.9905], [136.6982, 36.7421], [137.3424, 36.7704], [137.5142, 36.9515], [138.3199, 37.2183], [138.8849, 37.8437], [139.4012, 38.1425], [140.0479, 39.4635], [139.9081, 40.0215], [139.9227, 40.5986], [140.2813, 40.8462], [141.1186, 40.8823], [141.2295, 41.3727]]], [[[134.3572, 34.2562], [134.6373, 34.2265], [134.7389, 33.8204], [134.3772, 33.6082], [134.1814, 33.2473], [133.6319, 33.511], [133.2861, 33.3601], [132.9772, 32.842], [132.4951, 32.9166], [132.3659, 33.5123], [132.7841, 33.9925], [133.5822, 34.017], [134.0758, 34.3583], [134.3572, 34.2562]]], [[[131.1745, 33.6024], [131.5829, 33.6526], [131.8967, 33.2548], [131.9766, 32.8438], [131.732, 32.593], [131.3374, 31.4047], [130.5886, 31.1783], [130.2006, 31.2919], [130.3218, 31.6014], [130.1943, 32.0909], [130.6406, 32.6192], [129.58, 33.2361], [130.3648, 33.6344], [130.4838, 33.8345], [130.953, 33.8719], [131.1745, 33.6024]]]] }, \"properties\": { \"id\": \"JP\", \"name\": \"Japan\" }, \"id\": \"JP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[87.3229, 49.0858], [86.7534, 49.0088], [86.5496, 48.5287], [85.7493, 48.3849], [85.526, 47.9156], [85.6565, 47.2547], [84.7861, 46.8308], [83.1929, 47.1864], [83.0042, 47.0337], [82.3264, 45.52], [82.4787, 45.1236], [81.602, 45.3109], [80.0589, 45.0064], [80.4554, 44.7463], [80.355, 44.0973], [80.7856, 43.1616], [80.1651, 42.6653], [80.2095, 42.1899], [79.4899, 42.4576], [79.1646, 42.759], [76.9442, 42.9716], [75.0475, 42.9046], [74.2089, 43.2402], [73.5564, 43.0027], [73.4219, 42.5934], [72.8551, 42.561], [71.8168, 42.822], [71.2566, 42.7337], [70.9468, 42.2485], [70.4159, 42.0785], [70.0954, 41.8206], [69.0651, 41.367], [68.2919, 40.6562], [67.9359, 41.1965], [66.8142, 41.1423], [66.6686, 41.2707], [66.4986, 41.9951], [66.0094, 42.0048], [66.1004, 42.9908], [65.803, 42.877], [65.4963, 43.3108], [64.9055, 43.7147], [64.4433, 43.5513], [63.2071, 43.6282], [61.9904, 43.4923], [61.1607, 44.1689], [61.008, 44.3939], [58.5552, 45.5555], [55.9756, 44.9949], [55.977, 42.47], [55.9774, 41.3221], [55.5451, 41.2627], [54.9037, 41.9192], [54.1211, 42.3351], [53.2502, 42.2059], [52.4937, 41.7802], [52.5967, 42.7603], [51.8439, 42.9104], [51.3019, 43.4826], [50.8305, 44.1928], [50.3311, 44.3255], [50.4092, 44.6242], [50.8603, 44.6287], [51.4155, 45.358], [52.531, 45.3988], [52.7738, 45.5728], [53.1352, 46.1916], [53.1703, 46.6693], [52.9159, 46.9542], [52.1888, 46.8397], [51.1781, 47.11], [50.4194, 46.8797], [50, 46.6341], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5663], [48.9595, 46.7744], [48.1099, 47.7453], [47.0934, 47.9476], [47.0041, 48.2846], [46.6609, 48.4124], [46.7027, 48.8054], [47.0144, 49.0984], [46.8022, 49.367], [47.3264, 50.2734], [47.706, 50.3779], [48.4344, 49.8284], [48.8433, 50.0131], [48.8086, 50.6012], [49.498, 51.0835], [50.2468, 51.2895], [50.7941, 51.7292], [51.6091, 51.4839], [52.3309, 51.6812], [52.571, 51.4817], [53.3381, 51.4824], [54.0416, 51.1152], [54.4216, 50.7803], [54.727, 50.998], [55.5424, 50.6017], [55.7976, 50.6021], [56.4915, 51.0196], [57.0116, 51.0651], [57.4422, 50.8889], [57.8387, 51.0917], [58.3594, 51.0638], [58.8836, 50.6945], [59.8122, 50.5819], [59.9552, 50.7992], [60.6378, 50.6638], [61.3893, 50.8609], [61.5851, 51.2298], [61.3632, 51.4419], [60.4647, 51.6513], [60.0657, 51.9764], [60.9375, 52.2805], [60.8021, 52.7448], [61.0476, 52.9725], [61.974, 52.9436], [62.0147, 53.1079], [61.1994, 53.2872], [60.9796, 53.6217], [61.3339, 54.0491], [61.9286, 53.9464], [63.0739, 54.1053], [64.4611, 54.384], [65.1576, 54.3643], [65.4767, 54.6234], [66.2224, 54.6673], [68.0739, 54.9595], [68.2063, 55.1609], [68.9773, 55.3895], [70.1824, 55.1624], [70.7382, 55.3051], [71.1856, 54.5994], [71.0933, 54.2123], [72.9141, 54.1073], [73.3993, 53.8115], [73.2857, 53.5984], [74.4518, 53.6472], [76.2664, 54.312], [76.5757, 53.9424], [77.7042, 53.3791], [78.4756, 52.6385], [79.4687, 51.493], [79.9862, 50.7745], [80.8771, 51.2815], [81.4656, 50.7397], [82.4938, 50.7275], [83.357, 50.9945], [83.9454, 50.7745], [84.2577, 50.2883], [84.9893, 50.0615], [85.2099, 49.6648], [86.1807, 49.4992], [86.6144, 49.6098], [87.3229, 49.0858]]] }, \"properties\": { \"id\": \"KZ\", \"name\": \"Kazakhstan\" }, \"id\": \"KZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.8838, 3.9779], [41.3418, 3.2015], [40.9645, 2.8145], [40.9699, 1.3781], [40.9788, -0.8703], [41.5327, -1.6955], [40.9957, -1.9507], [40.6441, -2.5393], [40.2223, -2.6884], [40.1154, -3.2504], [39.4908, -4.4786], [39.2218, -4.6922], [37.7974, -3.6744], [37.6087, -3.4604], [37.6437, -3.0453], [36.2633, -2.2747], [33.9794, -1.0022], [33.9031, -1.0022], [33.9431, 0.1738], [34.4814, 1.042], [34.7873, 1.2307], [34.9653, 1.6435], [34.964, 2.0626], [34.7425, 2.8181], [34.4478, 3.1634], [34.3927, 3.6916], [34.165, 3.8128], [33.9759, 4.2203], [35.2681, 5.4925], [35.7448, 5.3442], [35.763, 4.808], [36.0817, 4.4498], [36.9056, 4.4116], [38.0863, 3.649], [39.4943, 3.4559], [39.8424, 3.8514], [40.7652, 4.2731], [41.2207, 3.9438], [41.8838, 3.9779]]] }, \"properties\": { \"id\": \"KE\", \"name\": \"Kenya\" }, \"id\": \"KE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[80.2095, 42.1899], [80.2162, 42.0324], [79.2937, 41.7829], [78.3624, 41.3718], [78.1232, 41.0758], [76.8239, 40.9821], [76.4804, 40.4494], [75.8718, 40.3034], [75.5836, 40.6052], [75.0044, 40.4494], [74.4118, 40.1373], [73.9914, 40.0433], [73.9147, 39.6065], [73.6314, 39.4489], [73.2351, 39.3743], [72.0427, 39.3521], [71.8061, 39.2758], [71.4044, 39.598], [70.7333, 39.4134], [70.6076, 39.5643], [69.5986, 39.5736], [69.229, 39.761], [69.5303, 40.0974], [69.9666, 40.2022], [70.4514, 40.0491], [70.958, 40.2391], [71.6925, 40.1524], [73.113, 40.7859], [72.6585, 40.8698], [71.7924, 41.4131], [71.4084, 41.1361], [70.7826, 41.2627], [70.1811, 41.5716], [70.842, 42.0195], [70.9468, 42.2485], [71.2566, 42.7337], [71.8168, 42.822], [72.8551, 42.561], [73.4219, 42.5934], [73.5564, 43.0027], [74.2089, 43.2402], [75.0475, 42.9046], [76.9442, 42.9716], [79.1646, 42.759], [79.4899, 42.4576], [80.2095, 42.1899]]] }, \"properties\": { \"id\": \"KG\", \"name\": \"Kyrgyzstan\" }, \"id\": \"KG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[104.4264, 10.4113], [104.2623, 10.5413], [103.5321, 10.6048], [103.722, 10.8902], [103.5325, 11.1468], [103.153, 10.9137], [103.1254, 11.4606], [102.9341, 11.7065], [102.7366, 12.0897], [102.7556, 12.4261], [102.4995, 12.6697], [102.3198, 13.5399], [102.729, 13.8421], [103.1995, 14.3326], [104.779, 14.4281], [105.1833, 14.3463], [105.9047, 13.9246], [105.9787, 14.3433], [106.5013, 14.578], [106.8199, 14.3149], [107.5195, 14.705], [107.3313, 14.1266], [107.6056, 13.4377], [107.4755, 13.0303], [107.5061, 12.3644], [106.9305, 12.0776], [106.4137, 11.9485], [106.3401, 11.6817], [105.8513, 11.6351], [105.8558, 11.2942], [106.1678, 11.0123], [105.3866, 10.9399], [104.8504, 10.5347], [104.4264, 10.4113]]] }, \"properties\": { \"id\": \"KH\", \"name\": \"Cambodia\" }, \"id\": \"KH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-157.3422, 1.8557], [-157.2461, 1.7318], [-157.4201, 1.7873], [-157.3422, 1.8557]]] }, \"properties\": { \"id\": \"KI\", \"name\": \"Kiribati\" }, \"id\": \"KI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.6308, 17.2401], [-62.8389, 17.3391], [-62.7945, 17.4026], [-62.7137, 17.3533], [-62.6308, 17.2401]]] }, \"properties\": { \"id\": \"KN\", \"name\": \"Saint Kitts and Nevis\" }, \"id\": \"KN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[128.3744, 38.6233], [128.6191, 38.1763], [129.335, 37.2747], [129.4735, 36.7421], [129.4033, 36.0522], [129.5618, 35.9475], [129.2143, 35.1818], [128.5112, 35.101], [128.4441, 34.8706], [127.7149, 34.9545], [127.0308, 34.6069], [126.4817, 34.4937], [126.2913, 35.1543], [126.4884, 35.647], [126.7173, 35.7691], [126.5482, 36.4775], [126.2171, 36.8708], [126.7462, 37.1935], [126.6339, 37.7817], [127.1697, 38.3045], [128.0389, 38.3085], [128.3744, 38.6233]]] }, \"properties\": { \"id\": \"KR\", \"name\": \"South Korea\" }, \"id\": \"KR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[21.5625, 42.2477], [21.0595, 42.1713], [20.5659, 41.8739], [20.4856, 42.2232], [20.0638, 42.5473], [20.3444, 42.8278], [21.0569, 43.0915], [21.3906, 42.7514], [21.7529, 42.6698], [21.5625, 42.2477]]] }, \"properties\": { \"id\": \"XK\", \"name\": \"Kosovo\" }, \"id\": \"XK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[48.4423, 28.543], [47.6713, 28.5331], [47.4333, 28.9894], [46.5314, 29.0965], [46.9056, 29.5377], [47.1143, 29.9612], [47.6727, 30.0956], [47.9785, 29.983], [47.9696, 29.6167], [48.1836, 28.9792], [48.4423, 28.543]]] }, \"properties\": { \"id\": \"KW\", \"name\": \"Kuwait\" }, \"id\": \"KW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[102.1276, 22.379], [102.9487, 21.5698], [102.8511, 21.2658], [103.1046, 20.8916], [103.635, 20.6971], [104.0518, 20.9413], [104.5832, 20.6465], [104.6187, 20.3744], [104.928, 20.0179], [104.5463, 19.6105], [104.0319, 19.6753], [103.8965, 19.3401], [104.7164, 18.8034], [105.1149, 18.6787], [105.0856, 18.4501], [105.458, 18.1545], [105.6916, 17.7377], [106.5021, 16.9542], [106.6961, 16.4589], [107.3965, 16.0429], [107.1897, 15.7473], [107.6531, 15.255], [107.5195, 14.705], [106.8199, 14.3149], [106.5013, 14.578], [105.9787, 14.3433], [105.9047, 13.9246], [105.1833, 14.3463], [105.4754, 14.5301], [105.5131, 15.3606], [105.6224, 15.6998], [105.4062, 15.9874], [105.047, 16.1601], [104.7505, 16.6475], [104.8162, 17.3004], [103.9497, 18.3192], [103.3668, 18.4235], [103.0912, 18.1381], [102.7175, 17.8922], [102.1013, 18.2105], [101.1052, 17.4793], [100.9086, 17.5837], [101.1133, 18.0334], [101.0507, 18.4071], [101.2864, 18.977], [101.1545, 19.5793], [100.6253, 19.4999], [100.3978, 19.7561], [100.5428, 20.0886], [100.1225, 20.3168], [100.2494, 20.7304], [100.7564, 21.3128], [101.139, 21.5676], [101.2241, 21.2236], [101.705, 21.1503], [101.744, 21.778], [101.5243, 22.2539], [101.6712, 22.4625], [102.1276, 22.379]]] }, \"properties\": { \"id\": \"LA\", \"name\": \"Lao People's Democratic Republic\" }, \"id\": \"LA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.869, 33.432], [35.4109, 33.0755], [35.1088, 33.0835], [35.9761, 34.6291], [36.4329, 34.6136], [36.5851, 34.2212], [35.9423, 33.6677], [35.869, 33.432]]] }, \"properties\": { \"id\": \"LB\", \"name\": \"Lebanon\" }, \"id\": \"LB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.4863, 7.5584], [-8.2965, 7.0741], [-8.3325, 6.8015], [-8.6035, 6.5076], [-7.8886, 6.2347], [-7.7965, 5.9749], [-7.4543, 5.8413], [-7.4299, 5.3247], [-7.5688, 5.0806], [-7.5451, 4.3512], [-8.259, 4.59], [-9.1322, 5.0548], [-10.2763, 6.0775], [-10.7857, 6.3101], [-10.849, 6.465], [-11.5075, 6.9068], [-11.2678, 7.2326], [-10.6474, 7.7595], [-10.2832, 8.4852], [-9.7683, 8.5345], [-9.5182, 8.3462], [-9.3691, 7.7039], [-9.4638, 7.4158], [-8.8896, 7.2627], [-8.7083, 7.6591], [-8.4863, 7.5584]]] }, \"properties\": { \"id\": \"LR\", \"name\": \"Liberia\" }, \"id\": \"LR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.1505, 31.655], [24.8526, 31.335], [24.9738, 30.7766], [24.7114, 30.1316], [24.9804, 29.1817], [24.9804, 26.4872], [24.9804, 24.4662], [24.9804, 21.996], [24.9671, 19.9953], [23.9804, 19.9958], [23.9804, 19.4968], [21.5847, 20.6794], [19.6683, 21.6258], [17.7521, 22.5721], [15.9841, 23.4453], [14.9791, 22.996], [14.2307, 22.6183], [13.4814, 23.1802], [11.9677, 23.5181], [11.5074, 24.3144], [10.6863, 24.5514], [10.2556, 24.591], [10.0009, 25.3322], [9.4482, 26.0673], [9.4912, 26.3337], [9.8593, 26.5521], [9.7474, 27.3306], [9.9162, 27.7857], [9.8424, 28.9669], [9.64, 29.6362], [9.3102, 30.1151], [9.5187, 30.2292], [9.8952, 30.3873], [10.2161, 30.7833], [10.1149, 31.4637], [10.8264, 32.0807], [11.5047, 32.4137], [11.5043, 33.182], [12.2798, 32.8584], [12.7534, 32.8012], [13.2834, 32.9148], [14.237, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.4963, 31.6568], [16.123, 31.2644], [17.3491, 31.0816], [18.1903, 30.7775], [18.9364, 30.2906], [19.2915, 30.2879], [19.7132, 30.4885], [20.1509, 31.0784], [19.9263, 31.8175], [20.1217, 32.2188], [20.621, 32.5801], [21.6357, 32.9375], [22.1875, 32.9183], [23.0908, 32.6187], [23.2865, 32.2139], [24.1295, 32.0093], [24.6839, 32.0159], [25.1505, 31.655]]] }, \"properties\": { \"id\": \"LY\", \"name\": \"Libya\" }, \"id\": \"LY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8953, 13.8222], [-61.0636, 13.9158], [-60.8867, 14.0112], [-60.8953, 13.8222]]] }, \"properties\": { \"id\": \"LC\", \"name\": \"Saint Lucia\" }, \"id\": \"LC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5801, 47.0572], [9.4877, 47.062], [9.5277, 47.2707], [9.5801, 47.0572]]] }, \"properties\": { \"id\": \"LI\", \"name\": \"Liechtenstein\" }, \"id\": \"LI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[79.9822, 9.8129], [80.253, 9.7964], [80.7111, 9.3663], [81.373, 8.4315], [81.4359, 8.1189], [81.8741, 7.2885], [81.8611, 6.9014], [81.6375, 6.4251], [80.724, 5.979], [80.0954, 6.153], [79.8593, 6.8295], [79.7922, 7.5854], [79.929, 8.8994], [80.1184, 9.3268], [79.9822, 9.8129]]] }, \"properties\": { \"id\": \"LK\", \"name\": \"Sri Lanka\" }, \"id\": \"LK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.7367, -30.1019], [28.3922, -30.1476], [28.0179, -30.6421], [27.3886, -30.3159], [27.0517, -29.6642], [27.2944, -29.5195], [27.7356, -28.9402], [28.6257, -28.5815], [29.3013, -29.0897], [29.3904, -29.2696], [29.0979, -29.919], [28.7367, -30.1019]]] }, \"properties\": { \"id\": \"LS\", \"name\": \"Lesotho\" }, \"id\": \"LS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[26.5936, 55.6676], [26.175, 55.0033], [25.8593, 54.9192], [25.5473, 54.3317], [24.7683, 53.9746], [23.4845, 53.9397], [23.3699, 54.2005], [22.7663, 54.3567], [22.8312, 54.8384], [21.2358, 55.2641], [21.0463, 56.07], [22.0845, 56.4067], [24.1207, 56.2642], [24.9033, 56.3983], [26.5936, 55.6676]]] }, \"properties\": { \"id\": \"LT\", \"name\": \"Lithuania\" }, \"id\": \"LT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.1163, 50.1209], [6.4875, 49.7984], [6.344, 49.4527], [5.7896, 49.5384], [5.7439, 49.9196], [6.1163, 50.1209]]] }, \"properties\": { \"id\": \"LU\", \"name\": \"Luxembourg\" }, \"id\": \"LU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.3517, 57.5282], [27.797, 57.3169], [27.8062, 56.867], [28.148, 56.143], [27.5767, 55.7987], [26.5936, 55.6676], [24.9033, 56.3983], [24.1207, 56.2642], [22.0845, 56.4067], [21.0463, 56.07], [21.0711, 56.8237], [21.7285, 57.571], [22.5546, 57.7241], [23.6479, 56.9711], [24.4033, 57.3251], [24.3226, 57.8706], [25.1109, 58.0635], [25.9912, 57.8382], [26.5328, 57.531], [27.3517, 57.5282]]] }, \"properties\": { \"id\": \"LV\", \"name\": \"Latvia\" }, \"id\": \"LV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[113.4787, 22.1957], [113.4943, 22.2414], [113.5467, 22.2242], [113.4787, 22.1957]]] }, \"properties\": { \"id\": \"MO\", \"name\": \"Macau\" }, \"id\": \"MO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0112, 18.0689], [-63.123, 18.0689], [-63.0631, 18.1154], [-63.0112, 18.0689]]] }, \"properties\": { \"id\": \"MF\", \"name\": \"Saint Martin\" }, \"id\": \"MF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[7.4387, 43.7507], [7.3779, 43.7316], [7.4143, 43.7711], [7.4387, 43.7507]]] }, \"properties\": { \"id\": \"MC\", \"name\": \"Monaco\" }, \"id\": \"MC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.0997, 45.9728], [28.2443, 46.4513], [28.0717, 46.9786], [27.3366, 47.6396], [26.9807, 48.155], [26.6189, 48.2597], [27.5492, 48.4777], [29.1948, 47.8824], [29.1597, 47.4558], [29.5493, 47.2467], [29.8779, 46.829], [29.838, 46.3505], [29.1464, 46.5267], [28.9475, 46.05], [28.2124, 45.4503]]] }, \"properties\": { \"id\": \"MD\", \"name\": \"Moldova\" }, \"id\": \"MD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[49.5383, -12.4323], [49.9374, -13.0725], [50.174, -14.04], [50.2352, -14.7322], [50.483, -15.3855], [50.2091, -15.9605], [49.8925, -15.4579], [49.6498, -15.5671], [49.8389, -16.4864], [49.4491, -17.2406], [49.4779, -17.8984], [48.607, -20.4575], [48.3509, -21.3489], [47.9083, -22.4661], [47.5581, -23.8746], [47.1773, -24.7872], [46.7284, -25.1498], [46.1585, -25.2306], [45.5078, -25.5631], [45.1154, -25.5431], [44.813, -25.334], [44.3457, -25.2262], [44.0354, -24.9958], [43.6873, -24.358], [43.7225, -23.5297], [43.398, -22.8864], [43.2665, -22.0493], [43.5018, -21.3563], [43.8557, -21.0767], [44.4046, -19.922], [44.4487, -19.4284], [44.2387, -19.0751], [44.233, -18.7404], [44.0399, -18.2886], [43.9795, -17.3915], [44.4215, -16.7026], [44.4762, -16.2174], [44.9094, -16.1743], [45.1668, -15.983], [45.5983, -15.9928], [45.7, -15.8139], [46.3317, -15.7135], [46.475, -15.5134], [47.8115, -14.5448], [47.9954, -13.9606], [48.7966, -13.2673], [48.8996, -12.4585], [49.2072, -12.0794], [49.5383, -12.4323]]] }, \"properties\": { \"id\": \"MG\", \"name\": \"Madagascar\" }, \"id\": \"MG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.5121, 4.1644], [73.473, 4.1705], [73.5041, 4.2345], [73.5284, 4.2434], [73.5121, 4.1644]]] }, \"properties\": { \"id\": \"MV\", \"name\": \"Maldives\" }, \"id\": \"MV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-97.1462, 25.9617], [-97.5071, 25.0144], [-97.6676, 24.3899], [-97.8578, 22.6245], [-97.6376, 21.6036], [-97.1214, 20.6151], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.821, 18.7547], [-95.1818, 18.7004], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5522, 18.4306], [-92.8849, 18.4688], [-92.7102, 18.6117], [-91.9738, 18.7161], [-91.8031, 18.4705], [-91.2753, 18.6246], [-91.343, 18.9007], [-90.7393, 19.3522], [-90.5071, 19.9119], [-90.4841, 20.5564], [-90.3531, 21.0097], [-89.8198, 21.2746], [-88.8787, 21.414], [-88.1317, 21.6159], [-86.8242, 21.4215], [-86.8648, 20.8849], [-87.4672, 20.1023], [-87.4248, 19.5834], [-87.7619, 18.4461], [-88.1967, 18.7196], [-88.2957, 18.4723], [-88.523, 18.4457], [-88.8064, 17.9654], [-89.1615, 17.8149], [-90.9893, 17.8163], [-90.993, 17.2525], [-91.4096, 17.256], [-90.7107, 16.7083], [-90.4171, 16.3909], [-90.4472, 16.0727], [-91.7365, 16.07], [-92.1871, 15.3207], [-92.0748, 15.0743], [-92.2352, 14.5452], [-92.8089, 15.1387], [-93.916, 16.0535], [-94.3741, 16.2849], [-94.6615, 16.2018], [-94.9004, 16.4176], [-95.4643, 15.9746], [-96.5108, 15.6519], [-97.1847, 15.9093], [-97.7548, 15.967], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.6002, 17.6516], [-101.8471, 17.9223], [-102.6995, 18.0626], [-103.4415, 18.3254], [-103.9125, 18.8283], [-104.9386, 19.3095], [-105.4821, 19.9763], [-105.6694, 20.3855], [-105.2371, 21.1193], [-105.2086, 21.4908], [-105.6492, 21.9879], [-105.7917, 22.6276], [-106.4023, 23.1958], [-106.9353, 23.8812], [-107.9513, 24.615], [-108.3736, 25.1942], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3053], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.9441, 27.0794], [-110.4779, 27.3227], [-110.5298, 27.8642], [-111.1215, 27.9672], [-111.6802, 28.4705], [-112.1618, 29.0188], [-112.2235, 29.2696], [-112.7384, 29.9856], [-113.1104, 30.7935], [-113.0467, 31.1792], [-114.1493, 31.5072], [-114.8395, 31.7984], [-114.882, 31.1566], [-114.6333, 30.5067], [-114.6498, 30.2382], [-114.3726, 29.8302], [-113.7556, 29.3677], [-113.4997, 28.9269], [-112.8709, 28.4244], [-112.7339, 27.826], [-112.3291, 27.5233], [-112.009, 26.9671], [-111.5696, 26.7075], [-111.2917, 25.7899], [-111.0345, 25.5271], [-110.6774, 24.7884], [-110.5471, 24.2141], [-110.0229, 24.1746], [-109.421, 23.4803], [-109.458, 23.2149], [-109.9234, 22.886], [-110.0861, 23.0053], [-110.3627, 23.6051], [-111.4193, 24.329], [-112.0725, 24.84], [-112.0557, 25.4881], [-112.3773, 26.2139], [-113.0207, 26.5832], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9666], [-114.4454, 27.2184], [-114.9936, 27.7359], [-114.3007, 27.8731], [-114.0485, 28.4262], [-114.1455, 28.6055], [-114.9936, 29.3845], [-115.6739, 29.7566], [-116.0623, 30.8041], [-116.6622, 31.565], [-117.1283, 32.5335], [-114.7248, 32.7155], [-114.836, 32.5082], [-112.939, 31.916], [-111.0421, 31.3243], [-108.2145, 31.3293], [-108.2118, 31.7794], [-106.4533, 31.77], [-106.2558, 31.5445], [-104.9179, 30.5835], [-104.5039, 29.6775], [-104.1107, 29.3864], [-103.2577, 29.001], [-102.892, 29.2163], [-102.7342, 29.6438], [-102.269, 29.871], [-101.4404, 29.7769], [-100.6587, 29.0685], [-100.2961, 28.3276], [-99.5053, 27.5481], [-99.4435, 27.0368], [-99.1078, 26.4469], [-98.0828, 26.0643], [-97.3582, 25.8707], [-97.1462, 25.9617]]] }, \"properties\": { \"id\": \"MX\", \"name\": \"Mexico\" }, \"id\": \"MX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[171.1017, 7.1384], [171.2268, 7.0869], [171.2025, 7.0736], [171.0954, 7.1092], [171.1017, 7.1384]]] }, \"properties\": { \"id\": \"MH\", \"name\": \"Marshall Islands\" }, \"id\": \"MH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.3441, 42.3138], [22.8369, 41.9937], [23.0055, 41.7172], [22.9159, 41.3363], [22.7246, 41.1783], [21.9296, 41.1073], [21.5758, 40.8689], [20.9641, 40.8498], [20.4891, 41.2724], [20.5659, 41.8739], [21.0595, 42.1713], [21.5625, 42.2477], [22.3441, 42.3138]]] }, \"properties\": { \"id\": \"MK\", \"name\": \"North Macedonia\" }, \"id\": \"MK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[4.2276, 19.1426], [4.2346, 16.9964], [4.1824, 16.5818], [3.8769, 15.7552], [3.5041, 15.3562], [1.3002, 15.2724], [0.9601, 14.9869], [0.2175, 14.9115], [-0.2359, 15.0592], [-0.7604, 15.0477], [-1.0496, 14.8195], [-1.7678, 14.4862], [-2.1132, 14.1684], [-2.4572, 14.274], [-3.1985, 13.6729], [-3.3017, 13.2806], [-3.5758, 13.194], [-4.0512, 13.3822], [-4.3286, 13.119], [-4.2272, 12.7937], [-4.4807, 12.6725], [-4.4287, 12.3377], [-4.798, 12.0319], [-5.2881, 11.8277], [-5.2998, 11.2058], [-5.4905, 11.0424], [-5.5236, 10.4259], [-6.0345, 10.1947], [-6.2611, 10.7242], [-6.6932, 10.3496], [-7.105, 10.2035], [-7.6612, 10.4272], [-7.9908, 10.1627], [-8.2316, 10.4378], [-8.4075, 11.3865], [-8.8219, 11.6732], [-9.043, 12.4026], [-9.8207, 12.0426], [-10.2748, 12.2125], [-10.6774, 11.8996], [-10.9333, 12.205], [-11.3053, 12.0155], [-11.3894, 12.4043], [-11.3903, 12.9418], [-11.6349, 13.3698], [-12.0543, 13.633], [-12.0193, 14.2065], [-12.2807, 14.8089], [-11.8728, 14.9953], [-11.7603, 15.4255], [-11.5026, 15.6368], [-10.8955, 15.1502], [-10.6965, 15.4228], [-9.9414, 15.374], [-9.1768, 15.496], [-6.9476, 15.496], [-5.5125, 15.4965], [-5.36, 16.2831], [-5.6285, 16.5685], [-5.9124, 19.0476], [-6.2258, 21.7829], [-6.4251, 23.5234], [-6.594, 24.9945], [-4.8227, 24.9958], [-3.2579, 23.9811], [-1.2931, 22.6964], [1.1457, 21.1024], [1.1657, 20.8174], [1.6855, 20.3784], [2.2195, 20.2479], [2.4063, 20.0637], [3.2035, 19.7898], [3.2559, 19.4108], [3.106, 19.1502], [3.4007, 18.9885], [4.2276, 19.1426]]] }, \"properties\": { \"id\": \"ML\", \"name\": \"Mali\" }, \"id\": \"ML\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.5663, 35.8529], [14.4363, 35.8219], [14.3524, 35.8725], [14.4482, 35.9572], [14.5663, 35.8529]]] }, \"properties\": { \"id\": \"MT\", \"name\": \"Malta\" }, \"id\": \"MT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[101.139, 21.5676], [100.7564, 21.3128], [100.2494, 20.7304], [100.1225, 20.3168], [99.8903, 20.4246], [99.3382, 20.0787], [99.0208, 20.0419], [98.9168, 19.7729], [98.1112, 19.7623], [97.817, 19.46], [97.7539, 18.621], [97.4848, 18.4941], [97.7929, 17.6813], [98.4389, 16.9755], [98.6892, 16.3052], [98.5653, 15.4037], [98.1911, 15.204], [98.2462, 14.8146], [99.1366, 13.7165], [99.2195, 12.7399], [99.4052, 12.5477], [99.6147, 11.7811], [99.1903, 11.1051], [98.7571, 10.6612], [98.7026, 10.1902], [98.465, 10.6759], [98.6753, 10.987], [98.7416, 11.5916], [98.576, 13.1621], [98.2453, 13.7334], [97.8121, 14.8591], [97.7105, 15.8755], [97.5843, 16.0194], [97.6194, 16.5375], [97.3758, 16.5228], [97.1782, 17.0621], [96.6225, 16.564], [95.7635, 16.169], [95.3896, 15.7229], [94.9427, 15.8183], [94.5876, 16.2888], [94.2143, 16.1268], [94.5889, 17.5695], [94.4309, 18.2016], [94.07, 18.8936], [93.7055, 19.0267], [93.9981, 19.4409], [93.3624, 20.0584], [93.0021, 20.0748], [92.7357, 20.5627], [92.3243, 20.7917], [92.1794, 21.2932], [92.5936, 21.4672], [92.575, 21.9782], [92.9644, 22.0039], [93.1618, 22.3604], [93.0788, 22.7181], [93.366, 23.1323], [93.4148, 23.6823], [93.3075, 24.0219], [94.1278, 23.8763], [94.2929, 24.3219], [94.7074, 25.0486], [94.6227, 25.4099], [95.1323, 26.0412], [95.1287, 26.5973], [96.0614, 27.217], [96.666, 27.339], [97.3353, 27.9379], [97.3224, 28.2179], [97.5377, 28.5101], [98.0988, 28.1421], [98.299, 27.55], [98.651, 27.5726], [98.7318, 26.5835], [98.6545, 25.9178], [98.0109, 25.2922], [97.8196, 25.2519], [97.5315, 24.4916], [97.6859, 23.898], [98.2125, 24.1106], [98.7642, 24.116], [98.8636, 23.1913], [99.3407, 23.0959], [99.3377, 22.498], [99.193, 22.126], [99.9179, 22.0279], [100.2148, 21.4628], [100.8349, 21.6551], [101.139, 21.5676]]] }, \"properties\": { \"id\": \"MM\", \"name\": \"Myanmar\" }, \"id\": \"MM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.1943, 43.5331], [19.5516, 43.2123], [20.3444, 42.8278], [20.0638, 42.5473], [19.6546, 42.6285], [19.2808, 42.1727], [19.3426, 41.869], [18.5173, 42.4328], [18.4361, 42.5598], [18.4437, 42.9685], [18.9404, 43.4968], [19.1943, 43.5331]]] }, \"properties\": { \"id\": \"ME\", \"name\": \"Montenegro\" }, \"id\": \"ME\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[116.6832, 49.8237], [115.5575, 47.9449], [115.8984, 47.6871], [116.7604, 47.8699], [117.3508, 47.652], [117.7685, 47.9881], [118.4983, 47.984], [119.711, 47.1499], [119.8979, 46.8579], [119.7065, 46.6062], [118.3087, 46.7172], [117.3334, 46.3621], [116.5625, 46.2897], [116.2406, 45.7961], [115.6809, 45.4583], [114.517, 45.3647], [114.0305, 44.9425], [113.5871, 44.7459], [111.8981, 45.0641], [111.4022, 44.3672], [111.9331, 43.7116], [111.0073, 43.3414], [110.4005, 42.7737], [109.4433, 42.4559], [108.1712, 42.4474], [106.7702, 42.2889], [105.1971, 41.7381], [104.4984, 41.6586], [104.4984, 41.877], [103.7109, 41.7513], [103.0726, 42.0061], [101.973, 42.2157], [101.7138, 42.4656], [99.984, 42.6774], [99.4677, 42.5682], [97.2057, 42.7897], [96.3854, 42.7204], [95.9127, 43.2065], [95.3502, 44.278], [94.7118, 44.3508], [93.6563, 44.9008], [92.7876, 45.0357], [91.5842, 45.0765], [90.8771, 45.1959], [90.6618, 45.5253], [91.0018, 46.0358], [91.0338, 46.529], [90.8699, 46.9546], [90.4962, 47.2854], [90.3133, 47.676], [89.561, 48.004], [89.0478, 48.0027], [88.5169, 48.3844], [87.9799, 48.5549], [87.8141, 49.1624], [88.1924, 49.4517], [88.8316, 49.4484], [89.6541, 49.7174], [89.6439, 49.903], [91.8044, 50.6936], [94.2512, 50.5564], [94.6147, 50.0237], [95.5229, 49.9112], [95.8518, 50.0128], [96.986, 49.8828], [97.2088, 49.7308], [98.1032, 50.0779], [98.2795, 50.5333], [97.8254, 50.9852], [97.9469, 51.3483], [98.8486, 52.07], [100.4688, 51.726], [101.3813, 51.4526], [102.1115, 51.3534], [102.2882, 50.585], [102.6833, 50.387], [103.6329, 50.1387], [105.3835, 50.4736], [106.218, 50.3045], [106.7112, 50.3125], [107.2332, 49.9893], [107.948, 49.9247], [108.0339, 49.594], [108.6136, 49.3229], [109.2365, 49.3348], [110.1997, 49.1704], [110.8278, 49.1661], [111.3365, 49.3559], [113.0556, 49.6162], [113.1641, 49.7971], [114.2969, 50.2743], [114.743, 50.2337], [115.2743, 49.9489], [116.1345, 50.0109], [116.6832, 49.8237]]] }, \"properties\": { \"id\": \"MN\", \"name\": \"Mongolia\" }, \"id\": \"MN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[145.7519, 15.1334], [145.6844, 15.125], [145.7132, 15.2155], [145.7821, 15.1746], [145.7519, 15.1334]]] }, \"properties\": { \"id\": \"MP\", \"name\": \"Northern Mariana Islands\" }, \"id\": \"MP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.8862, -26.8495], [32.1129, -26.8393], [31.9482, -25.9577], [31.9859, -24.4605], [31.7995, -23.8922], [31.5457, -23.4821], [31.2877, -22.4021], [32.3712, -21.335], [32.4778, -20.7131], [33.0069, -19.8737], [32.7166, -19.0019], [32.9932, -18.3596], [32.9478, -16.7123], [32.2434, -16.4486], [31.9398, -16.4287], [31.2361, -16.0238], [30.4377, -15.9954], [30.3959, -15.643], [30.2316, -14.9905], [31.7289, -14.4959], [33.2017, -14.0135], [33.6363, -14.5684], [34.3324, -14.4085], [34.5055, -14.5982], [34.541, -15.2972], [34.248, -15.8875], [34.3955, -16.1992], [35.2903, -17.0968], [35.1673, -16.56], [35.3586, -16.1606], [35.7555, -16.0585], [35.8474, -14.6709], [35.2476, -13.8968], [34.5636, -13.36], [34.3607, -12.2104], [34.6596, -11.5885], [34.9595, -11.5783], [35.6312, -11.5818], [35.7853, -11.4531], [36.5185, -11.7164], [36.9788, -11.5667], [37.5417, -11.675], [37.9203, -11.2946], [38.4916, -11.4132], [38.7947, -11.229], [39.3217, -11.1223], [39.9889, -10.821], [40.4634, -10.4641], [40.5446, -11.0657], [40.403, -11.3319], [40.5806, -12.6356], [40.5451, -13.463], [40.6401, -14.3898], [40.8349, -14.7916], [40.5588, -15.4734], [40.1088, -15.9794], [39.8447, -16.4358], [39.0842, -16.973], [38.145, -17.2428], [37.2443, -17.7399], [36.5403, -18.5181], [35.6512, -19.164], [34.9481, -19.813], [34.7558, -19.8218], [34.6982, -20.4042], [34.9822, -20.8064], [35.2677, -21.651], [35.3156, -22.3969], [35.5753, -22.9632], [35.3702, -23.7982], [35.438, -24.171], [35.1557, -24.5412], [34.6071, -24.8213], [33.3473, -25.2608], [32.7921, -25.6443], [32.5905, -26.0039], [32.9337, -26.2524], [32.8862, -26.8495]]] }, \"properties\": { \"id\": \"MZ\", \"name\": \"Mozambique\" }, \"id\": \"MZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.8584, 15.2426], [-13.258, 15.7002], [-13.4096, 16.0593], [-13.8685, 16.1481], [-14.3, 16.5804], [-15.1128, 16.6449], [-15.6208, 16.5068], [-16.1683, 16.5471], [-16.4411, 16.2045], [-16.5352, 15.8383], [-16.5357, 16.2866], [-16.0789, 17.5459], [-16.0849, 18.5211], [-16.2131, 19.0032], [-16.5146, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.4298, 20.6523], [-17.0481, 20.8063], [-16.9647, 21.3292], [-15.0018, 21.3314], [-13.0163, 21.3341], [-13.0944, 22.4957], [-13.0316, 23.0001], [-12.6203, 23.2713], [-12.0234, 23.4675], [-12.0164, 25.9954], [-10.0035, 25.9954], [-8.6821, 25.9954], [-8.6834, 27.2858], [-6.9908, 26.2906], [-4.8227, 24.9958], [-6.594, 24.9945], [-6.4251, 23.5234], [-6.2258, 21.7829], [-5.9124, 19.0476], [-5.6285, 16.5685], [-5.36, 16.2831], [-5.5125, 15.4965], [-6.9476, 15.496], [-9.1768, 15.496], [-9.9414, 15.374], [-10.6965, 15.4228], [-10.8955, 15.1502], [-11.5026, 15.6368], [-11.7603, 15.4255], [-11.8728, 14.9953], [-12.2807, 14.8089]]] }, \"properties\": { \"id\": \"MR\", \"name\": \"Mauritania\" }, \"id\": \"MR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.1484, 16.7403], [-62.1542, 16.6812], [-62.2216, 16.6994], [-62.223, 16.7518], [-62.1484, 16.7403]]] }, \"properties\": { \"id\": \"MS\", \"name\": \"Montserrat\" }, \"id\": \"MS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8263, 14.4946], [-61.0638, 14.4671], [-61.2198, 14.8044], [-60.9187, 14.7352], [-60.8263, 14.4946]]] }, \"properties\": { \"id\": \"MQ\", \"name\": \"Martinique\" }, \"id\": \"MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[57.6513, -20.4849], [57.3859, -20.2284], [57.5758, -19.9972], [57.792, -20.2124], [57.6513, -20.4849]]] }, \"properties\": { \"id\": \"MU\", \"name\": \"Mauritius\" }, \"id\": \"MU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.9595, -11.5783], [34.6596, -11.5885], [34.3607, -12.2104], [34.5636, -13.36], [35.2476, -13.8968], [35.8474, -14.6709], [35.7555, -16.0585], [35.3586, -16.1606], [35.1673, -16.56], [35.2903, -17.0968], [34.3955, -16.1992], [34.248, -15.8875], [34.541, -15.2972], [34.5055, -14.5982], [34.3324, -14.4085], [33.6363, -14.5684], [33.2017, -14.0135], [32.9922, -14.0224], [32.6722, -13.6104], [32.9679, -13.2251], [33.0216, -12.6303], [33.3979, -12.49], [33.2524, -12.1127], [33.2262, -11.5347], [33.3798, -11.1579], [33.2613, -10.8934], [33.659, -10.5907], [33.351, -9.8623], [32.92, -9.4072], [34.3208, -9.7316], [34.5241, -10.0299], [34.6617, -10.71], [34.608, -11.0806], [34.9595, -11.5783]]] }, \"properties\": { \"id\": \"MW\", \"name\": \"Malawi\" }, \"id\": \"MW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[117.5745, 4.1705], [117.1005, 4.337], [115.8962, 4.3486], [115.5686, 3.9389], [115.4545, 3.0342], [115.0861, 2.8411], [115.1509, 2.4931], [114.7865, 2.2503], [114.8303, 1.98], [114.5458, 1.4673], [113.9022, 1.4344], [113.6222, 1.236], [112.4761, 1.5591], [112.1857, 1.4393], [112.0783, 1.1432], [111.7698, 0.9994], [110.9378, 1.0172], [110.5056, 0.8618], [109.6542, 1.615], [109.6289, 2.0274], [109.9844, 1.7176], [110.3493, 1.7198], [110.9402, 1.5175], [111.154, 1.739], [111.2419, 2.4358], [111.7276, 2.8539], [112.7375, 3.0706], [113.0446, 3.2051], [113.924, 4.2434], [114.0638, 4.5928], [114.6084, 4.0241], [114.8402, 4.3934], [114.7465, 4.7179], [115.0267, 4.8999], [115.1399, 4.8999], [115.5197, 5.0491], [115.419, 5.413], [115.7968, 5.536], [116.1387, 6.1294], [116.4945, 6.5219], [117.294, 6.6768], [117.6455, 6.4734], [117.6172, 5.9408], [118.0038, 6.0532], [118.1156, 5.8627], [118.5947, 5.5919], [119.2236, 5.4126], [119.1322, 5.1005], [118.1853, 4.8284], [118.4978, 4.3623], [117.5745, 4.1705]]], [[[102.1009, 6.2422], [102.9825, 5.5249], [103.4157, 4.8502], [103.4685, 4.3934], [103.362, 3.7693], [103.4397, 2.933], [103.8122, 2.5806], [104.2884, 1.4806], [103.6945, 1.4495], [102.7273, 1.8557], [101.2952, 2.8851], [101.2996, 3.2535], [100.7156, 3.9664], [100.6144, 4.6522], [100.3524, 5.5875], [100.3431, 5.9843], [100.1188, 6.442], [100.3452, 6.5498], [101.0533, 6.2426], [101.2571, 5.7895], [101.5563, 5.908], [101.8737, 5.8254], [102.1009, 6.2422]]]] }, \"properties\": { \"id\": \"MY\", \"name\": \"Malaysia\" }, \"id\": \"MY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[45.1802, -12.9765], [45.0692, -12.8957], [45.135, -12.7093], [45.2232, -12.7519], [45.1802, -12.9765]]] }, \"properties\": { \"id\": \"YT\", \"name\": \"Mayotte\" }, \"id\": \"YT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[23.3807, -17.6406], [24.2751, -17.4811], [24.9325, -17.5433], [25.2588, -17.7936], [24.3591, -17.9782], [23.5804, -18.4529], [23.2985, -18.0276], [20.9739, -18.3188], [20.977, -20.1525], [20.9708, -21.9999], [19.9774, -21.9999], [19.9804, -24.7769], [19.9804, -26.5312], [19.9804, -28.4516], [19.6715, -28.5039], [19.2458, -28.9016], [18.1027, -28.8719], [17.448, -28.6984], [17.3855, -28.3534], [17.0561, -28.0311], [16.7555, -28.4523], [16.4475, -28.6175], [15.7191, -27.966], [15.3413, -27.3866], [14.9676, -26.3182], [14.8451, -25.7255], [14.8371, -25.0331], [14.5014, -24.2021], [14.474, -23.281], [14.5259, -22.7027], [14.3217, -22.19], [13.9733, -21.7677], [13.4504, -20.9169], [13.1685, -20.1845], [12.4583, -18.9269], [12.0956, -18.5411], [11.776, -18.0018], [11.7431, -17.2495], [12.548, -17.2125], [13.1011, -16.9675], [13.4038, -17.0079], [13.9382, -17.3889], [16.9137, -17.3915], [18.3962, -17.3995], [18.8259, -17.7662], [19.6395, -17.8687], [20.3928, -17.8874], [20.6249, -17.9965], [21.4169, -18.0006], [23.3807, -17.6406]]] }, \"properties\": { \"id\": \"NA\", \"name\": \"Namibia\" }, \"id\": \"NA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[164.2023, -20.2461], [164.4358, -20.282], [165.1916, -20.7691], [165.6627, -21.2671], [166.9424, -22.09], [166.7742, -22.3759], [166.0959, -21.9564], [165.2418, -21.5254], [164.4549, -20.829], [164.1699, -20.4801], [164.2023, -20.2461]]] }, \"properties\": { \"id\": \"NC\", \"name\": \"New Caledonia\" }, \"id\": \"NC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.9791, 22.996], [15.1722, 21.9222], [15.182, 21.5232], [15.6073, 20.9546], [15.5873, 20.7335], [15.9491, 20.3034], [15.735, 19.9038], [15.4745, 16.9085], [14.3678, 15.75], [13.4481, 14.3805], [13.6062, 13.7045], [13.3239, 13.6707], [12.6549, 13.3267], [12.4631, 13.0937], [11.4121, 13.3538], [10.9587, 13.3715], [10.1846, 13.2699], [9.616, 12.8105], [8.7504, 12.9081], [8.0952, 13.2912], [7.7885, 13.3379], [7.0566, 13], [6.8043, 13.1074], [6.3862, 13.6038], [5.4918, 13.8727], [4.8233, 13.7599], [4.1477, 13.4577], [3.948, 12.775], [3.6467, 12.53], [3.5955, 11.6964], [2.8782, 12.3679], [2.366, 12.2218], [2.3889, 11.897], [2.0912, 12.2778], [2.0739, 12.7142], [1.5651, 12.6356], [0.9872, 13.0418], [0.978, 13.5518], [0.6184, 13.7036], [0.1638, 14.4973], [0.2175, 14.9115], [0.9601, 14.9869], [1.3002, 15.2724], [3.5041, 15.3562], [3.8769, 15.7552], [4.1824, 16.5818], [4.2346, 16.9964], [4.2276, 19.1426], [5.8367, 19.4791], [7.4818, 20.8729], [9.3784, 21.9915], [11.9677, 23.5181], [13.4814, 23.1802], [14.2307, 22.6183], [14.9791, 22.996]]] }, \"properties\": { \"id\": \"NE\", \"name\": \"Niger\" }, \"id\": \"NE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[167.9395, -29.0175], [167.9788, -29.0756], [167.9203, -29.0827], [167.9395, -29.0175]]] }, \"properties\": { \"id\": \"NF\", \"name\": \"Norfolk Island\" }, \"id\": \"NF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.6062, 13.7045], [14.0639, 13.0786], [14.1975, 12.3839], [14.6271, 12.1086], [14.5596, 11.4922], [13.8921, 11.1401], [13.5351, 10.6052], [13.2697, 10.0362], [13.1756, 9.5394], [12.9296, 9.4262], [12.8067, 8.8865], [12.4036, 8.5957], [12.0161, 7.5898], [11.7676, 7.272], [11.5518, 6.6972], [11.1531, 6.4379], [11.0325, 6.6981], [10.6064, 7.063], [10.1438, 6.9964], [9.0602, 6.0092], [8.801, 5.1973], [8.5561, 4.7552], [8.2932, 4.5576], [7.1546, 4.5145], [6.7568, 4.3437], [6.0764, 4.2904], [5.5877, 4.6473], [5.2326, 5.4836], [4.861, 6.0264], [4.4313, 6.3487], [4.1259, 6.4114], [2.7064, 6.3692], [2.7748, 6.7118], [2.6859, 7.874], [2.7748, 9.0485], [3.0451, 9.084], [3.3252, 9.7783], [3.5574, 9.9074], [3.5764, 10.2683], [3.8344, 10.6075], [3.7163, 11.0798], [3.4878, 11.3953], [3.5955, 11.6964], [3.6467, 12.53], [3.948, 12.775], [4.1477, 13.4577], [4.8233, 13.7599], [5.4918, 13.8727], [6.3862, 13.6038], [6.8043, 13.1074], [7.0566, 13], [7.7885, 13.3379], [8.0952, 13.2912], [8.7504, 12.9081], [9.616, 12.8105], [10.1846, 13.2699], [10.9587, 13.3715], [11.4121, 13.3538], [12.4631, 13.0937], [12.6549, 13.3267], [13.3239, 13.6707], [13.6062, 13.7045]]] }, \"properties\": { \"id\": \"NG\", \"name\": \"Nigeria\" }, \"id\": \"NG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1577, 14.9931], [-83.2992, 14.749], [-83.1879, 14.3402], [-83.4124, 13.9965], [-83.5674, 13.3205], [-83.511, 12.4119], [-83.7694, 11.9316], [-83.6517, 11.6421], [-83.8679, 11.2999], [-83.642, 10.9173], [-83.8113, 10.7433], [-84.1684, 10.7806], [-84.3484, 10.9799], [-84.9093, 10.9452], [-85.6215, 11.1846], [-85.7444, 11.062], [-86.4689, 11.7384], [-86.7556, 12.1566], [-87.6676, 12.9037], [-87.3374, 12.9791], [-87.0593, 12.9916], [-86.7108, 13.3134], [-86.7336, 13.7635], [-86.3317, 13.7701], [-86.1512, 13.9948], [-85.7868, 13.8443], [-85.1796, 14.3433], [-84.9851, 14.7526], [-84.646, 14.6611], [-83.8674, 14.7947], [-83.4152, 15.0082], [-83.1577, 14.9931]]] }, \"properties\": { \"id\": \"NI\", \"name\": \"Nicaragua\" }, \"id\": \"NI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.8033, -19.0831], [-169.9039, -19.1377], [-169.9483, -19.0729], [-169.834, -18.966], [-169.8033, -19.0831]]] }, \"properties\": { \"id\": \"NU\", \"name\": \"Niue\" }, \"id\": \"NU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.8695, 69.7833], [28.9657, 69.0219], [29.1414, 69.6715], [27.8896, 70.0617], [26.5256, 69.915], [26.0116, 69.6527], [25.7484, 68.9901], [24.9413, 68.5933], [23.8539, 68.8059], [22.4108, 68.7198], [21.622, 69.2707], [20.6223, 69.0369], [19.9698, 68.3565], [18.3784, 68.5625], [17.9168, 67.965], [17.3246, 68.1039], [16.1274, 67.4259], [16.4035, 67.055], [15.423, 66.4899], [14.5432, 66.1292], [14.4798, 65.3014], [13.6501, 64.5816], [14.0776, 64.464], [13.9604, 64.0141], [12.6624, 63.9404], [11.9997, 63.2917], [12.2182, 63.0007], [12.3034, 62.2856], [12.1554, 61.7207], [12.8809, 61.3523], [12.294, 61.0027], [12.5887, 60.4507], [12.4862, 60.1067], [11.6805, 59.5923], [11.7982, 59.29], [11.3885, 59.0365], [10.8345, 59.1839], [9.6182, 58.9459], [8.1663, 58.1452], [7.005, 58.0242], [5.7066, 58.5236], [5.8452, 59.3535], [5.1314, 59.2265], [5.2441, 60.5695], [5.0492, 60.7075], [4.9276, 61.7107], [5.5336, 62.3108], [6.3529, 62.6112], [7.2838, 62.6023], [7.0086, 62.9576], [8.1005, 63.091], [8.3979, 63.5351], [9.6968, 63.6246], [9.7079, 63.8649], [11.3498, 64.9059], [12.1596, 65.1789], [12.2727, 65.5682], [12.9763, 66.0191], [13.1046, 66.5394], [14.7549, 67.4991], [14.7988, 67.8094], [16.0644, 68.2], [16.6517, 68.6257], [18.1014, 69.1563], [18.2932, 69.4751], [20.0688, 69.8835], [21.163, 69.8895], [21.4005, 70.1744], [22.6846, 70.3749], [23.0464, 70.1018], [24.4199, 70.702], [24.6582, 71.0009], [25.7683, 70.8531], [27.5971, 71.0913], [29.1024, 70.8607], [30.9442, 70.2746], [29.6014, 69.9767], [29.7922, 69.7279], [30.8695, 69.7833]]] }, \"properties\": { \"id\": \"NO\", \"name\": \"Norway\" }, \"id\": \"NO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[88.1098, 27.8704], [87.9842, 27.134], [88.1614, 26.7248], [88.0549, 26.43], [87.2873, 26.3603], [87.0166, 26.5556], [86.7014, 26.4348], [86.3662, 26.5742], [85.293, 26.7412], [84.6852, 27.0413], [84.6103, 27.2987], [84.0909, 27.4913], [83.2897, 27.371], [82.7334, 27.5189], [81.9877, 27.9139], [81.8529, 27.8669], [80.5867, 28.6495], [80.0705, 28.8301], [80.4017, 29.7304], [81.0103, 30.1645], [81.4169, 30.3375], [82.0432, 30.327], [82.1591, 30.1151], [82.8542, 29.6833], [83.1556, 29.6127], [83.5834, 29.1835], [84.1016, 29.2199], [84.2285, 28.9117], [84.7141, 28.5957], [85.159, 28.5922], [85.1225, 28.316], [85.6782, 28.2775], [86.4089, 27.9286], [86.5544, 28.0852], [87.1413, 27.8384], [88.1098, 27.8704]]] }, \"properties\": { \"id\": \"NP\", \"name\": \"Nepal\" }, \"id\": \"NP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.9584, -0.5165], [166.9162, -0.5466], [166.9136, -0.4992], [166.9584, -0.5165]]] }, \"properties\": { \"id\": \"NR\", \"name\": \"Nauru\" }, \"id\": \"NR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[21.6082, 78.5957], [23.1166, 77.9916], [24.2382, 77.8986], [23.8414, 77.4978], [22.057, 77.5011], [21.6082, 77.9161], [20.2282, 78.4778], [21.6082, 78.5957]]], [[[16.7866, 79.9068], [18.5813, 79.5716], [19.0896, 79.157], [20.4581, 79.1293], [21.3889, 78.7404], [19.7687, 78.6228], [18.4393, 78.0251], [16.7006, 76.5794], [14.3656, 77.2345], [14.921, 77.6888], [13.6807, 78.028], [11.7738, 78.7165], [10.8661, 79.7965], [12.7534, 79.7758], [13.3837, 79.4808], [15.8163, 79.6819], [16.7866, 79.9068]]], [[[20.898, 80.2499], [22.4508, 80.4021], [26.8608, 80.16], [27.1986, 79.9065], [25.6409, 79.4029], [23.9475, 79.1943], [20.8611, 79.3978], [18.7251, 79.7607], [18.3438, 80.0595], [20.898, 80.2499]]]] }, \"properties\": { \"id\": \"SJ\", \"name\": \"Svalbard and Jan Mayen\" }, \"id\": \"SJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[173.2691, -34.935], [173.8441, -35.0265], [174.3203, -35.2466], [174.5437, -35.5822], [174.3909, -35.7739], [174.802, -36.3093], [174.7225, -36.841], [175.2996, -36.9934], [175.4607, -36.4757], [175.8762, -36.9579], [176.1084, -37.6449], [177.3357, -37.9908], [178.0092, -37.5548], [178.5361, -37.692], [178.2679, -38.5509], [177.9762, -38.7222], [177.9656, -39.1427], [177.4076, -39.081], [176.954, -39.3677], [177.1098, -39.6731], [176.8421, -40.1578], [175.9828, -41.2134], [175.3099, -41.6106], [174.6356, -41.2893], [175.1625, -40.6217], [175.2543, -40.2893], [175.0093, -39.9523], [173.9342, -39.5093], [173.8441, -39.1395], [174.5973, -38.7849], [174.9281, -37.8043], [174.7292, -37.4487], [174.7821, -36.9435], [174.4757, -36.9418], [174.4469, -36.4509], [173.9454, -36.1761], [173.1166, -35.2053], [173.2691, -34.935]]], [[[173.1152, -41.2791], [173.738, -40.9887], [174.3026, -41.0195], [174.0922, -41.5051], [174.283, -41.7407], [173.5449, -42.518], [173.2213, -42.9765], [172.7184, -43.2589], [172.9207, -43.8914], [172.3855, -43.8297], [171.4427, -44.1359], [171.1133, -45.0393], [170.7005, -45.6844], [169.6865, -46.5517], [168.382, -46.6053], [168.1889, -46.3622], [167.6819, -46.1929], [166.7317, -46.1978], [166.7339, -45.5436], [167.1947, -44.9634], [167.7871, -44.595], [168.3665, -44.0818], [168.8063, -43.9921], [169.6613, -43.5913], [170.3027, -43.1075], [170.7417, -42.9272], [171.2571, -42.4652], [171.4862, -41.7948], [172.0108, -41.4446], [172.1395, -40.9471], [172.6407, -40.5182], [172.9886, -40.8481], [173.1152, -41.2791]]]] }, \"properties\": { \"id\": \"NZ\", \"name\": \"New Zealand\" }, \"id\": \"NZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[56.388, 24.9793], [56.6407, 24.4702], [57.2199, 23.9229], [58.5782, 23.6437], [59.7998, 22.2201], [59.3713, 21.4988], [58.8956, 21.1126], [58.4743, 20.4068], [57.8617, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.1764, 18.9024], [56.6552, 18.5872], [56.5509, 18.1661], [56.2704, 17.9507], [55.479, 17.8433], [55.0643, 17.039], [54.0683, 17.0057], [53.6098, 16.7598], [53.0854, 16.6484], [52.7291, 17.3004], [51.9775, 18.9961], [53.6669, 19.559], [54.9773, 19.9958], [55.6409, 22.0017], [55.186, 22.7039], [55.1997, 23.0347], [55.7608, 24.2425], [55.7959, 24.8679], [56.064, 24.7387], [56.388, 24.9793]]] }, \"properties\": { \"id\": \"OM\", \"name\": \"Oman\" }, \"id\": \"OM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[77.7991, 35.496], [77.0485, 35.1099], [76.5944, 34.7356], [75.7093, 34.5031], [74.3003, 34.7654], [73.9612, 34.6536], [74.1499, 33.507], [73.9941, 33.2424], [74.6578, 32.5189], [75.3333, 32.2792], [74.5099, 31.7127], [74.6329, 31.0345], [73.8991, 30.4352], [73.809, 30.0934], [73.3816, 29.9345], [72.903, 29.029], [72.3419, 28.752], [71.8701, 27.9624], [70.7373, 27.7293], [70.4035, 28.0249], [70.1446, 27.8492], [69.5681, 27.1744], [69.47, 26.8047], [70.1566, 26.4713], [70.0776, 26.0717], [70.2645, 25.7064], [70.6521, 25.4228], [71.048, 24.6877], [71.0439, 24.4001], [70.5468, 24.4183], [69.7163, 24.1728], [69.5592, 24.2731], [68.7282, 24.2656], [68.7242, 23.9646], [68.1649, 23.8572], [67.6687, 23.811], [67.3095, 24.175], [67.1715, 24.7561], [66.7032, 24.8609], [66.6988, 25.2261], [66.4284, 25.5755], [65.6796, 25.3553], [64.7768, 25.3074], [64.6591, 25.184], [63.7207, 25.3859], [63.4912, 25.2106], [62.5723, 25.2545], [62.3153, 25.1347], [61.5878, 25.2022], [61.6686, 25.769], [61.8697, 26.2422], [62.4391, 26.5609], [63.168, 26.6657], [63.1667, 27.2526], [62.7632, 27.2503], [62.7397, 28.0023], [62.3531, 28.4146], [61.8901, 28.5465], [61.6229, 28.7915], [61.3183, 29.3726], [60.8433, 29.8586], [62.4765, 29.4085], [63.5675, 29.4982], [64.0988, 29.3921], [64.521, 29.5643], [65.0954, 29.5594], [66.1771, 29.8355], [66.3973, 30.9124], [66.9242, 31.3057], [67.2874, 31.2178], [67.5781, 31.5064], [68.2137, 31.8073], [68.869, 31.6342], [69.2791, 31.9369], [69.2414, 32.4336], [69.5015, 33.02], [69.9201, 33.1123], [70.2841, 33.3689], [69.8681, 33.8976], [71.0516, 34.0498], [70.9654, 34.5306], [71.6207, 35.1831], [71.4275, 35.8338], [71.1852, 36.042], [71.6207, 36.4367], [72.623, 36.8295], [73.7691, 36.8885], [74.0016, 36.8233], [74.5414, 37.0221], [75.3466, 36.9134], [75.8402, 36.6497], [75.945, 36.0176], [76.2518, 35.8108], [77.4467, 35.4756], [77.7991, 35.496]]] }, \"properties\": { \"id\": \"PK\", \"name\": \"Pakistan\" }, \"id\": \"PK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.3742, 8.6583], [-77.2124, 8.0338], [-77.3509, 7.7057], [-77.744, 7.5371], [-77.9011, 7.2295], [-78.1701, 7.5437], [-78.4216, 8.0608], [-78.1139, 8.3795], [-79.0865, 8.997], [-79.4416, 9.0059], [-79.7506, 8.5953], [-80.3687, 8.289], [-80.4582, 8.0768], [-80.0753, 7.6671], [-80.4388, 7.2752], [-80.8456, 7.2201], [-81.0352, 7.711], [-81.5041, 7.7213], [-81.7277, 8.1377], [-82.6796, 8.3219], [-82.8794, 8.0706], [-82.9976, 8.3676], [-82.9171, 8.7405], [-82.9399, 9.4493], [-82.5635, 9.5767], [-82.2441, 9.0316], [-81.3548, 8.7804], [-80.8388, 8.8874], [-80.1272, 9.2101], [-79.5774, 9.598], [-78.5044, 9.4063], [-78.0829, 9.2363], [-77.3742, 8.6583]]] }, \"properties\": { \"id\": \"PA\", \"name\": \"Panama\" }, \"id\": \"PA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-128.2901, -24.3974], [-128.3205, -24.3997], [-128.3502, -24.3401], [-128.3037, -24.3334], [-128.2901, -24.3974]]] }, \"properties\": { \"id\": \"PN\", \"name\": \"Pitcairn Islands\" }, \"id\": \"PN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.9658, -4.2358], [-70.7995, -4.1733], [-70.9737, -4.3505], [-71.8449, -4.5044], [-72.6987, -5.0673], [-72.8871, -5.1228], [-72.9799, -5.6351], [-73.2355, -6.0984], [-73.1374, -6.466], [-73.758, -6.9058], [-73.7496, -7.3356], [-74.0022, -7.5562], [-73.5492, -8.3458], [-72.9741, -8.993], [-73.2093, -9.4116], [-72.3791, -9.5102], [-72.1815, -10.0038], [-71.2381, -9.9661], [-70.637, -9.4782], [-70.6424, -11.0101], [-70.2202, -11.0478], [-69.5786, -10.9519], [-68.6852, -12.502], [-68.9786, -12.8802], [-69.0741, -13.6828], [-68.8803, -14.199], [-69.235, -14.5972], [-69.3748, -14.9629], [-69.1727, -15.2368], [-69.4185, -15.6034], [-69.2177, -16.149], [-68.9134, -16.2618], [-69.0208, -16.6422], [-69.6249, -17.2002], [-69.5109, -17.506], [-69.8522, -17.7039], [-69.9263, -18.206], [-70.4184, -18.3455], [-71.337, -17.6828], [-71.5323, -17.2943], [-72.1114, -17.0026], [-72.4676, -16.7079], [-73.8251, -16.1529], [-74.1471, -15.9125], [-75.1043, -15.4118], [-75.5336, -14.8991], [-75.9339, -14.6337], [-76.2891, -14.1334], [-76.1839, -13.5154], [-76.8322, -12.3489], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.6332, -11.2879], [-77.7362, -10.8365], [-78.1857, -10.089], [-78.7622, -8.6171], [-79.3773, -7.8353], [-79.7621, -7.0666], [-80.1103, -6.6498], [-80.8117, -6.2821], [-81.1805, -5.9427], [-80.8827, -5.7589], [-81.1084, -5.0277], [-81.3366, -4.6695], [-81.2833, -4.3224], [-80.7986, -3.7311], [-80.3247, -3.388], [-80.1794, -3.8776], [-80.5101, -4.0694], [-80.4885, -4.3939], [-80.1396, -4.2961], [-79.6385, -4.4547], [-79.3309, -4.9279], [-79.0763, -4.9905], [-78.4198, -3.7769], [-78.3472, -3.4311], [-77.8607, -2.9819], [-76.679, -2.5628], [-76.0897, -2.1332], [-75.5706, -1.5313], [-75.2632, -0.5555], [-75.2846, -0.1063], [-74.8019, -0.2], [-74.4178, -0.5808], [-74.2465, -0.9706], [-73.6644, -1.249], [-73.4963, -1.6932], [-73.1969, -1.8305], [-73.1545, -2.2783], [-72.8871, -2.4084], [-72.3957, -2.4288], [-71.7525, -2.1527], [-71.397, -2.3342], [-70.9146, -2.2183], [-70.0959, -2.6582], [-70.0741, -2.7501], [-70.7351, -3.7817], [-70.3396, -3.8141], [-69.9658, -4.2358]]] }, \"properties\": { \"id\": \"PE\", \"name\": \"Peru\" }, \"id\": \"PE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[121.1018, 18.6153], [121.8457, 18.2953], [122.2998, 18.4027], [122.1511, 17.7563], [122.2367, 17.435], [122.519, 17.1247], [122.1351, 16.1849], [121.5953, 15.9333], [121.3925, 15.3242], [121.6956, 14.7375], [121.8004, 14.1138], [122.4907, 14.3224], [122.856, 14.2509], [123.2315, 13.7475], [123.4322, 13.9664], [123.7261, 13.8842], [123.608, 13.5283], [124.1428, 13.036], [124.0598, 12.5673], [123.311, 13.044], [123.1631, 13.4417], [122.5955, 13.9078], [122.4068, 13.4927], [121.7777, 13.9375], [121.2034, 13.6401], [120.6166, 14.1879], [120.922, 14.4933], [120.8883, 14.7157], [120.0821, 14.851], [119.8309, 16.3265], [120.1598, 16.0478], [120.3892, 16.2218], [120.3054, 16.5294], [120.4088, 16.9555], [120.3582, 17.6383], [120.5997, 18.5078], [121.1018, 18.6153]]], [[[120.7045, 13.4794], [121.2029, 13.4324], [121.5225, 13.131], [121.5408, 12.6383], [121.2367, 12.2188], [120.922, 12.5117], [120.7635, 12.9698], [120.5082, 13.2602], [120.7045, 13.4794]]], [[[125.2396, 12.5277], [125.5357, 12.1913], [125.4566, 11.9525], [125.6281, 11.1322], [125.2334, 11.145], [124.8841, 11.7754], [124.3847, 12.2441], [124.2946, 12.5695], [125.2396, 12.5277]]], [[[122.4964, 11.6151], [123.1583, 11.5356], [123.0166, 11.1165], [122.7698, 10.8236], [122.1977, 10.6229], [121.9642, 10.8716], [122.1036, 11.643], [122.4964, 11.6151]]], [[[124.5748, 11.3429], [124.9298, 11.3727], [125.0132, 10.7855], [125.2534, 10.2639], [125.0266, 10.033], [124.7808, 10.168], [124.7869, 10.7815], [124.4456, 10.9235], [124.5748, 11.3429]]], [[[117.3109, 8.4395], [117.3499, 8.7133], [117.8849, 9.2407], [118.1148, 9.3468], [119.0238, 10.3536], [119.2241, 10.4774], [119.2613, 10.845], [119.5268, 10.9532], [119.6843, 10.5516], [119.1916, 10.061], [118.7819, 9.9163], [118.4348, 9.2562], [117.9896, 8.8772], [117.3109, 8.4395]]], [[[123.3705, 9.4498], [123.3859, 9.9669], [123.7113, 10.4739], [123.952, 10.3167], [123.6435, 10.0202], [123.3705, 9.4498]]], [[[123.1307, 9.064], [122.5626, 9.4826], [122.4715, 9.9616], [122.8556, 10.0868], [122.8169, 10.5036], [122.9833, 10.8866], [123.2564, 10.9941], [123.5675, 10.7806], [123.1618, 9.8644], [123.3082, 9.357], [123.1307, 9.064]]], [[[124.5938, 9.7871], [124.3599, 9.63], [123.9356, 9.6238], [123.817, 9.8173], [124.1726, 10.1351], [124.5769, 10.0269], [124.5938, 9.7871]]], [[[126.0058, 9.3211], [126.1932, 9.2766], [126.3196, 8.8447], [126.4356, 7.8327], [126.5816, 7.2476], [126.08, 6.7332], [125.8243, 7.3333], [125.4007, 6.7957], [125.5887, 6.4659], [125.6681, 5.9785], [125.4559, 5.6643], [124.6364, 5.998], [124.0781, 6.4042], [123.9853, 6.9938], [124.2068, 7.3963], [123.9684, 7.6645], [123.493, 7.8078], [123.3909, 7.4075], [122.4977, 7.6729], [122.1759, 7.0044], [122.0472, 7.3635], [122.1319, 7.8104], [122.3371, 8.0284], [122.911, 8.1563], [123.0175, 8.3983], [123.4344, 8.7031], [124.2258, 8.2713], [124.4514, 8.6064], [124.7309, 8.5629], [124.8691, 8.9722], [125.5335, 9.1408], [125.5212, 9.7592], [126.0058, 9.3211]]]] }, \"properties\": { \"id\": \"PH\", \"name\": \"Philippines\" }, \"id\": \"PH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[134.5957, 7.3822], [134.5064, 7.4372], [134.556, 7.5939], [134.6595, 7.6631], [134.5957, 7.3822]]] }, \"properties\": { \"id\": \"PW\", \"name\": \"Palau\" }, \"id\": \"PW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[152.9656, -4.7565], [152.6806, -4.4986], [152.5985, -3.9948], [153.1241, -4.2524], [152.9656, -4.7565]]], [[[140.976, -9.1187], [140.9752, -6.9054], [140.9743, -4.8364], [140.9735, -2.6099], [141.1856, -2.6276], [142.2114, -3.0835], [142.9052, -3.3206], [143.5089, -3.4311], [144.0159, -3.7836], [144.4775, -3.8253], [145.0879, -4.349], [145.3347, -4.3854], [145.767, -4.8231], [145.8527, -5.4712], [146.4036, -5.6164], [147.0343, -5.9191], [147.3766, -5.9506], [147.8018, -6.3151], [147.8454, -6.6627], [147.1191, -6.7216], [146.9606, -6.9289], [147.1902, -7.3782], [147.7242, -7.8763], [148.1267, -8.1035], [148.247, -8.5545], [148.583, -9.0516], [149.2476, -9.0712], [149.2032, -9.4067], [149.7611, -9.8058], [149.8743, -10.0132], [150.6671, -10.2572], [150.4825, -10.6368], [150.0168, -10.5773], [149.7541, -10.3531], [147.7685, -10.0699], [146.6966, -9.0255], [146.0334, -8.0764], [144.9738, -7.8021], [144.5099, -7.5673], [143.6137, -8.2002], [143.0948, -8.3112], [143.3659, -8.961], [142.6473, -9.3277], [142.2296, -9.1698], [141.1332, -9.2212], [140.976, -9.1187]]], [[[151.9159, -4.2967], [152.4055, -4.3406], [152.4, -4.7313], [152.0135, -5.0037], [152.1431, -5.3572], [151.8652, -5.5648], [151.515, -5.5524], [151.2292, -5.92], [150.4284, -6.2764], [149.6524, -6.2906], [149.3825, -6.078], [149.1265, -6.1277], [148.401, -5.7651], [148.3447, -5.5449], [148.9989, -5.4846], [149.2454, -5.5728], [150.2988, -5.5356], [150.953, -5.4238], [151.3267, -4.9602], [151.6713, -4.8835], [151.5517, -4.3455], [151.9159, -4.2967]]], [[[155.9574, -6.687], [155.7191, -6.8628], [155.3439, -6.7216], [155.2019, -6.3074], [154.7821, -5.9705], [154.7411, -5.5454], [154.9969, -5.54], [155.467, -6.145], [155.8225, -6.3804], [155.9574, -6.687]]]] }, \"properties\": { \"id\": \"PG\", \"name\": \"Papua New Guinea\" }, \"id\": \"PG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.6045, 54.4591], [22.7663, 54.3567], [23.3699, 54.2005], [23.4845, 53.9397], [23.8871, 53.0275], [23.8445, 52.6642], [23.1969, 52.257], [23.6522, 52.0403], [23.6053, 51.5179], [24.1056, 50.8449], [23.7118, 50.3773], [22.6496, 49.539], [22.5387, 49.0727], [21.6397, 49.412], [20.6161, 49.3916], [19.8019, 49.1923], [19.4416, 49.5976], [18.8321, 49.5108], [18.5622, 49.8792], [17.8746, 49.9722], [17.152, 50.3784], [16.6793, 50.0974], [16.0072, 50.6117], [14.8096, 50.8589], [15.0164, 51.2526], [14.6018, 51.8323], [14.7527, 52.0818], [14.6195, 52.5284], [14.1286, 52.8782], [14.4145, 53.2834], [14.2587, 53.7296], [14.2138, 53.8707], [14.2112, 53.9504], [16.1865, 54.2904], [16.5598, 54.5538], [17.2621, 54.7294], [18.3234, 54.8382], [18.6695, 54.4309], [19.6045, 54.4591]]] }, \"properties\": { \"id\": \"PL\", \"name\": \"Poland\" }, \"id\": \"PL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-66.1295, 18.4449], [-65.6288, 18.3813], [-65.9708, 17.9743], [-67.1969, 17.9942], [-67.1586, 18.4993], [-66.1295, 18.4449]]] }, \"properties\": { \"id\": \"PR\", \"name\": \"Puerto Rico\" }, \"id\": \"PR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[130.5269, 42.5353], [130.6871, 42.3027], [130.4576, 42.3018], [129.7563, 41.7123], [129.7088, 40.8573], [128.3043, 40.0362], [127.5684, 39.7818], [127.3944, 39.2079], [127.7863, 39.084], [128.3744, 38.6233], [128.0389, 38.3085], [127.1697, 38.3045], [126.6339, 37.7817], [125.942, 37.8735], [125.4492, 37.7302], [125.193, 38.0378], [124.6909, 38.1292], [125.0674, 38.5567], [125.4097, 39.2882], [125.3608, 39.5266], [124.5573, 39.7907], [124.3621, 40.0042], [124.8895, 40.4596], [125.9889, 40.9049], [126.9033, 41.7811], [127.1795, 41.5312], [128.1112, 41.3891], [128.2909, 41.5627], [128.0451, 41.9875], [128.9236, 42.0381], [129.3138, 42.4137], [129.7199, 42.4749], [129.8983, 42.9982], [130.2405, 42.8917], [130.5269, 42.5353]]] }, \"properties\": { \"id\": \"KP\", \"name\": \"North Korea\" }, \"id\": \"KP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-7.4062, 37.1793], [-7.8342, 37.0058], [-8.5978, 37.1211], [-8.8142, 37.431], [-8.9147, 38.5123], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8867, 40.1795], [-8.6557, 41.0296], [-8.7771, 41.9409], [-8.2131, 42.1336], [-7.9208, 41.8837], [-7.4037, 41.8335], [-6.6182, 41.9422], [-6.2125, 41.5321], [-6.9285, 41.0092], [-6.8102, 40.3429], [-7.0368, 39.7139], [-7.4452, 39.5363], [-7.0462, 38.9068], [-7.3431, 38.4572], [-7.1855, 38.0062], [-7.5035, 37.5855], [-7.4062, 37.1793]]] }, \"properties\": { \"id\": \"PT\", \"name\": \"Portugal\" }, \"id\": \"PT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-54.6159, -25.576], [-54.7552, -26.533], [-55.1359, -26.9311], [-55.4266, -27.0094], [-55.7147, -27.4151], [-56.0673, -27.3076], [-56.3705, -27.5375], [-57.1118, -27.47], [-58.6186, -27.1322], [-58.1913, -26.6302], [-58.2031, -26.3816], [-57.8907, -26.0065], [-57.5873, -25.405], [-57.8216, -25.1366], [-58.3654, -24.9594], [-59.373, -24.4539], [-59.8924, -24.0933], [-61.033, -23.7557], [-61.7985, -23.1821], [-62.3726, -22.439], [-62.6509, -22.2339], [-62.2768, -21.066], [-62.2763, -20.5626], [-61.917, -20.0553], [-61.757, -19.6452], [-60.0073, -19.2976], [-59.0905, -19.286], [-58.1803, -19.8178], [-58.1599, -20.1645], [-57.8303, -20.9981], [-57.9856, -22.0461], [-57.8203, -22.1424], [-56.9374, -22.2712], [-56.5239, -22.1024], [-55.8492, -22.3076], [-55.6541, -22.8105], [-55.3662, -23.9913], [-54.6253, -23.8123], [-54.2418, -24.0472], [-54.4731, -25.2204], [-54.6159, -25.576]]] }, \"properties\": { \"id\": \"PY\", \"name\": \"Paraguay\" }, \"id\": \"PY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-149.3216, -17.6902], [-149.5789, -17.735], [-149.6114, -17.5318], [-149.3792, -17.5224], [-149.3216, -17.6902]]] }, \"properties\": { \"id\": \"PF\", \"name\": \"French Polynesia\" }, \"id\": \"PF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[51.2682, 24.6074], [50.8043, 24.7893], [50.763, 25.4446], [51.0031, 25.9817], [51.2625, 26.1534], [51.543, 25.9022], [51.4853, 25.5249], [51.602, 25.148], [51.2682, 24.6074]]] }, \"properties\": { \"id\": \"QA\", \"name\": \"Qatar\" }, \"id\": \"QA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.7972, -21.3394], [55.3626, -21.2738], [55.3111, -20.904], [55.6618, -20.9062], [55.7972, -21.3394]]] }, \"properties\": { \"id\": \"RE\", \"name\": \"Reunion\" }, \"id\": \"RE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.7606, 45.2342], [29.2236, 45.4028], [29.7061, 45.2599], [29.5574, 44.8435], [29.0483, 44.7574], [28.6453, 44.2958], [28.5853, 43.7422], [27.0867, 44.1675], [26.2157, 44.0072], [25.4971, 43.6708], [23.2244, 43.8741], [22.705, 44.2376], [21.3845, 44.8701], [21.4919, 45.1223], [20.7742, 45.4845], [20.775, 45.7499], [20.2419, 46.1086], [21.1518, 46.3043], [22.2905, 47.7279], [22.8763, 47.9472], [23.2026, 48.0843], [24.8934, 47.7177], [25.4644, 47.9108], [26.1626, 47.9925], [26.6189, 48.2597], [26.9807, 48.155], [27.3366, 47.6396], [28.0717, 46.9786], [28.2443, 46.4513], [28.0997, 45.9728], [28.2124, 45.4503]]] }, \"properties\": { \"id\": \"RO\", \"name\": \"Romania\" }, \"id\": \"RO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[62.1679, 80.8347], [61.0511, 80.4186], [59.3044, 80.5216], [59.592, 80.8165], [62.1679, 80.8347]]], [[[54.719, 81.1159], [57.6939, 80.7923], [55.7124, 80.6372], [54.0665, 80.8136], [54.719, 81.1159]]], [[[96.5265, 81.0755], [97.8316, 80.7983], [97.1751, 80.241], [94.565, 80.1261], [93.8725, 80.0102], [91.5238, 80.3584], [93.2626, 80.7912], [93.0651, 80.9885], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[148.5996, 45.3176], [147.9137, 44.9904], [147.7694, 45.1906], [148.5996, 45.3176]]], [[[142.7611, 54.3938], [142.9181, 53.7941], [143.2235, 53.2961], [143.3234, 52.6136], [143.1556, 52.0838], [143.4552, 51.4715], [143.8161, 50.2825], [144.2719, 49.3113], [143.105, 49.1988], [142.5741, 48.0719], [142.5568, 47.7381], [143.0055, 47.2228], [143.2821, 46.5591], [142.5781, 46.7008], [142.2088, 46.089], [141.8301, 46.4508], [142.0387, 47.1402], [141.9642, 47.5872], [142.1817, 48.0133], [141.8661, 48.75], [142.1422, 49.5692], [142.0711, 50.5149], [142.2065, 51.2224], [141.7223, 51.7362], [141.8235, 53.3394], [142.5262, 53.4475], [142.7611, 54.3938]]], [[[21.2358, 55.2641], [22.8312, 54.8384], [22.7663, 54.3567], [19.6045, 54.4591], [19.9747, 54.9212], [20.5202, 54.9949], [20.8998, 55.2868], [20.9579, 55.2789], [21.2358, 55.2641]]], [[[163.6349, 58.6033], [163.761, 59.0149], [164.6156, 58.8856], [163.6349, 58.6033]]], [[[-179.7985, 68.9404], [-178.8738, 68.7542], [-177.4074, 68.245], [-175.3451, 67.678], [-174.4476, 67.1031], [-173.6797, 67.1448], [-172.6405, 66.9249], [-171.7955, 66.9318], [-170.192, 66.2014], [-170.6663, 65.6214], [-172.2115, 65.4252], [-172.2132, 65.0481], [-172.9239, 64.705], [-173.0092, 64.2975], [-173.7298, 64.3645], [-174.318, 64.6375], [-175.3951, 64.8024], [-175.8538, 65.0108], [-176.0933, 65.4709], [-177.0563, 65.6136], [-178.3103, 65.4849], [-178.8794, 65.9364], [-179.7284, 65.8038], [-179.3521, 65.5167], [-180, 65.0672], [-180, 65.312], [-180, 65.5568], [-180, 65.8014], [-180, 66.0462], [-180, 66.2911], [-180, 66.5359], [-180, 66.7807], [-180, 67.0253], [-180, 67.27], [-180, 67.5148], [-180, 67.7597], [-180, 68.0044], [-180, 68.249], [-180, 68.4938], [-180, 68.7386], [-180, 68.9835], [-179.7985, 68.9404]]], [[[50.265, 69.1856], [49.6262, 68.8596], [48.667, 68.7331], [48.279, 69.0403], [48.6315, 69.436], [49.2249, 69.5112], [50.265, 69.1856]]], [[[169.201, 69.5805], [167.789, 69.8369], [168.3581, 70.0157], [169.3751, 69.8826], [169.201, 69.5805]]], [[[60.4505, 69.935], [59.5783, 69.7385], [58.473, 70.2667], [59.0053, 70.4652], [60.4505, 69.935]]], [[[178.8614, 70.8265], [178.8912, 71.2311], [180, 71.5378], [180, 70.993], [178.8614, 70.8265]]], [[[-178.8765, 71.5769], [-177.5322, 71.2631], [-177.8219, 71.0676], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.1843], [-180, 71.3998], [-180, 71.5378], [-178.8765, 71.5769]]], [[[55.3199, 73.3083], [56.4293, 73.2011], [56.0835, 72.7894], [55.356, 72.4652], [55.2978, 71.9354], [57.1458, 70.589], [54.6009, 70.68], [53.7224, 70.8146], [53.3637, 71.5416], [51.8124, 71.4912], [51.5824, 72.0711], [52.622, 72.3009], [53.753, 73.2932], [55.3199, 73.3083]]], [[[142.1849, 73.8958], [143.3438, 73.5686], [143.1933, 73.2207], [140.6627, 73.4519], [141.0848, 73.8658], [142.1849, 73.8958]]], [[[113.3873, 74.4005], [112.7823, 74.0951], [111.6429, 74.2729], [112.0845, 74.549], [113.3873, 74.4005]]], [[[146.7951, 75.3709], [150.1038, 75.2193], [150.6463, 74.9445], [149.5969, 74.7725], [148.0926, 74.8258], [146.1484, 75.1984], [146.7951, 75.3709]]], [[[140.0489, 75.8289], [140.9442, 75.7005], [142.4605, 75.9035], [143.6857, 75.8636], [145.2552, 75.5857], [144.0198, 75.0446], [141.9873, 74.9914], [139.0993, 74.6566], [138.0921, 74.7973], [137.0064, 75.235], [137.5014, 75.9098], [138.8139, 76.1996], [140.0489, 75.8289]]], [[[67.7654, 76.2375], [66.2824, 75.9836], [61.3561, 75.3149], [60.2224, 74.7965], [58.5346, 74.4988], [58.4415, 74.1288], [56.9637, 73.3664], [55.0066, 73.4539], [53.7629, 73.7662], [54.6426, 73.9595], [57.0876, 75.3837], [58.8814, 75.8547], [62.9713, 76.2366], [65.8628, 76.6133], [67.535, 77.0077], [68.4859, 76.9338], [68.9, 76.5729], [67.7654, 76.2375]]], [[[130.6871, 42.3027], [130.5269, 42.5353], [130.5771, 42.8118], [131.0685, 42.9024], [131.2619, 43.4332], [131.2553, 44.0716], [131.0822, 44.9101], [131.9774, 45.2439], [132.9358, 45.0299], [133.1857, 45.4947], [133.8614, 46.2476], [134.1677, 47.3022], [134.7522, 47.7155], [134.5637, 48.3218], [134.2933, 48.3733], [133.4686, 48.0972], [133.1441, 48.1057], [132.5616, 47.7683], [131.0027, 47.6915], [130.712, 48.1279], [130.8043, 48.3414], [130.1962, 48.8916], [129.5339, 49.3235], [128.5268, 49.5943], [127.9998, 49.5685], [127.5027, 49.8735], [127.5901, 50.2091], [126.9247, 51.1002], [126.313, 52.3996], [125.649, 53.0422], [124.8121, 53.1339], [123.608, 53.5464], [122.3379, 53.485], [120.704, 53.1718], [120.0945, 52.7872], [120.656, 52.5666], [120.7498, 52.0965], [120.067, 51.6007], [119.1921, 50.3797], [119.26, 50.0663], [118.4517, 49.8444], [117.8733, 49.5135], [116.6832, 49.8237], [116.1345, 50.0109], [115.2743, 49.9489], [114.743, 50.2337], [114.2969, 50.2743], [113.1641, 49.7971], [113.0556, 49.6162], [111.3365, 49.3559], [110.8278, 49.1661], [110.1997, 49.1704], [109.2365, 49.3348], [108.6136, 49.3229], [108.0339, 49.594], [107.948, 49.9247], [107.2332, 49.9893], [106.7112, 50.3125], [106.218, 50.3045], [105.3835, 50.4736], [103.6329, 50.1387], [102.6833, 50.387], [102.2882, 50.585], [102.1115, 51.3534], [101.3813, 51.4526], [100.4688, 51.726], [98.8486, 52.07], [97.9469, 51.3483], [97.8254, 50.9852], [98.2795, 50.5333], [98.1032, 50.0779], [97.2088, 49.7308], [96.986, 49.8828], [95.8518, 50.0128], [95.5229, 49.9112], [94.6147, 50.0237], [94.2512, 50.5564], [91.8044, 50.6936], [89.6439, 49.903], [89.6541, 49.7174], [88.8316, 49.4484], [88.1924, 49.4517], [87.8141, 49.1624], [87.3229, 49.0858], [86.6144, 49.6098], [86.1807, 49.4992], [85.2099, 49.6648], [84.9893, 50.0615], [84.2577, 50.2883], [83.9454, 50.7745], [83.357, 50.9945], [82.4938, 50.7275], [81.4656, 50.7397], [80.8771, 51.2815], [79.9862, 50.7745], [79.4687, 51.493], [78.4756, 52.6385], [77.7042, 53.3791], [76.5757, 53.9424], [76.2664, 54.312], [74.4518, 53.6472], [73.2857, 53.5984], [73.3993, 53.8115], [72.9141, 54.1073], [71.0933, 54.2123], [71.1856, 54.5994], [70.7382, 55.3051], [70.1824, 55.1624], [68.9773, 55.3895], [68.2063, 55.1609], [68.0739, 54.9595], [66.2224, 54.6673], [65.4767, 54.6234], [65.1576, 54.3643], [64.4611, 54.384], [63.0739, 54.1053], [61.9286, 53.9464], [61.3339, 54.0491], [60.9796, 53.6217], [61.1994, 53.2872], [62.0147, 53.1079], [61.974, 52.9436], [61.0476, 52.9725], [60.8021, 52.7448], [60.9375, 52.2805], [60.0657, 51.9764], [60.4647, 51.6513], [61.3632, 51.4419], [61.5851, 51.2298], [61.3893, 50.8609], [60.6378, 50.6638], [59.9552, 50.7992], [59.8122, 50.5819], [58.8836, 50.6945], [58.3594, 51.0638], [57.8387, 51.0917], [57.4422, 50.8889], [57.0116, 51.0651], [56.4915, 51.0196], [55.7976, 50.6021], [55.5424, 50.6017], [54.727, 50.998], [54.4216, 50.7803], [54.0416, 51.1152], [53.3381, 51.4824], [52.571, 51.4817], [52.3309, 51.6812], [51.6091, 51.4839], [50.7941, 51.7292], [50.2468, 51.2895], [49.498, 51.0835], [48.8086, 50.6012], [48.8433, 50.0131], [48.4344, 49.8284], [47.706, 50.3779], [47.3264, 50.2734], [46.8022, 49.367], [47.0144, 49.0984], [46.7027, 48.8054], [46.6609, 48.4124], [47.0041, 48.2846], [47.0934, 47.9476], [48.1099, 47.7453], [48.9595, 46.7744], [48.6102, 46.5663], [49.2321, 46.3372], [48.1591, 45.7371], [47.5244, 45.6017], [46.7529, 44.4205], [47.23, 44.1923], [47.5088, 43.5097], [47.4631, 43.0351], [48.5729, 41.8446], [47.8608, 41.2129], [47.2612, 41.315], [46.7494, 41.8127], [46.4298, 41.8907], [45.6388, 42.205], [45.7275, 42.4749], [45.1603, 42.6751], [44.5059, 42.7488], [43.9573, 42.5663], [43.7824, 42.747], [42.4192, 43.2242], [41.5807, 43.2193], [40.6481, 43.534], [39.9783, 43.4199], [38.717, 44.2882], [38.1813, 44.4196], [37.8515, 44.6988], [37.4112, 44.7352], [36.9411, 45.2896], [37.6474, 45.3771], [37.9332, 46.0016], [38.1835, 46.0948], [37.9678, 46.6182], [39.2933, 47.1056], [38.2142, 47.0914], [38.2874, 47.5592], [38.9005, 47.8553], [39.7359, 47.8446], [39.9609, 48.2379], [39.6866, 49.0079], [40.0701, 49.2003], [39.7807, 49.5721], [39.1748, 49.8559], [38.2586, 50.0523], [38.0469, 49.9201], [37.4228, 50.4115], [36.3059, 50.2805], [35.4115, 50.5398], [35.3121, 51.0438], [34.2808, 51.3117], [34.3977, 51.7804], [33.7353, 52.3449], [32.508, 52.3084], [31.7635, 52.1011], [31.5771, 52.3122], [31.4178, 53.196], [32.1421, 53.0913], [32.7042, 53.3363], [31.792, 54.0558], [31.4035, 54.1959], [31.1212, 54.6484], [30.9069, 55.5699], [30.2334, 55.8451], [29.4824, 55.6845], [29.375, 55.9386], [28.7948, 55.9426], [28.148, 56.143], [27.8062, 56.867], [27.797, 57.3169], [27.3517, 57.5282], [27.753, 57.8411], [27.4272, 58.7331], [28.0127, 59.4842], [28.014, 59.7248], [28.947, 59.8289], [29.0691, 60.1915], [28.6506, 60.611], [27.7978, 60.5362], [29.6901, 61.5461], [31.2855, 62.5679], [31.5341, 62.8855], [31.1808, 63.2082], [30.0555, 63.689], [30.5037, 64.0205], [30.1082, 64.3661], [30.0727, 64.7649], [29.604, 64.9685], [29.9032, 66.0911], [29.0869, 66.9708], [29.9413, 67.5475], [29.3439, 68.0619], [28.4708, 68.4883], [28.9657, 69.0219], [30.8695, 69.7833], [31.9846, 69.9536], [32.9416, 69.7518], [32.3775, 69.4791], [33.6843, 69.3101], [35.858, 69.1916], [40.3808, 67.8318], [40.9663, 67.7135], [41.1887, 66.8261], [40.5215, 66.4466], [39.2889, 66.1321], [38.3975, 66.0644], [35.5135, 66.3958], [34.8245, 66.6111], [32.4636, 66.9163], [33.5666, 66.321], [34.7865, 65.8644], [34.4064, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.6472, 64.3783], [36.3649, 64.0028], [37.4423, 63.8134], [38.0708, 64.0259], [37.9536, 64.3202], [37.1834, 64.4085], [36.5282, 64.8472], [36.8829, 65.1724], [38.0096, 64.8788], [39.758, 64.577], [40.281, 64.998], [39.8166, 65.5979], [41.4759, 66.1235], [42.2105, 66.5196], [44.0972, 66.2351], [44.4886, 66.6719], [44.2919, 67.0996], [43.7824, 67.2545], [44.2253, 67.9956], [44.0483, 68.5489], [45.8923, 68.4797], [46.6903, 67.8489], [45.5287, 67.7576], [44.9396, 67.4776], [45.9859, 66.853], [46.6907, 66.8255], [47.7091, 67.045], [47.8745, 67.5841], [48.8778, 67.7315], [50.8389, 68.3498], [52.5501, 68.5924], [53.8019, 68.9959], [53.968, 68.2273], [54.5614, 68.273], [56.0436, 68.649], [57.1266, 68.554], [58.9191, 69.0039], [59.8974, 68.4219], [60.9335, 68.9868], [60.1704, 69.591], [61.0161, 69.8515], [63.3616, 69.6752], [68.5041, 68.3484], [69.1406, 68.9506], [68.5427, 68.967], [68.006, 69.48], [67.0645, 69.6937], [66.9264, 70.0141], [67.2847, 70.7386], [66.6663, 70.9006], [66.9175, 71.2824], [68.2692, 71.6828], [69.039, 72.67], [69.6449, 72.8975], [71.5002, 72.9137], [72.8121, 72.6916], [72.6244, 72.0794], [71.9118, 71.5478], [72.7317, 70.8229], [72.5296, 70.1724], [72.5275, 69.0805], [73.548, 68.5744], [73.1521, 67.865], [72.5946, 67.587], [71.5514, 66.7604], [70.9391, 66.5481], [69.877, 66.8455], [69.1943, 66.5787], [70.3396, 66.3423], [71.9171, 66.2466], [72.4174, 66.5607], [73.7921, 66.9953], [74.0744, 67.4141], [74.7696, 67.7663], [74.3914, 68.4206], [74.5796, 68.7511], [76.459, 68.9784], [77.2384, 68.4696], [77.6508, 68.9029], [76.0009, 69.2349], [74.8148, 69.0907], [73.7757, 69.1983], [73.56, 69.7072], [74.311, 70.6536], [73.0863, 71.4448], [73.6718, 71.845], [75.7413, 72.2962], [76.0325, 71.9103], [78.4828, 72.395], [79.422, 72.3808], [80.7625, 72.0892], [81.511, 71.7463], [82.9861, 71.7487], [82.1834, 72.2376], [80.827, 72.4882], [80.5096, 73.0861], [80.5832, 73.5684], [83.5449, 73.6665], [86.5913, 73.8943], [86.6512, 74.6824], [87.6713, 75.1296], [90.1851, 75.591], [93.5498, 75.854], [94.5757, 76.1516], [96.879, 75.931], [100.3223, 76.479], [100.9898, 76.9904], [103.1312, 77.6265], [104.0145, 77.7304], [105.8945, 77.4889], [104.912, 77.1749], [107.4298, 76.9265], [108.0278, 76.7185], [111.115, 76.7229], [112.6193, 76.3836], [113.8712, 75.856], [113.6137, 75.2929], [111.8683, 74.7401], [109.8402, 74.3219], [108.1995, 73.694], [107.2709, 73.621], [106.4782, 73.1395], [107.7504, 73.1731], [109.8553, 73.4726], [110.2614, 74.0174], [112.1471, 73.7089], [114.0607, 73.5846], [115.3378, 73.7025], [118.4504, 73.5897], [118.4303, 73.2466], [119.7504, 72.9791], [123.1605, 72.955], [123.6221, 73.1933], [123.3053, 73.5329], [124.3882, 73.7549], [125.617, 73.5207], [127.7406, 73.4816], [128.8885, 73.1903], [129.4117, 72.3156], [128.359, 72.0883], [129.7621, 71.1195], [131.1571, 70.7421], [131.5621, 70.9011], [132.5621, 71.8951], [134.1029, 71.3789], [135.8847, 71.6306], [137.3154, 71.3594], [138.1183, 71.5663], [139.6949, 71.7003], [139.6013, 72.496], [142.0615, 72.7208], [145.4857, 72.5421], [146.594, 72.3024], [148.402, 72.312], [149.5014, 72.1644], [150.5997, 71.5201], [151.5825, 71.2871], [152.5089, 70.8345], [153.7943, 70.88], [155.8953, 71.0955], [158.0372, 71.0393], [159.3506, 70.7908], [160.0061, 70.3096], [159.8327, 69.7849], [161.5367, 69.3797], [162.3756, 69.6491], [164.1597, 69.7192], [164.5135, 69.6092], [166.8203, 69.4995], [167.6282, 69.7403], [168.303, 69.2716], [169.3105, 69.0796], [169.6097, 68.7861], [170.5375, 68.8254], [170.9951, 69.0454], [170.5823, 69.5834], [170.4869, 70.1076], [172.5595, 69.9682], [173.2772, 69.8237], [176.1075, 69.8603], [176.9243, 69.646], [178.8484, 69.3872], [180, 68.9835], [180, 65.0672], [178.5196, 64.6029], [177.4671, 64.7368], [177.433, 64.4445], [178.6501, 63.9653], [178.7064, 63.5216], [179.3324, 63.1902], [179.5704, 62.6875], [179.1205, 62.3205], [177.3513, 62.5874], [175.2681, 62.1025], [174.5144, 61.8237], [173.6234, 61.716], [172.8564, 61.4692], [172.3926, 61.0617], [170.6081, 60.435], [169.9826, 60.067], [169.2267, 60.5959], [168.1374, 60.574], [166.9642, 60.3069], [166.3521, 60.4847], [165.0843, 60.0985], [163.7801, 60.041], [163.4099, 59.8348], [163.2728, 59.3027], [162.1418, 58.4475], [161.9603, 58.0768], [162.467, 57.7661], [163.2138, 57.6869], [162.7792, 57.3577], [162.8027, 56.8115], [163.2563, 56.6881], [163.3354, 56.2325], [162.5284, 56.2606], [162.0849, 56.0897], [161.7294, 55.358], [162.1058, 54.7521], [161.7259, 54.533], [160.7728, 54.5414], [160.0746, 54.1892], [159.8437, 53.7837], [159.8974, 53.3807], [158.6088, 52.8735], [158.4637, 52.3049], [158.1037, 51.8095], [156.7476, 50.9692], [156.5003, 51.475], [156.3645, 52.5093], [156.0987, 53.0064], [155.62, 54.8646], [155.5549, 55.3485], [155.9827, 56.6952], [156.7285, 57.1522], [157.4502, 57.7994], [158.2102, 58.0253], [159.0368, 58.424], [159.8472, 59.1271], [161.7534, 60.1523], [162.0037, 60.4201], [162.9732, 60.7828], [163.71, 60.9169], [164.0053, 61.3439], [164.2556, 62.6966], [163.3318, 62.5508], [163.0091, 61.7915], [162.3925, 61.6622], [160.7665, 60.7532], [159.8832, 61.2917], [160.3174, 61.7933], [159.5525, 61.7194], [159.0767, 61.9222], [158.07, 61.7536], [157.4694, 61.7988], [156.6801, 61.4806], [156.63, 61.2724], [155.8531, 60.7772], [154.9707, 60.3766], [154.2929, 59.8333], [154.5827, 59.5401], [155.1668, 59.3601], [154.0111, 59.0756], [153.3611, 59.2148], [152.8822, 58.9391], [151.9899, 59.1601], [151.4856, 59.5241], [150.4572, 59.5907], [149.6427, 59.7705], [149.205, 59.4881], [147.8746, 59.3881], [147.5146, 59.2686], [146.4444, 59.4305], [145.9316, 59.1983], [145.5543, 59.4136], [143.1921, 59.3701], [142.0254, 58.9997], [141.7546, 58.7453], [140.6849, 58.2122], [140.4469, 57.8136], [140.0022, 57.6875], [138.662, 56.9655], [137.6913, 56.1395], [136.175, 55.3522], [135.2623, 54.9434], [135.8513, 54.5839], [136.7973, 54.6209], [136.6827, 53.9313], [137.1555, 53.8217], [137.3282, 53.5389], [138.2924, 53.5924], [138.6608, 53.7449], [138.6958, 54.32], [139.7074, 54.2771], [140.3471, 53.8126], [141.4023, 53.1841], [141.1696, 52.3684], [141.4853, 52.1786], [140.6876, 51.2322], [140.4763, 50.546], [140.5171, 49.596], [140.1704, 48.5238], [139.3727, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3368, 46.5431], [137.6856, 45.8183], [136.8035, 45.1711], [136.142, 44.4893], [135.8744, 44.3735], [135.1309, 43.5256], [133.7091, 42.83], [133.1601, 42.6969], [132.4814, 42.9099], [132.3344, 43.2388], [131.7946, 43.2553], [131.1585, 42.6259], [130.6871, 42.3027]]], [[[102.8848, 79.254], [105.146, 78.8188], [105.3125, 78.4998], [103.7194, 78.2581], [101.2043, 78.192], [100.2841, 78.6792], [101.5905, 79.3504], [102.8848, 79.254]]], [[[97.6744, 80.1582], [100.0612, 79.7772], [99.4393, 78.8341], [97.5555, 78.8265], [94.6524, 79.1275], [93.0709, 79.4953], [94.9871, 80.0967], [97.6744, 80.1582]]]] }, \"properties\": { \"id\": \"RU\", \"name\": \"Russia\" }, \"id\": \"RU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.51, -1.0673], [30.8128, -1.5631], [30.8287, -2.3386], [30.5536, -2.4], [29.9303, -2.3396], [29.8681, -2.7164], [29.3901, -2.8087], [29.0145, -2.7204], [28.8765, -2.4003], [29.1064, -2.2334], [29.1295, -1.8602], [29.5769, -1.3878], [30.1017, -1.3687], [30.51, -1.0673]]] }, \"properties\": { \"id\": \"RW\", \"name\": \"Rwanda\" }, \"id\": \"RW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.6834, 27.2858], [-8.6821, 25.9954], [-10.0035, 25.9954], [-12.0164, 25.9954], [-12.0234, 23.4675], [-12.6203, 23.2713], [-13.0316, 23.0001], [-13.0944, 22.4957], [-13.0163, 21.3341], [-15.0018, 21.3314], [-16.9647, 21.3292], [-17.0481, 20.8063], [-16.9309, 21.9], [-16.5143, 22.3333], [-16.2103, 23.0981], [-15.5864, 24.0729], [-15.0389, 24.5488], [-14.856, 24.8714], [-14.7949, 25.4042], [-14.4139, 26.2538], [-13.5758, 26.735], [-13.176, 27.6556], [-12.949, 27.9144], [-11.986, 28.1292], [-11.4303, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-9.6671, 30.1094], [-9.6529, 30.4476], [-9.8755, 30.718], [-9.8087, 31.4247], [-9.3475, 32.0865], [-9.2458, 32.5726], [-8.5962, 33.1874], [-6.901, 33.9691], [-6.3532, 34.776], [-5.9248, 35.7859], [-5.3973, 35.9297], [-5.1054, 35.4677], [-4.33, 35.1613], [-3.6932, 35.2799], [-2.8401, 35.1281], [-2.2197, 35.1041], [-1.7956, 34.7521], [-1.6792, 33.3188], [-1.5099, 32.8776], [-1.0656, 32.4682], [-1.2753, 32.0892], [-2.4486, 32.13], [-2.9308, 32.0426], [-3.0174, 31.8344], [-3.8268, 31.6617], [-3.8334, 31.1978], [-4.3228, 30.6989], [-4.9683, 30.4654], [-5.4488, 29.9567], [-6.5008, 29.8093], [-6.6353, 29.5687], [-7.095, 29.6252], [-7.6851, 29.3494], [-8.6599, 28.7187], [-8.6834, 27.2858]]] }, \"properties\": { \"id\": \"MA\", \"name\": \"Morocco\" }, \"id\": \"MA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.5314, 29.0965], [47.4333, 28.9894], [47.6713, 28.5331], [48.4423, 28.543], [48.9066, 27.6289], [49.4052, 27.181], [49.9862, 26.8291], [50.2138, 26.3083], [50.0316, 26.1109], [50.5579, 25.0867], [50.8043, 24.7893], [51.2682, 24.6074], [51.5682, 24.286], [51.5927, 24.0786], [52.5551, 22.933], [55.1043, 22.6214], [55.186, 22.7039], [55.6409, 22.0017], [54.9773, 19.9958], [53.6669, 19.559], [51.9775, 18.9961], [49.042, 18.582], [48.172, 18.1568], [47.5795, 17.4483], [47.4418, 17.1118], [46.9758, 16.9534], [46.6819, 17.2685], [46.3104, 17.2313], [45.4066, 17.32], [45.1482, 17.4274], [44.1557, 17.3986], [43.9169, 17.3249], [43.418, 17.5162], [43.191, 17.3595], [43.1649, 16.6892], [42.7992, 16.3719], [42.6988, 16.7371], [42.3831, 17.1225], [42.294, 17.435], [41.7498, 17.8855], [41.2296, 18.6783], [41.1159, 19.0822], [40.7591, 19.7557], [40.0808, 20.2661], [39.6138, 20.5178], [39.0936, 21.3101], [38.9879, 21.8819], [39.0958, 22.3928], [38.9412, 22.8819], [38.4641, 23.7121], [37.9195, 24.1852], [37.5431, 24.2918], [37.1809, 24.82], [37.1489, 25.291], [36.7626, 25.7513], [36.2496, 26.5947], [35.5815, 27.4323], [35.1806, 28.0347], [34.616, 28.1483], [34.7798, 28.5075], [34.9507, 29.3535], [36.0155, 29.1905], [36.476, 29.4951], [36.7551, 29.8662], [37.4693, 29.9949], [37.6335, 30.3132], [37.9803, 30.5], [36.9584, 31.4917], [38.9621, 31.995], [39.1455, 32.1247], [40.3693, 31.9391], [42.0743, 31.0802], [42.8577, 30.4952], [44.7164, 29.1937], [46.3565, 29.0636], [46.5314, 29.0965]]] }, \"properties\": { \"id\": \"SA\", \"name\": \"Saudi Arabia\" }, \"id\": \"SA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[36.8713, 21.9969], [36.9269, 21.5867], [37.1507, 21.1037], [37.2274, 20.5569], [37.2482, 19.5821], [37.4711, 18.8203], [37.9217, 18.5558], [38.6093, 18.0049], [38.2537, 17.5846], [37.7822, 17.458], [37.4112, 17.0616], [37.0091, 17.059], [36.9135, 16.2964], [36.4266, 15.1321], [36.5243, 14.2567], [36.3907, 13.6259], [36.2123, 13.2713], [36.1076, 12.7266], [35.5961, 12.5375], [35.1123, 11.8167], [34.9312, 10.8649], [34.5717, 10.88], [34.2756, 10.528], [34.2915, 10.125], [34.078, 9.4613], [33.892, 10.199], [33.172, 10.8502], [33.0731, 11.5916], [33.1991, 12.2175], [32.7365, 12.0097], [32.0721, 12.0066], [32.3353, 11.7159], [32.404, 11.0576], [31.9331, 10.6625], [31.6548, 10.2213], [31.2247, 9.7991], [30.7396, 9.7428], [30.0031, 10.2772], [29.6054, 10.065], [29.4731, 9.7685], [28.9994, 9.61], [28.8445, 9.3259], [28.0491, 9.3286], [27.8857, 9.5998], [27.0743, 9.614], [26.5514, 9.5257], [25.8913, 10.2026], [25.7981, 10.4206], [25.0669, 10.2936], [24.7851, 9.7747], [24.5321, 8.8869], [24.1472, 8.6654], [23.5373, 8.8159], [23.6461, 9.8231], [23.2559, 10.4579], [22.86, 10.9195], [22.9226, 11.3447], [22.5563, 11.6697], [22.3522, 12.6604], [21.8252, 12.7905], [22.2283, 13.3294], [22.1076, 13.7302], [22.5097, 14.1275], [22.3815, 14.5506], [22.6708, 14.7223], [22.9324, 15.1622], [23.105, 15.7025], [23.9834, 15.7801], [23.9822, 17.2662], [23.9804, 19.4968], [23.9804, 19.9958], [24.9671, 19.9953], [24.9804, 21.996], [26.1261, 21.9955], [28.8005, 21.9951], [30.7106, 21.9951], [32.6061, 21.996], [35.2308, 21.9963], [36.8713, 21.9969]]] }, \"properties\": { \"id\": \"SD\", \"name\": \"Sudan\" }, \"id\": \"SD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.078, 9.4613], [34.0945, 8.5824], [33.9533, 8.4434], [33.2342, 8.3964], [33.0126, 7.9516], [33.2262, 7.7608], [33.6661, 7.6711], [34.0643, 7.2259], [34.7105, 6.6604], [35.0821, 5.6731], [35.2681, 5.4925], [33.9759, 4.2203], [33.4895, 3.7551], [32.8382, 3.7986], [32.3357, 3.7063], [32.0996, 3.5291], [31.7982, 3.8026], [31.48, 3.6805], [31.1523, 3.7858], [30.8384, 3.4905], [30.5082, 3.8359], [30.1948, 3.9819], [29.6768, 4.587], [29.1513, 4.3881], [28.7269, 4.5049], [28.192, 4.3504], [27.788, 4.6446], [27.4032, 5.1094], [27.0837, 5.777], [26.5141, 6.0692], [26.3619, 6.6355], [25.8891, 7.0648], [25.3808, 7.3333], [25.2472, 7.7244], [24.8534, 8.1377], [24.2916, 8.2912], [24.1472, 8.6654], [24.5321, 8.8869], [24.7851, 9.7747], [25.0669, 10.2936], [25.7981, 10.4206], [25.8913, 10.2026], [26.5514, 9.5257], [27.0743, 9.614], [27.8857, 9.5998], [28.0491, 9.3286], [28.8445, 9.3259], [28.9994, 9.61], [29.4731, 9.7685], [29.6054, 10.065], [30.0031, 10.2772], [30.7396, 9.7428], [31.2247, 9.7991], [31.6548, 10.2213], [31.9331, 10.6625], [32.404, 11.0576], [32.3353, 11.7159], [32.0721, 12.0066], [32.7365, 12.0097], [33.1991, 12.2175], [33.0731, 11.5916], [33.172, 10.8502], [33.892, 10.199], [34.078, 9.4613]]] }, \"properties\": { \"id\": \"SS\", \"name\": \"South Sudan\" }, \"id\": \"SS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.0193, 14.2065], [-12.0543, 13.633], [-11.6349, 13.3698], [-11.3903, 12.9418], [-11.3894, 12.4043], [-12.2912, 12.328], [-13.0828, 12.6334], [-13.7294, 12.6738], [-15.1962, 12.6799], [-15.5748, 12.4904], [-16.7119, 12.3551], [-16.7633, 13.064], [-16.6489, 13.154], [-15.8343, 13.1563], [-15.5096, 13.5864], [-16.5623, 13.5873], [-17.168, 14.6406], [-17.1471, 14.9221], [-16.5352, 15.8383], [-16.4411, 16.2045], [-16.1683, 16.5471], [-15.6208, 16.5068], [-15.1128, 16.6449], [-14.3, 16.5804], [-13.8685, 16.1481], [-13.4096, 16.0593], [-13.258, 15.7002], [-12.8584, 15.2426], [-12.2807, 14.8089]]] }, \"properties\": { \"id\": \"SN\", \"name\": \"Senegal\" }, \"id\": \"SN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[103.9697, 1.3314], [103.8201, 1.2653], [103.6501, 1.3257], [103.8179, 1.4473], [103.9697, 1.3314]]] }, \"properties\": { \"id\": \"SG\", \"name\": \"Singapore\" }, \"id\": \"SG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-37.1034, -54.0658], [-36.3264, -54.251], [-35.9133, -54.7108], [-36.2518, -54.7801], [-37.1034, -54.0658]]] }, \"properties\": { \"id\": \"GS\", \"name\": \"South Georgia and South Sandwich Islands\" }, \"id\": \"GS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.6923, -15.9977], [-5.775, -15.9568], [-5.7078, -15.9061], [-5.6923, -15.9977]]] }, \"properties\": { \"id\": \"SH\", \"name\": \"Saint Helena\" }, \"id\": \"SH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[160.7493, -8.3138], [160.9979, -8.6122], [161.2584, -9.3171], [160.8736, -9.1568], [160.5903, -8.3729], [160.7493, -8.3138]]], [[[159.7505, -9.2727], [159.9708, -9.4334], [160.3547, -9.4214], [160.6254, -9.5887], [160.6494, -9.9288], [159.8535, -9.7916], [159.6218, -9.5319], [159.7505, -9.2727]]], [[[161.7152, -10.3873], [162.1055, -10.4539], [162.1236, -10.8246], [161.538, -10.5666], [161.7152, -10.3873]]], [[[159.8792, -8.534], [158.9439, -8.0409], [159.1095, -7.9038], [159.8432, -8.3272], [159.8792, -8.534]]]] }, \"properties\": { \"id\": \"SB\", \"name\": \"Solomon Islands\" }, \"id\": \"SB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-10.2832, 8.4852], [-10.6474, 7.7595], [-11.2678, 7.2326], [-11.5075, 6.9068], [-11.7334, 7.0887], [-12.4856, 7.3861], [-12.5104, 7.6658], [-12.8809, 7.8567], [-13.2284, 8.696], [-13.2928, 9.0493], [-12.7559, 9.3734], [-12.5016, 9.8622], [-11.9109, 9.9931], [-11.2056, 9.9776], [-10.6905, 9.3144], [-10.5005, 8.6876], [-10.2832, 8.4852]]] }, \"properties\": { \"id\": \"SL\", \"name\": \"Sierra Leone\" }, \"id\": \"SL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.3626, 14.416], [-89.0572, 14.329], [-88.449, 13.851], [-88.151, 13.9872], [-87.7153, 13.8128], [-87.8143, 13.3991], [-87.9308, 13.1807], [-88.5121, 13.1838], [-89.2775, 13.4782], [-89.8042, 13.5602], [-90.0952, 13.7365], [-89.8726, 14.0454], [-89.3626, 14.416]]] }, \"properties\": { \"id\": \"SV\", \"name\": \"El Salvador\" }, \"id\": \"SV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.397, 43.9345], [12.4409, 43.9824], [12.5146, 43.9531], [12.4854, 43.9016], [12.397, 43.9345]]] }, \"properties\": { \"id\": \"SM\", \"name\": \"San Marino\" }, \"id\": \"SM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.5327, -1.6955], [40.9788, -0.8703], [40.9699, 1.3781], [40.9645, 2.8145], [41.3418, 3.2015], [41.8838, 3.9779], [42.0241, 4.1377], [42.7916, 4.2922], [43.0158, 4.5634], [43.5383, 4.8404], [44.0283, 4.9509], [44.9404, 4.9119], [45.9348, 5.9972], [47.9781, 7.9969], [46.9784, 7.9969], [44.023, 8.9859], [43.4827, 9.3796], [43.1818, 9.8799], [42.8417, 10.2031], [42.6594, 10.6212], [42.9226, 10.9994], [43.2461, 11.4997], [43.8529, 10.7841], [44.3865, 10.4303], [44.9428, 10.4365], [45.8168, 10.8361], [46.5651, 10.746], [47.405, 11.1738], [48.0193, 11.1392], [48.6745, 11.3226], [48.9031, 11.2547], [50.11, 11.5294], [50.7923, 11.9835], [51.2548, 11.8308], [51.0843, 11.3355], [51.1408, 10.6567], [50.8985, 10.2533], [50.8248, 9.428], [50.4297, 8.8452], [50.103, 8.1998], [49.3483, 6.9906], [49.0491, 6.1738], [48.6492, 5.4943], [47.9754, 4.4968], [46.8789, 3.2855], [46.0512, 2.4753], [44.92, 1.81], [44.3328, 1.3909], [43.4676, 0.6217], [41.9797, -0.9728], [41.5327, -1.6955]]] }, \"properties\": { \"id\": \"SO\", \"name\": \"Somalia\" }, \"id\": \"SO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-56.2671, 46.8384], [-56.3869, 47.0678], [-56.2873, 47.071], [-56.3148, 46.9538], [-56.2671, 46.8384]]] }, \"properties\": { \"id\": \"PM\", \"name\": \"Saint Pierre and Miquelon\" }, \"id\": \"PM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.2419, 46.1086], [20.775, 45.7499], [20.7742, 45.4845], [21.4919, 45.1223], [21.3845, 44.8701], [22.705, 44.2376], [22.421, 44.0077], [22.5546, 43.4546], [22.9767, 43.1878], [22.4667, 42.8424], [22.3441, 42.3138], [21.5625, 42.2477], [21.7529, 42.6698], [21.3906, 42.7514], [21.0569, 43.0915], [20.3444, 42.8278], [19.5516, 43.2123], [19.1943, 43.5331], [19.4882, 43.7036], [19.1517, 44.3025], [19.3568, 44.8586], [19.007, 44.8693], [19.0549, 45.5271], [18.9054, 45.9315], [19.5308, 46.1552], [20.2419, 46.1086]]] }, \"properties\": { \"id\": \"RS\", \"name\": \"Serbia\" }, \"id\": \"RS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.6601, 0.1205], [6.5243, 0.3403], [6.6868, 0.4042], [6.7498, 0.2434], [6.6601, 0.1205]]] }, \"properties\": { \"id\": \"ST\", \"name\": \"Sao Tome and Principe\" }, \"id\": \"ST\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-54.1559, 5.3589], [-54.4522, 5.0135], [-54.3508, 4.0543], [-53.9904, 3.5895], [-54.2032, 3.1381], [-54.1955, 2.8181], [-54.6163, 2.3266], [-55.0058, 2.593], [-56.1295, 2.2995], [-56.0199, 1.8423], [-56.4828, 1.9422], [-56.7044, 2.0364], [-57.2097, 2.8829], [-57.3036, 3.3769], [-57.5497, 3.3529], [-57.8327, 3.6761], [-58.0544, 4.1719], [-57.7111, 4.9909], [-57.3309, 5.0202], [-57.1948, 5.5484], [-56.9698, 5.9928], [-55.9395, 5.7956], [-55.8283, 5.9617], [-54.8338, 5.9883], [-54.0543, 5.8081], [-54.1559, 5.3589]]] }, \"properties\": { \"id\": \"SR\", \"name\": \"Suriname\" }, \"id\": \"SR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.5387, 49.0727], [22.132, 48.4053], [21.4515, 48.5522], [20.4901, 48.5269], [19.8988, 48.1314], [18.7917, 48.0005], [18.7242, 47.787], [17.7618, 47.7701], [17.1475, 48.0058], [16.9531, 48.5989], [17.1883, 48.8609], [17.7583, 48.888], [18.161, 49.2573], [18.8321, 49.5108], [19.4416, 49.5976], [19.8019, 49.1923], [20.6161, 49.3916], [21.6397, 49.412], [22.5387, 49.0727]]] }, \"properties\": { \"id\": \"SK\", \"name\": \"Slovakia\" }, \"id\": \"SK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.5164, 46.4997], [15.6361, 46.2005], [15.6246, 45.8338], [15.3395, 45.4672], [13.8787, 45.4286], [13.5778, 45.5169], [13.7198, 45.5875], [13.3993, 46.3177], [13.6998, 46.5201], [14.5037, 46.4171], [15.0009, 46.6262], [15.9574, 46.6777], [16.0929, 46.8632], [16.5164, 46.4997]]] }, \"properties\": { \"id\": \"SI\", \"name\": \"Slovenia\" }, \"id\": \"SI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[19.0767, 57.836], [18.6998, 57.2427], [18.1365, 57.5565], [18.5374, 57.8305], [19.0767, 57.836]]], [[[24.1557, 65.8052], [23.1023, 65.7353], [21.5656, 65.4081], [21.1381, 64.8087], [21.4652, 64.3797], [20.7626, 63.8678], [19.0345, 63.2377], [18.4632, 62.896], [17.8954, 62.8305], [17.4175, 61.7407], [17.1307, 61.5758], [17.2509, 60.7009], [17.9559, 60.5897], [18.5573, 60.2537], [18.9707, 59.7571], [17.876, 59.2709], [17.4569, 58.8585], [16.6522, 58.4344], [16.5278, 57.068], [15.9965, 56.2227], [14.782, 56.1619], [14.2152, 55.8325], [14.3417, 55.5278], [13.3211, 55.3464], [12.5923, 56.1376], [12.8835, 56.6178], [12.4214, 56.9063], [11.4493, 58.1183], [11.147, 58.9886], [11.3885, 59.0365], [11.7982, 59.29], [11.6805, 59.5923], [12.4862, 60.1067], [12.5887, 60.4507], [12.294, 61.0027], [12.8809, 61.3523], [12.1554, 61.7207], [12.3034, 62.2856], [12.2182, 63.0007], [11.9997, 63.2917], [12.6624, 63.9404], [13.9604, 64.0141], [14.0776, 64.464], [13.6501, 64.5816], [14.4798, 65.3014], [14.5432, 66.1292], [15.423, 66.4899], [16.4035, 67.055], [16.1274, 67.4259], [17.3246, 68.1039], [17.9168, 67.965], [18.3784, 68.5625], [19.9698, 68.3565], [20.6223, 69.0369], [21.9974, 68.5207], [22.7823, 68.3911], [23.6391, 67.9543], [23.4682, 67.45], [23.9883, 66.8106], [23.7011, 66.4808], [24.1557, 65.8052]]]] }, \"properties\": { \"id\": \"SE\", \"name\": \"Sweden\" }, \"id\": \"SE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.9482, -25.9577], [32.1129, -26.8393], [31.9584, -27.3058], [31.4698, -27.2956], [31.0635, -27.1122], [30.7941, -26.7643], [30.8034, -26.4136], [31.2073, -25.8432], [31.4151, -25.7464], [31.9482, -25.9577]]] }, \"properties\": { \"id\": \"SZ\", \"name\": \"Eswatini\" }, \"id\": \"SZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.123, 18.0689], [-63.0112, 18.0689], [-63.0232, 18.0191], [-63.123, 18.0689]]] }, \"properties\": { \"id\": \"SX\", \"name\": \"Sint Maarten\" }, \"id\": \"SX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.5402, -4.6931], [55.3835, -4.6092], [55.4559, -4.5586], [55.5402, -4.6931]]] }, \"properties\": { \"id\": \"SC\", \"name\": \"Seychelles\" }, \"id\": \"SC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3588, 37.1087], [41.7885, 36.5973], [41.4169, 36.5148], [41.2455, 36.0735], [41.3543, 35.6403], [41.1945, 34.769], [40.9873, 34.4289], [40.6893, 34.3321], [38.7736, 33.372], [36.8182, 32.3173], [36.372, 32.387], [35.7874, 32.735], [35.869, 33.432], [35.9423, 33.6677], [36.5851, 34.2212], [36.4329, 34.6136], [35.9761, 34.6291], [35.9432, 35.2239], [35.7644, 35.5715], [35.8926, 35.9165], [36.1274, 35.8316], [36.6583, 36.8024], [37.4365, 36.6435], [38.1916, 36.9014], [38.7669, 36.6932], [39.3568, 36.6816], [40.0164, 36.8259], [40.7057, 37.0976], [41.5154, 37.0892], [42.2683, 37.2765], [42.3588, 37.1087]]] }, \"properties\": { \"id\": \"SY\", \"name\": \"Syria\" }, \"id\": \"SY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.6684, 21.8335], [-71.7219, 21.7904], [-71.8304, 21.7904], [-71.8062, 21.8521], [-71.6684, 21.8335]]] }, \"properties\": { \"id\": \"TC\", \"name\": \"Turks and Caicos Islands\" }, \"id\": \"TC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [22.4938, 10.9963], [21.7063, 10.5746], [21.7258, 10.3665], [21.2637, 9.9745], [20.7732, 9.4058], [20.3422, 9.127], [19.1455, 9.0161], [19.1086, 8.6561], [18.4553, 8.032], [17.6496, 7.9836], [16.7848, 7.5508], [16.3787, 7.6835], [15.8451, 7.4754], [15.4803, 7.5237], [15.4429, 7.8518], [15.1162, 8.5572], [14.3323, 9.2034], [13.9772, 9.6917], [14.2432, 9.9798], [15.5412, 9.9602], [15.2761, 10.3575], [15.0297, 11.1135], [15.0811, 11.8455], [14.7611, 12.6556], [14.5161, 12.9796], [14.0639, 13.0786], [13.6062, 13.7045], [13.4481, 14.3805], [14.3678, 15.75], [15.4745, 16.9085], [15.735, 19.9038], [15.9491, 20.3034], [15.5873, 20.7335], [15.6073, 20.9546], [15.182, 21.5232], [15.1722, 21.9222], [14.9791, 22.996], [15.9841, 23.4453], [17.7521, 22.5721], [19.6683, 21.6258], [21.5847, 20.6794], [23.9804, 19.4968], [23.9822, 17.2662], [23.9834, 15.7801], [23.105, 15.7025], [22.9324, 15.1622], [22.6708, 14.7223], [22.3815, 14.5506], [22.5097, 14.1275], [22.1076, 13.7302], [22.2283, 13.3294], [21.8252, 12.7905], [22.3522, 12.6604], [22.5563, 11.6697], [22.9226, 11.3447], [22.86, 10.9195]]] }, \"properties\": { \"id\": \"TD\", \"name\": \"Chad\" }, \"id\": \"TD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.9007, 10.9931], [0.7798, 10.3598], [1.33, 9.9971], [1.4244, 9.2851], [1.6002, 9.0499], [1.6225, 6.2169], [1.1875, 6.0895], [0.7369, 6.4526], [0.5256, 6.8509], [0.6348, 7.3538], [0.5837, 8.1457], [0.688, 8.304], [0.4153, 8.6526], [0.5291, 9.3584], [0.2619, 9.4955], [0.3627, 10.2364], [-0.0578, 10.6305], [-0.0686, 11.1157], [0.9007, 10.9931]]] }, \"properties\": { \"id\": \"TG\", \"name\": \"Togo\" }, \"id\": \"TG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[100.1225, 20.3168], [100.5428, 20.0886], [100.3978, 19.7561], [100.6253, 19.4999], [101.1545, 19.5793], [101.2864, 18.977], [101.0507, 18.4071], [101.1133, 18.0334], [100.9086, 17.5837], [101.1052, 17.4793], [102.1013, 18.2105], [102.7175, 17.8922], [103.0912, 18.1381], [103.3668, 18.4235], [103.9497, 18.3192], [104.8162, 17.3004], [104.7505, 16.6475], [105.047, 16.1601], [105.4062, 15.9874], [105.6224, 15.6998], [105.5131, 15.3606], [105.4754, 14.5301], [105.1833, 14.3463], [104.779, 14.4281], [103.1995, 14.3326], [102.729, 13.8421], [102.3198, 13.5399], [102.4995, 12.6697], [102.7556, 12.4261], [102.7366, 12.0897], [102.9341, 11.7065], [102.7628, 12.0123], [101.7236, 12.6893], [101.4448, 12.6188], [100.8634, 12.7146], [100.9628, 13.4319], [100.656, 13.5211], [100.0172, 13.3534], [100.09, 13.0457], [99.9641, 12.6902], [99.9889, 12.1709], [99.6272, 11.4628], [99.4869, 10.8898], [99.165, 10.3198], [99.1605, 9.7338], [99.3936, 9.2136], [99.7239, 9.3144], [99.9046, 9.1129], [99.9605, 8.6712], [100.2791, 8.2685], [100.4537, 7.4425], [100.5863, 7.1761], [101.0178, 6.861], [101.4977, 6.8654], [102.1009, 6.2422], [101.8737, 5.8254], [101.5563, 5.908], [101.2571, 5.7895], [101.0533, 6.2426], [100.3452, 6.5498], [100.1188, 6.442], [99.6959, 6.8765], [99.7203, 7.1061], [99.3586, 7.3724], [99.051, 7.8877], [98.579, 8.3445], [98.2382, 8.423], [98.3714, 9.2904], [98.7026, 10.1902], [98.7571, 10.6612], [99.1903, 11.1051], [99.6147, 11.7811], [99.4052, 12.5477], [99.2195, 12.7399], [99.1366, 13.7165], [98.2462, 14.8146], [98.1911, 15.204], [98.5653, 15.4037], [98.6892, 16.3052], [98.4389, 16.9755], [97.7929, 17.6813], [97.4848, 18.4941], [97.7539, 18.621], [97.817, 19.46], [98.1112, 19.7623], [98.9168, 19.7729], [99.0208, 20.0419], [99.3382, 20.0787], [99.8903, 20.4246], [100.1225, 20.3168]]] }, \"properties\": { \"id\": \"TH\", \"name\": \"Thailand\" }, \"id\": \"TH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[70.958, 40.2391], [70.4514, 40.0491], [69.9666, 40.2022], [69.5303, 40.0974], [69.229, 39.761], [69.5986, 39.5736], [70.6076, 39.5643], [70.7333, 39.4134], [71.4044, 39.598], [71.8061, 39.2758], [72.0427, 39.3521], [73.2351, 39.3743], [73.6314, 39.4489], [73.8015, 38.6068], [74.2774, 38.6597], [74.7452, 38.5101], [74.8912, 37.2317], [74.2596, 37.4154], [73.7495, 37.2317], [73.4815, 37.4718], [72.8955, 37.2676], [71.8021, 36.6941], [71.4329, 37.1273], [71.5518, 37.933], [71.2557, 38.3067], [70.8789, 38.4563], [70.2148, 37.9246], [70.2513, 37.664], [69.4921, 37.553], [69.2649, 37.1083], [68.9604, 37.3248], [68.0678, 36.9498], [67.7592, 37.1721], [67.8143, 37.4869], [68.2942, 38.0329], [68.0477, 38.6695], [68.1037, 38.962], [67.6766, 39.0086], [67.3495, 39.2421], [67.7192, 39.6216], [68.4633, 39.5368], [68.6528, 40.1827], [69.228, 40.1875], [69.2063, 40.5666], [69.7128, 40.6572], [70.4416, 41.0234], [70.751, 40.7397], [70.3825, 40.4534], [70.958, 40.2391]]] }, \"properties\": { \"id\": \"TJ\", \"name\": \"Tajikistan\" }, \"id\": \"TJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-172.4792, -8.5806], [-172.4836, -8.5829], [-172.4987, -8.5478], [-172.4873, -8.5563], [-172.4792, -8.5806]]] }, \"properties\": { \"id\": \"TK\", \"name\": \"Tokelau\" }, \"id\": \"TK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[66.5221, 37.3484], [65.7648, 37.569], [65.5549, 37.2512], [64.8162, 37.1322], [64.5107, 36.3408], [63.8622, 36.0123], [63.1086, 35.8187], [63.0567, 35.4459], [62.6105, 35.2333], [61.262, 35.6194], [61.1195, 36.6426], [60.3413, 36.6377], [60.0625, 36.9631], [59.5622, 37.1788], [59.2409, 37.5206], [58.8157, 37.6836], [58.4357, 37.6387], [57.4236, 37.9476], [57.1937, 38.2162], [56.4409, 38.2495], [56.2286, 38.0733], [55.5783, 38.0999], [55.0754, 37.9023], [54.7451, 37.502], [53.9142, 37.3435], [53.8237, 37.9281], [53.8685, 38.949], [53.6177, 39.2159], [53.125, 39.4321], [53.4721, 39.6686], [53.4042, 39.9603], [52.9873, 39.9878], [52.7334, 40.3989], [53.1454, 40.825], [53.8699, 40.6488], [54.7101, 40.8911], [54.592, 41.1934], [54.0949, 41.5192], [53.8464, 42.0914], [52.9701, 41.9764], [52.4937, 41.7802], [53.2502, 42.2059], [54.1211, 42.3351], [54.9037, 41.9192], [55.5451, 41.2627], [55.9774, 41.3221], [57.0179, 41.2635], [56.9642, 41.8566], [57.3818, 42.1562], [57.8143, 42.1899], [58.2595, 42.688], [58.5888, 42.7785], [59.4508, 42.2996], [59.8584, 42.2951], [60.107, 41.9076], [60.0896, 41.3993], [60.455, 41.2218], [61.9029, 41.0936], [62.6505, 39.8586], [64.1628, 38.9535], [65.613, 38.2384], [65.8571, 38.2686], [66.5744, 38.0107], [66.5221, 37.3484]]] }, \"properties\": { \"id\": \"TM\", \"name\": \"Turkmenistan\" }, \"id\": \"TM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[125.0678, -9.5119], [124.9223, -8.9424], [125.178, -8.6477], [125.8043, -8.4923], [126.6198, -8.4595], [126.9149, -8.7152], [126.3822, -8.9575], [125.408, -9.2758], [125.0678, -9.5119]]] }, \"properties\": { \"id\": \"TL\", \"name\": \"Timor-Leste\" }, \"id\": \"TL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-175.162, -21.1694], [-175.1567, -21.2635], [-175.3353, -21.158], [-175.2255, -21.1189], [-175.162, -21.1694]]] }, \"properties\": { \"id\": \"TO\", \"name\": \"Tonga\" }, \"id\": \"TO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.0121, 10.1343], [-61.5967, 10.0646], [-61.4649, 10.5391], [-61.0338, 10.6701], [-61.0121, 10.1343]]] }, \"properties\": { \"id\": \"TT\", \"name\": \"Trinidad and Tobago\" }, \"id\": \"TT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[11.5043, 33.182], [11.5047, 32.4137], [10.8264, 32.0807], [10.1149, 31.4637], [10.2161, 30.7833], [9.8952, 30.3873], [9.5187, 30.2292], [9.0438, 32.0723], [8.3332, 32.5437], [8.2111, 32.9268], [7.7627, 33.2331], [7.5, 33.8323], [7.5138, 34.0804], [8.2457, 34.7339], [8.3944, 35.204], [8.2457, 35.8707], [8.3486, 36.3679], [8.2306, 36.5454], [8.5764, 36.9374], [9.6878, 37.3405], [10.1962, 37.2059], [10.5712, 36.8796], [11.1266, 36.8739], [10.5255, 36.3235], [10.5908, 35.8871], [11.0044, 35.6336], [11.1199, 35.2404], [10.5349, 34.5448], [10.0647, 34.2119], [10.1589, 33.8501], [10.7226, 33.5145], [11.0844, 33.5629], [11.2025, 33.2491], [11.5043, 33.182]]] }, \"properties\": { \"id\": \"TN\", \"name\": \"Tunisia\" }, \"id\": \"TN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[41.5101, 41.5175], [42.4663, 41.4398], [42.7876, 41.5636], [43.4392, 41.1073], [43.7225, 40.7193], [43.5693, 40.4823], [43.7918, 40.0703], [44.2893, 40.0406], [44.7683, 39.7037], [44.8172, 39.6504], [44.023, 39.3774], [44.4309, 38.3569], [44.2112, 37.9081], [44.5614, 37.7448], [44.7651, 37.1424], [44.2817, 36.9782], [44.1561, 37.2832], [43.516, 37.2445], [42.7748, 37.3719], [42.3588, 37.1087], [42.2683, 37.2765], [41.5154, 37.0892], [40.7057, 37.0976], [40.0164, 36.8259], [39.3568, 36.6816], [38.7669, 36.6932], [38.1916, 36.9014], [37.4365, 36.6435], [36.6583, 36.8024], [36.1274, 35.8316], [35.8926, 35.9165], [35.8109, 36.3097], [36.1883, 36.659], [36.0489, 36.9107], [35.5375, 36.5969], [34.6013, 36.7846], [33.6945, 36.1819], [32.7948, 36.0358], [32.3775, 36.1836], [32.0219, 36.5352], [31.3525, 36.8011], [30.644, 36.8655], [30.4838, 36.3106], [29.6893, 36.1566], [29.1433, 36.3971], [29.0381, 36.6937], [28.4837, 36.8037], [28.1339, 37.0297], [27.3491, 37.0195], [27.0778, 37.6875], [27.2324, 37.9787], [26.6827, 38.1984], [26.7636, 38.7098], [27.0134, 38.887], [26.6819, 39.2922], [26.1132, 39.4676], [26.1812, 39.99], [26.7378, 40.4002], [27.4755, 40.3198], [28.2893, 40.4033], [29.3648, 40.8094], [29.3221, 41.2275], [31.2548, 41.1077], [31.4582, 41.3199], [32.3065, 41.7296], [33.3816, 42.0177], [34.7505, 41.9569], [35.2977, 41.7288], [36.0515, 41.6826], [36.5096, 41.2627], [38.3811, 40.9244], [39.4265, 41.1064], [40.2655, 40.9612], [40.9597, 41.2116], [41.5101, 41.5175]]], [[[28.0144, 41.9689], [28.3465, 41.4664], [29.0572, 41.2298], [28.7801, 40.9741], [28.1721, 41.0806], [27.4996, 40.9732], [27.258, 40.6873], [26.1053, 40.6115], [26.0392, 40.7269], [26.6246, 41.4015], [26.3209, 41.7167], [26.6154, 41.9649], [27.295, 42.0793], [28.0144, 41.9689]]]] }, \"properties\": { \"id\": \"TR\", \"name\": \"Turkey\" }, \"id\": \"TR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[121.0089, 22.6205], [120.5814, 22.3563], [120.3258, 22.5423], [120.0724, 23.1496], [120.1589, 23.709], [121.0405, 25.0326], [121.5936, 25.2754], [121.9291, 24.9735], [121.2957, 22.9667], [121.0089, 22.6205]]] }, \"properties\": { \"id\": \"TW\", \"name\": \"Taiwan\" }, \"id\": \"TW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[33.9031, -1.0022], [33.9794, -1.0022], [36.2633, -2.2747], [37.6437, -3.0453], [37.6087, -3.4604], [37.7974, -3.6744], [39.2218, -4.6922], [38.8193, -5.8778], [38.8738, -6.3315], [39.4722, -6.8787], [39.5192, -7.1243], [39.2885, -7.518], [39.4411, -8.0116], [39.304, -8.4439], [39.7839, -9.9146], [40.4634, -10.4641], [39.9889, -10.821], [39.3217, -11.1223], [38.7947, -11.229], [38.4916, -11.4132], [37.9203, -11.2946], [37.5417, -11.675], [36.9788, -11.5667], [36.5185, -11.7164], [35.7853, -11.4531], [35.6312, -11.5818], [34.9595, -11.5783], [34.608, -11.0806], [34.6617, -10.71], [34.5241, -10.0299], [34.3208, -9.7316], [32.92, -9.4072], [32.4334, -9.1564], [31.9424, -9.0538], [31.3508, -8.6069], [31.0764, -8.6117], [30.751, -8.1936], [30.3133, -7.2037], [29.7097, -6.617], [29.4801, -6.0251], [29.5943, -5.651], [29.3425, -4.9829], [29.4034, -4.4493], [29.7177, -4.456], [30.1469, -4.0854], [30.4253, -3.5891], [30.79, -3.2744], [30.5149, -2.9175], [30.5536, -2.4], [30.8287, -2.3386], [30.8128, -1.5631], [30.51, -1.0673], [30.7421, -1.0074], [32.3717, -1.0022], [33.9031, -1.0022]]] }, \"properties\": { \"id\": \"TZ\", \"name\": \"Tanzania\" }, \"id\": \"TZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[33.9031, -1.0022], [32.3717, -1.0022], [30.7421, -1.0074], [30.51, -1.0673], [30.1017, -1.3687], [29.5769, -1.3878], [29.5619, -0.9772], [29.7177, 0.0983], [29.9343, 0.4992], [29.9427, 0.8192], [30.9424, 1.683], [31.2527, 2.0448], [31.1763, 2.2703], [30.7284, 2.4554], [30.8384, 3.4905], [31.1523, 3.7858], [31.48, 3.6805], [31.7982, 3.8026], [32.0996, 3.5291], [32.3357, 3.7063], [32.8382, 3.7986], [33.4895, 3.7551], [33.9759, 4.2203], [34.165, 3.8128], [34.3927, 3.6916], [34.4478, 3.1634], [34.7425, 2.8181], [34.964, 2.0626], [34.9653, 1.6435], [34.7873, 1.2307], [34.4814, 1.042], [33.9431, 0.1738], [33.9031, -1.0022]]] }, \"properties\": { \"id\": \"UG\", \"name\": \"Uganda\" }, \"id\": \"UG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[38.2142, 47.0914], [37.5434, 47.0745], [37.3398, 46.9169], [36.2792, 46.6586], [35.827, 46.6244], [34.8495, 46.1898], [35.0231, 45.7011], [35.5579, 45.3109], [36.1705, 45.4529], [36.3934, 45.0654], [35.5695, 45.1191], [35.0879, 44.8027], [34.7168, 44.8071], [33.9098, 44.3876], [33.4508, 44.5536], [33.555, 45.0979], [32.508, 45.4037], [33.6647, 45.947], [33.2023, 46.1757], [32.4768, 46.0838], [32.0356, 46.2608], [31.9744, 46.7087], [30.7963, 46.5521], [30.2192, 45.8667], [29.6017, 45.6825], [29.7061, 45.2599], [29.2236, 45.4028], [28.7606, 45.2342], [28.2124, 45.4503], [28.9475, 46.05], [29.1464, 46.5267], [29.838, 46.3505], [29.8779, 46.829], [29.5493, 47.2467], [29.1597, 47.4558], [29.1948, 47.8824], [27.5492, 48.4777], [26.6189, 48.2597], [26.1626, 47.9925], [25.4644, 47.9108], [24.8934, 47.7177], [23.2026, 48.0843], [22.8763, 47.9472], [22.132, 48.4053], [22.5387, 49.0727], [22.6496, 49.539], [23.7118, 50.3773], [24.1056, 50.8449], [23.6053, 51.5179], [24.3616, 51.8675], [25.925, 51.9136], [27.1422, 51.752], [27.2701, 51.6135], [28.5991, 51.5427], [29.1357, 51.6173], [29.3465, 51.3825], [30.533, 51.5965], [30.9806, 52.0461], [31.7635, 52.1011], [32.508, 52.3084], [33.7353, 52.3449], [34.3977, 51.7804], [34.2808, 51.3117], [35.3121, 51.0438], [35.4115, 50.5398], [36.3059, 50.2805], [37.4228, 50.4115], [38.0469, 49.9201], [38.2586, 50.0523], [39.1748, 49.8559], [39.7807, 49.5721], [40.0701, 49.2003], [39.6866, 49.0079], [39.9609, 48.2379], [39.7359, 47.8446], [38.9005, 47.8553], [38.2874, 47.5592], [38.2142, 47.0914]]] }, \"properties\": { \"id\": \"UA\", \"name\": \"Ukraine\" }, \"id\": \"UA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-53.3707, -33.7422], [-53.7853, -34.3806], [-54.1686, -34.6708], [-54.9024, -34.9327], [-55.6732, -34.7756], [-56.118, -34.9079], [-56.8553, -34.6767], [-57.1707, -34.4525], [-57.8292, -34.4773], [-58.4002, -33.9123], [-58.3534, -33.2602], [-58.0824, -32.8936], [-58.2011, -32.4718], [-58.189, -31.924], [-57.8105, -30.8587], [-57.8724, -30.5911], [-57.609, -30.188], [-57.2143, -30.2835], [-56.8329, -30.1072], [-56.1761, -30.6283], [-55.8736, -31.0696], [-55.5573, -30.876], [-55.2546, -31.2258], [-54.5876, -31.4851], [-54.2206, -31.8553], [-53.7618, -32.0568], [-53.6018, -32.403], [-53.1255, -32.7368], [-53.5314, -33.1709], [-53.3707, -33.7422]]] }, \"properties\": { \"id\": \"UY\", \"name\": \"Uruguay\" }, \"id\": \"UY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-141.0021, 69.6509], [-141.0021, 67.021], [-141.0021, 64.6832], [-141.0021, 62.9301], [-141.0021, 60.3003], [-139.1852, 60.0837], [-137.5933, 59.2263], [-137.4386, 58.9031], [-136.5787, 59.1522], [-136.3219, 59.6049], [-135.4758, 59.7933], [-134.9439, 59.2882], [-133.8208, 58.7049], [-131.8661, 56.7929], [-131.5751, 56.5989], [-130.4772, 56.2307], [-130.0251, 55.8882], [-130.0366, 55.2978], [-130.2142, 55.0259], [-130.5753, 54.7696], [-131.0478, 55.1576], [-130.9187, 55.7359], [-131.2875, 56.012], [-131.8439, 56.1601], [-132.8143, 57.0408], [-133.4659, 57.1722], [-133.5542, 57.695], [-134.0634, 58.2111], [-134.7761, 58.4539], [-135.3025, 58.2559], [-135.8618, 58.5771], [-136.5827, 58.2452], [-137.544, 58.5811], [-138.3525, 59.0874], [-140.2168, 59.7265], [-140.8432, 59.749], [-141.6702, 59.9698], [-142.9457, 60.0969], [-143.8051, 60.0129], [-144.9012, 60.3351], [-145.8989, 60.4783], [-146.8742, 61.005], [-148.3445, 60.8536], [-148.1976, 60.1678], [-148.4306, 59.9891], [-149.4323, 60.0011], [-150.9608, 59.244], [-151.7383, 59.1886], [-151.7345, 59.9882], [-151.4515, 60.2027], [-151.3217, 60.7428], [-150.4412, 61.0236], [-150.6124, 61.3013], [-151.7341, 60.9106], [-151.7505, 60.7548], [-153.1061, 59.875], [-154.0883, 59.3632], [-154.1297, 59.1199], [-153.327, 58.8843], [-154.0199, 58.493], [-154.2469, 58.1594], [-155.0069, 58.016], [-156.4784, 57.328], [-156.4751, 57.1051], [-157.5784, 56.6344], [-158.4144, 56.4358], [-158.2757, 56.1963], [-159.5232, 55.8101], [-159.9623, 55.7948], [-161.0995, 55.4057], [-161.7416, 55.391], [-162.0741, 55.1394], [-162.8651, 54.9544], [-162.9621, 55.1838], [-162.1571, 55.7195], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.3021, 56.3141], [-159.2831, 56.6885], [-158.3209, 57.2978], [-157.6076, 57.6014], [-157.5236, 58.4213], [-158.5032, 58.8503], [-159.0827, 58.4697], [-159.6702, 58.9111], [-160.3631, 59.0512], [-161.7554, 58.6119], [-161.8286, 59.5887], [-162.2426, 60.1782], [-163.2194, 59.8455], [-163.9069, 59.8067], [-164.6622, 60.3038], [-165.3538, 60.5413], [-164.8051, 60.892], [-165.5659, 61.1024], [-166.0789, 61.8031], [-165.1944, 62.4736], [-164.409, 63.2151], [-163.359, 63.0457], [-161.974, 63.453], [-161.0998, 63.558], [-160.7786, 63.819], [-160.932, 64.5792], [-161.7594, 64.8162], [-162.807, 64.3743], [-163.7132, 64.5883], [-164.8995, 64.4606], [-166.1428, 64.5827], [-167.4039, 65.4221], [-168.0884, 65.6579], [-164.6742, 66.5549], [-163.7755, 66.5312], [-163.6954, 66.0838], [-161.8164, 66.0536], [-161.557, 66.2505], [-160.2317, 66.4202], [-160.8641, 66.6708], [-161.8566, 66.7003], [-161.9653, 67.0497], [-163.0016, 67.0272], [-163.7205, 67.1955], [-164.1251, 67.6067], [-166.3805, 68.425], [-166.2091, 68.8854], [-164.3024, 68.9364], [-163.1614, 69.3878], [-162.9521, 69.758], [-161.881, 70.3318], [-160.9963, 70.3045], [-159.3144, 70.8784], [-157.9985, 70.8454], [-156.7833, 71.319], [-155.1669, 71.0992], [-154.1953, 70.8009], [-153.2329, 70.9326], [-152.233, 70.8104], [-151.9447, 70.4521], [-149.2694, 70.5007], [-147.7053, 70.2173], [-145.8232, 70.16], [-145.1973, 70.0087], [-143.2184, 70.1163], [-141.4078, 69.6533], [-141.0021, 69.6509]]], [[[-171.4631, 63.6401], [-170.4303, 63.6989], [-169.7778, 63.0936], [-171.4631, 63.6401]]], [[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.5917, 59.9132], [-166.1876, 59.7738], [-167.1389, 60.0086], [-166.1355, 60.3835]]], [[[-134.6802, 58.1616], [-133.9611, 57.6143], [-133.9253, 57.3368], [-134.4354, 57.057], [-134.66, 57.638], [-134.6802, 58.1616]]], [[[-135.7304, 58.2441], [-135.002, 58.0511], [-135.0848, 57.5111], [-136.0767, 57.6747], [-136.5124, 58.0959], [-135.7304, 58.2441]]], [[[-152.8979, 57.8238], [-152.4121, 57.4547], [-153.7933, 56.9895], [-154.3391, 56.9209], [-154.7059, 57.3353], [-154.2813, 57.638], [-153.8184, 57.5956], [-152.8979, 57.8238]]], [[[-134.9698, 57.3515], [-134.6207, 56.7183], [-135.787, 57.3173], [-134.9698, 57.3515]]], [[[-133.7078, 57.0627], [-133.0708, 56.9742], [-132.9592, 56.677], [-133.6028, 56.4641], [-133.7078, 57.0627]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.7823, 55.0484], [-133.447, 55.797], [-133.566, 56.3392]]], [[[-130.9792, 55.4891], [-131.0827, 55.2668], [-131.8111, 55.223], [-131.6249, 55.8316], [-131.2694, 55.9555], [-130.9792, 55.4891]]], [[[-163.511, 55.0142], [-163.358, 54.7356], [-164.5907, 54.4042], [-164.8877, 54.6078], [-164.5297, 54.8808], [-163.511, 55.0142]]], [[[-166.3847, 53.7205], [-167.136, 53.5265], [-166.9782, 53.9628], [-166.3847, 53.7205]]], [[[-93.378, 48.6165], [-93.3769, 48.617], [-93.2579, 48.629], [-92.9962, 48.6117], [-91.5184, 48.0582], [-90.8403, 48.2007], [-89.5776, 48.0019], [-90.5975, 47.6878], [-92.0644, 46.8188], [-91.8356, 46.7021], [-90.9461, 46.9538], [-90.4689, 46.584], [-89.3551, 46.8819], [-88.8297, 47.1458], [-87.6375, 46.8265], [-87.3581, 46.5244], [-86.6376, 46.453], [-86.2313, 46.6563], [-85.0146, 46.7834], [-85.0343, 46.5058], [-84.5284, 46.436], [-84.3275, 46.4915], [-83.9787, 45.9616], [-84.8019, 45.8743], [-85.3859, 46.1087], [-87.0848, 45.7298], [-87.8302, 44.9424], [-87.3374, 44.7758], [-87.9017, 43.2449], [-87.7975, 42.2114], [-87.5147, 41.7206], [-87.2532, 41.6377], [-86.6325, 41.9113], [-86.2995, 42.4176], [-86.2215, 42.9004], [-86.5421, 43.6373], [-86.5192, 44.0738], [-86.237, 44.7202], [-85.3756, 45.277], [-84.772, 45.7948], [-83.4785, 45.3389], [-83.3306, 44.3752], [-83.9157, 43.7006], [-83.4689, 43.7308], [-82.9472, 44.0669], [-82.6633, 43.8542], [-82.4173, 43.0174], [-82.5755, 42.6044], [-82.8817, 42.3798], [-83.0732, 42.3003], [-83.4563, 41.7424], [-82.5243, 41.407], [-81.7233, 41.511], [-81.2287, 41.7704], [-80.3345, 42.0409], [-79.2092, 42.5552], [-78.8778, 42.7991], [-79.0661, 43.1061], [-79.0592, 43.278], [-78.1749, 43.3946], [-76.9765, 43.2775], [-76.2027, 43.5745], [-76.2377, 44.1832], [-75.7919, 44.4969], [-75.1794, 44.8994], [-74.7088, 45.0038], [-71.5174, 45.0078], [-71.3272, 45.2901], [-70.898, 45.2625], [-70.2963, 45.9062], [-70.0078, 46.7087], [-69.243, 47.4629], [-68.8288, 47.2033], [-68.311, 47.3546], [-67.8067, 47.0829], [-67.7846, 45.7016], [-67.4328, 45.603], [-67.4725, 45.2759], [-67.1249, 45.1693], [-67.1067, 44.8853], [-67.9071, 44.4538], [-68.2775, 44.5075], [-69.7916, 43.8053], [-70.1789, 43.7661], [-70.829, 42.8252], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.4046, 41.6271], [-70.6572, 41.5343], [-71.4264, 41.6333], [-71.5228, 41.3789], [-72.8472, 41.2657], [-73.5831, 41.022], [-74.2268, 40.6079], [-73.9575, 40.3282], [-74.1761, 39.7268], [-74.429, 39.3873], [-74.897, 39.1453], [-75.3922, 39.0929], [-75.036, 38.5034], [-75.6592, 37.9539], [-76.2948, 38.4946], [-76.2635, 37.3568], [-75.8905, 36.6568], [-76.4789, 36.0283], [-75.7722, 35.8999], [-75.7739, 35.647], [-76.513, 35.2705], [-76.745, 34.9412], [-77.7508, 34.2851], [-78.0134, 33.9118], [-78.5778, 33.8732], [-78.9202, 33.6587], [-79.276, 33.1354], [-80.8492, 32.114], [-81.5203, 30.8747], [-81.2496, 29.7938], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6501, 28.1812], [-80.2262, 27.2072], [-80.0413, 26.5685], [-80.1263, 25.8334], [-80.3669, 25.3313], [-80.7366, 25.1564], [-81.0977, 25.3193], [-81.365, 25.8312], [-81.7154, 25.983], [-81.8666, 26.4348], [-82.4414, 27.0599], [-82.6609, 27.7186], [-82.8436, 27.846], [-82.6607, 28.4857], [-82.6516, 28.8873], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3828, 29.9075], [-85.3189, 29.6802], [-85.3536, 29.8759], [-86.2574, 30.4929], [-87.7903, 30.2918], [-88.9051, 30.4152], [-89.5885, 30.1658], [-90.2253, 30.3793], [-90.413, 30.1405], [-89.5894, 29.9149], [-90.1014, 29.1817], [-90.3793, 29.2953], [-90.7511, 29.1311], [-91.2902, 29.2892], [-91.331, 29.5137], [-91.8932, 29.836], [-92.2607, 29.5568], [-93.1756, 29.7791], [-93.6948, 29.7698], [-94.8883, 29.3707], [-95.2734, 28.9638], [-95.8534, 28.6402], [-96.4487, 28.5944], [-96.5616, 28.3672], [-97.1564, 28.1443], [-97.1715, 27.8797], [-97.5546, 26.9675], [-97.4023, 26.3967], [-97.1462, 25.9617], [-97.3582, 25.8707], [-98.0828, 26.0643], [-99.1078, 26.4469], [-99.4435, 27.0368], [-99.5053, 27.5481], [-100.2961, 28.3276], [-100.6587, 29.0685], [-101.4404, 29.7769], [-102.269, 29.871], [-102.7342, 29.6438], [-102.892, 29.2163], [-103.2577, 29.001], [-104.1107, 29.3864], [-104.5039, 29.6775], [-104.9179, 30.5835], [-106.2558, 31.5445], [-106.4533, 31.77], [-108.2118, 31.7794], [-108.2145, 31.3293], [-111.0421, 31.3243], [-112.939, 31.916], [-114.836, 32.5082], [-114.7248, 32.7155], [-117.1283, 32.5335], [-117.4674, 33.2957], [-118.5063, 34.0175], [-119.1437, 34.112], [-119.6061, 34.4178], [-120.4812, 34.4715], [-120.6448, 34.5798], [-120.6336, 35.0766], [-120.8603, 35.3656], [-121.8774, 36.3309], [-121.79, 36.7323], [-122.3948, 37.2077], [-122.4669, 37.838], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.7012, 38.9074], [-123.8845, 39.8608], [-124.324, 40.2519], [-124.3717, 40.4912], [-124.0685, 41.3843], [-124.5397, 42.8127], [-124.1486, 43.6916], [-123.9293, 45.5768], [-124.0716, 46.7447], [-124.3761, 47.6586], [-124.6212, 47.9042], [-124.6326, 48.3751], [-123.9757, 48.1682], [-122.2421, 48.0107], [-122.7888, 48.993], [-120.5544, 48.993], [-118.849, 48.993], [-116.2906, 48.993], [-113.7322, 48.993], [-112.0268, 48.993], [-109.4684, 48.993], [-106.4839, 48.993], [-104.352, 48.993], [-101.7935, 48.993], [-99.2354, 48.993], [-97.5298, 48.9933], [-95.162, 48.9917], [-94.6209, 48.7426], [-93.7078, 48.5256], [-93.378, 48.6165]]], [[[-72.5098, 40.9862], [-73.1943, 40.6541], [-73.5738, 40.9195], [-72.5098, 40.9862]]], [[[-155.5353, 19.1089], [-155.8814, 19.0706], [-156.0487, 19.7499], [-155.8317, 20.2759], [-155.1988, 19.9945], [-154.8043, 19.5243], [-155.5353, 19.1089]]]] }, \"properties\": { \"id\": \"US\", \"name\": \"United States\" }, \"id\": \"US\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[70.9468, 42.2485], [70.842, 42.0195], [70.1811, 41.5716], [70.7826, 41.2627], [71.4084, 41.1361], [71.7924, 41.4131], [72.6585, 40.8698], [73.113, 40.7859], [71.6925, 40.1524], [70.958, 40.2391], [70.3825, 40.4534], [70.751, 40.7397], [70.4416, 41.0234], [69.7128, 40.6572], [69.2063, 40.5666], [69.228, 40.1875], [68.6528, 40.1827], [68.4633, 39.5368], [67.7192, 39.6216], [67.3495, 39.2421], [67.6766, 39.0086], [68.1037, 38.962], [68.0477, 38.6695], [68.2942, 38.0329], [67.8143, 37.4869], [67.7592, 37.1721], [67.069, 37.3347], [66.5221, 37.3484], [66.5744, 38.0107], [65.8571, 38.2686], [65.613, 38.2384], [64.1628, 38.9535], [62.6505, 39.8586], [61.9029, 41.0936], [60.455, 41.2218], [60.0896, 41.3993], [60.107, 41.9076], [59.8584, 42.2951], [59.4508, 42.2996], [58.5888, 42.7785], [58.2595, 42.688], [57.8143, 42.1899], [57.3818, 42.1562], [56.9642, 41.8566], [57.0179, 41.2635], [55.9774, 41.3221], [55.977, 42.47], [55.9756, 44.9949], [58.5552, 45.5555], [61.008, 44.3939], [61.1607, 44.1689], [61.9904, 43.4923], [63.2071, 43.6282], [64.4433, 43.5513], [64.9055, 43.7147], [65.4963, 43.3108], [65.803, 42.877], [66.1004, 42.9908], [66.0094, 42.0048], [66.4986, 41.9951], [66.6686, 41.2707], [66.8142, 41.1423], [67.9359, 41.1965], [68.2919, 40.6562], [69.0651, 41.367], [70.0954, 41.8206], [70.4159, 42.0785], [70.9468, 42.2485]]] }, \"properties\": { \"id\": \"UZ\", \"name\": \"Uzbekistan\" }, \"id\": \"UZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.4392, 41.8983], [12.4307, 41.8974], [12.4307, 41.9054], [12.4383, 41.9063], [12.4392, 41.8983]]] }, \"properties\": { \"id\": \"VA\", \"name\": \"Vatican City\" }, \"id\": \"VA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.1745, 13.1581], [-61.2773, 13.2096], [-61.1821, 13.356], [-61.124, 13.2939], [-61.1745, 13.1581]]] }, \"properties\": { \"id\": \"VC\", \"name\": \"Saint Vincent and the Grenadines\" }, \"id\": \"VC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.0175, 8.5491], [-59.8315, 8.3059], [-60.0324, 8.0537], [-60.5136, 7.8132], [-60.7192, 7.4989], [-60.3951, 6.9453], [-61.1457, 6.6946], [-61.1286, 6.2143], [-61.3768, 5.9071], [-60.7422, 5.2022], [-60.6046, 4.9944], [-61.0028, 4.5355], [-62.1531, 4.0982], [-62.7122, 4.0179], [-62.9685, 3.594], [-63.2948, 3.9224], [-64.0215, 3.9291], [-64.2556, 4.1404], [-64.5679, 3.8998], [-64.2212, 3.5873], [-64.2188, 3.2046], [-63.9243, 2.4523], [-63.3894, 2.4118], [-63.394, 2.2224], [-64.0354, 1.9045], [-64.1149, 1.6191], [-65.1037, 1.1082], [-65.3609, 0.8685], [-65.6814, 0.9835], [-66.06, 0.7854], [-66.4293, 0.8219], [-66.8761, 1.2231], [-67.2108, 2.3901], [-67.8347, 2.8926], [-67.3111, 3.4159], [-67.6616, 3.8643], [-67.8553, 4.5071], [-67.825, 5.2706], [-67.4394, 6.0256], [-67.8591, 6.2898], [-68.4717, 6.1565], [-69.4392, 6.1348], [-70.095, 6.9378], [-70.6552, 7.083], [-71.0134, 6.9946], [-72.0843, 7.0967], [-72.443, 7.4549], [-72.4166, 8.3817], [-72.6653, 8.6276], [-72.7963, 9.1089], [-73.3563, 9.2269], [-73.0065, 9.7894], [-72.8693, 10.4911], [-72.6903, 10.8361], [-72.2486, 11.1965], [-71.958, 11.6666], [-71.3197, 11.8618], [-71.8686, 11.6275], [-71.9469, 11.4145], [-71.5943, 10.6572], [-72.1129, 9.8156], [-71.6869, 9.0725], [-71.2979, 9.1257], [-71.0858, 9.3482], [-71.0527, 9.7059], [-71.3867, 10.2639], [-71.5445, 10.7788], [-71.4695, 10.9643], [-70.2326, 11.3732], [-70.2866, 11.8858], [-70.004, 12.1779], [-69.6316, 11.4801], [-68.8279, 11.4317], [-68.3987, 11.161], [-68.234, 10.5693], [-67.8716, 10.472], [-66.9891, 10.6105], [-66.2471, 10.6323], [-65.8518, 10.2577], [-65.1292, 10.0699], [-64.8504, 10.0979], [-63.8734, 10.6638], [-62.7024, 10.7499], [-62.8429, 10.4179], [-62.5151, 10.176], [-60.7924, 9.3606], [-61.0531, 9.0951], [-61.304, 8.4102], [-60.801, 8.5921], [-60.0175, 8.5491]]] }, \"properties\": { \"id\": \"VE\", \"name\": \"Venezuela\" }, \"id\": \"VE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.3952, 18.4648], [-64.4261, 18.5131], [-64.3246, 18.5176], [-64.3952, 18.4648]]] }, \"properties\": { \"id\": \"VG\", \"name\": \"British Virgin Islands\" }, \"id\": \"VG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7656, 17.7945], [-64.6862, 17.7062], [-64.889, 17.7017], [-64.8848, 17.7723], [-64.7656, 17.7945]]] }, \"properties\": { \"id\": \"VI\", \"name\": \"US Virgin Islands\" }, \"id\": \"VI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[107.9727, 21.5081], [107.4098, 21.2848], [107.3543, 21.0554], [106.6757, 20.9603], [106.7533, 20.7348], [106.5182, 20.2887], [105.9841, 19.939], [105.6218, 18.9664], [105.8882, 18.5025], [106.499, 17.9463], [106.479, 17.7195], [107.1803, 16.8978], [108.0295, 16.331], [108.8214, 15.378], [109.0846, 14.7161], [109.3036, 13.8563], [109.272, 13.2793], [109.4238, 12.9561], [109.2187, 12.6458], [109.1988, 11.7247], [108.8205, 11.3154], [108.2715, 10.9342], [107.2617, 10.3984], [106.8128, 10.4334], [106.5723, 9.6411], [105.5012, 9.0933], [105.3222, 8.8012], [104.8922, 8.5834], [104.8184, 8.8017], [104.8451, 9.606], [105.028, 10.0672], [104.6635, 10.1698], [104.4264, 10.4113], [104.8504, 10.5347], [105.3866, 10.9399], [106.1678, 11.0123], [105.8558, 11.2942], [105.8513, 11.6351], [106.3401, 11.6817], [106.4137, 11.9485], [106.9305, 12.0776], [107.5061, 12.3644], [107.4755, 13.0303], [107.6056, 13.4377], [107.3313, 14.1266], [107.5195, 14.705], [107.6531, 15.255], [107.1897, 15.7473], [107.3965, 16.0429], [106.6961, 16.4589], [106.5021, 16.9542], [105.6916, 17.7377], [105.458, 18.1545], [105.0856, 18.4501], [105.1149, 18.6787], [104.7164, 18.8034], [103.8965, 19.3401], [104.0319, 19.6753], [104.5463, 19.6105], [104.928, 20.0179], [104.6187, 20.3744], [104.5832, 20.6465], [104.0518, 20.9413], [103.635, 20.6971], [103.1046, 20.8916], [102.8511, 21.2658], [102.9487, 21.5698], [102.1276, 22.379], [102.5172, 22.7408], [103.0052, 22.4532], [103.3563, 22.7546], [104.3719, 22.7039], [104.7958, 22.9113], [104.8646, 23.1363], [105.2751, 23.3454], [105.8429, 22.9228], [106.5421, 22.9081], [106.7804, 22.7789], [106.5363, 22.3955], [106.7294, 22.0004], [107.3512, 21.6089], [107.9727, 21.5081]]] }, \"properties\": { \"id\": \"VN\", \"name\": \"Vietnam\" }, \"id\": \"VN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[166.7458, -14.8267], [166.8101, -15.1573], [167.1316, -15.1352], [167.1994, -15.4858], [166.8257, -15.635], [166.6312, -15.406], [166.5274, -14.8502], [166.7458, -14.8267]]], [[[167.4125, -16.0958], [167.8364, -16.4496], [167.4494, -16.5551], [167.4125, -16.0958]]]] }, \"properties\": { \"id\": \"VU\", \"name\": \"Vanuatu\" }, \"id\": \"VU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[35.4506, 31.4792], [34.9507, 31.6023], [34.956, 32.1611], [35.193, 32.5344], [35.5512, 32.3955], [35.5589, 31.7656], [35.4506, 31.4792]]], [[[34.2453, 31.2085], [34.1983, 31.3226], [34.4775, 31.5849], [34.2453, 31.2085]]]] }, \"properties\": { \"id\": \"PS\", \"name\": \"Palestinian Territories\" }, \"id\": \"PS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-178.0467, -14.3184], [-178.1585, -14.3117], [-178.1423, -14.2425], [-178.0467, -14.3184]]] }, \"properties\": { \"id\": \"WF\", \"name\": \"Wallis and Futuna\" }, \"id\": \"WF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-172.3335, -13.4652], [-172.225, -13.8044], [-172.5358, -13.7915], [-172.7441, -13.579], [-172.3335, -13.4652]]] }, \"properties\": { \"id\": \"WS\", \"name\": \"Samoa\" }, \"id\": \"WS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[53.0854, 16.6484], [52.3277, 16.2937], [52.2177, 15.6554], [51.6037, 15.3367], [50.5269, 15.0384], [50.1669, 14.851], [49.3497, 14.638], [48.6683, 14.0503], [47.99, 14.048], [47.4077, 13.6614], [46.7888, 13.4657], [45.6574, 13.3388], [45.0387, 12.8158], [44.6178, 12.8171], [43.9298, 12.6165], [43.4753, 12.8388], [43.232, 13.2672], [43.2826, 13.6397], [43.089, 14.0108], [43.0211, 14.555], [42.717, 15.6545], [42.7992, 16.3719], [43.1649, 16.6892], [43.191, 17.3595], [43.418, 17.5162], [43.9169, 17.3249], [44.1557, 17.3986], [45.1482, 17.4274], [45.4066, 17.32], [46.3104, 17.2313], [46.6819, 17.2685], [46.9758, 16.9534], [47.4418, 17.1118], [47.5795, 17.4483], [48.172, 18.1568], [49.042, 18.582], [51.9775, 18.9961], [52.7291, 17.3004], [53.0854, 16.6484]]], [[[53.7632, 12.637], [54.1872, 12.664], [54.1295, 12.3608], [53.5982, 12.3422], [53.7632, 12.637]]]] }, \"properties\": { \"id\": \"YE\", \"name\": \"Yemen\" }, \"id\": \"YE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.2877, -22.4021], [31.5457, -23.4821], [31.7995, -23.8922], [31.9859, -24.4605], [31.9482, -25.9577], [31.4151, -25.7464], [31.2073, -25.8432], [30.8034, -26.4136], [30.7941, -26.7643], [31.0635, -27.1122], [31.4698, -27.2956], [31.9584, -27.3058], [32.1129, -26.8393], [32.8862, -26.8495], [32.5346, -28.1998], [32.2856, -28.6215], [31.7782, -28.9371], [31.3352, -29.3779], [30.2885, -30.9702], [28.8561, -32.2942], [27.8604, -33.0538], [27.0774, -33.5212], [26.4292, -33.7595], [25.9894, -33.7112], [25.6382, -34.0113], [25.0031, -33.9736], [24.8273, -34.1688], [23.5857, -33.9851], [23.2683, -34.0814], [22.2456, -34.0694], [21.7889, -34.3726], [21.06, -34.3646], [20.53, -34.4632], [20.0204, -34.7859], [19.6351, -34.7534], [18.8086, -34.1079], [18.3545, -33.9388], [18.4331, -33.7173], [17.8782, -32.9614], [18.251, -32.652], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.1893, -30.0997], [16.95, -29.4036], [16.4475, -28.6175], [16.7555, -28.4523], [17.0561, -28.0311], [17.3855, -28.3534], [17.448, -28.6984], [18.1027, -28.8719], [19.2458, -28.9016], [19.6715, -28.5039], [19.9804, -28.4516], [19.9804, -26.5312], [19.9804, -24.7769], [20.3454, -25.0299], [20.7932, -25.9155], [20.6267, -26.4438], [20.7399, -26.849], [21.6464, -26.8544], [22.0908, -26.5801], [22.6403, -26.0714], [22.8786, -25.4579], [23.2661, -25.2665], [23.8938, -25.6008], [24.7483, -25.8174], [25.5836, -25.6061], [25.9123, -24.7476], [26.3974, -24.6136], [26.8349, -24.2408], [27.1462, -23.5243], [27.8906, -23.0737], [28.2102, -22.6938], [28.8397, -22.4807], [29.3648, -22.194], [29.6631, -22.1464], [30.4602, -22.3288], [31.2877, -22.4021]], [[28.7367, -30.1019], [29.0979, -29.919], [29.3904, -29.2696], [29.3013, -29.0897], [28.6257, -28.5815], [27.7356, -28.9402], [27.2944, -29.5195], [27.0517, -29.6642], [27.3886, -30.3159], [28.0179, -30.6421], [28.3922, -30.1476], [28.7367, -30.1019]]] }, \"properties\": { \"id\": \"ZA\", \"name\": \"South Africa\" }, \"id\": \"ZA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.92, -9.4072], [33.351, -9.8623], [33.659, -10.5907], [33.2613, -10.8934], [33.3798, -11.1579], [33.2262, -11.5347], [33.2524, -12.1127], [33.3979, -12.49], [33.0216, -12.6303], [32.9679, -13.2251], [32.6722, -13.6104], [32.9922, -14.0224], [33.2017, -14.0135], [31.7289, -14.4959], [30.2316, -14.9905], [30.3959, -15.643], [29.7296, -15.6448], [28.9129, -15.9879], [28.7606, -16.5321], [27.9323, -16.8961], [27.0206, -17.9584], [25.8634, -17.9521], [25.2588, -17.7936], [24.9325, -17.5433], [24.2751, -17.4811], [23.3807, -17.6406], [22.1506, -16.5973], [21.9798, -15.9555], [21.9788, -13.001], [23.8431, -13.001], [23.9914, -12.4221], [23.9665, -10.8716], [24.3199, -11.0718], [24.5184, -11.4384], [25.1846, -11.2432], [25.3492, -11.6231], [26.0258, -11.8904], [26.5962, -11.972], [26.9495, -11.8989], [27.0459, -11.616], [27.5333, -12.1953], [28.3575, -12.4821], [29.0141, -13.3689], [29.5543, -13.249], [29.7954, -13.393], [29.7954, -12.1553], [29.4274, -12.4315], [29.0642, -12.3489], [28.4823, -11.8122], [28.3571, -11.4828], [28.639, -10.6692], [28.6302, -9.8311], [28.4006, -9.2247], [28.9178, -8.7005], [28.9723, -8.4648], [30.751, -8.1936], [31.0764, -8.6117], [31.3508, -8.6069], [31.9424, -9.0538], [32.4334, -9.1564], [32.92, -9.4072]]] }, \"properties\": { \"id\": \"ZM\", \"name\": \"Zambia\" }, \"id\": \"ZM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.2877, -22.4021], [30.4602, -22.3288], [29.6631, -22.1464], [29.3648, -22.194], [29.0371, -21.8113], [28.0455, -21.5729], [27.6695, -21.0643], [27.6997, -20.5308], [27.2807, -20.4787], [27.2217, -20.1458], [26.6783, -19.8928], [26.1683, -19.5381], [25.7613, -18.6496], [25.2241, -17.9152], [25.2588, -17.7936], [25.8634, -17.9521], [27.0206, -17.9584], [27.9323, -16.8961], [28.7606, -16.5321], [28.9129, -15.9879], [29.7296, -15.6448], [30.3959, -15.643], [30.4377, -15.9954], [31.2361, -16.0238], [31.9398, -16.4287], [32.2434, -16.4486], [32.9478, -16.7123], [32.9932, -18.3596], [32.7166, -19.0019], [33.0069, -19.8737], [32.4778, -20.7131], [32.3712, -21.335], [31.2877, -22.4021]]] }, \"properties\": { \"id\": \"ZW\", \"name\": \"Zimbabwe\" }, \"id\": \"ZW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[4.2262, 51.3865], [3.5871, 51.4539], [4.4829, 52.3091], [4.7687, 52.9412], [5.1202, 52.3881], [5.5611, 52.5947], [5.3755, 53.0957], [6.0622, 53.407], [6.8164, 53.4413], [7.1973, 53.2824], [7.0352, 52.3801], [6.7417, 51.9109], [5.9486, 51.7624], [6.1932, 51.4888], [5.8948, 50.9843], [5.9939, 50.7504], [5.7973, 50.7546], [5.6937, 50.7745], [5.827, 51.1257], [4.5032, 51.4746], [4.2262, 51.3865]]], [[[4.2262, 51.3865], [3.9022, 51.2076], [3.35, 51.3776], [4.2262, 51.3865]]]] }, \"properties\": { \"id\": \"NL\", \"name\": \"Netherlands\" }, \"id\": \"NL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.2059, 12.1447], [-68.2873, 12.1718], [-68.3712, 12.2574], [-68.3694, 12.3018], [-68.2196, 12.2312], [-68.2059, 12.1447]]] }, \"properties\": { \"id\": \"BQ\", \"name\": \"Bonair, Saint Eustachius and Saba\" }, \"id\": \"BQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.6589, 19.2829], [166.6087, 19.3072], [166.6277, 19.3246], [166.6589, 19.3117], [166.6589, 19.2829]]] }, \"properties\": { \"id\": \"UM-WQ\", \"name\": \"Wake Island\" }, \"id\": \"UM-WQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-177.3881, 28.1865], [-177.3879, 28.2144], [-177.3646, 28.2042], [-177.3881, 28.1865]]] }, \"properties\": { \"id\": \"UM-MQ\", \"name\": \"Midway Islands\" }, \"id\": \"UM-MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.5237, 16.7305], [-169.5388, 16.7243], [-169.5388, 16.7296], [-169.5237, 16.7305]]] }, \"properties\": { \"id\": \"UM-JQ\", \"name\": \"Johnston Atoll\" }, \"id\": \"UM-JQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.6311, 0.7952], [-176.6433, 0.7934], [-176.6429, 0.8081], [-176.6329, 0.8085], [-176.6311, 0.7952]]] }, \"properties\": { \"id\": \"UM-HQ\", \"name\": \"Howland Island\" }, \"id\": \"UM-HQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.4559, 0.2226], [-176.4615, 0.2151], [-176.4675, 0.2195], [-176.4559, 0.2226]]] }, \"properties\": { \"id\": \"UM-FQ\", \"name\": \"Baker Island\" }, \"id\": \"UM-FQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-160.0213, -0.3979], [-160.0453, -0.3803], [-160.0178, -0.3745], [-160.0213, -0.3979]]] }, \"properties\": { \"id\": \"UM-DQ\", \"name\": \"Jarvis Island\" }, \"id\": \"UM-DQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.7579, -17.075], [42.7414, -17.074], [42.7379, -17.0519], [42.761, -17.0652], [42.7579, -17.075]]] }, \"properties\": { \"id\": \"JU\", \"name\": \"Juan De Nova Island\" }, \"id\": \"JU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[47.3029, -11.5752], [47.2821, -11.5747], [47.2789, -11.5575], [47.2971, -11.5543], [47.3029, -11.5752]]] }, \"properties\": { \"id\": \"GO\", \"name\": \"Glorioso Islands\" }, \"id\": \"GO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.3345, 36.1624], [-5.3383, 36.1122], [-5.3562, 36.1263], [-5.3551, 36.1455], [-5.3345, 36.1624]]] }, \"properties\": { \"id\": \"GI\", \"name\": \"Gibraltar\" }, \"id\": \"GI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.4624, -54.4471], [3.3461, -54.4511], [3.3669, -54.3997], [3.4814, -54.4001], [3.4624, -54.4471]]] }, \"properties\": { \"id\": \"BV\", \"name\": \"Bouvet Island\" }, \"id\": \"BV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[179.2223, -8.5541], [179.2023, -8.4652], [179.2312, -8.5047], [179.2223, -8.5541]]] }, \"properties\": { \"id\": \"TV\", \"name\": \"Tuvalu\" }, \"id\": \"TV\" }\r\n    ] };\r\nexport default map;\r\n","/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../core/utils/Color\";\r\nimport { RadialGradient } from \"../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../core/rendering/fills/Pattern\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../core/Sprite\";\r\nimport { Disposer, IDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic colorOrig: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element.\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Main color of legend data item.\r\n\t *\r\n\t * This is set by the target element this legend item represents, like\r\n\t * a Series or a Slice.\r\n\t *\r\n\t * It can be used to derive a color in legend's sub-items, like label:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"legend\": {\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"text\": \"[{color}]{name}[/]\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n\t * @param value  Main color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Main color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element for \"value label\".\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to the main [[Container]] that holds legend item's elements:\r\n\t * marker and labels.\r\n\t *\r\n\t * @return Item container\r\n\t */\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet itemContainer = component.itemContainers.create();\r\n\t\t\titemContainer.parent = component;\r\n\t\t\t\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\t// Add click/tap event to toggle item\r\n\t\t\tif (itemContainer.togglable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\tcomponent.toggleDataItem(<this>ev.target.dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t\t// for keyboard toggling\r\n\t\t\tif (itemContainer.focusable) {\r\n\t\t\t\titemContainer.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t// We need this here in order to reset focused item when it is clicked\r\n\t\t\t\t\t// normally so that it is not toggled by ENTER afterwards\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = <this>ev.target.dataItem;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n\t\t\t\tconst visibilitychanged = function(ev: AMEvent<Sprite | DataItem, ISpriteEvents & IDataItemEvents>[\"visibilitychanged\"]) {\r\n\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] that holds legend item's marker element.\r\n\t *\r\n\t * @return Marker\r\n\t */\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t */\r\n\tposition?: LegendPosition;\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\r\n\tpublic scrollbar: Scrollbar;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"scrollable\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(8, 0, 8, 0);\r\n\t\titemContainer.margin(0, 10, 0, 10);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"switch\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tconst focusedItem = this.focusedItem;\r\n\t\t\t\tconst target = focusedItem.itemContainer;\r\n\t\t\t\tif (target.togglable) {\r\n\t\t\t\t\tthis.toggleDataItem(focusedItem);\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\ttarget.dispatchImmediately(\"hit\", { event: ev });\r\n\r\n\t\t\t\t\t// We need this here because \"hit\" event resets `this.focusedItem`\r\n\t\t\t\t\t// And we need it here\r\n\t\t\t\t\tthis.focusedItem = focusedItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.fullWords = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.on(\"layoutvalidated\", this.handleScrollbar, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.scrollbar.start = 0;\r\n\t\t\tthis.scrollbar.end = 1;\r\n\t\t}\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\r\n\t\t$utils.used(dataItem.label);\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet tempMaxWidth = dataItem.label.maxWidth;\r\n\t\tif(!(dataItem.label.width instanceof Percent)){\r\n\t\t\tdataItem.label.width = undefined;\t\r\n\t\t}\r\n\t\t\r\n\t\tif (tempMaxWidth > 0) {\r\n\t\t\tdataItem.label.maxWidth = tempMaxWidth;\r\n\t\t}\r\n\t\tif (valueLabel.align == \"right\") {\r\n\t\t\tvalueLabel.width = undefined;\r\n\t\t}\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\tif (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.markers.template.propertyFields.fill = undefined;\r\n\t\t}\r\n\r\n\t\tif (dataContext.updateLegendValue) {\r\n\t\t\tdataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n\t\t}\r\n\r\n\t\tif (dataContext.component && dataContext.component.updateLegendValue) {\r\n\t\t\tdataContext.component.updateLegendValue(dataContext);\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\r\n\t\tcontainer.isActive = !visible;\r\n\t\tif (container.isActive) {\r\n\t\t\tcontainer.setState(\"active\", 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontainer.setState(\"default\", 0);\r\n\t\t}\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\r\n\tpublic afterDraw() {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\t\tlet maxLabelWidth = 0;\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.maxWidth = undefined;\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n\t\t\t\tmaxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet maxValueLabelWidth = 0;\r\n\t\tthis.valueLabels.each((label) => {\r\n\t\t\tif (label.invalid) {\t\t\t\t\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n\t\t\t\tmaxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet maxMarkerWidth = 0;\r\n\t\tthis.markers.each((marker) => {\r\n\t\t\tif (marker.invalid) {\r\n\t\t\t\tmarker.validate();\r\n\t\t\t}\r\n\t\t\tif (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n\t\t\t\tmaxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet itemContainer = this.itemContainers.template;\r\n\t\tlet margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n\t\tlet maxAdjustedLabelWidth: number;\r\n\t\tlet trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tmaxAdjustedLabelWidth = maxLabelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxWidth = maxWidth - margin;\r\n\t\t\tif (maxWidth > trueMaxWidth) {\r\n\t\t\t\tmaxWidth = trueMaxWidth;\r\n\t\t\t}\r\n\t\t\tmaxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n\t\t}\r\n\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n\t\t\t\tif(!(label.width instanceof Percent)){\r\n\t\t\t\t\tlabel.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n\t\t\t\t\tlabel.maxWidth = label.width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (this.valueLabels.template.align == \"right\") {\r\n\t\t\tthis.valueLabels.each((valueLabel) => {\r\n\t\t\t\tvalueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsuper.afterDraw();\r\n\t}\r\n\r\n\r\n\tprotected handleScrollbar() {\r\n\t\tlet scrollbar = this.scrollbar;\r\n\t\tif (this.scrollable && scrollbar) {\r\n\t\t\tscrollbar.height = this.measuredHeight;\r\n\t\t\tscrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n\r\n\t\t\tif (this.contentHeight > this.measuredHeight) {\r\n\t\t\t\tscrollbar.visible = true;\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + + scrollbar.pixelMarginRight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMasks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 5, 10, 10);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.contentAlign = \"none\";\r\n\t\t\t\tthis.valueLabels.template.align = \"right\";\r\n\r\n\t\t\t\tif (!$type.isNumber(this.maxColumns)) {\r\n\t\t\t\t\tthis.maxColumns = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.width = undefined;\r\n\t\t\t\tthis.maxWidth = 220;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.maxColumns = undefined;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.align = \"left\";\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `false` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * If set to `true`, all markers will be shown as squares, regardless of te\r\n\t * series type.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * Please note that `maxHeight` is automatically set for Legend when its\r\n\t * `position` is set to `\"left\"` or `\"right\"`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t * @param  value  Legend Scrollable?\r\n\t */\r\n\tpublic set scrollable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"scrollable\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tlet scrollbar = this.createChild(Scrollbar);\r\n\t\t\t\tthis.scrollbar = scrollbar;\r\n\t\t\t\tscrollbar.isMeasured = false;\r\n\t\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\t\tscrollbar.endGrip.__disabled = true;\r\n\t\t\t\tscrollbar.startGrip.__disabled = true;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.marginLeft = 5;\r\n\r\n\t\t\t\tthis._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\r\n\t\t\t\tthis._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t\tif (this.scrollbar) {\r\n\t\t\t\t\t\tthis.scrollbar.dispose();\r\n\t\t\t\t\t\tthis.scrollbar = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling of legend.\r\n\t *\r\n\t * @param  event  Event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]): void {\r\n\t\tlet shift = event.shift.y;\r\n\t\tlet scrollbar = this.scrollbar\r\n\t\tif (scrollbar) {\r\n\t\t\tlet ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n\t\t\tlet delta = scrollbar.end - scrollbar.start;\r\n\t\t\tif (shift > 0) {\r\n\t\t\t\tscrollbar.start = $math.max(0, scrollbar.start - ds);\r\n\t\t\t\tscrollbar.end = scrollbar.start + delta;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.end = $math.min(1, scrollbar.end - ds);\r\n\t\t\t\tscrollbar.start = scrollbar.end - delta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMasks(): void {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.itemContainers.each((itemContainer) => {\r\n\t\t\t\titemContainer.dy = -this.scrollbar.thumb.pixelY * this.contentHeight / this.measuredHeight;\r\n\t\t\t\titemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: this.measuredWidth, height: this.measuredHeight }\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend Scrollable?\r\n\t */\r\n\tpublic get scrollable(): boolean {\r\n\t\treturn this.getPropertyValue(\"scrollable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.color = item.colorOrig;\r\n\r\n\t\t\tdataContext.appeared = true;\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\t\t\tdataContext.appeared = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n\t\t\titem.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tdataItem.valueLabel.invalidate();\r\n\t\tdataItem.label.invalidate();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"bottom\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"right\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Base class for all Axis\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem, IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\n\r\n// Charts\r\nimport { Chart } from \"../Chart\";\r\n\r\n// Series\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\n\r\n// Elements\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { PointedRectangle } from \"../../core/elements/PointedRectangle\";\r\n\r\n// Types\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n// Utils\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class AxisDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Reference to a related [[Grid]] element.\r\n\t */\r\n\tprotected _grid: Grid;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisTick]] element.\r\n\t */\r\n\tprotected _tick: AxisTick;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisLabel]] element.\r\n\t */\r\n\tprotected _label: AxisLabel;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisFill]] element.\r\n\t */\r\n\tprotected _axisFill: AxisFill;\r\n\r\n\t/**\r\n\t * A mask for axis. We're using [[AxisFill]] since the mask, basically, has\r\n\t * the same shape and features.\r\n\t */\r\n\tprotected _mask: AxisFill;\r\n\r\n\t/**\r\n\t * Container which might be used to hold some extra items, like series\r\n\t * segments when data item is used for axis range.\r\n\t */\r\n\tprotected _contents: Container;\r\n\r\n\t/**\r\n\t * A text to be used as label for this data item.\r\n\t */\r\n\tprotected _text: string;\r\n\r\n\t/**\r\n\t * Holds a physical position of the grid line associated with this data item,\r\n\t * so that it can be used when measuring distance between points, and hiding\r\n\t * some of them so they don't overlap.\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * If the data item is within an existing [[AxisBreak]] this property will\r\n\t * hold a reference to that [[AxisBreak]].\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Axis;\r\n\r\n\t/**\r\n\t * Used to distinguish from real data points and those data items that are\r\n\t * used for ranges, like `series.axisRanges` or `axis.axisRanges`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isRange: boolean;\r\n\r\n\t/**\r\n\t * relative position of data item on axis\r\n\t */\r\n\tpublic position: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullet: Sprite;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * beginning than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `minLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t *     \"dataItems\": {\r\n\t *       \"minPosition\": 0.2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic minPosition?: number;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * end than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `maxLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis end.\r\n\t *     \"dataItems\": {\r\n\t *       \"maxPosition\": 0.8\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic maxPosition?: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Actual index of the axis data item.\r\n\t * \r\n\t * @since 4.7.8\r\n\t */\r\n\tpublic itemIndex: number;\r\n\r\n\t/**\r\n\t * A [[Grid]] element associated with this data item.\r\n\t *\r\n\t * If there is no grid element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param grid  Grid element\r\n\t */\r\n\tpublic set grid(grid: Grid) {\r\n\t\tif (this._grid && this._grid != grid) {\r\n\t\t\t$array.remove(this.sprites, this._grid);\r\n\t\t\tthis._grid.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (grid) {\r\n\t\t\tif (grid.dataItem && grid.dataItem != this) {\r\n\t\t\t\t$array.remove(grid.dataItem.sprites, grid);\r\n\t\t\t\tgrid.dataItem.grid = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(grid);\r\n\t\t}\r\n\t\tthis._grid = grid;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grid element\r\n\t */\r\n\tpublic get grid(): Grid {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: Grid;\r\n\t\t\t\tlet grid: Grid;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.grid;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.grid.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = component.renderer.grid.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.grid.removeValue(grid);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.grid = grid;\r\n\t\t\t\tgrid.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(grid);\r\n\t\t\t\tgrid.axis = this.component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisTick]] element associated with this data item.\r\n\t *\r\n\t * If there is no tick element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param tick  Tick element\r\n\t */\r\n\tpublic set tick(tick: AxisTick) {\r\n\t\tif (this._tick && this._tick != tick) {\r\n\t\t\t$array.remove(this.sprites, this._tick);\r\n\t\t\tthis._tick.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (tick) {\r\n\t\t\tif (tick.dataItem && tick.dataItem != this) {\r\n\t\t\t\t$array.remove(tick.dataItem.sprites, tick);\r\n\t\t\t\ttick.dataItem.tick = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(tick);\r\n\t\t}\r\n\t\tthis._tick = tick;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): AxisTick {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisTick;\r\n\t\t\t\tlet tick: AxisTick;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.tick;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.ticks.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = component.renderer.ticks.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.ticks.removeValue(tick);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick = tick;\r\n\t\t\t\ttick.axis = this.component;\r\n\t\t\t\ttick.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(tick);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisLabel]] element associated with this data item.\r\n\t *\r\n\t * If there is no label element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set label(label: AxisLabel) {\r\n\t\tif (this._label && this._label != label) {\r\n\t\t\t$array.remove(this.sprites, this._label);\r\n\t\t\tthis._label.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (label) {\r\n\t\t\tif (label.dataItem && label.dataItem != this) {\r\n\t\t\t\t$array.remove(label.dataItem.sprites, label);\r\n\t\t\t\tlabel.dataItem.label = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): AxisLabel {\r\n\t\tif (!this._label) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisLabel;\r\n\t\t\t\tlet label: AxisLabel;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.label;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.labels.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = component.renderer.labels.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.labels.removeValue(label);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(label);\r\n\t\t\t\tthis.label = label;\r\n\t\t\t\tlabel.shouldClone = false;\r\n\t\t\t\tlabel.axis = this.component;\r\n\t\t\t\tlabel.virtualParent = component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisFill]] associated element with this data item.\r\n\t *\r\n\t * If there is no fill element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set axisFill(axisFill: AxisFill) {\r\n\t\tif (this._axisFill && this._axisFill != axisFill) {\r\n\t\t\t$array.remove(this.sprites, this._axisFill);\r\n\t\t\tthis._axisFill.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.dataItem && axisFill.dataItem != this) {\r\n\t\t\t\t$array.remove(axisFill.dataItem.sprites, axisFill);\r\n\t\t\t\taxisFill.dataItem.axisFill = undefined;\r\n\t\t\t}\r\n\t\t\taxisFill.axis = this.component;\r\n\t\t\tthis.addSprite(axisFill);\r\n\t\t}\r\n\t\tthis._axisFill = axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get axisFill(): AxisFill {\r\n\t\tif (!this._axisFill) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisFill;\r\n\t\t\t\tlet axisFill: AxisFill;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.axisFill;\r\n\t\t\t\t\tif (!this.isTemplate && template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.axisFills.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = component.renderer.axisFills.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.axisFills.removeValue(axisFill);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.axisFill = axisFill;\r\n\t\t\t\taxisFill.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(axisFill);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * Text to be used as data item's label.\r\n\t *\r\n\t * @param text Text label\r\n\t */\r\n\tpublic set text(text: string) {\r\n\t\tthis._text = text;\r\n\t\tif (this._label) { // do not use getter, it will create unwanted instances!\r\n\t\t\tthis._label.text = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text label\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * Data item's mask.\r\n\t *\r\n\t * @return Mask\r\n\t */\r\n\tpublic get mask(): AxisFill {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Container]] to place all visual elements, related to data item\r\n\t * in.\r\n\t *\r\n\t * If there is no Container, a new one is created.\r\n\t *\r\n\t * @return Contents container\r\n\t */\r\n\tpublic get contents(): Container {\r\n\t\tif (!this._contents) {\r\n\t\t\tlet contents = new Container();\r\n\t\t\tthis.addSprite(contents);\r\n\t\t\tcontents.isMeasured = false;\r\n\t\t\tthis._contents = contents;\r\n\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet mask: AxisFill = component.renderer.createFill(this.component);\r\n\t\t\t\tmask.disabled = false;\r\n\t\t\t\tmask.axis = component;\r\n\t\t\t\tthis.addSprite(mask);\r\n\t\t\t\tthis._mask = mask;\r\n\t\t\t\tcontents.mask = mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._contents;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisBreak]] this data item falls within.\r\n\t *\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic set axisBreak(axisBreak: this[\"_axisBreak\"]) {\r\n\t\tif (this._axisBreak) {\r\n\t\t\tthis._axisBreak.dataItems.removeValue(this);\r\n\t\t}\r\n\t\tif (axisBreak) {\r\n\t\t\taxisBreak.dataItems.push(this);\r\n\t\t}\r\n\t\tthis._axisBreak = axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis break\r\n\t */\r\n\tpublic get axisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn this._axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.validateDataElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends data item's elements to the parent [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendChildren() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.appendDataItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data item has particular property set.\r\n\t *\r\n\t * @param prop  Property name\r\n\t * @return Property set?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop == \"component\" ? true : super.hasProperty(prop);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[AxisDataItem]].\r\n\t *\r\n\t * @param source Source AxisDataItem\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.text = source.text;\r\n\t\tif (source.bullet) {\r\n\t\t\tthis.bullet = source.bullet.clone();\r\n\t\t}\r\n\r\n\t\tthis.minPosition = source.minPosition;\r\n\t\tthis.maxPosition = source.maxPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t\tif (this._contents) {\r\n\t\t\tthis._contents.visible = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n\t * bullet in the middle of the cell, or specific value.\r\n\t *\r\n\t * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n\t * instead. It has a `location` property which can be used to indicate\r\n\t * precise relative location within cell/range.\r\n\t *\r\n\t * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n\t * into it.\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * let flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * var flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"FlagBullet\",\r\n\t *         \"label\": {\r\n\t *           \"text\": \"Hello\"\r\n\t *         }\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.5.9\r\n\t * @param  value  Bullet\r\n\t */\r\n\tpublic set bullet(value: Sprite) {\r\n\t\tif (this._bullet && this._bullet != value) {\r\n\t\t\t$array.remove(this.sprites, this._bullet);\r\n\t\t\tthis._bullet.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tthis._bullet = value;\r\n\t\tif (value) {\r\n\t\t\tthis.addSprite(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bullet\r\n\t */\r\n\tpublic get bullet(): Sprite {\r\n\t\treturn this._bullet;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[AxisDataItem]]\r\n * Includes both the [[DataItemAdapter]] definitions and properties\r\n * @see {@link DataItemAdapter}\r\n */\r\nexport interface IAxisDataItemAdapters extends IDataItemAdapters {\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport enum AxisItemLocation {\r\n\tStart = 0,\r\n\tMiddle = 0.5,\r\n\tEnd = 1\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Axis]].\r\n */\r\nexport interface IAxisDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Axis]].\r\n */\r\nexport interface IAxisProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Axis start location.\r\n\t *\r\n\t * * 0 - None of the first cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the first cell is shown.\r\n\t * * 1 - Full first cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\r\n\t/**\r\n\t * Axis end location.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tendLocation?: number;\r\n\r\n\t/**\r\n\t * Indicates if cusor's tooltip should be shown on this Axis.\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\ttoggleZoomOutButton?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\r\n\tzoomable?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Axis]].\r\n */\r\nexport interface IAxisEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * Invoked when available axis lenght changes, e.g. after resizing the whole\r\n\t * chart.\r\n\t */\r\n\tlengthchanged: {}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Axis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisAdapters extends IComponentAdapters, IAxisProperties {\r\n\t/**\r\n\t * Applied to the tooltip text before it is shown.\r\n\t */\r\n\tgetTooltipText: string;\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nexport class Axis<T extends AxisRenderer = AxisRenderer> extends Component {\r\n\r\n\t/**\r\n\t * Defines list of data fields.\r\n\t */\r\n\tpublic _dataFields: IAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the [[DataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A list of Axis Ranges.\r\n\t */\r\n\tprotected _axisRanges: ListTemplate<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisEvents;\r\n\r\n\t/**\r\n\t * A [[Label]] instance that is used for Axis title label.\r\n\t */\r\n\tprotected _title: Label;\r\n\r\n\t/**\r\n\t * \"X\", \"Y\", etc.\r\n\t *\r\n\t * This is needed so that Axis knows which of the values from series' data\r\n\t * items it should use.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisLetter: string;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tprotected _chart: Chart;\r\n\r\n\t/**\r\n\t * A type for renderer used for this Axis.\r\n\t */\r\n\tpublic _renderer: T;\r\n\r\n\t/**\r\n\t * Number of Grid elements on the axis.\r\n\t */\r\n\tprotected _gridCount: number = 10;\r\n\r\n\t/**\r\n\t * A list of [[XYSeries]] that are using this Axis.\r\n\t */\r\n\tprotected _series: List<XYSeries> = new List<XYSeries>();\r\n\r\n\t/**\r\n\t * Holds the length of the Axis, so that we can check if it changed after\r\n\t * other changes and we need to update layouts.\r\n\t */\r\n\tprotected _prevLength: number;\r\n\r\n\t/**\r\n\t * A list of Axis Breaks associated with this Axis.\r\n\t */\r\n\tprotected _axisBreaks: SortedListTemplate<this[\"_axisBreak\"]>;\r\n\r\n\t/**\r\n\t * A reference to the Iterator for Axis' data items.\r\n\t */\r\n\tprotected _dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A name of the data field this Axis looks for its data in, e.g. \"category\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisFieldName: string;\r\n\r\n\t// we save these values so that cursur could use them if axis line is a fill\r\n\r\n\t/**\r\n\t * [currentItemStartPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemStartPoint: IPoint;\r\n\r\n\t/**\r\n\t * [currentItemEndPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemEndPoint: IPoint;\r\n\r\n\tprotected _tooltipPosition: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic relativePositionSprite?: Sprite;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem and its index as\r\n\t * parameters.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * For example, you can set it up to highlight only weekends on a\r\n\t * [[DateAxis]].\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"], index?: number): void {\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = dataItem.index;\r\n\t\t}\r\n\t\tif (index / 2 == Math.round(index / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\tdataItem.axisFill.opacity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.opacity = 1;\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Full length of the axis, in pixels.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisFullLength: number;\r\n\r\n\t/**\r\n\t * Ghost label is used to prevent chart shrinking/expanding when zooming or\r\n\t * when data is invalidated. You can set custom text on it so that it would\r\n\t * be bigger/smaller,\r\n\t */\r\n\tpublic ghostLabel: AxisLabel;\r\n\r\n\t/**\r\n\t * Specifies if axis should be automatically disposed when removing from\r\n\t * chart's axis list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _axisItemCount: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tif (this.constructor === Axis) {\r\n\t\t\tthrow new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n\t\t}\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.minWidth = 0.0001;\r\n\t\tthis.minHeight = 0.0001;\r\n\t\tthis.className = \"Axis\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n\t\tthis.toggleZoomOutButton = true;\r\n\t\tthis.zoomable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create title\r\n\t\tthis.title = new Label();\r\n\t\tthis.title.shouldClone = false;\r\n\t\tthis._disposers.push(this.title);\r\n\t\tthis.setPropertyValue(\"startLocation\", 0);\r\n\t\tthis.setPropertyValue(\"endLocation\", 1);\r\n\r\n\t\t// Data item iterator\r\n\t\tthis._dataItemsIterator = new $iter.ListIterator<this[\"_dataItem\"]>(this.dataItems, () => this.dataItems.create());\r\n\t\tthis._dataItemsIterator.createNewItems = true;\r\n\r\n\t\t// Create tooltip\r\n\t\tlet tooltip: Tooltip = new Tooltip();\r\n\t\tthis._disposers.push(tooltip);\r\n\t\ttooltip.label.padding(5, 10, 5, 10);\r\n\t\ttooltip.background.pointerLength = 5;\r\n\t\ttooltip.fitPointerToBounds = true;\r\n\t\ttooltip.background.filters.clear();\r\n\r\n\t\t// Set virtual parentfor the tooltip so that it can properly inheirt\r\n\t\t// formatters from the axis.\r\n\t\ttooltip.virtualParent = this;\r\n\r\n\t\t// Create background element for the tooltip\r\n\t\tlet background: PointedRectangle = <PointedRectangle>tooltip.background;\r\n\t\tbackground.cornerRadius = 0;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.stroke = background.fill;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\ttooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n\r\n\t\tthis.tooltip = tooltip;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.readerHidden = true;\r\n\r\n\t\tthis.events.on(\"rangechangestarted\", () => {\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = true;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.events.on(\"rangechangeended\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = false;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new AxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tsuper.invalidateLayout();\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateLayout();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates series of this axis.\r\n\t */\r\n\tpublic invalidateSeries(): void {\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Override to cancel super call for data element validation.\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tthis._axisItemCount = 0;\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tthis.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n\t\t\tthis.ghostLabel.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of grid items on the axis.\r\n\t */\r\n\tprotected updateGridCount() {\r\n\t\tif (this.renderer) {\r\n\t\t\tlet gridCount = this.axisLength / this.renderer.minGridDistance;\r\n\t\t\tif (gridCount != this._gridCount) {\r\n\t\t\t\tthis._gridCount = gridCount;\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateGridCount();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.updateAxisLine();\r\n\t\t\trenderer.updateTooltip();\r\n\t\t\trenderer.updateBaseGridElement();\r\n\t\t}\r\n\r\n\t\tif (this._prevLength != this.axisLength) {\r\n\t\t\tthis.dispatchImmediately(\"lengthchanged\");\r\n\t\t\tthis._prevLength = this.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a data item to the Axis.\r\n\t *\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic appendDataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tif (tick) {\r\n\t\t\tif (tick.above) {\r\n\t\t\t\ttick.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.label) {\r\n\t\t\tdataItem.label.parent = renderer;\r\n\t\t}\r\n\r\n\t\tlet axisFill = dataItem.axisFill;\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.above) {\r\n\t\t\t\taxisFill.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxisFill.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet grid = dataItem.grid;\r\n\t\tif (grid) {\r\n\t\t\tif (grid.above) {\r\n\t\t\t\tgrid.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgrid.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\tdataItem.bullet.parent = renderer.bulletsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws Axis' related items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis.validateLayout();\r\n\r\n\t\tthis.renderer.updateGridContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Redars Axis ranges.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateAxisRanges(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\tthis.appendDataItem(axisRange);\r\n\t\t\tthis.validateDataElement(axisRange);\r\n\t\t\tif (axisRange.grid) {\r\n\t\t\t\taxisRange.grid.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.tick) {\r\n\t\t\t\taxisRange.tick.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.axisFill) {\r\n\t\t\t\taxisRange.axisFill.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.label) {\r\n\t\t\t\taxisRange.label.validate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis breaks, so they are redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\taxisBreak.invalidate();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Associates an Axis break with this Axis, after it is inserted into\r\n\t * `axisBreaks`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic processBreak(event: IListEvents<this[\"_axisBreak\"]>[\"inserted\"]) {\r\n\t\tlet axisBreak: this[\"_axisBreak\"] = event.newValue;\r\n\t\taxisBreak.parent = this.renderer.breakContainer;\r\n\t\taxisBreak.axis = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a [[XYSeries]] element with this Axis.\r\n\t *\r\n\t * Returns a [[Disposer]] for all events, added to Series for watching\r\n\t * changes in Axis, and vice versa.\r\n\t * @ignore\r\n\t * @param series  Series\r\n\t * @return Event disposer\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\tthis.series.moveValue(series);\r\n\r\n\t\treturn new MultiDisposer([\r\n\t\t\tnew Disposer(() => {\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}),\r\n\r\n\t\t\tthis.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"lengthchanged\", series.createMask, series, false),\r\n\t\t\tthis.events.on(\"startchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"endchanged\", series.invalidate, series, false),\r\n\t\t\t//axis.events.on(\"validated\", chart.handleCursorPositionChange, chart, false)\t\t\t\r\n\r\n\t\t\t// TODO should these be disposed of ?\r\n\t\t\t//series.events.on(\"datavalidated\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"visibilitychanged\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"hidden\", this.processSeriesDataItems, this)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisRenderer]] to be used to render this Axis.\r\n\t *\r\n\t * Please note that most of the settings, related to Axis' appearance are set\r\n\t * via its renderer. Not directly on the Axis.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n\t * @param renderer  Renderer\r\n\t */\r\n\tpublic set renderer(renderer: this[\"_renderer\"]) {\r\n\t\tif (renderer != this._renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\trenderer.chart = this.chart;\r\n\t\t\trenderer.axis = this;\r\n\t\t\trenderer.parent = this;\r\n\t\t\tthis.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n\t\t\tthis.initRenderer();\r\n\r\n\t\t\tthis._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n\r\n\t\t\tlet ghostLabel = this.renderer.labels.create();\r\n\t\t\tthis._disposers.push(ghostLabel);\r\n\t\t\tghostLabel.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n\t\t\tghostLabel.text = \"L\";\r\n\t\t\tghostLabel.parent = this.renderer;\r\n\t\t\tghostLabel.shouldClone = false;\r\n\t\t\tghostLabel.fillOpacity = 0;\r\n\t\t\tghostLabel.opacity = 0;\r\n\t\t\tghostLabel.strokeOpacity = 0;\r\n\t\t\tghostLabel.interactionsEnabled = false;\r\n\t\t\tghostLabel.validate();\r\n\r\n\t\t\tthis.ghostLabel = ghostLabel;\r\n\r\n\t\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\t\tghostLabel.text = \"L\";\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Renderer\r\n\t */\r\n\tpublic get renderer(): this[\"_renderer\"] {\r\n\t\treturn this._renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to angle. (for circular axes)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\treturn this.renderer.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\treturn this.renderer.pointToPosition(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position to coordinate.\r\n\t *\r\n\t * @since 4.7.15\r\n\t * @param position (0-1)\r\n\t * @return coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\treturn this.renderer.positionToCoordinate(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start  [description]\r\n\t * @param end    [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: any, end: any): string {\r\n\t\treturn this.renderer.getPositionRangePath(start, end);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic anyToPosition(value: any): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: any): IOrientationPoint {\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition [description]\r\n\t * @param endPosition   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.getPositionRangePath(startPosition, endPosition);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Actual axis length in pixels.\r\n\t *\r\n\t * @return Axis length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.axisLength;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if axis should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n\t\t\tif (value && this.renderer) {\r\n\t\t\t\tthis.renderer.updateTooltip();\r\n\t\t\t}\r\n\t\t\telse if (this.tooltip) {\r\n\t\t\t\tthis.tooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.6.2\r\n\t * @param  value  Toggle zoom out button?\r\n\t */\r\n\tpublic set toggleZoomOutButton(value: boolean) {\r\n\t\tthis.setPropertyValue(\"toggleZoomOutButton\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Toggle zoom out button?\r\n\t */\r\n\tpublic get toggleZoomOutButton(): boolean {\r\n\t\treturn this.getPropertyValue(\"toggleZoomOutButton\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis._tooltipPosition = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\r\n\t\tif (!tooltip || this.dataItems.length <= 0) {\r\n\t\t\tthis._tooltipPosition = undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!local) {\r\n\t\t\t\tposition = this.toAxisPosition(position);\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t\tthis._tooltipPosition = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.renderer;\r\n\r\n\t\t\t//@todo: think of how to solve this better\r\n\t\t\tif (!tooltip.parent) {\r\n\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltipLocation = renderer.tooltipLocation;\r\n\r\n\t\t\tlet startPosition: number = this.getCellStartPosition(position);\r\n\t\t\tlet endPosition: number = this.getCellEndPosition(position);\r\n\r\n\t\t\tif (this.tooltipPosition == \"fixed\") {\r\n\t\t\t\tposition = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n\t\t\t}\r\n\r\n\t\t\tposition = $math.fitToRange(position, this.start, this.end);\r\n\r\n\t\t\tif (this._tooltipPosition != position) {\r\n\t\t\t\tthis._tooltipPosition = position;\r\n\r\n\t\t\t\tlet tooltipLocation2 = renderer.tooltipLocation2;\r\n\r\n\t\t\t\tlet startPoint: IPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n\t\t\t\tlet endPoint: IPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n\r\n\t\t\t\t// save values so cursor could use them\r\n\t\t\t\tthis.currentItemStartPoint = startPoint;\r\n\t\t\t\tthis.currentItemEndPoint = endPoint;\r\n\r\n\t\t\t\tif (renderer.fullWidthTooltip) {\r\n\t\t\t\t\ttooltip.width = endPoint.x - startPoint.x;\r\n\t\t\t\t\ttooltip.height = endPoint.y - startPoint.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet point: IPoint = renderer.positionToPoint(position, tooltipLocation2);\r\n\t\t\t\tlet globalPoint: IPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n\t\t\t\ttooltip.text = this.getTooltipText(position);\r\n\r\n\t\t\t\tif (tooltip.text) {\r\n\t\t\t\t\ttooltip.delayedPointTo(globalPoint);\r\n\t\t\t\t\ttooltip.show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) to Axis position with zoom level and\r\n\t * inversed taken into account.\r\n\t *\r\n\t * @param position Global position (0-1)\r\n\t * @return Position within Axis (0-1)\r\n\t */\r\n\tpublic toAxisPosition(position: number): number {\r\n\r\n\t\tposition = this.renderer.toAxisPosition(position);\r\n\r\n\t\tif (position == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tposition = position * (this.end - this.start);\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = this.start + position;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts position on the axis with zoom level and\r\n\t * inversed taken into account to global position.\r\n\t *\r\n\t * @param position Axis position (0-1)\r\n\t * @return Global position (0-1)\r\n\t */\r\n\tpublic toGlobalPosition(position: number): number {\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = position - this.start;\r\n\t\t}\r\n\r\n\t\treturn position / (this.end - this.start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to be used for cursor's Axis tooltip.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position coordinate (px)\r\n\t * @return Label text\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n\t * place.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointerOrientation  Pointer (stem) orientation\r\n\t * @param boundingRectangle   A rectangle for tooltip to fit within\r\n\t */\r\n\tpublic updateTooltip(pointerOrientation: PointerOrientation, boundingRectangle: IRectangle): void {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.fixDoc = false;\r\n\t\t\ttooltip.pointerOrientation = pointerOrientation;\r\n\t\t\ttooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [roundPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position  Relative position\r\n\t * @param location  Location on axis\r\n\t * @return Rounded position\r\n\t */\r\n\tpublic roundPosition(position: number, location: AxisItemLocation, axisLocation?: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellStartPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellEndPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis ranges for this Axis.\r\n\t *\r\n\t * @return Axis ranges\r\n\t */\r\n\tpublic get axisRanges(): ListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (!this._axisRanges) {\r\n\t\t\tlet dataItem: AxisDataItem = this.createDataItem();\r\n\t\t\tdataItem.isRange = true;\r\n\t\t\tdataItem.axisFill = this.renderer.axisFills.template.clone();\r\n\t\t\tdataItem.grid = this.renderer.grid.template.clone();\r\n\t\t\tdataItem.tick = this.renderer.ticks.template.clone();\r\n\t\t\tdataItem.label = this.renderer.labels.template.clone();\r\n\r\n\t\t\tdataItem.isTemplate = true;\r\n\t\t\tdataItem.component = this;\r\n\t\t\tdataItem.axisFill.disabled = false;\r\n\t\t\tdataItem.tick.disabled = false;\r\n\t\t\tdataItem.grid.disabled = false;\r\n\t\t\tdataItem.label.disabled = false;\r\n\r\n\t\t\tthis._axisRanges = new ListTemplate<this[\"_dataItem\"]>(dataItem);\r\n\t\t\tthis._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisRanges));\r\n\t\t\tthis._disposers.push(this._axisRanges.template);\r\n\t\t}\r\n\t\treturn this._axisRanges;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an axis range after it has been added to the axis range list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<this[\"_dataItem\"]>[\"inserted\"]) {\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\taxisRange.component = this;\r\n\t\taxisRange.isRange = true;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis breaks on this Axis.\r\n\t *\r\n\t * @return Axis breaks.\r\n\t */\r\n\tpublic get axisBreaks(): SortedListTemplate<this[\"_axisBreak\"]> {\r\n\t\tif (!this._axisBreaks) {\r\n\t\t\tthis._axisBreaks = new SortedListTemplate<this[\"_axisBreak\"]>(this.createAxisBreak(), (a, b) => {\r\n\t\t\t\treturn $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n\t\t\t});\r\n\r\n\t\t\tthis._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisBreaks));\r\n\t\t\tthis._disposers.push(this._axisBreaks.template);\r\n\t\t}\r\n\t\treturn this._axisBreaks;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new axis break.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new AxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Series currently associated with this Axis.\r\n\t *\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem): void {\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t/**\r\n\t * Updates Axis based on all Series that might influence it.\r\n\t *\r\n\t * Called by Series after Series data is validated.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisBySeries(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideUnusedDataItems(): void {\r\n\t\t// hide all unused\r\n\t\tlet dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]> = this._dataItemsIterator;\r\n\r\n\t\tdataItemsIterator.createNewItems = false;\r\n\r\n\t\t$iter.each(dataItemsIterator.iterator(), (dataItem) => {\r\n\t\t\tthis.validateDataElement(dataItem); // solves shrinking\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t});\r\n\r\n\t\tdataItemsIterator.clear();\r\n\t\tdataItemsIterator.createNewItems = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series' data item that corresponds to specific position on Axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series    Series\r\n\t * @param position  Position (0-1)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle that corresponds to specific position on axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       ???\r\n\t * @param location  Location\r\n\t * @param stackKey  ???\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point coordinates\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes axis breaks that fall between `min` and `max` (???)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param min  Start value\r\n\t * @param max  End value\r\n\t * @return Spread o\r\n\t */\r\n\tprotected adjustDifference(min: number, max: number): number {\r\n\t\tlet difference: number = max - min;\r\n\t\tif ($type.isNumber(difference)) {\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.eachContinue(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t// breaks are sorted, we don't need go further anymore\r\n\t\t\t\t\t\tif (startValue > max) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (endValue >= min) {\r\n\t\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tlet intersection: IRange = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tdifference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn difference;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if specific value falls within a break.\r\n\t *\r\n\t * Returns [[AxisBreak]] the value falls into.\r\n\t *\r\n\t * @param value  Value to check\r\n\t * @return Axis break\r\n\t */\r\n\tprotected isInBreak(value: number): this[\"_axisBreak\"] {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\treturn $iter.find(this._axisBreaks.iterator(), (axisBreak) =>\r\n\t\t\t\tvalue >= axisBreak.adjustedStartValue &&\r\n\t\t\t\tvalue <= axisBreak.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixAxisBreaks description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected fixAxisBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks: SortedListTemplate<this[\"_axisBreak\"]> = this._axisBreaks;\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t\t// This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n\t\t\t\t// TODO very inefficient\r\n\t\t\t\t$array.each($iter.toArray(axisBreaks.iterator()), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n\t\t\t\t\tlet endValue: number = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\t\tthis._axisBreaks.update(axisBreak);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tlet firstAxisBreak: this[\"_axisBreak\"] = axisBreaks.first;\r\n\t\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t\t// process breaks\r\n\t\t\t\t// TODO does this need to call axisBreaks.update ?\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t// breaks can't overlap\r\n\t\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n\t *\r\n\t * Yes, also for category axis, this helps to avoid jumping of categories\r\n\t * while scrolling and does not do a lot of extra work as we use\r\n\t * protected `_startIndex` and `_endIndex` when working with items.\r\n\t *\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * [startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a formatted label based on position.\r\n\t *\r\n\t * Individual axis types should override this method to generate a label\r\n\t * that is relevant to axis type.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\treturn Math.round(position * 100) + \"%x\";\r\n\t}\r\n\r\n\t/**\r\n\t * A Chart this Axis belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a data item for a Series range.\r\n\t *\r\n\t * @param series  Target Series\r\n\t * @return Range data item\r\n\t */\r\n\tpublic createSeriesRange(series: XYSeries): this[\"_dataItem\"] {\r\n\t\tlet range = this.axisRanges.create();\r\n\t\trange.component = this;\r\n\t\trange.axisFill = this.renderer.axisFills.template.clone();\r\n\t\trange.axisFill.disabled = false;\r\n\t\trange.axisFill.fillOpacity = 0;\r\n\r\n\t\trange.grid = this.renderer.grid.template.clone();\r\n\t\trange.grid.disabled = true;\r\n\r\n\t\trange.tick = this.renderer.ticks.template.clone();\r\n\t\trange.tick.disabled = true;\r\n\r\n\t\trange.label = this.renderer.labels.template.clone();\r\n\t\trange.label.disabled = true;\r\n\r\n\t\trange.addDisposer(new Disposer(() => {\r\n\t\t\tseries.axisRanges.removeValue(range);\r\n\t\t}))\r\n\r\n\t\tseries.axisRanges.push(range);\r\n\t\treturn range;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.copyFrom(source.renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (source.renderer) {\r\n\t\t\t\tthis.renderer = source.renderer.clone();\r\n\t\t\t\tthis._disposers.push(this.renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (source.title) {\r\n\t\t\tif (!this.title) {\r\n\t\t\t\tthis.title = source.title.clone();\r\n\t\t\t\tthis.title.parent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.title.copyFrom(source.title);\r\n\t\t\t}\r\n\t\t\tthis._disposers.push(this.title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t */\r\n\tprotected resetIterators(): void {\r\n\t\tthis._dataItemsIterator.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\r\n\t\t\t\t\t// If `series` is set, we know it's a series range\r\n\t\t\t\t\tif ($type.hasValue(range[\"series\"])) {\r\n\t\t\t\t\t\tif ($type.isString(range[\"series\"])) {\r\n\t\t\t\t\t\t\tif (this.map.hasKey(range[\"series\"])) {\r\n\t\t\t\t\t\t\t\t//range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n\t\t\t\t\t\t\t\tdelete (range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i].config = range;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Ordering function used in JSON setup.\r\n\t *\r\n\t * @param a  Item A\r\n\t * @param b  Item B\r\n\t * @return Order\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// last\r\n\t\telse if (a == \"title\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"title\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// first\r\n\t\telse if (a == \"component\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"component\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - Full first cell is shown.\r\n\t * * 0.5 - Half of first cell is shown.\r\n\t * * 1 - None of the first cell is visible. (you probably don't want that)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.gridContainer.disabled = value;\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Label]] element which serves as a title to the axis.\r\n\t *\r\n\t * When axis is created it aleready has an element, so you can just modify\r\n\t * it.\r\n\t *\r\n\t * Or you can replace it with your own instance of `Label`.\r\n\t * \r\n\t * @param  value  Title label\r\n\t */\r\n\tpublic set title(value: Label) {\r\n\t\tif (this._title && this._title != value) {\r\n\t\t\tthis._title.dispose();\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tvalue.parent = this;\r\n\t\t\tvalue.shouldClone = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title label\r\n\t */\r\n\tpublic get title(): Label {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the axis be zoomed with scrollbar/cursor?\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.28\r\n\t * @param  value  Zoomable?\r\n\t */\r\n\tpublic set zoomable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"zoomable\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoomable?\r\n\t */\r\n\tpublic get zoomable(): boolean {\r\n\t\treturn this.getPropertyValue(\"zoomable\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Axis && target.tooltip) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.cursorTooltipEnabled = false;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Axis break module\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { IWavedShape } from \"../../core/defs/IWavedShape\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t */\r\n\tbreakSize?: number;\r\n\r\n\t/**\r\n\t * Starting value.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * End value.\r\n\t */\r\n\tendValue?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines [[AxisBreak]] adapters.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBreakAdapters extends IContainerAdapters, IAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBreak extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: Axis;\r\n\r\n\t/**\r\n\t * Reference to parent Axis.\r\n\t */\r\n\tprotected _axis = new MutableValueDisposer<this[\"_axisType\"]>();\r\n\r\n\t/**\r\n\t * A reference to starting line element.\r\n\t */\r\n\tprotected _startLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to ending line element.\r\n\t */\r\n\tprotected _endLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to fill shape.\r\n\t */\r\n\tprotected _fillShape: IWavedShape;\r\n\r\n\t/**\r\n\t * A list of axis data items which fall within this break.\r\n\t */\r\n\tpublic dataItems: List<AxisDataItem> = new List<AxisDataItem>();\r\n\r\n\t/**\r\n\t * Adjusted start value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedStartValue: number;\r\n\r\n\t/**\r\n\t * Adjusted end value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedEndValue: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisBreak\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.breakSize = 0.01;\r\n\t\tthis.marginLeft = -5;\r\n\t\tthis.marginRight = -5;\r\n\t\tthis.marginTop = -5;\r\n\t\tthis.marginBottom = -5;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create elements\r\n\t\t// (these won't be used actually, just for setting properties)\r\n\t\tlet fillShape = new WavedLine();\r\n\t\tfillShape.fill = interfaceColors.getFor(\"background\");\r\n\t\tfillShape.stroke = color();\r\n\t\tfillShape.fillOpacity = 0.9;\r\n\t\tfillShape.zIndex = 0;\r\n\t\tthis._fillShape = fillShape;\r\n\r\n\t\tlet startLine = new WavedLine();\r\n\t\tstartLine.fill = color();\r\n\t\tstartLine.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tstartLine.strokeOpacity = 0.3;\r\n\t\tstartLine.zIndex = 1;\r\n\t\tthis._startLine = startLine;\r\n\r\n\t\tlet endLine = new WavedLine();\r\n\t\tendLine.fill = color();\r\n\t\tendLine.stroke = color(\"#000000\");// interfaceColors.getFor(\"grid\");\r\n\t\tendLine.strokeOpacity = 0.3;\r\n\t\tendLine.zIndex = 2;\r\n\t\tthis._endLine = endLine;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the starting line of the break.\r\n\t *\r\n\t * @param sprite  Element\r\n\t */\r\n\tpublic set startLine(sprite: IWavedShape) {\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\t\tthis._startLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get startLine(): IWavedShape {\r\n\t\treturn this._startLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the end line of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set endLine(sprite: IWavedShape) {\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t\tthis._endLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get endLine(): IWavedShape {\r\n\t\treturn this._endLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for fill of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set fillShape(sprite: IWavedShape) {\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tthis._fillShape = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get fillShape(): IWavedShape {\r\n\t\treturn this._fillShape;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a break element (e.g. lines, fill) to the break, which is\r\n\t * [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite Element to add\r\n\t */\r\n\tpublic addBreakSprite(sprite: IWavedShape) {\r\n\t\tsprite.parent = this;\r\n\t\tsprite.isMeasured = false;\r\n\t\tthis._disposers.push(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis this Break is associated with.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: this[\"_axisType\"]) {\r\n\t\tif (this._axis.get() !== axis) {\r\n\t\t\tthis._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n\t\t\taxis.renderer.createBreakSprites(this);\r\n\r\n\t\t\t// this can't go to copyFrom, as axis is set later\r\n\t\t\tlet breakTemplate: AxisBreak = axis.axisBreaks.template;\r\n\r\n\t\t\tthis.startLine.copyFrom(breakTemplate.startLine);\r\n\t\t\tthis.endLine.copyFrom(breakTemplate.endLine);\r\n\t\t\tthis.fillShape.copyFrom(breakTemplate.fillShape);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): this[\"_axisType\"] {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @param value  Relative axis break\r\n\t */\r\n\tpublic set breakSize(value: number) {\r\n\t\tif (this.setPropertyValue(\"breakSize\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative axis break\r\n\t */\r\n\tpublic get breakSize(): number {\r\n\t\treturn this.getPropertyValue(\"breakSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's start.\r\n\t *\r\n\t * @return Start point\r\n\t */\r\n\tpublic get startPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.startPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's end.\r\n\t *\r\n\t * @return End point\r\n\t */\r\n\tpublic get endPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.endPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break starts.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break ends.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\t\trenderer.updateBreakElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A starting value for the break.\r\n\t *\r\n\t * @param value  Starting value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Starting value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\treturn this.getPropertyValue(\"startValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An end value for the break.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.getPropertyValue(\"endValue\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n","/**\r\n * Axis Bullet module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerAdapters, IContainerEvents, IContainerProperties } from \"../../core/Container\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw inside plot area (`true`) or outside it (`false`).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapter for [[AxisBullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBulletAdapters extends IContainerAdapters, IAxisBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a positioned bullet (element) on an Axis.\r\n *\r\n * ```TypeScript\r\n * let range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * let flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JavaScript\r\n * var range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * var flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"xAxes\": [{\r\n *     \"type\": \"DateAxis\",\r\n *     // ...\r\n *     \"axisRanges\": [{\r\n *       \"date\": new Date(2018, 0, 5),\r\n *       \"bullet: {\r\n *         \"type\": \"FlagBullet\",\r\n *         \"label\": {\r\n *           \"text\": \"Hello\"\r\n *         }\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.9\r\n * @see {@link IAxisBulletEvents} for a list of available events\r\n * @see {@link IAxisBulletAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBulletEvents;\r\n\r\n\t/**\r\n\t * Data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisBullet\";\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * let bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * var bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"endDate\": new Date(2018, 0, 6),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"AxisBullet\",\r\n\t *         \"location\": 1,\r\n\t *         \"children\": [{\r\n\t *           \"type\": \"FlagBullet\",\r\n\t *           \"label\": {\r\n\t *             \"text\": \"Hello\"\r\n\t *           }\r\n\t *         }]\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0.5\r\n\t * @param  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBullet\"] = AxisBullet;","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Axis, AxisItemLocation, AxisDataItem } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFill]].\r\n */\r\nexport interface IAxisFillProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Start position. (0-1)\r\n\t */\r\n\tstartPosition?: number;\r\n\r\n\t/**\r\n\t * End position. (0-1)\r\n\t */\r\n\tendPosition?: number;\r\n\r\n\t/**\r\n\t * Location within the axis.\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFill]].\r\n */\r\nexport interface IAxisFillEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFill]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillAdapters extends ISpriteAdapters, IAxisFillProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisFill extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillEvents;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * [_dataItem description]\r\n\t *\r\n\t * Not sure what this is doing here?\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper();\r\n\t\tthis.axis = axis;\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.className = \"AxisFill\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.location = 0;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.__disabled || this.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n\t\t\tthis.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t\tif (this.isMeasured) {\r\n\t\t\t\tthis.measure();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An actual starting position of the fill.\r\n\t *\r\n\t * @param value  Starting position\r\n\t */\r\n\tpublic set startPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"startPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn this.getPropertyValue(\"startPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * An actual end position of the fill.\r\n\t *\r\n\t * @param value End position\r\n\t */\r\n\tpublic set endPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"endPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn this.getPropertyValue(\"endPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the fill. (0-1)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\t//this.nonScaling = true; // not good for perf\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Chart } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t */\r\n\tminGridDistance?: number;\r\n\r\n\t/**\r\n\t * Draw axis labels inside axis.\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Draw axis on opposite side of the plot area?\r\n\t */\r\n\topposite?: boolean;\r\n\r\n\t/**\r\n\t * Inverse the order of the scale for the Axis.\r\n\t */\r\n\tinversed?: boolean;\r\n\r\n\t/**\r\n\t * Location of the cell start. (0-1)\r\n\t */\r\n\tcellStartLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the cell end. (0-1)\r\n\t */\r\n\tcellEndLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the axis tooltip. (0-1)\r\n\t */\r\n\ttooltipLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the tooltip relative secondary axis cell. (0-1)\r\n\t */\r\n\ttooltipLocation2?: number;\t\r\n\r\n\t/**\r\n\t * Resize axis tooltip to the full width of the cell.\r\n\t */\r\n\tfullWidthTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Labels with position less than this will be hidden.\r\n\t */\r\n\tminLabelPosition?: number;\r\n\r\n\t/**\r\n\t * Labels with position bigger than this will be hidden.\r\n\t */\r\n\tmaxLabelPosition?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererAdapters extends IContainerAdapters, IAxisRendererProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRenderer extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererEvents;\r\n\r\n\t/**\r\n\t * A related Axis.\r\n\t */\r\n\tprotected _axis: Axis;\r\n\r\n\t/**\r\n\t * A line object of the related axis.\r\n\t */\r\n\tpublic line: AxisLine;\r\n\r\n\t/**\r\n\t * Base grid element. ([[Sprite]])\r\n\t *\r\n\t * For value axes base grid is at value 0.\r\n\t *\r\n\t * For category/date axis it is added at the end of the last item/date.\r\n\t *\r\n\t */\r\n\tpublic baseGrid: Sprite;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[Grid]] elements.\r\n\t */\r\n\tpublic gridContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the axis bullets.\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[AxisBreak]] elements.\r\n\t */\r\n\tpublic breakContainer: Container;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<Chart>();\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: Grid;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFill;\r\n\r\n\t/**\r\n\t * Defines type for tick elements.\r\n\t */\r\n\tpublic _tickType: AxisTick;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabel;\r\n\r\n\t/**\r\n\t * A list of grid elements.\r\n\t */\r\n\tprotected _grid: ListTemplate<this[\"_gridType\"]>;\r\n\r\n\t/**\r\n\t * A list of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tickType\"]>;\r\n\r\n\t/**\r\n\t * A list of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_labelType\"]>;\r\n\r\n\t/**\r\n\t * A list of fill elements.\r\n\t */\r\n\tprotected _axisFills: ListTemplate<this[\"_fillType\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRenderer\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.minGridDistance = 50;\r\n\t\tthis.inside = false;\r\n\t\tthis.inversed = false;\r\n\t\tthis.tooltipLocation = 0.5;\r\n\t\tthis.fullWidthTooltip = false;\r\n\t\tthis.cellStartLocation = 0;\r\n\t\tthis.cellEndLocation = 1;\r\n\r\n\t\tthis.minLabelPosition = 0;\r\n\t\tthis.maxLabelPosition = 1;\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tlet gridContainer = this.createChild(Container);\r\n\t\tgridContainer.shouldClone = false;\r\n\t\tgridContainer.layout = \"none\";\r\n\t\t//\tgridContainer.isMeasured = false;\r\n\t\tgridContainer.virtualParent = this;\r\n\t\tgridContainer.width = percent(100);\r\n\t\tgridContainer.height = percent(100);\r\n\r\n\t\tthis.gridContainer = gridContainer;\r\n\t\t// not good without this\r\n\t\tgridContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.invalidateAxisItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tlet breakContainer = this.createChild(Container);\r\n\t\tbreakContainer.shouldClone = false;\r\n\t\tbreakContainer.isMeasured = false;\r\n\t\tbreakContainer.layout = \"none\";\r\n\t\tbreakContainer.width = percent(100);\r\n\t\tbreakContainer.height = percent(100);\r\n\t\tthis.breakContainer = breakContainer;\r\n\r\n\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.line = this.createChild(AxisLine);\r\n\t\tthis.line.shouldClone = false;\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tlet baseGrid: Grid = this.createChild(Grid);\r\n\t\tbaseGrid.shouldClone = false;\r\n\t\tthis.baseGrid = baseGrid;\r\n\r\n\t\t// Make elements disposable\r\n\t\tlet disposers = this._disposers;\r\n\t\tdisposers.push(baseGrid);\r\n\t\tdisposers.push(this.line);\r\n\t\tdisposers.push(gridContainer);\r\n\t\tdisposers.push(breakContainer);\r\n\t\tdisposers.push(bulletsContainer);\r\n\t\tdisposers.push(this._chart);\r\n\r\n\t\tthis.ticks.template.disabled = true;\r\n\t\tthis.axisFills.template.disabled = true;\r\n\t\tthis.axisFills.template.interactionsEnabled = false;\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @param axis Axis\r\n\t */\r\n\tset axis(axis: Axis) {\r\n\t\tthis.setAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @return axis Axis\r\n\t */\r\n\tget axis(): Axis {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tthis._axis = axis;\r\n\t\tthis.baseGrid.parent = axis;\r\n\t\tthis.line.parent = axis;\r\n\t\tthis.gridContainer.bind(\"opacity\", axis);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tthis.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n\t\tthis.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n\t\tthis.labels.template.inside = this.inside;\r\n\t\tthis.ticks.template.inside = this.inside;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-positions an element to new coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item   A target element\r\n\t * @param point  New coordinates\r\n\t */\r\n\tpublic positionItem(item: Sprite, point: IPoint): void {\r\n\t\tif (item) {\r\n\t\t\titem.moveTo(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?:number): IPoint {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review / units)\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate;\r\n\t}\r\n\r\n\tpublic updateGridContainer() {\r\n\r\n\t}\r\n\r\n\r\n\tprotected getHeight(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelHeight;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelHeight || 0;\r\n\t}\r\n\r\n\tprotected getWidth(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelWidth;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelWidth || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis data items, effectively causing them re-evaluated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic invalidateAxisItems(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\taxis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fill         Fill element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateFillElement(fill: AxisFill, position: number, endPosition: number): void {\r\n\t\tfill.startPosition = position;\r\n\t\tfill.endPosition = endPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tthis.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n\t\tthis.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n\t\tthis.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n\t\tthis.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * Use it to control density of the grid/labels on the axis.element.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n\t * @param value  Min distance (px)\r\n\t */\r\n\tpublic set minGridDistance(value: number) {\r\n\t\tif (this.setPropertyValue(\"minGridDistance\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min distance (px)\r\n\t */\r\n\tpublic get minGridDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minGridDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of an element, based on its current position and\r\n\t * min/max position settings.\r\n\t *\r\n\t * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite       An element to toggle\r\n\t * @param position     Elements current position\r\n\t * @param minPosition  Min position setting\r\n\t * @param maxPosition  Max position setting\r\n\t */\r\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tlet dataItem = sprite.dataItem;\r\n\t\tif(dataItem && dataItem instanceof AxisDataItem){\r\n\t\t\tif($type.isNumber(dataItem.minPosition)){\r\n\t\t\t\tminPosition = dataItem.minPosition;\r\n\t\t\t}\r\n\t\t\tif($type.isNumber(dataItem.maxPosition)){\r\n\t\t\t\tmaxPosition = dataItem.maxPosition;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tlet updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n\t\tlet updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n\r\n\t\tif (!sprite.disabled) {\r\n\t\t\tif (position < updatedStart || position > updatedEnd) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Fill elements.\r\n\t *\r\n\t * Those are fill elements that cover the space between every second set\r\n\t * of grid lines, and can be configured to create striped charts.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable them, set\r\n\t * template to true.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"axisFills\": {\r\n\t *         \"disabled\": false\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n\t * @return Fill elements\r\n\t */\r\n\tpublic get axisFills(): ListTemplate<this[\"_fillType\"]> {\r\n\t\tif (!this._axisFills) {\r\n\t\t\tlet fill = this.createFill(this.axis);\r\n\t\t\tthis._axisFills = new ListTemplate<AxisFill>(fill);\r\n\t\t\tfill.applyOnClones = true;\r\n\t\t\tfill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisFills));\r\n\t\t\tthis._disposers.push(this._axisFills.template);\r\n\t\t}\r\n\t\treturn this._axisFills;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFill(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Grid elements.\r\n\t *\r\n\t * @return Grid elements\r\n\t */\r\n\tpublic get grid(): ListTemplate<this[\"_gridType\"]> {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet grid = this.createGrid();\r\n\t\t\tthis._grid = new ListTemplate<Grid>(grid);\r\n\t\t\tgrid.applyOnClones = true;\r\n\t\t\tgrid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._grid));\r\n\t\t\tthis._disposers.push(this._grid.template);\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new Grid();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Tick elements.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable ticks, you'll\r\n\t * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"ticks\": {\r\n\t *         \"disabled\": false,\r\n\t *         \"strokeOpacity\": 0.5\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Tick elements\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tickType\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick: AxisTick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\ttick.isMeasured = false;\r\n\t\t\ttick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._ticks = new ListTemplate<AxisTick>(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t\tthis._disposers.push(this._ticks.template);\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new tick element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Tick element\r\n\t */\r\n\tpublic createTick(): this[\"_tickType\"] {\r\n\t\treturn new AxisTick();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Label elements.\r\n\t *\r\n\t * @return Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_labelType\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tthis._labels = new ListTemplate<AxisLabel>(label);\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tlabel.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t\tthis._disposers.push(this._labels.template);\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabel();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n\t *\r\n\t * Does not work with all renderers, like AxisRendererRadial.\r\n\t *\r\n\t * @param value  Labels inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\r\n\t\tif (this.setPropertyValue(\"inside\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.height = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis should be drawn on the opposite side of the plot\r\n\t * area than it would normally be drawn based on chart's settings.\r\n\t *\r\n\t * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n\t * [[AxisRenderer Circular].\r\n\t *\r\n\t * @param value  Draw axis on opposite side?\r\n\t */\r\n\tpublic set opposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"opposite\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw axis on opposite side?\r\n\t */\r\n\tpublic get opposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"opposite\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n\t * (between two grid lines)\r\n\t *\r\n\t * NOTE: this setting is ignored on circular axis types.\r\n\t *\r\n\t * @param value Full width tooltip?\r\n\t */\r\n\tpublic set fullWidthTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width tooltip?\r\n\t */\r\n\tpublic get fullWidthTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within secondary axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation2(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation2\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation2(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation2\");\r\n\t}\t\r\n\r\n\t/**\r\n\t * Location for the cell start.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellStartLocation` identifies where, within available space, the actual\r\n\t * cell starts.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell start (0-1)\r\n\t */\r\n\tpublic set cellStartLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell start (0-1)\r\n\t */\r\n\tpublic get cellStartLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellStartLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell end.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellEndLocation` identifies where, within available space, the actual\r\n\t * cell ends.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell end (0-1)\r\n\t */\r\n\tpublic set cellEndLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell end (0-1)\r\n\t */\r\n\tpublic get cellEndLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellEndLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the scale of the axis should be flipped.\r\n\t *\r\n\t * @param value Flip axis?\r\n\t */\r\n\tpublic set inversed(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inversed\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Flip axis?\r\n\t */\r\n\tpublic get inversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"inversed\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the start of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near start of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Min label position (0-1)\r\n\t */\r\n\tpublic set minLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"minLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min label position (0-1)\r\n\t */\r\n\tpublic get minLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"minLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the and of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near end of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Max label position (0-1)\r\n\t */\r\n\tpublic set maxLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max label position (0-1)\r\n\t */\r\n\tpublic get maxLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"maxLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all settings and related items from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param source  Source object\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.grid.template.copyFrom(source.grid.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.axisFills.template.copyFrom(source.axisFills.template);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.baseGrid.copyFrom(source.baseGrid);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { VerticalCenter } from \"../../core/defs/VerticalCenter\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererXAdapters extends IAxisRendererAdapters, IAxisRendererXProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererXProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererXAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererXEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisRendererX\";\r\n\r\n\t\tthis.minGridDistance = 120;\r\n\r\n\t\tthis.opposite = false;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.width = percent(100);\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"vertical\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.x = axis.pixelX;\r\n\t\t\tgridContainer.width = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\t// can not do this in init, as axis is set later\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tif (!(axis.width instanceof Percent)) {\r\n\t\t\t\taxis.width = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\t// @todo Is thi sneeded?\r\n\t\t\t$utils.used(this.line);\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.rotation = 0;\r\n\t\t\ttitle.align = \"center\";\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t\tthis.toBack();\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet bigNum: number = 1000;\r\n\t\t\tlet bbx: number = this.line.pixelX;\r\n\t\t\tlet bby: number = this.line.pixelY;\r\n\t\t\tlet bbw: number = this.axisLength;\r\n\r\n\t\t\tlet bbh: number = bigNum;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\telse {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet deltaY = 0;\r\n\t\tlet verticalCenter: VerticalCenter;\r\n\t\tlet maxHeight = this.gridContainer.maxHeight;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\tif (label.valign == \"bottom\") {\r\n\t\t\t\t\tdeltaY = maxHeight;\r\n\t\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y = deltaY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\tif (label.valign == \"top\") {\r\n\t\t\t\t\tdeltaY = -maxHeight;\r\n\t\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = -maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y += deltaY;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.verticalCenter = verticalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.x, point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet x1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet x2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet w: number = Math.abs(x2 - x1);\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet x: number = Math.min(x1, x2);\r\n\t\tlet y: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet y1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet y2: number = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n\r\n\t\tstartPoint.x = $math.fitToRange(startPoint.x, -1, this.axisLength + 1);\r\n\t\tendPoint.x = $math.fitToRange(endPoint.x, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tstartLine.y = y1;\r\n\t\tstartLine.width = 0;\r\n\t\tstartLine.height = y2;\r\n\r\n\t\tendLine.y = y1;\r\n\t\tendLine.width = 0;\r\n\t\tendLine.height = y2;\r\n\r\n\t\tfillShape.height = y2;\r\n\t\tfillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n\t\tfillShape.y = y1;\r\n\t\tfillShape.x = startPoint.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet w: number = this.axisLength;\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tlet x: number = axis.basePoint.x;\r\n\t\tif (x < -0.2 || x > w + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(false, true, false, true);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet inversedPosition = value;\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet x = axis.pixelX;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tx = $utils.spritePointToSprite({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif(relativePositionSprite){\r\n\t\t\t\tlet relativeX = x / relativePositionSprite.innerWidth;\r\n\t\t\t\tlet relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;\r\n\r\n\t\t\t\treturn (inversedPosition - relativeX) / relativeWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { HorizontalCenter } from \"../../core/defs/HorizontalCenter\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererYAdapters extends IAxisRendererAdapters, IAxisRendererYProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererYProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererYAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererYEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY\";\r\n\t\tthis.minGridDistance = 40;\r\n\t\tthis.opposite = false;\r\n\t\tthis.height = percent(100);\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"horizontal\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.y = axis.pixelY;\r\n\t\t\tgridContainer.height = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet inversedPosition = 1 - value;\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet y = axis.pixelY;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\ty = $utils.spritePointToSprite({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tlet relativeY = y / relativePositionSprite.innerHeight;\r\n\t\t\t\tlet relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;\r\n\r\n\t\t\t\treturn 1 - (inversedPosition - relativeY) / relativeHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.valign = \"middle\";\r\n\r\n\t\t\tif (!(axis.height instanceof Percent)) {\r\n\t\t\t\taxis.height = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\ttitle.rotation = 90;\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.rotation = -90;\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 2000;\r\n\t\t\tlet bbx: number = 0;\r\n\t\t\tlet bby: number = 0;\r\n\t\t\tlet bbw: number = bigNum;\r\n\t\t\tlet bbh: number = this.axisLength;\r\n\r\n\t\t\t// right\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\telse {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n\t}\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.y, point.x);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = (1 - axis.start) - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + (1 - axis.end);\r\n\t\t}\r\n\t\treturn $math.round(position, 5);\r\n\t}\t\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet y1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet y2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet h: number = Math.abs(y2 - y1);\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet y: number = Math.min(y1, y2);\r\n\t\tlet x: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//\tpoint.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\ttry {\r\n\t\t\t$utils.used(this.axis.title.measuredWidth);\r\n\t\t} catch {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tif (!this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet h: number = this.axisLength;\r\n\t\tlet y: number = axis.basePoint.y;\r\n\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tif (y < - 0.2 || y > h + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet horizontalCenter: HorizontalCenter;\r\n\t\tlet deltaX = 0;\r\n\t\tlet maxWidth = this.gridContainer.maxWidth;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\tif (label.align == \"left\") {\r\n\t\t\t\t\tdeltaX = -maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = -maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = 0 + deltaX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\tif (label.align == \"right\") {\r\n\t\t\t\t\tdeltaX = maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = this.measuredWidth + deltaX;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.horizontalCenter = horizontalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet x1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet x2: number = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n\r\n\t\tstartPoint.y = $math.fitToRange(startPoint.y, -1, this.axisLength + 1);\r\n\t\tendPoint.y = $math.fitToRange(endPoint.y, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet w = Math.abs(x2 - x1);\r\n\r\n\t\tstartLine.x = x1;\r\n\t\tstartLine.height = 0;\r\n\t\tstartLine.width = w;\r\n\r\n\t\tendLine.x = x1;\r\n\t\tendLine.height = 0;\r\n\t\tendLine.width = w;\r\n\r\n\t\tfillShape.width = w;\r\n\t\tfillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n\t\tfillShape.x = x1;\r\n\t\tfillShape.y = endPoint.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(true, false, true, false);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (!axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the tick on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referece to Axis element this tick is placed on.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if tick should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally tick goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteEvents, ISpriteAdapters } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grid]].\r\n */\r\nexport interface IGridProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Location of the grid item within cell. (0-1)\r\n\t */\r\n\tlocation?: AxisItemLocation;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grid]].\r\n */\r\nexport interface IGridEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters  for [[Grid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridAdapters extends ISpriteAdapters, IGridProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nexport class Grid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridEvents;\r\n\r\n\t/**\r\n\t * An axis data item that corresponds to the this grid element.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Grid\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.fill = color(); // \"none\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to place grid line on.\r\n\t *\r\n\t * * 0 - start\r\n\t * * 0.5 - middle\r\n\t * * 1 - end\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable grid on smaller charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Grid) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Value Axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { IDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ValueAxisDataItem extends AxisDataItem {\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ValueAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.endValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A data point's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values[\"value\"].value;\r\n\t}\r\n\r\n\t/**\r\n\t * Data point's numeric end value.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tthis.setValue(\"endValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.values[\"endValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n */\r\nexport interface IMinMaxStep {\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisDataFields extends IAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisProperties extends IAxisProperties {\r\n\tstrictMinMax?: boolean;\r\n\tlogarithmic?: boolean;\r\n\tmaxPrecision?: number;\r\n\tadjustLabelPrecision?: boolean;\r\n\textraTooltipPrecision?: number;\r\n\textraMin?: number;\r\n\textraMax?: number;\r\n\tkeepSelection?: boolean;\r\n\tincludeRangesInMinMax?: boolean;\r\n\tsyncWithAxis?: ValueAxis;\r\n\ttreatZeroAs?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisEvents extends IAxisEvents {\r\n\r\n\t/**\r\n\t * Invoked when selection/zoom on axis occurs and start/end coordinates\r\n\t * change.\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start/end coordinates of the axis change.\r\n\t */\r\n\textremeschanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[ValueAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisAdapters extends IAxisAdapters, IValueAxisProperties {\r\n\t/**\r\n\t * Applied to the base value of the axis\r\n\t */\r\n\tbaseValue: number,\r\n\r\n\t/**\r\n\t * Applied to the min value of the axis\r\n\t */\r\n\tmin: number\r\n\r\n\t/**\r\n\t * Applied to the max value of the axis\r\n\t */\r\n\tmax: number\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IValueAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: ValueAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: ValueAxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisEvents;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: XYChart;\r\n\r\n\t/**\r\n\t * A list of Series that are using this Axis.\r\n\t */\r\n\tpublic series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * Minimum value for the axis scale.\r\n\t */\r\n\tprotected _min: number;\r\n\r\n\t/**\r\n\t * Maximum value for the axis scale.\r\n\t */\r\n\tprotected _max: number;\r\n\r\n\t/**\r\n\t * User-defined min value for axis.\r\n\t */\r\n\tprotected _minDefined: number;\r\n\r\n\t/**\r\n\t * User-defined max value for axis.\r\n\t */\r\n\tprotected _maxDefined: number;\r\n\r\n\t/**\r\n\t * [_minAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minAdjusted: number;\r\n\r\n\t/**\r\n\t * [_maxAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxAdjusted: number;\r\n\r\n\t/**\r\n\t * Min real value. (lowest value of all data points)\r\n\t */\r\n\tprotected _minReal: number;\r\n\r\n\t/**\r\n\t * Max real value. (highest value of all data points)\r\n\t */\r\n\tprotected _maxReal: number;\r\n\r\n\t/**\r\n\t * Min value within current zoom.\r\n\t */\r\n\tprotected _minZoomed: number;\r\n\r\n\t/**\r\n\t * Max value within current zoom.\r\n\t */\r\n\tprotected _maxZoomed: number\r\n\r\n\t/**\r\n\t * [_step description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _step: number;\r\n\r\n\t/**\r\n\t * [_stepDecimalPlaces description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _stepDecimalPlaces: number = 0;\r\n\tprotected _prevStepDecimalPlaces: number = 0;\r\n\tprotected _adjustLabelPrecision: boolean = true;\r\n\r\n\t/**\r\n\t * [_difference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _difference: number;\r\n\r\n\t/**\r\n\t * Base value for the axis.\r\n\t */\r\n\tprotected _baseValue: number = 0;\r\n\r\n\t/**\r\n\t * [_previousValue description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousValue: number;\r\n\r\n\t/**\r\n\t * [_previousPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousPoint: IPoint;\r\n\r\n\t/**\r\n\t * Adjusted start in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedStart: number = 0;\r\n\r\n\t/**\r\n\t * Adjusted end in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedEnd: number = 1;\r\n\r\n\tprotected _finalMin: number;\r\n\tprotected _finalMax: number;\r\n\r\n\tprotected _extremesChanged: boolean = false;\r\n\r\n\tprotected _deltaMinMax: number = 1;\r\n\r\n\tprotected _dsc: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem as parameter.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tif (!dataItem.axisFill.disabled) {\r\n\t\t\t// rounding in left to solve floating point number\r\n\t\t\tif ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n\t\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, we\r\n\t * don't do it by default.\r\n\t *\r\n\t * In case you use `totalPercent` or `total` in your charts, this must be set\r\n\t * to `true`.\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n\t */\r\n\tpublic calculateTotals: boolean = false;\r\n\r\n\r\n\tprotected _minMaxAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"value\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000);\r\n\t\tthis.setPropertyValue(\"extraMin\", 0);\r\n\t\tthis.setPropertyValue(\"extraMax\", 0);\r\n\t\tthis.setPropertyValue(\"strictMinMax\", false);\r\n\t\tthis.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n\t\tthis.setPropertyValue(\"adjustLabelPrecision\", true);\r\n\t\tthis.setPropertyValue(\"extraTooltipPrecision\", 0);\r\n\t\tthis.keepSelection = false;\r\n\t\tthis.includeRangesInMinMax = false;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ValueAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new ValueAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\t\tthis.clearCache();\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t\tthis._end = 1;\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._start != 0) {\r\n\t\t\t\tthis.dispatchImmediately(\"startchanged\");\r\n\t\t\t}\r\n\t\t\tif (this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"endchanged\");\r\n\r\n\t\t\t}\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._maxZoomed = this._maxDefined;\r\n\t\tthis._minZoomed = this._minDefined;\r\n\r\n\t\tthis._maxAdjusted = this._maxDefined;\r\n\t\tthis._minAdjusted = this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data items of the related Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\t\t// @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n\t\tif (this.calculateTotals) {\r\n\t\t\tlet series: XYSeries = this.series.getIndex(0);\r\n\t\t\tlet startIndex: number = series.startIndex;\r\n\r\n\t\t\tif (series.dataItems.length > 0) {\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tstartIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tlet endIndex: number = series.endIndex;\r\n\t\t\t\tif (endIndex < series.dataItems.length) {\r\n\t\t\t\t\tendIndex++;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\tfor (let i: number = startIndex; i < endIndex; ++i) {\r\n\t\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\t\tconst total: { [index: string]: number } = {};\r\n\t\t\t\t\tconst sum: { [index: string]: number } = {};\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(total[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] = Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] += Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] = value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] += value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, total[key], \"total\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (!$type.isNumber(this._minAdjusted)) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = null;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tthis.calculateZoom();\r\n\r\n\t\tthis.validateAxisElements();\r\n\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.validateBreaks();\r\n\r\n\t\tthis.hideUnusedDataItems();\r\n\r\n\t\tthis.renderer.invalidateLayout();\r\n\t\t// hide too close\r\n\t\t//this.hideTooCloseDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tif ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet min: number = this.positionToValue(this.start);\r\n\t\t\tlet max: number = this.positionToValue(this.end);\r\n\r\n\t\t\tlet differece: number = this.adjustDifference(min, max);\r\n\t\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\r\n\t\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n\t\t\tthis._stepDecimalPlaces = stepDecimalPlaces;\r\n\r\n\t\t\tmin = $math.round(min, stepDecimalPlaces);\r\n\t\t\tmax = $math.round(max, stepDecimalPlaces);\r\n\r\n\t\t\tminMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\t\t\tlet step = minMaxStep.step;\r\n\r\n\t\t\tif (this.syncWithAxis) {\r\n\t\t\t\tlet calculated = this.getCache(min + \"-\" + max);\r\n\t\t\t\tif ($type.isNumber(calculated)) {\r\n\t\t\t\t\tstep = calculated;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = minMaxStep.min;\r\n\t\t\t\tmax = minMaxStep.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._minZoomed != min || this._maxZoomed != max || this._step != step || this._dsc) {\r\n\t\t\t\tthis._dsc = false;\r\n\t\t\t\tthis._minZoomed = min;\r\n\t\t\t\tthis._maxZoomed = max;\r\n\r\n\t\t\t\tthis._step = step;\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fixSmallStep(step: number): number {\r\n\t\tif (1 + step == 1) {\r\n\t\t\tstep *= 2;\r\n\t\t\treturn this.fixSmallStep(step);\r\n\t\t}\r\n\t\treturn step;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\t// first regular items\r\n\t\t\tlet value: number = this.minZoomed - this._step * 2;\r\n\r\n\t\t\tif (!this.logarithmic) {\r\n\t\t\t\tvalue = Math.floor(value / this._step) * this._step;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = Math.floor(this.minZoomed / this._step) * this._step;\r\n\t\t\t\t\tif (value == 0) {\r\n\t\t\t\t\t\tvalue = this.minZoomed;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet maxZoomed = this._maxZoomed + this._step;\r\n\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\r\n\t\t\tif (this._step == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._step = this.fixSmallStep(this._step);\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\tconst precisionChanged = this._prevStepDecimalPlaces != this._stepDecimalPlaces;\r\n\t\t\tthis._prevStepDecimalPlaces = this._stepDecimalPlaces;\r\n\r\n\t\t\twhile (value <= maxZoomed) {\r\n\t\t\t\tlet axisBreak: ValueAxisBreak = <ValueAxisBreak>this.isInBreak(value);\r\n\r\n\t\t\t\tif (!axisBreak) {\r\n\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === value);\r\n\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\tdataItem.axisBreak = undefined;\r\n\r\n\t\t\t\t\tif (dataItem.value != value || precisionChanged) {\r\n\t\t\t\t\t\tdataItem.value = value;\r\n\t\t\t\t\t\tdataItem.text = this.formatLabel(value);\r\n\r\n\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (dataItem.value >= this.min && dataItem.value <= this.max) {\r\n\t\t\t\t\t\t\tif (dataItem.label) {\r\n\t\t\t\t\t\t\t\tif ((this.axisLetter == \"Y\" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == \"X\" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tlet oldValue = value;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));\r\n\r\n\t\t\t\tif (stepPower < 1) {\r\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n\t\t\t\t\tdecCount = Math.min(13, decCount);\r\n\t\t\t\t\t// round value to avoid floating point issues\r\n\t\t\t\t\tvalue = $math.round(value, decCount);\r\n\t\t\t\t\t// ceil causes problems: https://codepen.io/team/amcharts/pen/XWMjZwy?editors=1010\r\n\t\t\t\t\tif (oldValue == value) {\r\n\t\t\t\t\t\tvalue = maxZoomed;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// breaks later\r\n\t\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance) {\r\n\t\t\t\t\t\t\tlet breakValue: number = axisBreak.adjustedMin;\r\n\r\n\t\t\t\t\t\t\twhile (breakValue <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tif (breakValue >= axisBreak.adjustedStartValue && breakValue <= axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === breakValue);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value != breakValue) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.value = breakValue;\r\n\t\t\t\t\t\t\t\t\t\tdataItem.text = this.formatLabel(breakValue);\r\n\t\t\t\t\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreakValue += axisBreak.adjustedStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tlet value: number = dataItem.value;\r\n\t\tlet endValue: number = dataItem.endValue;\r\n\r\n\t\tlet position: number = this.valueToPosition(value);\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet endPosition: number = position;\r\n\t\tlet fillEndPosition: number = this.valueToPosition(value + this._step);\r\n\r\n\t\tif ($type.isNumber(endValue)) {\r\n\t\t\tendPosition = this.valueToPosition(endValue);\r\n\t\t\tfillEndPosition = endPosition;\r\n\t\t}\r\n\r\n\t\t// this point is needed to calculate distance to satisfy minGridDistance\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, position, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[NumberFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\tif (this.adjustLabelPrecision && value != 0) {\r\n\t\t\treturn this.numberFormatter.format(value, undefined, this._stepDecimalPlaces);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.numberFormatter.format(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\tlet baseValue: number = this.baseValue;\r\n\t\tlet position: number = this.valueToPosition(baseValue);\r\n\t\tlet basePoint: IPoint = this.renderer.positionToPoint(position);\r\n\r\n\t\treturn basePoint;\r\n\t}\r\n\r\n\t/**\r\n\t * A base value.\r\n\t *\r\n\t * This is a threshold value that will divide \"positive\" and \"negative\"\r\n\t * value ranges.\r\n\t *\r\n\t * Other scale-related functionality also depend on base value. E.g. stacks,\r\n\t * value-dependent coloring, etc.\r\n\t *\r\n\t * @param value Base value\r\n\t */\r\n\tpublic set baseValue(value: number) {\r\n\t\tthis._baseValue = value;\r\n\t\tthis.invalidateLayout();\r\n\t\tthis.invalidateSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\r\n\t\tlet baseValue = this._baseValue;\r\n\t\tif (this.logarithmic) {\r\n\t\t\tbaseValue = this.min;\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn baseValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"baseValue\", baseValue);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis\r\n\t *\r\n\t * An alias to `valueToPosition()`.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Position\r\n\t */\r\n\tpublic anyToPosition(value: number): number {\r\n\t\treturn this.valueToPosition(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic valueToPoint(value: number): IOrientationPoint {\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: number): IOrientationPoint {\r\n\t\treturn this.valueToPoint(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t// todo: think if possible to take previous value and do not go through all previous breaks\r\n\t\t\tlet min: number = this.min;\r\n\t\t\tlet max: number = this.max;\r\n\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\t\t\t\tlet difference: number = this._difference;\r\n\r\n\t\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\r\n\t\t\t\t\t\t\tif (value < startValue) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: startValue, end: endValue }, { start: min, end: max })) { // todo: check this once and set some flag in axisBreak\r\n\t\t\t\t\t\t\t\tstartValue = Math.max(startValue, min);\r\n\t\t\t\t\t\t\t\tendValue = Math.min(endValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\t\t\t\tif (value > endValue) {\r\n\t\t\t\t\t\t\t\t\tmin += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\t\t\t\telse if (value < startValue) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvalue = startValue + (value - startValue) * breakSize;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tposition = (value - min) / difference;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\t\t\tif (value <= treatZeroAs) {\r\n\t\t\t\t\t\t\tvalue = treatZeroAs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tposition = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//position = $math.round(position, 10);\r\n\r\n\t\t\t\treturn position;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tsuper.invalidateLabels();\r\n\t\tif (this.dataItems) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = undefined;\r\n\t\t\t})\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an relative position to a corresponding value within\r\n\t * axis' scale.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet min: number = this.min;\r\n\t\tlet max: number = this.max;\r\n\r\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet difference: number = max - min; //no need to adjust!\r\n\r\n\t\t\tlet value: number = null;\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// in case we have some axis breaks\r\n\t\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\t\t\tlet breakStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet breakEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n\r\n\t\t\t\t\t\t\tif (breakStartValue > max) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n\r\n\t\t\t\t\t\t\t\tbreakStartValue = $math.max(breakStartValue, min);\r\n\t\t\t\t\t\t\t\tbreakEndValue = $math.min(breakEndValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tdifference -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\r\n\t\t\t\t\t\t\t\t// position to the right of break end\r\n\t\t\t\t\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\t\t\t\t\tmin += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// position to the left of break start\r\n\t\t\t\t\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlet breakPosition: number = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\t\t\t\t\tvalue = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tif (this.logarithmic) {\r\n\t\t\t\t\tvalue = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = position * difference + min;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an X coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param x  X (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic xToValue(x: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Y coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param y  Y (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic yToValue(y: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\tif (this.renderer instanceof AxisRendererY) {\r\n\t\t\treturn 1 - this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\treturn this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates smallest and biggest value for the axis scale.\r\n\t * @ignore\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic getMinMax() {\r\n\r\n\t\tthis.updateGridCount();\r\n\r\n\t\tlet min: number = Number.POSITIVE_INFINITY;\r\n\t\tlet max: number = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t// only if min and max are not set from outside, we go through min and max influencers\r\n\t\tif (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.ignoreMinMax) {\r\n\t\t\t\t\t// check min\r\n\t\t\t\t\tlet seriesMin: number = series.min(this);\r\n\t\t\t\t\tif ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// check max\r\n\t\t\t\t\tlet seriesMax: number = series.max(this);\r\n\r\n\t\t\t\t\tif ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.includeRangesInMinMax) {\r\n\t\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\r\n\t\t\t\t\t\tif (minValue < min || !$type.isNumber(min)) {\r\n\t\t\t\t\t\t\tmin = minValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (maxValue > max || !$type.isNumber(max)) {\r\n\t\t\t\t\t\t\tmax = maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.logarithmic) {\r\n\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\tif (min <= 0) {\r\n\t\t\t\t\tmin = treatZeroAs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthis.raiseCriticalError(new Error(\"Logarithmic value axis can not have values <= 0.\"), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (min == 0 && max == 0) {\r\n\t\t\tmax = 0.9;\r\n\t\t\tmin = -0.9;\r\n\t\t}\r\n\r\n\t\t// if defined from outside\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._minReal = min;\r\n\t\tthis._maxReal = max;\r\n\r\n\t\tif (min == Number.POSITIVE_INFINITY) {\r\n\t\t\tmin = undefined;\r\n\t\t}\r\n\t\tif (max == Number.NEGATIVE_INFINITY) {\r\n\t\t\tmax = undefined;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n\r\n\r\n\t\tmin = this.fixMin(min);\r\n\t\tmax = this.fixMax(max);\r\n\r\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\r\n\t\t\tif (max - min != 0) {\r\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// the number by which we need to raise 10 to get difference\r\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\r\n\r\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t\t\t// reduce this number by 10 times\r\n\t\t\t\tpower = power / 10;\r\n\r\n\t\t\t\tthis._deltaMinMax = power;\r\n\t\t\t}\r\n\t\t\tmin -= this._deltaMinMax;\r\n\t\t\tmax += this._deltaMinMax;\r\n\t\t}\r\n\r\n\t\tmin -= (max - min) * this.extraMin;\r\n\t\tmax += (max - min) * this.extraMax;\r\n\r\n\t\tlet strict = this.strictMinMax;\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tstrict = true;\r\n\t\t}\r\n\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\tdif = max - min;  //new\r\n\r\n\t\t// do it for the second time (importat!)\r\n\t\tminMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\t// return min max if strict\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\t\tmin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = this._minReal;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\t\tmax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmax = this._maxReal;\r\n\t\t\t}\r\n\r\n\t\t\tif (max - min <= 0.00000001) {\r\n\t\t\t\tmin -= this._deltaMinMax;\r\n\t\t\t\tmax += this._deltaMinMax;\r\n\t\t\t}\r\n\r\n\t\t\tmin -= (max - min) * this.extraMin;\r\n\t\t\tmax += (max - min) * this.extraMax;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tthis._step = minMaxStep.step;\r\n\r\n\t\tif (!$type.isNumber(min) && !$type.isNumber(max)) {\r\n\t\t\tthis.start = 0;\r\n\t\t\tthis.end = 1;\r\n\r\n\t\t\tthis.renderer.labels.each((label) => {\r\n\t\t\t\tlabel.dataItem.text = \"\";\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// checking isNumber is good when all series are hidden\r\n\t\tif ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet animation = this._minMaxAnimation;\r\n\r\n\t\t\tif (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tanimation = this.animateMinMax(min, max);\r\n\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n\r\n\t\t\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\t\t//this.validateDataItems();\r\n\t\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\t\tseries.validate();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._minMaxAnimation = animation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\tseries.invalidate();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._minAdjusted = min;\r\n\t\t\t\t\tthis._maxAdjusted = max;\r\n\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._extremesChanged = false;\r\n\t\tthis._difference = this.adjustDifference(min, max);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\t// will fail if 0\r\n\t\tif (gridCount <= 1) {\r\n\t\t\tgridCount = 1;\r\n\t\t}\r\n\r\n\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\tlet initialMin: number = min;\r\n\t\tlet initialMax: number = max;\r\n\r\n\t\t// in case min and max is the same, use max\r\n\t\tif (difference === 0) {\r\n\t\t\tdifference = Math.abs(max);\r\n\t\t}\r\n\r\n\t\t// the number by which we need to raise 10 to get difference\r\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\r\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t// reduce this number by 10 times\r\n\t\tpower = power / 10;\r\n\r\n\t\tlet extra: number = power;\r\n\t\tif (strictMode) {\r\n\t\t\textra = 0;\r\n\t\t}\r\n\r\n\t\tif (!this.logarithmic) {\r\n\r\n\t\t\t// round down min\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin = Math.floor(min / power) * power;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.ceil(max / power) * power;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\r\n\t\t\t}\r\n\r\n\t\t\t// don't let min go below 0 if real min is >= 0\r\n\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\t// don't let max go above 0 if real max is <= 0\r\n\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\r\n\t\t\t\tmin = this.baseValue;\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: think of a better way or to restrict zooming when no series are selected\r\n\t\t\tif (min == Infinity) {\r\n\t\t\t\tmin = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (max == -Infinity) {\r\n\t\t\t\tmax = 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tif (this._minDefined > 0) {\r\n\t\t\t\t\tmin = this._minDefined;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmin = min;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._maxDefined > 0) {\r\n\t\t\t\t\tmax = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n\t\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// repeat diff, exponent and power again with rounded values\r\n\t\t//difference = this.adjustDifference(min, max);\r\n\t\t/*\r\n\r\n\t\t\t\tif(min > initialMin){\r\n\t\t\t\t\tmin = initialMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(max < initialMax){\r\n\t\t\t\t\tmax = initialMax;\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\t\tpower = Math.pow(10, Math.floor(exponent));\r\n\t\tpower = power / 10;\r\n\r\n\t\t// approximate difference between two grid lines\r\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\r\n\r\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n\r\n\t\t// TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n\t\t// the step should divide by  2, 5, and 10.\r\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\r\n\r\n\r\n\t\tif (stepDivisor > 5) {\r\n\t\t\tstepDivisor = 10;\r\n\t\t}\r\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\r\n\t\t\tstepDivisor = 5;\r\n\t\t}\r\n\r\n\t\t// now get real step\r\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n\r\n\t\tif (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n\t\t\tstep = $math.ceil(step, this.maxPrecision);\r\n\t\t}\r\n\r\n\t\tlet decCount: number = 0;\r\n\t\t// in case numbers are smaller than 1\r\n\t\tif (stepPower < 1) {\r\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n\t\t\t// round step\r\n\t\t\tstep = $math.round(step, decCount);\r\n\t\t}\r\n\t\tif (!this.logarithmic) {\r\n\t\t\t// final min and max\r\n\t\t\tlet minCount = Math.floor(min / step);\r\n\r\n\t\t\tmin = $math.round(step * minCount, decCount);\r\n\r\n\t\t\tlet maxCount: number;\r\n\r\n\t\t\tif (!strictMode) {\r\n\t\t\t\tmaxCount = Math.ceil(max / step);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxCount = Math.floor(max / step);\r\n\t\t\t}\r\n\r\n\t\t\tif (maxCount == minCount) {\r\n\t\t\t\tmaxCount++;\r\n\t\t\t}\r\n\r\n\t\t\tmax = $math.round(step * maxCount, decCount);\r\n\r\n\t\t\tif (max < initialMax) {\r\n\t\t\t\tmax = max + step;\r\n\t\t\t}\r\n\r\n\t\t\tif (min > initialMin) {\r\n\t\t\t\tmin = min - step;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * A minimum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Min value\r\n\t */\r\n\tpublic set min(value: number | undefined) {\r\n\t\tif (this._minDefined != value) {\r\n\t\t\tthis._minDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min value\r\n\t */\r\n\tpublic get min(): number | undefined {\r\n\t\tlet min = this._minAdjusted;\r\n\t\tif (!$type.isNumber(min)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Min value\r\n\t */\r\n\tpublic get minDefined(): number {\r\n\t\treturn this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Max value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Man value\r\n\t */\r\n\tpublic get maxDefined(): number {\r\n\t\treturn this._maxDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting minimum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n\t * we asked to expand minimum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMin(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMin\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get extraMin(): number {\r\n\t\treturn this.getPropertyValue(\"extraMin\");\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting maximum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n\t * we asked to expand maximum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMax(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMax\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min multiplier\r\n\t */\r\n\tpublic get extraMax(): number {\r\n\t\treturn this.getPropertyValue(\"extraMax\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Current calculated delta in values between two adjacent grid lines (step).\r\n\t *\r\n\t * This is a read-only value and cannot be used to set actual step.\r\n\t *\r\n\t * @readonly\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n\t * @return [description]\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this._step;\r\n\t}\r\n\r\n\t/**\r\n\t * A maximum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Max value\r\n\t */\r\n\tpublic set max(value: number | undefined) {\r\n\t\tif (this._maxDefined != value) {\r\n\t\t\tthis._maxDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max value\r\n\t */\r\n\tpublic get max(): number | undefined {\r\n\t\tlet max = this._maxAdjusted;\r\n\t\tif (!$type.isNumber(max)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * By default the axis will adjust precision of all numbers to match number\r\n\t * of decimals in all its labels, e.g.: `1.0`, `1.5`, `2.0`.\r\n\t *\r\n\t * To disable set `adjustLabelPrecision` to `false`, to use whatever other\r\n\t * precision or number format settings are set.\r\n\t *\r\n\t * IMPORTANT: This setting will be ignored if your number format uses\r\n\t * modifiers, e.g. `\"#a\"`.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.14\r\n\t * @param  value  Adjust precision\r\n\t */\r\n\tpublic set adjustLabelPrecision(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"adjustLabelPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Adjust precision\r\n\t */\r\n\tpublic get adjustLabelPrecision(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustLabelPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the Series to register itself as the user of this Axis.\r\n\t *\r\n\t * This will also decorate both the Series and Axis with event handlers, used\r\n\t * to redraw on Axis position/zoom change.\r\n\t *\r\n\t * A disposer for those events is returned, so that they can be disposed\r\n\t * together with Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series  Series\r\n\t * @return Disposer for events\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\treturn new MultiDisposer([\r\n\t\t\tsuper.registerSeries(series),\r\n\r\n\t\t\tseries.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n\t\t\tseries.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n\t\t\tthis.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform tasks after Axis zoom.\r\n\t */\r\n\tprotected handleSelectionExtremesChange(): void {\r\n\r\n\t\tlet selectionMin: number;\r\n\t\tlet selectionMax: number;\r\n\r\n\t\tlet allHidden: boolean = true;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.ignoreMinMax && !series.isHidden && !series.outOfRange) {\r\n\r\n\t\t\t\tif (series.visible && !series.isHiding) {\r\n\t\t\t\t\tallHidden = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesSelectionMin: number = series.selectionMin(this);\r\n\t\t\t\tlet seriesSelectionMax: number = series.selectionMax(this);\r\n\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMin)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n\t\t\t\t\t\tselectionMin = seriesSelectionMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check max\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMax)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n\t\t\t\t\t\tselectionMax = seriesSelectionMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.includeRangesInMinMax) {\r\n\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\t\t\t\t\tif (minValue < selectionMin) {\r\n\t\t\t\t\t\tselectionMin = minValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (maxValue > selectionMax) {\r\n\t\t\t\t\t\tselectionMax = maxValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method\r\n\t\t//$iter.each(this.series.iterator(), (series) => {\r\n\t\t//\tif (!series.appeared) {\r\n\t\t//\t\tallHidden = true;\r\n\t\t//\t}\r\n\t\t//})\r\n\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMin = this.min;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMin = this._minReal;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMax = this.max;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMax = this._maxReal;\r\n\t\t}\r\n\r\n\t\tif (selectionMin == selectionMax) {\r\n\r\n\t\t\tselectionMin -= this._deltaMinMax;\r\n\t\t\tselectionMax += this._deltaMinMax;\r\n\r\n\t\t\tlet minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);\r\n\t\t\tselectionMin = minMaxStep2.min;\r\n\t\t\tselectionMax = minMaxStep2.max;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tselectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n\t\tselectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n\r\n\t\tselectionMin = $math.fitToRange(selectionMin, this.min, this.max);\r\n\t\tselectionMax = $math.fitToRange(selectionMax, this.min, this.max);\r\n\r\n\t\t// do it for the second time !important\r\n\t\tdif = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tminMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tselectionMin = $math.max(selectionMin, this._minDefined);\r\n\t\t\tselectionMax = $math.min(selectionMax, this._maxDefined);\r\n\t\t}\r\n\t\tlet step = minMaxStep.step;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tminMaxStep = this.syncAxes(selectionMin, selectionMax, step)\r\n\t\t\tselectionMin = minMaxStep.min;\r\n\t\t\tselectionMax = minMaxStep.max;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\tstep = minMaxStep.step;\r\n\r\n\t\t// needed because of grouping\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\r\n\t\tlet start: number = this.valueToPosition(selectionMin);\r\n\t\tlet end: number = this.valueToPosition(selectionMax);\r\n\r\n\t\t// in case all series are hidden or hiding, full zoomout\r\n\t\tif (allHidden && !this.syncWithAxis) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t}\r\n\r\n\t\tlet declination = 0;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tdeclination = 5;\r\n\t\t\tthis.setCache(selectionMin + \"-\" + selectionMax, step);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._step != step || this._minZoomed != selectionMin || this._maxZoomed != selectionMax) {\r\n\t\t\t\tthis._dsc = true;\r\n\t\t\t}\r\n\t\t\tthis._step = step;\r\n\t\t\tthis._minZoomed = selectionMin;\r\n\t\t\tthis._maxZoomed = selectionMax;\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tthis.zoom({ start: start, end: end }, false, false, declination);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether to blindly use exact `min` and `max` values set by user\r\n\t * when generating Axis scale.\r\n\t *\r\n\t * If not set, the Axis might slightly adjust those values to accomodate a\r\n\t * better looking grid.\r\n\t *\r\n\t * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`\r\n\t * will result in fixing the scale of the axis to actual lowest and highest\r\n\t * values in the series within currently selected scope.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use exact values?\r\n\t */\r\n\tpublic set strictMinMax(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"strictMinMax\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use exact values?\r\n\t */\r\n\tpublic get strictMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"strictMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this axis should use a logarithmic scale.\r\n\t *\r\n\t * Please note that logarithmic axis can **only** accommodate values bigger\r\n\t * than zero.\r\n\t *\r\n\t * Having zero or negative values will result in error and failure of the\r\n\t * whole chart.\r\n\t *\r\n\t * @param value Logarithmic scale?\r\n\t */\r\n\tpublic set logarithmic(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"logarithmic\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Logarithmic scale?\r\n\t */\r\n\tpublic get logarithmic(): boolean {\r\n\t\treturn this.getPropertyValue(\"logarithmic\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if a current selection (zoom) should be kept across data updates.\r\n\t *\r\n\t * If your axis is zoomed while chart's data is updated, the axis will try\r\n\t * to retain the same start and end values.\r\n\t *\r\n\t * You can also use this to initially pre-zoom axis:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"keepSelection\": true,\r\n\t *     \"start\": 0.5,\r\n\t *     \"end\": 0.7\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will start the chart zoomed from the middle of the actual scope\r\n\t * to 70%.\r\n\t *\r\n\t * @since 4.1.1\r\n\t * @default false\r\n\t * @param  value  Preseve zoom after data update?\r\n\t */\r\n\tpublic set keepSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"keepSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Preseve zoom after data update?\r\n\t */\r\n\tpublic get keepSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"keepSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, values of axis ranges will be included when calculating\r\n\t * range of values / scale of the [[ValueAxis]].\r\n\t *\r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Include ranges?\r\n\t */\r\n\tpublic set includeRangesInMinMax(value: boolean) {\r\n\t\tthis.setPropertyValue(\"includeRangesInMinMax\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Include ranges?\r\n\t */\r\n\tpublic get includeRangesInMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"includeRangesInMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of decimals to allow when placing grid lines and labels\r\n\t * on axis.\r\n\t *\r\n\t * Set it to `0` (zero) to force integer-only axis labels.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return max precision\r\n\t */\r\n\tpublic get maxPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"maxPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * This setting allows using bigger precision for numbers displayed in axis\r\n\t * tooltip.\r\n\t *\r\n\t * Please note that this setting indicates additional decimal places to\r\n\t * automatically-calculated axis number precision.\r\n\t *\r\n\t * So if your axis displays numbers like 0.1, 0.2, etc. (one decimal place),\r\n\t * and you set `extraTooltipPrecision = 1`, tooltips will display numbers\r\n\t * like 0.12, 0.25, etc. (two decimal places).\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.8.3\r\n\t * @param  value  Extra decimals\r\n\t */\r\n\tpublic set extraTooltipPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraTooltipPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Extra decimals\r\n\t */\r\n\tpublic get extraTooltipPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"extraTooltipPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tthis._extremesChanged = true;\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tlet mw = 0;\r\n\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tif (dataItem.label && dataItem.label.pixelWidth > mw) {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  ?\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  ?\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueX\";\r\n\t\t}\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  Stack ID\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start     [description]\r\n\t * @param end       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: number, end: number, location?: number): string {\r\n\t\tlet startPosition: number = this.valueToPosition(start);\r\n\t\tlet endPosition: number = this.valueToPosition(end);\r\n\r\n\t\treturn this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces + this.extraTooltipPrecision);\r\n\t\tlet valueStr = this.tooltip.numberFormatter.format(value);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean): void {\r\n\t\tlet start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\tlet end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A smallest value in axis scale within current zoom.\r\n\t *\r\n\t * @return Min zoom value\r\n\t */\r\n\tpublic get minZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.max(this.min, this._minZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._minZoomed\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A biggest value in axis scale within current zoom.\r\n\t * @return [description]\r\n\t */\r\n\tpublic get maxZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.min(this.max, this._maxZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._maxZoomed;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t// process breaks\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t// break difference\r\n\t\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif * axisBreak.breakSize) * this._gridCount / (this.max - this.min);\r\n\r\n\t\t\t\t// calculate min, max and step for axis break\r\n\t\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);\r\n\r\n\t\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet value: number = this.positionToValue(position);\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific value\r\n\t *\r\n\t * @param value Value\r\n\t */\r\n\tpublic showTooltipAt(value: number) {\r\n\t\tthis.showTooltipAtPosition(this.valueToPosition(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.min = source.min;\r\n\t\tthis.max = source.max;\r\n\t\tthis.calculateTotals = source.calculateTotals;\r\n\t\tthis._baseValue = source.baseValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Enables syncing of grid with another axis.\r\n\t *\r\n\t * To enable, set to a reference of the other `ValueAxis`. This axis will try\r\n\t * to maintain its scale in such way that its grid matches target axis grid.\r\n\t *\r\n\t * IMPORTANT #1: At this stage it's an experimental feature. Use it at your\r\n\t * own risk, as it may not work in 100% of the scenarios.\r\n\t *\r\n\t * IMPORTANT #2: `syncWithAxis` is not compatible with `strictMinMax` and\r\n\t * `sequencedInterpolation` settings.\r\n\t * \r\n\t * IMPORTANT #3: `syncWithAxis` is not compatible with scrollbars. Make sure\r\n\t * you do not add a scrollbar in the same direction as synced axes. For\r\n\t * example, if you have vertical synced axes, do not add `scrollbarY` on\r\n\t * your chart. It will create anomalies when used.\r\n\t *\r\n\t * IMPORTANT #4: `syncWithAxis` is not compatible with `XYCursor` if it has\r\n\t * its `behavior` set to either `zoomY` or `zoomXY`.\r\n\t *\r\n\t * @since 4.8.1\r\n\t * @param  axis  Target axis\r\n\t */\r\n\tpublic set syncWithAxis(axis: ValueAxis) {\r\n\t\tif (this.setPropertyValue(\"syncWithAxis\", axis, true)) {\r\n\t\t\tif (axis) {\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"extremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"startendchanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis.events.on(\"shown\", this.handleSelectionExtremesChange, this, false);\r\n\t\t\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\t\t\tthis.clearCache();\r\n\t\t\t\t\tthis._disposers.push(registry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t}))\r\n\t\t\t\t}, this, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target axis\r\n\t */\r\n\tpublic get syncWithAxis(): ValueAxis {\r\n\t\treturn this.getPropertyValue(\"syncWithAxis\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set, zero values will be treated as this value.\r\n\t *\r\n\t * It is useful if you need to use data with zero-values on a logarithmic\r\n\t * axis scale.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Zero replacement value\r\n\t */\r\n\tpublic set treatZeroAs(value: number) {\r\n\t\tthis.setPropertyValue(\"treatZeroAs\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zero replacement value\r\n\t */\r\n\tpublic get treatZeroAs(): number {\r\n\t\treturn this.getPropertyValue(\"treatZeroAs\");\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs with a target axis.\r\n\t *\r\n\t * @param  min  Min\r\n\t * @param  max  Max\r\n\t * @param  step Step\r\n\t */\r\n\tprotected syncAxes(min: number, max: number, step: number) {\r\n\t\tlet axis = this.syncWithAxis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tif (!$type.isNumber(min)) {\r\n\t\t\t\tmin = this.min;\r\n\t\t\t}\r\n\t\t\tif (!$type.isNumber(max)) {\r\n\t\t\t\tmax = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(step)) {\r\n\t\t\t\tstep = this._step;\r\n\t\t\t}\r\n\r\n\t\t\tlet count: number = Math.round((axis.maxZoomed - axis.minZoomed) / axis.step);\r\n\t\t\tlet currentCount = Math.round((max - min) / step);\r\n\r\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n\t\t\t\tlet synced = false;\r\n\t\t\t\tlet c = 0\r\n\t\t\t\tlet diff = (max - min) * 0.01;\r\n\t\t\t\tlet omin = min;\r\n\t\t\t\tlet omax = max;\r\n\t\t\t\tlet ostep = step;\r\n\r\n\t\t\t\twhile (synced != true) {\r\n\t\t\t\t\tsynced = this.checkSync(omin, omax, ostep, count);\r\n\t\t\t\t\tc++;\r\n\t\t\t\t\tif (c > 1000) {\r\n\t\t\t\t\t\tsynced = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!synced) {\r\n\t\t\t\t\t\t//omin = min - diff * c;\r\n\r\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\r\n\t\t\t\t\t\t\tomin = min - diff * c;\r\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\r\n\t\t\t\t\t\t\t\tomin = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tomax = max + diff * c;\r\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\r\n\t\t\t\t\t\t\t\tomax = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet minMaxStep = this.adjustMinMax(omin, omax, omax - omin, this._gridCount, true);\r\n\t\t\t\t\t\tomin = minMaxStep.min;\r\n\t\t\t\t\t\tomax = minMaxStep.max;\r\n\t\t\t\t\t\tostep = minMaxStep.step;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmin = omin;\r\n\t\t\t\t\t\tmax = omax;\r\n\t\t\t\t\t\tstep = ostep;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if axis needs to be resunced with some other axis.\r\n\t */\r\n\tprotected checkSync(min: number, max: number, step: number, count: number): boolean {\r\n\t\tlet currentCount = (max - min) / step;\r\n\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.syncWithAxis) && $type.isString(config.syncWithAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.syncWithAxis)) {\r\n\t\t\t\t\tconfig.syncWithAxis = this.map.getKey(config.syncWithAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[ValueAxis] No axis with id \\\"\" + config.syncWithAxis + \"\\\" found for `syncWithAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * HeatLegend module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * Minimum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxValue?: number;\r\n\r\n\r\n\t/**\r\n\t * Maximum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxColor?: Color;\r\n\r\n\t/**\r\n\t * Number of markers (steps)\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmarkerCount?: number;\r\n\r\n\r\n\t/**\r\n\t * Orientation\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatLegend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatLegendAdapters extends IContainerAdapters, IHeatLegendProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class HeatLegend extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IHeatLegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IHeatLegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IHeatLegendEvents;\r\n\r\n\t/**\r\n\t * List of heat legend markers (color step rectangles).\r\n\t */\r\n\tpublic markers: ListTemplate<RoundedRectangle>;\r\n\r\n\t/**\r\n\t * Container which holds markers\r\n\t */\r\n\tpublic markerContainer: Container;\r\n\r\n\t/**\r\n\t * Value axis of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _valueAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * Series of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _series: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatLegend\";\r\n\r\n\t\tthis.markerContainer = this.createChild(Container);\r\n\t\tthis.markerContainer.shouldClone = false;\r\n\r\n\t\tthis.markerCount = 1;\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: RoundedRectangle = new RoundedRectangle();\r\n\t\tmarker.minHeight = 20;\r\n\t\tmarker.minWidth = 20;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.fillOpacity = 1;\r\n\t\tmarker.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tthis.markerContainer.minHeight = 20;\r\n\t\tthis.markerContainer.minWidth = 20;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\tthis.markers = new ListTemplate<RoundedRectangle>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tprotected getMinFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet minValue;\r\n\t\t\t$iter.eachContinue(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tminValue = heatRule.min;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getMaxFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet maxValue;\r\n\t\t\t$iter.each(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tmaxValue = heatRule.max;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.valueAxis.renderer.inversed = this.reverseOrder;\r\n\r\n\t\tlet series = this.series;\r\n\r\n\t\tlet minColor = this.minColor;\r\n\t\tlet maxColor = this.maxColor;\r\n\r\n\t\tif (!$type.hasValue(minColor)) {\r\n\t\t\tminColor = toColor(this.getMinFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (series) {\r\n\t\t\tlet seriesFill = series.fill;\r\n\t\t\tif (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n\t\t\t\tminColor = seriesFill;\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n\t\t\t\tmaxColor = seriesFill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tlet minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(minOpacity)) {\r\n\t\t\tminOpacity = 1;\r\n\t\t}\r\n\t\tlet maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(maxOpacity)) {\r\n\t\t\tmaxOpacity = 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(minStrokeOpacity)) {\r\n\t\t\tminStrokeOpacity = 1;\r\n\t\t}\r\n\t\tlet maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(maxStrokeOpacity)) {\r\n\t\t\tmaxStrokeOpacity = 1;\r\n\t\t}\r\n\r\n\t\tlet minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n\t\tlet maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n\r\n\r\n\t\t//if (series) {\r\n\t\tfor (let i = 0; i < this.markerCount; i++) {\r\n\t\t\tlet marker = this.markers.getIndex(i);\r\n\r\n\t\t\tif (!marker) {\r\n\t\t\t\tmarker = this.markers.create();\r\n\t\t\t\tmarker.parent = this.markerContainer;\r\n\t\t\t\tmarker.height = percent(100);\r\n\t\t\t\tmarker.width = percent(100);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.markerCount == 1) {\r\n\t\t\t\tlet gradient = new LinearGradient();\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tgradient.rotation = -90;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmarker.fill = gradient;\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet strokeGradient = new LinearGradient();\r\n\t\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\tstrokeGradient.rotation = -90;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmarker.stroke = strokeGradient;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet c = i;\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tc = this.markerCount - i - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, c / this.markerCount));\r\n\t\t\t\tmarker.fill = color;\r\n\r\n\t\t\t\tlet opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;\r\n\t\t\t\tmarker.fillOpacity = opacity;\r\n\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet color = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, c / this.markerCount));\r\n\t\t\t\t\tmarker.stroke = color;\r\n\r\n\t\t\t\t\tlet opacity = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;\r\n\t\t\t\t\tmarker.strokeOpacity = opacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet renderer = this.valueAxis.renderer;\r\n\t\tif (this.markerCount > 1) {\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\trenderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.valueAxis.invalidate();\r\n\r\n\t\tfor (let i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n\t\t\tthis.markers.getIndex(i).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maxColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\treturn this.getPropertyValue(\"maxColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set markerCount(value: number) {\r\n\t\tthis.setPropertyValue(\"markerCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of color squares (markers).\r\n\t * @return {number}\r\n\t */\r\n\tpublic get markerCount(): number {\r\n\t\treturn this.getPropertyValue(\"markerCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis.setPropertyValue(\"minValue\", value);\r\n\t\tthis.valueAxis.min = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minimum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis.setPropertyValue(\"maxValue\", value);\r\n\t\tthis.valueAxis.max = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\treturn this.getPropertyValue(\"maxValue\");\r\n\t}\r\n\r\n\t/**\r\n\t* Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n\t*\r\n\t* @param {\"horizontal\" | \"vertical\"}\r\n\t*/\r\n\tpublic set orientation(value: \"horizontal\" | \"vertical\") {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet markerContainer = this.markerContainer;\r\n\t\tlet valueAxis = this.valueAxis;\r\n\r\n\t\t// HORIZONTAL\r\n\t\tif (value == \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.width)) {\r\n\t\t\t\tthis.width = 200;\r\n\t\t\t}\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tvalueAxis.width = percent(100);\r\n\t\t\tvalueAxis.height = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"vertical\";\r\n\r\n\t\t\tthis.layout = \"vertical\";\r\n\t\t\tmarkerContainer.width = percent(100);\r\n\t\t\tmarkerContainer.height = undefined;\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererX();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// VERTICAL\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.height)) {\r\n\t\t\t\tthis.height = 200;\r\n\t\t\t}\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.layout = \"horizontal\";\r\n\t\t\tmarkerContainer.width = undefined;\r\n\t\t\tmarkerContainer.height = percent(100);\r\n\t\t\tvalueAxis.height = percent(100);\r\n\t\t\tvalueAxis.width = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererY();\r\n\t\t\t}\r\n\t\t\tvalueAxis.renderer.inside = true;\r\n\t\t\tvalueAxis.renderer.labels.template.inside = true;\r\n\r\n\t\t\tthis.markerContainer.reverseOrder = true;\r\n\t\t}\r\n\r\n\t\tlet renderer = valueAxis.renderer;\r\n\t\trenderer.grid.template.disabled = true;\r\n\t\trenderer.axisFills.template.disabled = true;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t\trenderer.labels.template.padding(2, 3, 2, 3);\r\n\r\n\t\trenderer.minHeight = undefined;\r\n\t\trenderer.minWidth = undefined;\r\n\r\n\t\tthis.markerContainer.layout = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns orientation value.\r\n\t *\r\n\t * @return {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\tpublic get orientation(): \"horizontal\" | \"vertical\" {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n\t * @param {ValueAxis}\r\n\t */\r\n\tpublic set valueAxis(valueAxis: ValueAxis) {\r\n\r\n\t\tthis._valueAxis = valueAxis;\r\n\r\n\t\tvalueAxis.parent = this;\r\n\t\tvalueAxis.strictMinMax = true;\r\n\t\tthis.orientation = this.orientation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns valueAxis value.\r\n\t * @return {ValueAxis}\r\n\t */\r\n\tpublic get valueAxis(): ValueAxis {\r\n\t\tif (!this._valueAxis) {\r\n\t\t\tthis.valueAxis = this.createChild(ValueAxis);\r\n\t\t\tthis.valueAxis.shouldClone = false;\r\n\t\t}\r\n\t\treturn this._valueAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n\t * @param series\r\n\t */\r\n\tset series(series: Series) {\r\n\t\tthis._series = series;\r\n\r\n\t\tlet dataField = \"value\";\r\n\r\n\t\ttry {\r\n\t\t\tlet dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n\t\t\tif (dataFieldDefined) {\r\n\t\t\t\tdataField = dataFieldDefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\r\n\t\tseries.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\t\t}, undefined, false);\r\n\r\n\t\tseries.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n\t\tseries.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns series value.\r\n\t * @return {Series}\r\n\t */\r\n\tget series(): Series {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates min/max of value axis.\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMinMax(min: number, max: number) {\r\n\t\tlet valueAxis = this.valueAxis;\r\n\t\tif (!$type.isNumber(this.minValue)) {\r\n\t\t\tvalueAxis.min = min;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.maxValue)) {\r\n\t\t\tvalueAxis.max = max;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n\t\t\t\tif ($type.isString(config.series)) {\r\n\t\t\t\t\tif (this.map.hasKey(config.series)) {\r\n\t\t\t\t\t\tconfig.series = this.map.getKey(config.series);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet seriesId = config.series;\r\n\t\t\t\t\t\tconst disposer = this.map.events.on(\"insertKey\", function(ev) {\r\n\t\t\t\t\t\t\tif (ev.key == seriesId) {\r\n\t\t\t\t\t\t\t\tthis.series = ev.newValue;\r\n\t\t\t\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t\tdelete config.series;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n","/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n\tlogarithmic?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bullets: Dictionary<string, Sprite>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t */\r\n\tpublic get bullets(): Dictionary<string, Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new Dictionary<string, Sprite>();\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._bullets));\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.bullets.clear();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t */\r\n\tname?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t */\r\n\titemReaderText: string\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t */\r\n\tprotected _bullets: ListTemplate<Sprite>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/**\r\n\t * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n\t */\r\n\tprotected _itemReaderTextChanged: boolean = false;\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * Most of the series use absolute values. However sometimes various\r\n\t * calculated percent values are need, e.g. item's percent representation\r\n\t * across all values in series, etc.\r\n\t *\r\n\t * It's a resource-intensive operation, so it is disabled by default.\r\n\t *\r\n\t * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n\t * or creating 100% stacks, this setting needs to be set to `true`.\r\n\t *\r\n\t * NOTE: `PieChart`, which relies on slice percentages, has this\r\n\t * automatically set to `true`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * When `calculatePercent` is enabled and data item's percent value is\r\n\t * calculated, last item's real value is used instead of its working value.\r\n\t *\r\n\t * This is done for the animations when last item in series (e.g. slice in\r\n\t * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n\t * calculated percent would always be 100%).\r\n\t *\r\n\t * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n\t * hack by setting `usePercentHack` to `false`.\r\n\t *\r\n\t * @since 4.9.13\r\n\t * @default true\r\n\t */\r\n\tpublic usePercentHack: boolean = true;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from\r\n\t * chart's `series` list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * When chart/series' data is processed, all kinds of derivative values are\r\n\t * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n\t * time-consuming operation, especially prominent in data-heavy charts.\r\n\t *\r\n\t * If your chart does not need those values, and you have a lot of data,\r\n\t * setting this to `true` might give a dramatic increase in initial chart\r\n\t * load speed.\r\n\t *\r\n\t * Please note, regular column and line series usage scenarios do not\r\n\t * require derivative values. Those come into play only when you do advanced\r\n\t * functionality like coloring segments of charts in different colors\r\n\t * depending on change between open and close values, have stacked series, or\r\n\t * display any of the derived values, like percent, in tooltips or bullets.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic simplifiedProcessing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Series) {\r\n\t\t\tthrow new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n\t\t}\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * We need this here so that class names can be applied to bullets container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName && this.bulletsContainer) {\r\n\t\t\tthis.bulletsContainer.className = this.className + \"-bullets\";\r\n\t\t\tthis.bulletsContainer.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param bullet  Sprite\r\n\t */\r\n\tpublic positionBullet(bullet: Sprite): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Sprite>[\"inserted\"]) {\r\n\t\tlet bullet: Sprite = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tthis.events.once(\"datavalidated\", (ev) => {\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tbullet.focusable = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Sprite>[\"removed\"]) {\r\n\t\tlet bullet: Sprite = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tif ($object.hasKey(dataItem.values, key)) {\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\t//if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t//startIndex++;\r\n\t\t//}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getAbsoluteFirstValue(key: string): number {\r\n\t\tfor (let i = 0; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tif (!this.simplifiedProcessing) {\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tlet count: { [index: string]: number } = {};\r\n\t\t\tlet sum: { [index: string]: number } = {};\r\n\t\t\tlet absoluteSum: { [index: string]: number } = {};\r\n\t\t\tlet low: { [index: string]: number } = {};\r\n\t\t\tlet high: { [index: string]: number } = {};\r\n\t\t\tlet open: { [index: string]: number } = {};\r\n\t\t\tlet close: { [index: string]: number } = {};\r\n\t\t\tlet previous: { [index: string]: number } = {};\r\n\t\t\tlet first: { [index: string]: number } = {};\r\n\t\t\tlet absoluteFirst: { [index: string]: number } = {};\r\n\r\n\t\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\t\tlet startIndex: number = $math.max(0, this.startIndex);\r\n\t\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\t\tlet endIndex: number = $math.min(this.endIndex, this.dataItems.length);\r\n\r\n\t\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\t\tstartIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\t\tendIndex = this.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// absolute sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteSum[key])) {\r\n\t\t\t\t\t\t\tabsoluteSum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tabsoluteSum[key] += Math.abs(value);\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteFirst[key])) {\r\n\t\t\t\t\t\t\tabsoluteFirst[key] = this.getAbsoluteFirstValue(key);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// change\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]), \"startChange\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]) / absoluteFirst[key] * 100, \"startChangePercent\");\r\n\r\n\t\t\t\t\t\t// previous change\r\n\t\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t\t// previous change percent\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.calculatePercent) {\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\tlet ksum: number = absoluteSum[key];\r\n\r\n\t\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tif (ksum > 0) {\r\n\t\t\t\t\t\t\t\tif (this.usePercentHack) {\r\n\t\t\t\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 0, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t\t// so we do startIndex - 1\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t\t// change percent\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, absoluteSum[key], \"absoluteSum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.filters.clear();\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tlet bulletsContainer = this.bulletsContainer;\r\n\t\tbulletsContainer.fill = this.fill;\r\n\t\tbulletsContainer.stroke = this.stroke;\r\n\t\tbulletsContainer.x = this.pixelX;\r\n\t\tbulletsContainer.y = this.pixelY;\r\n\r\n\t\tif (this.bulletsContainer.children.length > 0) {\r\n\t\t\tif (this._showBullets) {\r\n\r\n\t\t\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.children.each((bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tlet x = 0;\r\n\t\t\tlet y = 0;\r\n\t\t\tlet w = this.topParent.maxWidth;\r\n\t\t\tlet h = this.topParent.maxHeight;\r\n\t\t\tlet rect = { x: x, y: y, width: w, height: h };\r\n\r\n\t\t\tthis.tooltip.setBounds(rect);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Sprite): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t}\r\n\t\t\tthis.bullets.each((bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Sprite = <Sprite>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n\t\t\t\t\tif (!bullet) {\r\n\r\n\t\t\t\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\t\t\t\tif (disabledField && dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = false;\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = false;\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = true;\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbullet.shouldClone = false;\r\n\t\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t\tif (!this.visible || this.isHiding) {\r\n\t\t\t\t\t\t\tbullet.hide(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet readerText = this.itemReaderText;\r\n\r\n\t\t\t\t\t\tif (bullet instanceof Bullet) {\r\n\t\t\t\t\t\t\tif (!readerText) {\r\n\t\t\t\t\t\t\t\treaderText = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t\taxisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axis  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * IMPORTANT: This setting will work only when Series' base axis\r\n\t * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n\t * setting will be ignored, because it would be a huge overhead to measure\r\n\t * distance between each and every bullet.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Sprite]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Sprite>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value);\r\n\r\n\t\tlet legendDataItem = this.legendDataItem;\r\n\t\tif (legendDataItem) {\r\n\t\t\tlegendDataItem.component.invalidate();\r\n\t\t\tlegendDataItem.component.invalidateRawData();\r\n\t\t}\r\n\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t\tthis._itemReaderTextChanged = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn readerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"itemReaderText\", readerText);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif ((dataItem && !dataItem.isDisposed())|| notRange) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tthis.usePercentHack = source.usePercentHack;\r\n\t\tthis.simplifiedProcessing = source.simplifiedProcessing;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tif (this._chart && this._chart.modal) {\r\n\t\t\tthis._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n\t\t\tthis._chart.modal.closable = false;\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis._chart.modal.open();\r\n\t\t\t}\r\n\t\t\tthis._chart.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of heat rules to apply to series' elements based on the value\r\n\t * of the data item.\r\n\t *\r\n\t * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n\t * be applied to child objects of series, like columns, bullets, etc.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t * ```Javacript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t *```JSON\r\n\t *{\r\n\t *  // ...\r\n\t *  \"series\": [{\r\n\t *    \"type\": \"ColumnSeries\",\r\n\t *    \"heatRules\": [{\r\n\t *      \"target\": \"columns.template\",\r\n\t *      \"property\": \"fill\",\r\n\t *      \"min\": \"#F5DBCB\",\r\n\t *      \"max\": \"#ED7B84\",\r\n\t *      \"dataField\": \"valueY\"\r\n\t *    }]\r\n\t *  }]\r\n\t *}\r\n\t *```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n\t * @return  Heat rules\r\n\t */\r\n\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = dataItem.getActualWorkingValue(dataField);\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent: number;\r\n\t\t\t\t\t\t\t\t\tif (heatRule.logarithmic) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (workingValue - minValue) / (maxValue - minValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tconst maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n\t\t\t\t\t\t\t\tif (maybeIndex) {\r\n\t\t\t\t\t\t\t\t\tif (target[maybeIndex[1]] instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\t/*\r\n\t\tprotected getVisibility(): boolean {\r\n\t\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\t\tif (hidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn super.getVisibility();\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * A set of patterns to use for fills, like Series, Slices, etc.\r\n\t *\r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\tthis._usesData = false;\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series, false));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<Series>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(series);\r\n\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\tdataUser.invalidateDataItems();\r\n\t\t})\r\n\r\n\t\tif (series.autoDispose) {\r\n\t\t\tseries.dispose();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseries.parent = undefined;\r\n\t\t\tseries.bulletsContainer.parent = undefined;\r\n\t\t}\r\n\t\t//this.feedLegend();\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet dataItems = this.legend.dataItems;\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem && dataItem.dataContext == series) {\r\n\t\t\t\t\tlegend.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = legend.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet di = legend.data[i];\r\n\t\t\t\tif (di && di == series) {\r\n\t\t\t\t\t$array.remove(legend.data, di);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tif (series.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\r\n\r\n\t\tthis.handleSeriesAdded2(series);\r\n\t\tthis.handleLegendSeriesAdded(series);\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:Series){\r\n\t\tif (!series.hiddenInLegend) {\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.addData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2(series: Series) {\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._disposers.push(\r\n\t\t\t\t// on exit only as data is usually passed after push\r\n\t\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\tif (!series.data || series.data.length == 0) {\r\n\t\t\t\t\t\tseries.data = this.data;\r\n\t\t\t\t\t\tif (series.showOnInit) {\r\n\t\t\t\t\t\t\tseries.reinit()\r\n\t\t\t\t\t\t\tseries.setPropertyValue(\"showOnInit\", false);\r\n\t\t\t\t\t\t\tseries.showOnInit = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!series.isDisposed()) {\r\n\t\t\t\t\t\t\tseries.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\t\t\t\tif (series.data == this.data) {\r\n\t\t\t\t\t\t\t\t\t(<any>series)._data = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(series);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tsuper.appear();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.showOnInit && series.inited) {\r\n\t\t\t\tseries.appear();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n","/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { ValueAxisBreak, IValueAxisBreakProperties, IValueAxisBreakAdapters, IValueAxisBreakEvents } from \"./ValueAxisBreak\";\r\nimport { DateAxis } from \"./DateAxis\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[DateAxisBreak]].\r\n */\r\nexport interface IDateAxisBreakProperties extends IValueAxisBreakProperties {\r\n\r\n\t/**\r\n\t * A `Date` break starts on.\r\n\t */\r\n\tstartDate?: Date;\r\n\r\n\t/**\r\n\t * A `Date` break ends on.\r\n\t */\r\n\tendDate?: Date;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[DateAxisBreak]]\r\n */\r\nexport interface IDateAxisBreakEvents extends IValueAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[DateAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDateAxisBreakAdapters extends IValueAxisBreakAdapters, IDateAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class DateAxisBreak extends ValueAxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDateAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDateAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDateAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: DateAxis;\r\n\r\n\t/**\r\n\t * [gridInterval description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * [gridDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridDate: Date;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting date for the break.\r\n\t *\r\n\t * @param value Start date\r\n\t */\r\n\tpublic set startDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"startDate\", value)) {\r\n\t\t\tthis.startValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start date\r\n\t */\r\n\tpublic get startDate(): Date {\r\n\t\treturn this.getPropertyValue(\"startDate\");\r\n\t}\r\n\r\n\t/**\r\n\t * Ending date for the break.\r\n\t *\r\n\t * @param value End date\r\n\t */\r\n\tpublic set endDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"endDate\", value)) {\r\n\t\t\tthis.endValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End date\r\n\t */\r\n\tpublic get endDate(): Date {\r\n\t\treturn this.getPropertyValue(\"endDate\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n","/**\r\n * DateAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem, IValueAxisProperties, IValueAxisDataFields, IValueAxisAdapters, IValueAxisEvents } from \"./ValueAxis\";\r\nimport { AxisItemLocation } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { LineSeriesDataItem } from \"../series/LineSeries\";\r\nimport { TimeUnit } from \"../../core/defs/TimeUnit\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { IMinMaxStep } from \"./ValueAxis\";\r\nimport { DateAxisBreak } from \"./DateAxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { DateFormatter } from \"../../core/formatters/DateFormatter\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data item for [[DateAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class DateAxisDataItem extends ValueAxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: DateAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.values.date = {};\r\n\t\tthis.values.endDate = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Date position of the data item.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set date(date: Date) {\r\n\t\tthis.setDate(\"date\", date);\r\n\t\tthis.value = date.getTime();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get date(): Date {\r\n\t\treturn this.dates[\"date\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * End date for data item.\r\n\t *\r\n\t * @param date End date\r\n\t */\r\n\tpublic set endDate(date: Date) {\r\n\t\tthis.setDate(\"endDate\", date);\r\n\t\tthis.endValue = date.getTime();\r\n\t}\r\n\r\n\t/**\r\n\t * @return End date\r\n\t */\r\n\tpublic get endDate(): Date {\r\n\t\treturn this.dates[\"endDate\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[DateAxis]].\r\n */\r\nexport interface IDateAxisDataFields extends IValueAxisDataFields {\r\n\r\n\t/**\r\n\t * Date.\r\n\t */\r\n\tdate?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[DateAxis]].\r\n */\r\nexport interface IDateAxisProperties extends IValueAxisProperties {\r\n\r\n\t/**\r\n\t * If enabled, axis will automatically collapse empty (without data points)\r\n\t * periods of time, i.e. weekends.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tskipEmptyPeriods?: boolean;\r\n\r\n\t/**\r\n\t * Use `periodChangeDateFormats` to apply different formats to the first\r\n\t * label in bigger time unit.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use different format for period beginning?\r\n\t */\r\n\tmarkUnitChange?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * A special date format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t */\r\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\r\n\r\n\t/**\r\n\t * Indicates if data should be aggregated to composide data items if there\r\n\t * are more data items in selected range than `groupCount`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tgroupData?: boolean;\r\n\r\n\t/**\r\n\t * Indicates threshold of data items in selected range at which to start\r\n\t * aggregating data items if `groupData = true`.\r\n\t * \r\n\t * @default 200\r\n\t * @since 4.7.0\r\n\t */\r\n\tgroupCount?: number;\r\n\r\n\t/**\r\n\t * Disables automatic selection of data grouping intervals and always uses\r\n\t * `groupInterval` if set. Works only if `groupData = true`.\r\n\t * \r\n\t * @since 4.9.24\r\n\t */\r\n\tgroupInterval?: ITimeInterval;\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data by applying specific offset\r\n\t * in minutes.\r\n\t *\r\n\t * IMPORTANT: do not set `timezoneOffset` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying offset twice.\r\n\t *\r\n\t * @since 4.8.5\r\n\t */\r\n\ttimezoneOffset?: number;\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data to specific named timezone,\r\n\t * e.g. `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`, etc.\r\n\t *\r\n\t * IMPORTANT: do not set `timezone` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying timezone twice.\r\n\t * \r\n\t * @since 4.10.1\r\n\t */\r\n\ttimezone?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[DateAxis]].\r\n */\r\nexport interface IDateAxisEvents extends IValueAxisEvents {\r\n\t/**\r\n\t * Invoked when data grouping is on and grouping period is changed. You can find our the period via dateAxis.currentDataSetId property.\r\n\t */\r\n\tgroupperiodchanged: IDateAxisEvents;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DateAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDateAxisAdapters extends IValueAxisAdapters, IDateAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a date/time-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DateAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IDateAxisEvents} for a list of available Events\r\n * @see {@link IDateAxisAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/} got `DateAxis` documention\r\n * @important\r\n */\r\nexport class DateAxis<T extends AxisRenderer = AxisRenderer> extends ValueAxis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IDateAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDateAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDateAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDateAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: DateAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: DateAxisBreak;\r\n\r\n\tprotected _gapBreaks: boolean = false;\r\n\r\n\t/**\r\n\t * A list of date/time intervals for Date axis.\r\n\t *\r\n\t * This define various granularities available for the axis. For example\r\n\t * if you have an axis spanning an hour, and space for 6 grid lines / labels\r\n\t * the axis will choose the granularity of 10 minutes, displaying a label\r\n\t * every 10 minutes.\r\n\t *\r\n\t * Default intervals:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *  { timeUnit: \"millisecond\", count: 1 },\r\n\t *  { timeUnit: \"millisecond\", count: 5 },\r\n\t *  { timeUnit: \"millisecond\", count: 10 },\r\n\t *  { timeUnit: \"millisecond\", count: 50 },\r\n\t *  { timeUnit: \"millisecond\", count: 100 },\r\n\t *  { timeUnit: \"millisecond\", count: 500 },\r\n\t *  { timeUnit: \"second\", count: 1 },\r\n\t *  { timeUnit: \"second\", count: 5 },\r\n\t *  { timeUnit: \"second\", count: 10 },\r\n\t *  { timeUnit: \"second\", count: 30 },\r\n\t *  { timeUnit: \"minute\", count: 1 },\r\n\t *  { timeUnit: \"minute\", count: 5 },\r\n\t *  { timeUnit: \"minute\", count: 10 },\r\n\t *  { timeUnit: \"minute\", count: 30 },\r\n\t *  { timeUnit: \"hour\", count: 1 },\r\n\t *  { timeUnit: \"hour\", count: 3 },\r\n\t *  { timeUnit: \"hour\", count: 6 },\r\n\t *  { timeUnit: \"hour\", count: 12 },\r\n\t *  { timeUnit: \"day\", count: 1 },\r\n\t *  { timeUnit: \"day\", count: 2 },\r\n\t *  { timeUnit: \"day\", count: 3 },\r\n\t *  { timeUnit: \"day\", count: 4 },\r\n\t *  { timeUnit: \"day\", count: 5 },\r\n\t *  { timeUnit: \"week\", count: 1 },\r\n\t *  { timeUnit: \"month\", count: 1 },\r\n\t *  { timeUnit: \"month\", count: 2 },\r\n\t *  { timeUnit: \"month\", count: 3 },\r\n\t *  { timeUnit: \"month\", count: 6 },\r\n\t *  { timeUnit: \"year\", count: 1 },\r\n\t *  { timeUnit: \"year\", count: 2 },\r\n\t *  { timeUnit: \"year\", count: 5 },\r\n\t *  { timeUnit: \"year\", count: 10 },\r\n\t *  { timeUnit: \"year\", count: 50 },\r\n\t *  { timeUnit: \"year\", count: 100 }\r\n\t * ]\r\n\t * ```\r\n\t */\r\n\tpublic gridIntervals: List<ITimeInterval> = new List<ITimeInterval>();\r\n\r\n\t/**\r\n\t * If data aggregation is enabled by setting Axis' `groupData = true`, the\r\n\t * chart will try to aggregate data items into grouped data items.\r\n\t *\r\n\t * If there are more data items in selected period than `groupCount`, it will\r\n\t * group data items into bigger period.\r\n\t *\r\n\t * For example seconds might be grouped into 10-second aggregate data items.\r\n\t *\r\n\t * This setting indicates what group intervals can the chart group to.\r\n\t *\r\n\t * Default intervals:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { timeUnit: \"millisecond\", count: 1},\r\n\t *   { timeUnit: \"millisecond\", count: 10 },\r\n\t *   { timeUnit: \"millisecond\", count: 100 },\r\n\t *   { timeUnit: \"second\", count: 1 },\r\n\t *   { timeUnit: \"second\", count: 10 },\r\n\t *   { timeUnit: \"minute\", count: 1 },\r\n\t *   { timeUnit: \"minute\", count: 10 },\r\n\t *   { timeUnit: \"hour\", count: 1 },\r\n\t *   { timeUnit: \"day\", count: 1 },\r\n\t *   { timeUnit: \"week\", count: 1 },\r\n\t *   { timeUnit: \"month\", count: 1 },\r\n\t *   { timeUnit: \"year\", count: 1 }\r\n\t * ]\r\n\t * ```\r\n\t * `groupData = true` does not work in combination with `skipEmptyPeriods = true`.\r\n\t * \r\n\t * @since 4.7.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t */\r\n\tpublic groupIntervals: List<ITimeInterval> = new List<ITimeInterval>();\r\n\r\n\t/**\r\n\t * A collection of date formats to use when formatting different time units\r\n\t * on Date/time axis.\r\n\t *\r\n\t * Actual defaults will depend on the language locale set for the chart.\r\n\t *\r\n\t * To override format for a specific time unit, say days, you need to set\r\n\t * the appropriate key to a format string. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * \"xAxes\": [{\r\n\t *   \"type\": \"DateAxis\",\r\n\t *   \"dateFormats\": {\r\n\t *     \"day\": \"MMMM d, yyyy\"\r\n\t *   }\r\n\t * }]\r\n\t * ```\r\n\t *\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tpublic dateFormats: Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions> = new Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions>();\r\n\r\n\t/**\r\n\t * These formats are applied to labels that are first in a larger unit.\r\n\t *\r\n\t * For example, if we have a DateAxis with days on it, the first day of month\r\n\t * indicates a break in month - a start of the bigger period.\r\n\t *\r\n\t * For those labels, `periodChangeDateFormats` are applied instead of\r\n\t * `dateFormats`.\r\n\t *\r\n\t * This allows us implement convenient structures, like instead of:\r\n\t *\r\n\t * `Jan 1 - Jan 2 - Jan 3 - ...`\r\n\t *\r\n\t * We can have:\r\n\t *\r\n\t * `Jan - 1 - 2 - 3 - ...`\r\n\t *\r\n\t * This can be disabled by setting `markUnitChange = false`.\r\n\t */\r\n\tpublic periodChangeDateFormats: Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions> = new Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions>();\r\n\r\n\t/**\r\n\t * At which intervals grid elements are displayed.\r\n\t */\r\n\tprotected _gridInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * [_intervalDuration description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _intervalDuration: number;\r\n\r\n\t/**\r\n\t * [_gridDate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _gridDate: Date;\r\n\r\n\t/**\r\n\t * [_nextGridUnit description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _nextGridUnit: TimeUnit;\r\n\r\n\t/**\r\n\t * User-defined granularity of data.\r\n\t */\r\n\tprotected _baseInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * This is base interval of the main data set.\r\n\t */\r\n\tprotected _mainBaseInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * This is base interval of the currently selected data set.\r\n\t */\r\n\tprotected _groupInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * Actual interval (granularity) derived from the actual data.\r\n\t */\r\n\tprotected _baseIntervalReal: ITimeInterval = { timeUnit: \"day\", count: 1 };\r\n\r\n\t/**\r\n\t */\r\n\tprotected _prevSeriesTime: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * [_minDifference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minDifference: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * A function which applies fills to axis cells.\r\n\t *\r\n\t * Default function fills every second fill. You can set this to a function\r\n\t * that follows some other logic.\r\n\t *\r\n\t * Function should accept a [[DateAxisDataItem]] and modify its `axisFill`\r\n\t * property accordingly.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tlet gridInterval = axis._gridInterval;\r\n\t\tlet gridDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\r\n\t\tif (Math.round((value - axis.min) / gridDuration) / 2 == Math.round(Math.round((value - axis.min) / gridDuration) / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _firstWeekDay: number = 1;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _df: DateFormatter;\r\n\r\n\t/**\r\n\t * A collection of start timestamps to use as axis' min timestamp for\r\n\t * particular data item item periods.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @readonly\r\n\t */\r\n\tpublic groupMin: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * A collection of start timestamps to use as axis' max timestamp for\r\n\t * particular data item item periods.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @readonly\r\n\t */\r\n\tpublic groupMax: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * Date of the last shown axis tooltip.\r\n\t *\r\n\t * @since 4.9.7\r\n\t * @readonly\r\n\t */\r\n\tpublic tooltipDate: Date;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxis\";\r\n\r\n\t\tthis.setPropertyValue(\"markUnitChange\", true);\r\n\t\tthis.snapTooltip = true;\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.setPropertyValue(\"groupData\", false);\r\n\t\tthis.groupCount = 200;\r\n\r\n\t\tthis.events.on(\"parentset\", this.getDFFormatter, this, false);\r\n\r\n\t\t// Translatable defaults are applied in `applyInternalDefaults()`\r\n\t\t// ...\r\n\r\n\t\t// Define default intervals\r\n\t\tthis.gridIntervals.pushAll([\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t]);\r\n\r\n\t\tthis.groupIntervals.pushAll([\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t]);\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"date\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Set default date formats\r\n\t\tif (!this.dateFormats.hasKey(\"millisecond\")) {\r\n\t\t\tthis.dateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"second\")) {\r\n\t\t\tthis.dateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"minute\")) {\r\n\t\t\tthis.dateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"hour\")) {\r\n\t\t\tthis.dateFormats.setKey(\"hour\", this.language.translate(\"_date_hour\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"day\")) {\r\n\t\t\tthis.dateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"week\")) {\r\n\t\t\tthis.dateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\t // not a mistake\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"month\")) {\r\n\t\t\tthis.dateFormats.setKey(\"month\", this.language.translate(\"_date_month\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"year\")) {\r\n\t\t\tthis.dateFormats.setKey(\"year\", this.language.translate(\"_date_year\"));\r\n\t\t}\r\n\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"millisecond\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"second\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"minute\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"hour\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"hour\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"day\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"week\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"month\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"month\", this.language.translate(\"_date_month\") + \" \" + this.language.translate(\"_date_year\"));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new DateAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new DateAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis' data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\t// allows to keep selection of the same size\r\n\t\tlet start: number = this.start;\r\n\t\tlet end: number = this.end;\r\n\t\tlet baseDuration = this.baseDuration;\r\n\t\tlet periodCount: number = (this.max - this.min) / baseDuration;\r\n\r\n\t\tthis._firstWeekDay = this.getFirstWeekDay();\r\n\t\tthis.getDFFormatter();\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tlet mainBaseDuration = $time.getDuration(this.mainBaseInterval.timeUnit, this.mainBaseInterval.count)\r\n\r\n\t\tthis.maxZoomFactor = Math.max(1, (this.max - this.min) / mainBaseDuration);\r\n\r\n\t\tthis._deltaMinMax = this.baseDuration / 2;\r\n\r\n\t\t// allows to keep selection of the same size\r\n\t\tlet newPeriodCount: number = (this.max - this.min) / baseDuration;\r\n\t\tstart = start + (end - start) * (1 - periodCount / newPeriodCount);\r\n\t\tthis.zoom({ start: start, end: end }, false, true); // added instantlyto solve zoomout problem when we have axes gaps. @todo: check how this affects maxZoomFactor\r\n\t}\r\n\r\n\t/**\r\n\t * Handles process after zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Does nothing?\r\n\t */\r\n\tpublic handleSelectionExtremesChange(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tsuper.calculateZoom();\r\n\r\n\t\tlet difference = this.adjustDifference(this._minZoomed, this._maxZoomed);\r\n\t\tlet dataSetChanged = false;\r\n\r\n\t\t// if data has to be grouped, choose interval and set dataset\r\n\t\tif (this.groupData && $type.hasValue(difference)) {\r\n\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\r\n\t\t\tlet modifiedDifference = difference + (this.startLocation + (1 - this.endLocation)) * this.baseDuration;\r\n\t\t\tlet groupInterval: ITimeInterval;\r\n\t\t\tif (this.groupInterval) {\r\n\t\t\t\tgroupInterval = { ...this.groupInterval }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgroupInterval = this.chooseInterval(0, modifiedDifference, this.groupCount, this.groupIntervals);\r\n\t\t\t\tif ($time.getDuration(groupInterval.timeUnit, groupInterval.count) < $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count)) {\r\n\t\t\t\t\tgroupInterval = { ...mainBaseInterval };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._groupInterval = groupInterval;\r\n\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\r\n\t\t\tif (this._currentDataSetId != newId) {\r\n\t\t\t\tthis._currentDataSetId = newId;\r\n\t\t\t\tthis.dispatch(\"groupperiodchanged\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tif (series.setDataSet(this._currentDataSetId)) {\r\n\t\t\t\t\t\tdataSetChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet gridInterval: ITimeInterval = this.chooseInterval(0, difference, this._gridCount);\r\n\r\n\t\tif ($time.getDuration(gridInterval.timeUnit, gridInterval.count) < this.baseDuration) {\r\n\t\t\tgridInterval = { ...this.baseInterval };\r\n\t\t}\r\n\r\n\t\tthis._gridInterval = gridInterval;\r\n\t\tthis._nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t// the following is needed to avoid grid flickering while scrolling\r\n\t\tthis._intervalDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\t\tthis._gridDate = $time.round(\r\n\t\t\tnew Date(this.minZoomed - $time.getDuration(gridInterval.timeUnit, gridInterval.count)),\r\n\t\t\tgridInterval.timeUnit,\r\n\t\t\tgridInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tnew Date(this.min),\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\t// tell series start/end\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\tlet field = <keyof XYSeriesDataItem>series.getAxisField(this);\r\n\r\n\t\t\t\tlet minZoomed = $time.round(\r\n\t\t\t\t\tnew Date(this._minZoomed + this.baseDuration * 0.05),\r\n\t\t\t\t\tthis.baseInterval.timeUnit, this.baseInterval.count,\r\n\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t).getTime();\r\n\t\t\t\tlet minZoomedStr = minZoomed.toString();\r\n\t\t\t\tlet startDataItem = series.dataItemsByAxis.getKey(this.uid).getKey(minZoomedStr + series.currentDataSetId);\r\n\r\n\t\t\t\tlet startIndex: number = 0;\r\n\t\t\t\tif (this.start != 0) {\r\n\t\t\t\t\tif (startDataItem) {\r\n\t\t\t\t\t\tstartDataItem = this.findFirst(startDataItem, minZoomed, field);\r\n\t\t\t\t\t\tstartIndex = startDataItem.index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstartIndex = series.dataItems.findClosestIndex(this._minZoomed, (x) => <number>x[field], \"left\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 1 millisecond is removed so that if only first item is selected, it would not count in the second.\r\n\t\t\t\tlet baseInterval = this.baseInterval;\r\n\t\t\t\tlet maxZoomed = $time.add(\r\n\t\t\t\t\t$time.round(\r\n\t\t\t\t\t\tnew Date(this._maxZoomed),\r\n\t\t\t\t\t\tbaseInterval.timeUnit,\r\n\t\t\t\t\t\tbaseInterval.count,\r\n\t\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t),\r\n\t\t\t\t\tbaseInterval.timeUnit,\r\n\t\t\t\t\tbaseInterval.count,\r\n\t\t\t\t\tthis._df.utc\r\n\t\t\t\t).getTime();\r\n\r\n\t\t\t\tlet maxZoomedStr = maxZoomed.toString();\r\n\t\t\t\tlet endDataItem = series.dataItemsByAxis.getKey(this.uid).getKey(maxZoomedStr + series.currentDataSetId);\r\n\t\t\t\tlet endIndex: number = series.dataItems.length;\r\n\t\t\t\tif (this.end != 1) {\r\n\t\t\t\t\tif (endDataItem) {\r\n\t\t\t\t\t\tendIndex = endDataItem.index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmaxZoomed -= 1;\r\n\t\t\t\t\t\tendIndex = series.dataItems.findClosestIndex(maxZoomed, (x) => <number>x[field], \"right\");\r\n\t\t\t\t\t\t// not good - if end is in the gap, indexes go like 5,4,3,4,2,1\r\n\t\t\t\t\t\t//if (endIndex < series.dataItems.length) {\r\n\t\t\t\t\t\tendIndex++;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.max(this) < minZoomed) {\r\n\t\t\t\t\tseries.startIndex = series.dataItems.length;\r\n\t\t\t\t\tseries.endIndex = series.dataItems.length;\r\n\t\t\t\t\tseries.outOfRange = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.min(this) > maxZoomed) {\r\n\t\t\t\t\tseries.startIndex = 0;\r\n\t\t\t\t\tseries.endIndex = 0;\r\n\t\t\t\t\tseries.outOfRange = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.outOfRange = false;\r\n\t\t\t\t\tseries.startIndex = startIndex;\r\n\t\t\t\t\tseries.endIndex = endIndex;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\tconsole.log(series.name, startIndex, endIndex);\r\n\r\n\t\t\t\tif (!dataSetChanged && series.dataRangeInvalid) {\r\n\t\t\t\t\tseries.validateDataRange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected findFirst(dataItem: XYSeriesDataItem, time: number, key: string): XYSeriesDataItem {\r\n\t\tlet index = dataItem.index;\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tlet series = dataItem.component;\r\n\t\t\tlet previousDataItem = series.dataItems.getIndex(index - 1);\r\n\r\n\t\t\tlet previousDate = (<any>previousDataItem)[key];\r\n\r\n\t\t\tif (!previousDate || previousDate.getTime() < time) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.findFirst(previousDataItem, time, key);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tif (!$type.isNumber(this.baseInterval.count)) {\r\n\t\t\tthis.baseInterval.count = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get minDifference(): number {\r\n\t\tlet minDifference = Number.MAX_VALUE;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (minDifference > this._minDifference[series.uid]) {\r\n\t\t\t\tminDifference = this._minDifference[series.uid];\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (minDifference == Number.MAX_VALUE || minDifference == 0) {\r\n\t\t\tminDifference = $time.getDuration(\"day\");\r\n\t\t}\r\n\r\n\t\treturn minDifference;\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\t\tthis._minDifference[series.uid] = Number.MAX_VALUE;\r\n\t}\r\n\r\n\t/**\r\n\t * [postProcessSeriesDataItems description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\t\tthis._firstWeekDay = this.getFirstWeekDay();\r\n\t\tif (series) {\r\n\t\t\tthis.seriesGroupUpdate(series);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tthis.seriesGroupUpdate(series);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.addEmptyUnitsBreaks();\r\n\t}\r\n\r\n\tprotected seriesGroupUpdate(series: XYSeries) {\r\n\t\tif (JSON.stringify(series._baseInterval[this.uid]) != JSON.stringify(this.mainBaseInterval)) {\r\n\r\n\t\t\tseries._baseInterval[this.uid] = this.mainBaseInterval;\r\n\r\n\t\t\tseries.mainDataSet.each((dataItem) => {\r\n\t\t\t\tthis.postProcessSeriesDataItem(dataItem);\r\n\t\t\t});\r\n\r\n\t\t\tif (this.groupData) {\r\n\t\t\t\tthis.groupSeriesData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates series group data.\r\n\t * \r\n\t * @param  series  Series\r\n\t * @ignore\r\n\t */\r\n\tpublic groupSeriesData(series: XYSeries): void {\r\n\t\tif (series.baseAxis == this && series.dataItems.length > 0 && !series.dataGrouped) {\r\n\r\n\t\t\tseries.bulletsContainer.removeChildren();\r\n\r\n\t\t\t// make array of intervals which will be used;\r\n\t\t\tlet intervals: ITimeInterval[] = [];\r\n\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\t\t\tlet mainIntervalDuration = $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count);\r\n\r\n\t\t\tthis.groupIntervals.each((interval) => {\r\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit, interval.count);\r\n\t\t\t\tif ((intervalDuration > mainIntervalDuration && intervalDuration < (this.max - this.min)) || this.groupInterval) {\r\n\t\t\t\t\tintervals.push(interval);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (series._dataSets) {\r\n\t\t\t\tseries._dataSets.each((key, dataItems) => {\r\n\t\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.dispose();\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdataItems.clear();\r\n\t\t\t\t})\r\n\t\t\t\tseries._dataSets.clear();\r\n\t\t\t}\r\n\r\n\t\t\tseries.dataGrouped = true;\r\n\r\n\t\t\t$array.each(intervals, (interval) => {\r\n\r\n\t\t\t\t//let mainBaseInterval = this._mainBaseInterval;\r\n\t\t\t\tlet key = \"date\" + this.axisLetter;\r\n\r\n\t\t\t\t// create data set\r\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\r\n\t\t\t\t// todo: check where this clone goes\r\n\t\t\t\tlet dataSet = new OrderedListTemplate(series.mainDataSet.template.clone());\r\n\r\n\t\t\t\tseries.dataSets.setKey(dataSetId, dataSet);\r\n\r\n\t\t\t\tlet dataItems = series.mainDataSet;\r\n\t\t\t\tlet previousTime: number = Number.NEGATIVE_INFINITY;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet newDataItem: XYSeriesDataItem;\r\n\r\n\t\t\t\tlet dataFields: string[] = [];\r\n\r\n\t\t\t\t$object.each(series.dataFields, (dfkey, df) => {\r\n\t\t\t\t\tlet dfk = <string>dfkey;\r\n\t\t\t\t\tif (dfk != key && dfk.indexOf(\"Show\") == -1) {\r\n\t\t\t\t\t\tdataFields.push(dfk);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet roundedDate: Date;\r\n\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\tlet date = dataItem.getDate(key);\r\n\t\t\t\t\tif (date) {\r\n\t\t\t\t\t\tlet time = date.getTime();\r\n\t\t\t\t\t\troundedDate = $time.round(\r\n\t\t\t\t\t\t\tnew Date(time),\r\n\t\t\t\t\t\t\tinterval.timeUnit,\r\n\t\t\t\t\t\t\tinterval.count,\r\n\t\t\t\t\t\t\tthis._df.firstDayOfWeek,\r\n\t\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet currentTime = roundedDate.getTime();\r\n\t\t\t\t\t\t// changed period\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (previousTime < currentTime) {\r\n\r\n\t\t\t\t\t\t\tif (newDataItem && series._adapterO) {\r\n\t\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t\tnewDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n\t\t\t\t\t\t\t\t\t\tdataItem: newDataItem,\r\n\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\tvalue: newDataItem.values[vkey].value\r\n\t\t\t\t\t\t\t\t\t}).value;\r\n\r\n\t\t\t\t\t\t\t\t\tnewDataItem.values[vkey].workingValue = newDataItem.values[vkey].value\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnewDataItem = dataSet.create();\r\n\r\n\t\t\t\t\t\t\tnewDataItem.dataContext = {};\r\n\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"dateX\", series.dataItems.template.locations.dateX, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"openDateX\", series.dataItems.template.locations.openDateX, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"dateY\", series.dataItems.template.locations.dateY, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"openDateY\", series.dataItems.template.locations.openDateY, 0);\r\n\r\n\t\t\t\t\t\t\tnewDataItem.component = series;\r\n\t\t\t\t\t\t\t// other Dates?\r\n\t\t\t\t\t\t\tnewDataItem.setDate(key, roundedDate);\r\n\t\t\t\t\t\t\tnewDataItem._index = i;\r\n\t\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t//let groupFieldName = vkey + \"Group\";\r\n\t\t\t\t\t\t\t\tlet dvalues = dataItem.values[vkey];\r\n\t\t\t\t\t\t\t\tif (dvalues) {\r\n\t\t\t\t\t\t\t\t\tlet value = dvalues.value;\r\n\r\n\t\t\t\t\t\t\t\t\tif (series._adapterO) {\r\n\t\t\t\t\t\t\t\t\t\tvalue = series._adapterO.apply(\"groupValue\", {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem: dataItem,\r\n\t\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t\t\t\t}).value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet values = newDataItem.values[vkey];\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalues.value = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.workingValue = value;\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalues.open = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.close = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.low = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.high = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.sum = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.average = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.count = 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tvalues.count = 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tthis.postProcessSeriesDataItem(newDataItem, interval);\r\n\r\n\t\t\t\t\t\t\t$object.each(series.propertyFields, (key, fieldValue) => {\r\n\t\t\t\t\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\t\t\t\t\tlet value: any = (<any>dataItem.properties)[key];\r\n\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t\t\t\tnewDataItem.hasProperties = true;\r\n\t\t\t\t\t\t\t\t\tnewDataItem.setProperty(f, value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tnewDataItem.groupDataItems = [dataItem];\r\n\t\t\t\t\t\t\tpreviousTime = currentTime;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (newDataItem) {\r\n\t\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t\tlet groupFieldName = (<any>series.groupFields)[vkey];\r\n\t\t\t\t\t\t\t\t\tlet dvalues = dataItem.values[vkey];\r\n\t\t\t\t\t\t\t\t\tif (dvalues) {\r\n\t\t\t\t\t\t\t\t\t\tlet value = dvalues.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (series._adapterO) {\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = series._adapterO.apply(\"groupValue\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataItem: dataItem,\r\n\t\t\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t\t\t\t\t}).value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet values = newDataItem.values[vkey];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(values.open)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.open = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.close = value;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (values.low > value || !$type.isNumber(values.low)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.low = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (values.high < value || !$type.isNumber(values.high)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.high = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(values.sum)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.sum += value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.sum = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.count++;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.average = values.sum / values.count;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(values[groupFieldName])) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.value = values[groupFieldName];\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.workingValue = values.value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t$utils.copyProperties(dataItem.properties, newDataItem.properties);\r\n\r\n\t\t\t\t\t\t\t\t$object.each(series.propertyFields, (key, fieldValue) => {\r\n\t\t\t\t\t\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\t\t\t\t\t\tlet value: any = (<any>dataItem.properties)[key];\r\n\t\t\t\t\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t\t\t\t\tnewDataItem.hasProperties = true;\r\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setProperty(f, value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tnewDataItem.groupDataItems.push(dataItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (newDataItem) {\r\n\t\t\t\t\t\t$utils.copyProperties(dataItem.dataContext, newDataItem.dataContext);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (newDataItem && series._adapterO) {\r\n\r\n\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\tnewDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n\t\t\t\t\t\t\tdataItem: newDataItem,\r\n\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\tvalue: newDataItem.values[vkey].value\r\n\t\t\t\t\t\t}).value;\r\n\r\n\t\t\t\t\t\tnewDataItem.values[vkey].workingValue = newDataItem.values[vkey].value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.calculateZoom();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected getDFFormatter() {\r\n\t\tthis._df = this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * [postProcessSeriesDataItem description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem, interval?: ITimeInterval): void {\r\n\t\t// we need to do this for all series data items not only added recently, as baseInterval might change\r\n\t\tlet intervalID = \"\";\r\n\t\tif (interval) {\r\n\t\t\tintervalID = interval.timeUnit + interval.count;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinterval = this.mainBaseInterval;\r\n\t\t}\r\n\r\n\t\tlet series: XYSeries = dataItem.component;\r\n\t\tlet dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n\r\n\t\t$object.each(dataItem.dates, (key) => {\r\n\t\t\tlet date: Date = dataItem.getDate(key);\r\n\t\t\tlet time = date.getTime();\r\n\r\n\t\t\tlet startDate: Date = $time.round(\r\n\t\t\t\tnew Date(time),\r\n\t\t\t\tinterval.timeUnit,\r\n\t\t\t\tinterval.count,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tlet startTime = startDate.getTime();\r\n\t\t\tlet endDate: Date = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc);\r\n\r\n\t\t\tdataItem.setCalculatedValue(key, startTime, \"open\");\r\n\t\t\tdataItem.setCalculatedValue(key, endDate.getTime(), \"close\");\r\n\t\t\tdataItemsByAxis.setKey(startTime + intervalID, dataItem);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Collapses empty stretches of date/time scale by creating [[AxisBreak]]\r\n\t * elements for them.\r\n\t *\r\n\t * Can be used to automatically remove strethes without data, like weekends.\r\n\t *\r\n\t * No, need to call this manually. It will automatically be done if\r\n\t * `skipEmptyPeriods = true`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected addEmptyUnitsBreaks(): void {\r\n\r\n\t\tif (this.skipEmptyPeriods && $type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet timeUnit: TimeUnit = this.baseInterval.timeUnit;\r\n\t\t\tlet count: number = this.baseInterval.count;\r\n\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\tthis._axisBreaks.clear(); // TODO: what about breaks added by user?\r\n\t\t\t}\r\n\r\n\t\t\tlet date: Date = $time.round(\r\n\t\t\t\tnew Date(this.min),\r\n\t\t\t\ttimeUnit,\r\n\t\t\t\tcount,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tlet axisBreak: DateAxisBreak;\r\n\r\n\t\t\twhile (date.getTime() < this.max - this.baseDuration) {\r\n\t\t\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\r\n\t\t\t\tlet startTime: number = date.getTime();\r\n\t\t\t\tlet startTimeStr: string = startTime.toString();\r\n\r\n\t\t\t\tlet hasData = $iter.contains(this.series.iterator(), (series) => {\r\n\t\t\t\t\treturn !!series.dataItemsByAxis.getKey(this.uid).getKey(startTimeStr + series.currentDataSetId);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// open break if not yet opened\r\n\t\t\t\tif (!hasData) {\r\n\t\t\t\t\tif (!axisBreak) {\r\n\t\t\t\t\t\taxisBreak = <DateAxisBreak>this.axisBreaks.create();\r\n\t\t\t\t\t\taxisBreak.startDate = new Date(startTime);\r\n\t\t\t\t\t\tthis._gapBreaks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// close if already opened\r\n\t\t\t\t\tif (axisBreak) {\r\n\t\t\t\t\t\t// close at end time minus one millisecond\r\n\t\t\t\t\t\taxisBreak.endDate = new Date(startTime - 1);\r\n\t\t\t\t\t\taxisBreak = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks) {\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// process breaks\r\n\t\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\t\tlet breakGridCount: number = Math.ceil(this._gridCount * (Math.min(this.end, axisBreak.endPosition) - Math.max(this.start, axisBreak.startPosition)) / (this.end - this.start));\r\n\t\t\t\t\taxisBreak.gridInterval = this.chooseInterval(0, axisBreak.adjustedEndValue - axisBreak.adjustedStartValue, breakGridCount);\r\n\t\t\t\t\tlet gridDate = $time.round(\r\n\t\t\t\t\t\tnew Date(axisBreak.adjustedStartValue),\r\n\t\t\t\t\t\taxisBreak.gridInterval.timeUnit,\r\n\t\t\t\t\t\taxisBreak.gridInterval.count,\r\n\t\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (gridDate.getTime() > axisBreak.startDate.getTime()) {\r\n\t\t\t\t\t\t$time.add(gridDate, axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, this._df.utc);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.gridDate = gridDate;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected getFirstWeekDay(): number {\r\n\t\tif (this._df) {\r\n\t\t\treturn this._df.firstDayOfWeek;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * [getGridDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param date           [description]\r\n\t * @param intervalCount  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getGridDate(date: Date, intervalCount: number): Date {\r\n\t\tlet timeUnit: TimeUnit = this._gridInterval.timeUnit;\r\n\t\tlet realIntervalCount: number = this._gridInterval.count;\r\n\t\t// round date\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\t1,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tlet prevTimestamp: number = date.getTime();\r\n\r\n\t\tlet newDate: Date = $time.copy(date);\r\n\t\t// modify date by adding intervalcount\r\n\t\tlet timestamp: number = $time.add(newDate, timeUnit, intervalCount, this._df.utc).getTime();\r\n\r\n\t\t// if it's axis break, get first rounded date which is not in a break\r\n\t\tlet axisBreak: DateAxisBreak = <DateAxisBreak>this.isInBreak(timestamp);\r\n\t\tif (axisBreak && axisBreak.endDate) {\r\n\t\t\tnewDate = new Date(axisBreak.endDate.getTime());\r\n\t\t\t$time.round(\r\n\t\t\t\tnewDate,\r\n\t\t\t\ttimeUnit,\r\n\t\t\t\trealIntervalCount,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tif (newDate.getTime() < axisBreak.endDate.getTime()) {\r\n\t\t\t\t$time.add(newDate, timeUnit, realIntervalCount, this._df.utc);\r\n\t\t\t}\r\n\t\t\ttimestamp = newDate.getTime();\r\n\t\t}\r\n\r\n\t\t// get duration between grid lines with break duration removed\r\n\t\tlet durationBreaksRemoved: number = this.adjustDifference(prevTimestamp, timestamp);\r\n\t\t// calculate how many time units fit to this duration\r\n\t\tlet countBreaksRemoved: number = Math.round(durationBreaksRemoved / $time.getDuration(timeUnit));\r\n\r\n\t\t// if less units fit, add one and repeat\r\n\t\tif (countBreaksRemoved < realIntervalCount) {\r\n\t\t\treturn this.getGridDate(date, intervalCount + realIntervalCount);\r\n\t\t}\r\n\r\n\t\treturn newDate;\r\n\t}\r\n\r\n\t/**\r\n\t * [getBreaklessDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axisBreak  [description]\r\n\t * @param timeUnit   [description]\r\n\t * @param count      [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getBreaklessDate(axisBreak: DateAxisBreak, timeUnit: TimeUnit, count: number): Date {\r\n\t\tlet date = new Date(axisBreak.endValue);\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\tcount,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\r\n\t\tlet timestamp = date.getTime();\r\n\r\n\t\taxisBreak = <DateAxisBreak>this.isInBreak(timestamp);\r\n\t\tif (axisBreak) {\r\n\t\t\treturn this.getBreaklessDate(axisBreak, timeUnit, count);\r\n\t\t}\r\n\t\treturn date;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates all Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\r\n\t\t\tthis.calculateZoom();\r\n\r\n\t\t\t// first regular items\r\n\t\t\tlet timestamp = this._gridDate.getTime();\r\n\t\t\tlet timeUnit = this._gridInterval.timeUnit;\r\n\t\t\tlet intervalCount = this._gridInterval.count;\r\n\t\t\tlet prevGridDate = $time.copy(this._gridDate);\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\twhile (timestamp <= this._maxZoomed) {\r\n\t\t\t\tlet date = this.getGridDate($time.copy(prevGridDate), intervalCount);\r\n\t\t\t\ttimestamp = date.getTime();\r\n\r\n\t\t\t\tlet endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n\t\t\t\tendDate = $time.add(endDate, timeUnit, intervalCount, this._df.utc);\r\n\r\n\t\t\t\tlet format = this.dateFormats.getKey(timeUnit);\r\n\r\n\t\t\t\tif (this.markUnitChange && prevGridDate) {\r\n\t\t\t\t\tif ($time.checkChange(date, prevGridDate, this._nextGridUnit, this._df.utc)) {\r\n\t\t\t\t\t\tif (timeUnit !== \"year\") {\r\n\t\t\t\t\t\t\tformat = this.periodChangeDateFormats.getKey(timeUnit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet text = this._df.format(date, format);\r\n\r\n\t\t\t\tlet dataItem = dataItemsIterator.find((x) => x.text === text);\r\n\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.appendDataItem(dataItem);\r\n\r\n\t\t\t\tdataItem.axisBreak = undefined;\r\n\t\t\t\tdataItem.date = date;\r\n\t\t\t\tdataItem.endDate = endDate;\r\n\r\n\t\t\t\tdataItem.text = text;\r\n\r\n\t\t\t\tthis.validateDataElement(dataItem);\r\n\r\n\t\t\t\tprevGridDate = date;\r\n\t\t\t}\r\n\r\n\t\t\t// breaks later\r\n\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\tlet timeUnit: TimeUnit = axisBreak.gridInterval.timeUnit;\r\n\t\t\t\t\t\tlet intervalCount: number = axisBreak.gridInterval.count;\r\n\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance * 4) {\r\n\t\t\t\t\t\t\tlet timestamp: number = axisBreak.gridDate.getTime();\r\n\r\n\t\t\t\t\t\t\tlet prevGridDate;\r\n\t\t\t\t\t\t\tlet count: number = 0;\r\n\t\t\t\t\t\t\twhile (timestamp <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tlet date: Date = $time.copy(axisBreak.gridDate);\r\n\t\t\t\t\t\t\t\ttimestamp = $time.add(date, timeUnit, intervalCount * count, this._df.utc).getTime();\r\n\t\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\t\tif (timestamp > axisBreak.adjustedStartValue && timestamp < axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n\t\t\t\t\t\t\t\t\tendDate = $time.add(endDate, timeUnit, intervalCount, this._df.utc);\r\n\r\n\t\t\t\t\t\t\t\t\tlet format = this.dateFormats.getKey(timeUnit);\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.markUnitChange && prevGridDate) {\r\n\t\t\t\t\t\t\t\t\t\tif ($time.checkChange(date, prevGridDate, this._nextGridUnit, this._df.utc)) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (timeUnit !== \"year\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformat = this.periodChangeDateFormats.getKey(timeUnit);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet text: string = this._df.format(date, format);\r\n\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.text === text);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\taxisBreak.dataItems.moveValue(dataItem);\r\n\r\n\t\t\t\t\t\t\t\t\tdataItem.date = date;\r\n\t\t\t\t\t\t\t\t\tdataItem.endDate = endDate;\r\n\t\t\t\t\t\t\t\t\tdataItem.text = text;\r\n\t\t\t\t\t\t\t\t\tprevGridDate = date;\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\tlet timestamp = dataItem.value;\r\n\t\t\tlet endTimestamp = dataItem.endValue;\r\n\r\n\t\t\tif (!$type.isNumber(endTimestamp)) {\r\n\t\t\t\tendTimestamp = timestamp;\r\n\t\t\t}\r\n\r\n\t\t\tlet position: number = this.valueToPosition(timestamp);\r\n\t\t\tlet endPosition: number = this.valueToPosition(endTimestamp);\r\n\t\t\tlet fillEndPosition = endPosition;\r\n\r\n\t\t\tif (!dataItem.isRange && this._gridInterval.count > this.baseInterval.count) {\r\n\t\t\t\tendPosition = position + (endPosition - position) / (this._gridInterval.count / this.baseInterval.count);\r\n\t\t\t}\r\n\r\n\t\t\tdataItem.position = position;\r\n\r\n\t\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\t\tif (tick && !tick.disabled) {\r\n\t\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet grid: Grid = dataItem.grid;\r\n\t\t\tif (grid && !grid.disabled) {\r\n\t\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\t\tif (fill && !fill.disabled) {\r\n\t\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\t\tif (mask) {\r\n\t\t\t\trenderer.updateFillElement(mask, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.bullet) {\r\n\t\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet label: AxisLabel = dataItem.label;\r\n\t\t\tif (label && !label.disabled) {\r\n\t\t\t\tlet location = label.location;\r\n\r\n\r\n\r\n\t\t\t\tif (location == 0) {\r\n\t\t\t\t\tif (this._gridInterval.count == 1 && this._gridInterval.timeUnit != \"week\" && !dataItem.isRange) {\r\n\t\t\t\t\t\tlocation = 0.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlocation = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\trenderer.updateLabelElement(label, position, endPosition, location);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A duration in milliseconds of the `baseInterval`.\r\n\t *\r\n\t * @return Duration (ms)\r\n\t */\r\n\tpublic get baseDuration(): number {\r\n\t\treturn $time.getDuration(this.baseInterval.timeUnit, this.baseInterval.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts min/max values.\r\n\t *\r\n\t * @ignore Exclude from docs.\r\n\t * @todo Description (review)\r\n\t * @param min  Min timestamp\r\n\t * @param max  Max timestamp\r\n\t * @return Adjusted min/max step\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number): IMinMaxStep {\r\n\t\treturn { min: min, max: max, step: this.baseDuration };\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum timestamp as per cell start location.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number) {\r\n\t\t// like this because months are not equal\r\n\t\tlet interval = this.baseInterval;\r\n\r\n\t\tlet startTime = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tinterval.timeUnit,\r\n\t\t\tinterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t).getTime();\r\n\t\tlet endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n\r\n\t\treturn startTime + (endTime - startTime) * this.startLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum timestamp as per cell start location.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number) {\r\n\t\t// like this because months are not equal\r\n\t\tlet interval = this.baseInterval;\r\n\r\n\t\tlet startTime = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tinterval.timeUnit,\r\n\t\t\tinterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t).getTime();\r\n\t\tlet endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n\r\n\t\treturn startTime + (endTime - startTime) * this.endLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * [chooseInterval description]\r\n\t *\r\n\t * @ignore Exclude from docs.\r\n\t * @todo Description\r\n\t * @param index      [description]\r\n\t * @param duration   [description]\r\n\t * @param gridCount  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic chooseInterval(index: number, duration: number, gridCount: number, intervals?: List<ITimeInterval>): ITimeInterval {\r\n\t\tif (!intervals) {\r\n\t\t\tintervals = this.gridIntervals;\r\n\t\t}\r\n\r\n\t\tlet gridInterval: ITimeInterval = intervals.getIndex(index);\r\n\r\n\t\tlet intervalDuration: number = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\r\n\t\tlet lastIndex: number = intervals.length - 1;\r\n\t\tif (index >= lastIndex) {\r\n\t\t\treturn { ...intervals.getIndex(lastIndex) };\r\n\t\t}\r\n\r\n\t\tlet count: number = Math.ceil(duration / intervalDuration);\r\n\r\n\t\tif (duration < intervalDuration && index > 0) {\r\n\t\t\treturn { ...intervals.getIndex(index - 1) };\r\n\t\t}\r\n\t\tif (count <= gridCount) {\r\n\t\t\treturn { ...intervals.getIndex(index) };\r\n\t\t} else {\r\n\t\t\tif (index + 1 < intervals.length) {\r\n\t\t\t\treturn this.chooseInterval(index + 1, duration, gridCount, intervals);\r\n\t\t\t} else {\r\n\t\t\t\treturn { ...intervals.getIndex(index) };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[DateFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\treturn this._df.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Date to an asbolute pixel position within Axis.\r\n\t *\r\n\t * @param date  Date\r\n\t * @return Position (px)\r\n\t */\r\n\tpublic dateToPosition(date: Date): number {\r\n\t\treturn this.valueToPosition(date.getTime());\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric timestamp or a `Date` to a relative position on axis.\r\n\t *\r\n\t * @param date  Date or a timestamp\r\n\t * @return Relative position\r\n\t */\r\n\tpublic anyToPosition(date: Date | number): number {\r\n\t\tif (date instanceof Date) {\r\n\t\t\treturn this.dateToPosition(date);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.valueToPosition(date);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts date to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param date Date\r\n\t * @return IOrientationPoint\r\n\t */\r\n\tpublic dateToPoint(date: Date): IOrientationPoint {\r\n\t\tlet position = this.dateToPosition(date);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(date: Date | number): IOrientationPoint {\r\n\t\tif (date instanceof Date) {\r\n\t\t\treturn this.dateToPoint(date);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.valueToPoint(date);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel position within Axis to a corresponding Date.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Date\r\n\t */\r\n\tpublic positionToDate(position: number): Date {\r\n\t\treturn new Date(this.positionToValue(position));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\t//let stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getTimeByLocation description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @param key       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getTimeByLocation(dataItem: XYSeriesDataItem, key: string, location: number): number {\r\n\r\n\t\tif (!$type.hasValue(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = dataItem.workingLocations[key];\r\n\r\n\t\t\tif (!$type.isNumber(location)) {\r\n\t\t\t\tlocation = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet startTime: number = dataItem.values[key][\"open\"];\r\n\t\tlet endTime: number = dataItem.values[key][\"close\"];\r\n\r\n\t\tlet workingValue = dataItem.values[key].workingValue;\r\n\t\tlet value = dataItem.values[key].value;\r\n\r\n\t\tlet difference = value - workingValue;\r\n\t\tstartTime -= difference;\r\n\t\tendTime -= difference;\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\t\t\treturn startTime + (endTime - startTime) * location;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes a related series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\t\tlet series = dataItem.component;\r\n\t\tlet time: number;\r\n\r\n\t\tlet date: Date = (<any>dataItem)[\"date\" + axisLetter];\r\n\r\n\t\tif ($type.isNumber(this.timezoneOffset)) {\r\n\t\t\tdate.setTime(date.getTime() + (date.getTimezoneOffset() - this.timezoneOffset) * 60000)\r\n\t\t\tdataItem.setValue(\"date\" + axisLetter, date.getTime(), 0);\r\n\t\t}\r\n\t\telse if ($type.hasValue(this.timezone)) {\r\n\t\t\tdate = $time.setTimezone(date, this.timezone);\r\n\t\t\tdataItem.setValue(\"date\" + axisLetter, date.getTime(), 0);\r\n\t\t\t(<any>dataItem)[\"date\" + axisLetter] = date;\r\n\t\t}\r\n\r\n\t\tif (date) {\r\n\t\t\ttime = date.getTime();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet openDate: Date = (<any>dataItem)[\"openDate\" + axisLetter];\r\n\t\tlet prevSeriesTime: number = this._prevSeriesTime[series.uid];\r\n\r\n\r\n\t\tlet openTime: number;\r\n\t\tif (openDate) {\r\n\t\t\topenTime = openDate.getTime();\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(openTime)) {\r\n\t\t\tlet difference = Math.abs(time - openTime);\r\n\r\n\t\t\tif (this._minDifference[series.uid] > difference) {\r\n\t\t\t\tthis._minDifference[series.uid] = difference;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet differece: number = time - prevSeriesTime;\r\n\r\n\t\tif (differece > 0) {\r\n\t\t\tif (this._minDifference[series.uid] > differece) {\r\n\t\t\t\tthis._minDifference[series.uid] = differece;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._prevSeriesTime[series.uid] = time;\r\n\r\n\t\tif (series._baseInterval[this.uid]) {\r\n\t\t\tthis.postProcessSeriesDataItem(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [updateAxisBySeries description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic updateAxisBySeries() {\r\n\t\tsuper.updateAxisBySeries();\r\n\r\n\t\tlet baseInterval: ITimeInterval = this.chooseInterval(0, this.minDifference, 1);\r\n\r\n\t\t// handle short months\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"day\", 27) && baseInterval.timeUnit == \"week\") {\r\n\t\t\tbaseInterval.timeUnit = \"month\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\t\tif (baseInterval.timeUnit == \"month\") {\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 2) && baseInterval.count == 1) {\r\n\t\t\t\tbaseInterval.count = 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 3) && baseInterval.count == 2) {\r\n\t\t\t\tbaseInterval.count = 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 6) && baseInterval.count == 5) {\r\n\t\t\t\tbaseInterval.count = 6;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// handle daylight saving\r\n\t\tif (this.minDifference >= $time.getDuration(\"hour\", 23) && baseInterval.timeUnit == \"hour\") {\r\n\t\t\tbaseInterval.timeUnit = \"day\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"week\", 1) - $time.getDuration(\"hour\", 1) && baseInterval.timeUnit == \"day\") {\r\n\t\t\tbaseInterval.timeUnit = \"week\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"year\", 1) - $time.getDuration(\"day\", 1.01) && baseInterval.timeUnit == \"month\") {\r\n\t\t\tbaseInterval.timeUnit = \"year\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tthis._baseIntervalReal = baseInterval;\r\n\t\tthis._mainBaseInterval = baseInterval;\r\n\r\n\t\t// no need to invalidate\r\n\t}\r\n\r\n\t/**\r\n\t * A base interval (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t *\r\n\t * For example, if you have a data set that has a data point every 5 minutes,\r\n\t * you may want to set this to `{ timeUnit: \"minute\", count: 5 }`.\r\n\t *\r\n\t * If not set, the Axis will try to determine the setting by its own, looking\r\n\t * at actual data.\r\n\t *\r\n\t * For best results, try to follow these values for `count`:\r\n\t *\r\n\t * When unit is \"month\", use 12 / count = round number\r\n\t * When unit is \"hour\", use 24 / count = round number\r\n\t * When unit is \"second\" and \"minute\", use 60 / count = round number\r\n\t *\r\n\t * @param timeInterval base interval\r\n\t */\r\n\tpublic set baseInterval(timeInterval: ITimeInterval) {\r\n\t\tif (JSON.stringify(this._baseInterval) != JSON.stringify(timeInterval)) {\r\n\t\t\tthis._baseInterval = timeInterval;\r\n\t\t\tthis._mainBaseInterval = timeInterval;\r\n\t\t\tif (!$type.isNumber(timeInterval.count)) {\r\n\t\t\t\ttimeInterval.count = 1;\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.postProcessSeriesDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base interval\r\n\t */\r\n\tpublic get baseInterval(): ITimeInterval {\r\n\t\tif (this._groupInterval) {\r\n\t\t\treturn this._groupInterval;\r\n\t\t}\r\n\t\telse if (this._baseInterval) {\r\n\t\t\treturn this._baseInterval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._baseIntervalReal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates granularity of the data of source (unaggregated) data.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @return Granularity of the main data set\r\n\t */\r\n\tpublic get mainBaseInterval(): ITimeInterval {\r\n\t\tif (this._baseInterval) {\r\n\t\t\treturn this._baseInterval;\r\n\t\t}\r\n\t\telse if (this._mainBaseInterval) {\r\n\t\t\treturn this._mainBaseInterval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._baseIntervalReal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If enabled, axis will automatically collapse empty (without data points)\r\n\t * periods of time, i.e. weekends.\r\n\t *\r\n\t * An \"empty\" period is considered a stretch of time in the length of current\r\n\t * `baseInterval` without a single data point in it.\r\n\t *\r\n\t * For each such empty period, axis will automatically create an\r\n\t * [[AxisBreak]]. By default they will be invisible. You can still configure\r\n\t * them by accessing `axis.breaks.template`.\r\n\t *\r\n\t * [More info about breaks](https://www.amcharts.com/docs/v4/concepts/axes/#Breaks).\r\n\t *\r\n\t * Important notes:\r\n\t * * If you set this property to `true`, you can not add your custom axis breaks to this axis anymore.\r\n\t * * Using this feature affects performance. Use only if you need it.\r\n\t * * Setting this to `true` will reset appearance of breaks. If you want to modify appearance, do it *after* you set `skipEmptyPeriods`.\r\n\t * * Some axis label overlapping might happen.\r\n\t * * This setting is not compatible with `groupData = true`.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Remove empty stretches of time?\r\n\t */\r\n\tpublic set skipEmptyPeriods(value: boolean) {\r\n\r\n\t\tif (value) {\r\n\t\t\tlet breakTemplate = this.axisBreaks.template;\r\n\t\t\tbreakTemplate.startLine.disabled = true;\r\n\t\t\tbreakTemplate.endLine.disabled = true;\r\n\t\t\tbreakTemplate.fillShape.disabled = true;\r\n\t\t\tbreakTemplate.breakSize = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._gapBreaks) {\r\n\t\t\t\tthis.axisBreaks.clear();\r\n\t\t\t\tthis._gapBreaks = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.setPropertyValue(\"skipEmptyPeriods\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.postProcessSeriesDataItems();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Remove empty stretches of time?\r\n\t */\r\n\tpublic get skipEmptyPeriods(): boolean {\r\n\t\treturn this.getPropertyValue(\"skipEmptyPeriods\");\r\n\t}\r\n\r\n\t/**\r\n\t * A special date format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t *\r\n\t * @param value  Date format\r\n\t */\r\n\tpublic set tooltipDateFormat(value: string | Intl.DateTimeFormatOptions) {\r\n\t\tthis.setPropertyValue(\"tooltipDateFormat\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get tooltipDateFormat(): string | Intl.DateTimeFormatOptions {\r\n\t\treturn this.getPropertyValue(\"tooltipDateFormat\");\r\n\t}\r\n\r\n\t/**\r\n\t * Use `periodChangeDateFormats` to apply different formats to the first\r\n\t * label in bigger time unit.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use different format for period beginning?\r\n\t */\r\n\tpublic set markUnitChange(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"markUnitChange\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use different format for period beginning?\r\n\t */\r\n\tpublic get markUnitChange(): boolean {\r\n\t\treturn this.getPropertyValue(\"markUnitChange\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a tooltip, based on specific relative position\r\n\t * within axis.\r\n\t *\r\n\t * The label will be formatted as per [[DateFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position\r\n\t * @return Label (formatted date)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet text: string;\r\n\t\tlet date = this.positionToDate(position);\r\n\t\tdate = $time.round(\r\n\t\t\tdate,\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tnew Date(this.min),\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tthis.tooltipDate = date;\r\n\r\n\t\tif ($type.hasValue(this.tooltipDateFormat)) {\r\n\t\t\ttext = this._df.format(date, this.tooltipDateFormat, [\"day\", \"month\", \"week\", \"year\"].indexOf(this.baseInterval.timeUnit) == -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet dateFormat = this.dateFormats.getKey(this.baseInterval.timeUnit);\r\n\t\t\tif (dateFormat) {\r\n\t\t\t\ttext = this._df.format(date, dateFormat);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttext = this.getPositionLabel(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", text);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Takes an absolute position within axis and adjust it to a specific position within base interval. (cell)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position Source position\r\n\t * @param location  Location in the cell\r\n\t * @return Adjusted position\r\n\t */\r\n\tpublic roundPosition(position: number, location?: AxisItemLocation, axisLocation?: number): number {\r\n\t\tlet baseInterval = this.baseInterval;\r\n\t\tlet timeUnit = baseInterval.timeUnit;\r\n\t\tlet count = baseInterval.count;\r\n\r\n\t\tlet date: Date = this.positionToDate(position);\r\n\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\tcount,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tif (location > 0) {\r\n\t\t\t$time.add(date, timeUnit, location * count, this._df.utc);\r\n\t\t}\r\n\r\n\t\tif (axisLocation > 0 && axisLocation < 1) {\r\n\t\t\tdate.setTime(date.getTime() + this.baseDuration * axisLocation);\r\n\t\t}\r\n\r\n\t\tif (this.isInBreak(date.getTime())) {\r\n\t\t\twhile (date.getTime() < this.max) {\r\n\t\t\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\t\t\t\tif (!this.isInBreak(date.getTime())) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.dateToPosition(date);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an relative position of the start of the cell (period), that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Relative position\r\n\t * @return Cell start relative position\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an relative position of the end of the cell (period), that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Relative position\r\n\t * @return Cell end relative position\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 1);\r\n\t\t//return this.dateToPosition($time.add(this.positionToDate(this.roundPosition(position, 1)), this.baseInterval.timeUnit, this.baseInterval.count));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series data item that corresponds to the specific pixel position\r\n\t * of the Axis.\r\n\t *\r\n\t * If `findNearest` (third parameter) is set to `true`, the method will try\r\n\t * to locate nearest available data item if none is found directly under\r\n\t * `position`.\r\n\t *\r\n\t * @param series       Series\r\n\t * @param position     Position (px)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\r\n\t\tlet value: number = this.positionToValue(position);\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (this.axisLetter == \"Y\") {\r\n\t\t\tlocation = series.dataItems.template.locations.dateY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocation = series.dataItems.template.locations.dateX;\r\n\t\t}\r\n\r\n\t\tlet deltaValue = value - location * this.baseDuration;\r\n\r\n\t\tlet date: Date = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\t\tlet nextDate: Date = $time.round(\r\n\t\t\tnew Date(value + this.baseDuration),\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tif (nextDate.getTime() > date.getTime()) {\r\n\t\t\tif (Math.abs(nextDate.getTime() - deltaValue) < Math.abs(deltaValue - date.getTime())) {\r\n\t\t\t\tdate = nextDate;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n\r\n\t\tlet dataItem = dataItemsByAxis.getKey(date.getTime() + series.currentDataSetId);\r\n\r\n\t\t// todo:  alternatively we can find closiest here\r\n\t\tif (!dataItem && findNearest) {\r\n\r\n\t\t\tlet key: \"dateX\" | \"dateY\";\r\n\r\n\t\t\tif (this.axisLetter == \"Y\") {\r\n\t\t\t\tkey = \"dateY\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tkey = \"dateX\";\r\n\t\t\t}\r\n\r\n\t\t\tdataItem = series.dataItems.getIndex(series.dataItems.findClosestIndex(date.getTime(), (x) => {\r\n\t\t\t\tif (x[key]) {\r\n\t\t\t\t\treturn <number>x[key].getTime();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn -Infinity;\r\n\t\t\t\t}\r\n\t\t\t}, \"any\"));\r\n\t\t}\r\n\r\n\t\treturn dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a formatted date based on position in axis scale.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\t// @todo Better format recognition\r\n\t\tlet date = this.positionToDate(position);\r\n\t\treturn this._df.format(date, this.getCurrentLabelFormat());\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label date format based on currently used time units\r\n\t *\r\n\t * @return Format\r\n\t */\r\n\tprotected getCurrentLabelFormat(): string | Intl.DateTimeFormatOptions {\r\n\t\treturn this.dateFormats.getKey(this._gridInterval ? this._gridInterval.timeUnit : \"day\");\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes an Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\t\tsuper.initRenderer();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\t// Set defaults\r\n\t\t\trenderer.ticks.template.location = 0;\r\n\t\t\trenderer.grid.template.location = 0;\r\n\t\t\trenderer.labels.template.location = 0;\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\tlet animation = this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t\tanimation.events.on(\"animationprogress\", () => {\r\n\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t})\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tsuper.handleExtremesChange();\r\n\r\n\t\tif (this.groupData) {\r\n\t\t\tlet id = this.baseInterval.timeUnit + this.baseInterval.count;\r\n\t\t\tthis.groupMin[id] = this._finalMin;\r\n\t\t\tthis.groupMax[id] = this._finalMax;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Zooms axis to specific Dates.\r\n\t *\r\n\t * @param startDate       Start date\r\n\t * @param endValue        End date\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToDates(startDate: Date, endDate: Date, skipRangeEvent?: boolean, instantly?: boolean, adjust?: boolean): void {\r\n\t\tstartDate = this._df.parse(startDate);\r\n\t\tendDate = this._df.parse(endDate);\r\n\t\tthis.zoomToValues(startDate.getTime(), endDate.getTime(), skipRangeEvent, instantly, adjust);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean, adjust?: boolean): void {\r\n\t\tif (!this.groupData) {\r\n\t\t\t//let start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\t\t//let end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\t\tlet start = this.valueToPosition(startValue);\r\n\t\t\tlet end = this.valueToPosition(endValue);\r\n\r\n\t\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet difference = this.adjustDifference(startValue, endValue);\r\n\t\t\tlet isEnd = false;\r\n\t\t\tif (endValue == this.max) {\r\n\t\t\t\tisEnd = true;\r\n\t\t\t}\r\n\t\t\tlet isStart = false;\r\n\t\t\tif (startValue == this.min) {\r\n\t\t\t\tisStart = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(difference)) {\r\n\t\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\t\t\t\tlet groupInterval = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);\r\n\r\n\t\t\t\tif ((groupInterval.timeUnit == mainBaseInterval.timeUnit && groupInterval.count < mainBaseInterval.count) || $time.getDuration(groupInterval.timeUnit, 1) < $time.getDuration(mainBaseInterval.timeUnit, 1)) {\r\n\t\t\t\t\tgroupInterval = { ...mainBaseInterval };\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet id = groupInterval.timeUnit + groupInterval.count;\r\n\t\t\t\tlet min = this.groupMin[id];\r\n\t\t\t\tlet max = this.groupMax[id];\r\n\r\n\t\t\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\t\t\tmin = Number.POSITIVE_INFINITY;\r\n\t\t\t\t\tmax = Number.NEGATIVE_INFINITY;\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tlet seriesMin = series.min(this);\r\n\t\t\t\t\t\tlet seriesMax = series.max(this);\r\n\r\n\t\t\t\t\t\tif (series._dataSets) {\r\n\t\t\t\t\t\t\tlet ds = series._dataSets.getKey(groupInterval.timeUnit + groupInterval.count);\r\n\r\n\t\t\t\t\t\t\tif (ds) {\r\n\t\t\t\t\t\t\t\tlet mindi = ds.getIndex(0);\r\n\t\t\t\t\t\t\t\tlet maxdi = ds.getIndex(ds.length - 1);\r\n\r\n\t\t\t\t\t\t\t\tif (mindi) {\r\n\t\t\t\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMin = mindi.dateX.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMin = mindi.dateY.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (maxdi) {\r\n\t\t\t\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMax = maxdi.dateX.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMax = maxdi.dateY.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tseriesMax = $time.round(\r\n\t\t\t\t\t\t\t$time.add(new Date(seriesMax), groupInterval.timeUnit, 1, this._df.utc),\r\n\t\t\t\t\t\t\tgroupInterval.timeUnit,\r\n\t\t\t\t\t\t\t1,\r\n\t\t\t\t\t\t\tthis._df.firstDayOfWeek,\r\n\t\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t\t).getTime();\r\n\r\n\t\t\t\t\t\tif (seriesMin < min) {\r\n\t\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (seriesMax > max) {\r\n\t\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.groupMin[id] = min;\r\n\t\t\t\t\tthis.groupMax[id] = max;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartValue = $math.fitToRange(startValue, min, max);\r\n\t\t\t\tendValue = $math.fitToRange(endValue, min, max);\r\n\r\n\t\t\t\tif (adjust) {\r\n\t\t\t\t\tif (isEnd) {\r\n\t\t\t\t\t\tstartValue = endValue - difference;\r\n\t\t\t\t\t\tstartValue = $math.fitToRange(startValue, min, max);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isStart) {\r\n\t\t\t\t\t\tendValue = startValue + difference;\r\n\t\t\t\t\t\tendValue = $math.fitToRange(endValue, min, max);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet start: number = (startValue - min) / (max - min);\r\n\t\t\t\tlet end: number = (endValue - min) / (max - min);\r\n\r\n\t\t\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `baseInterval` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"baseInterval\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.dateFormats = source.dateFormats;\r\n\t\tthis.periodChangeDateFormats = source.periodChangeDateFormats;\r\n\t\tthis.groupIntervals.clear();\r\n\t\tsource.groupIntervals.each((interval) => {\r\n\t\t\tthis.groupIntervals.push({ ...interval });\r\n\t\t})\r\n\r\n\t\tthis.gridIntervals.clear();\r\n\t\tsource.gridIntervals.each((interval) => {\r\n\t\t\tthis.gridIntervals.push({ ...interval });\r\n\t\t})\r\n\r\n\t\tif (source._baseInterval) {\r\n\t\t\tthis.baseInterval = source._baseInterval;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\r\n\t\tif (!local) {\r\n\t\t\tposition = this.toAxisPosition(position);\r\n\t\t}\r\n\r\n\t\tif (this.snapTooltip) {\r\n\t\t\t// rounding is not good, pen/aac4e7f66f019d36b2447f050c600c13 (no last tootltip shown)\r\n\t\t\tlet actualDate = this.positionToDate(position) //$time.round(this.positionToDate(position), this.baseInterval.timeUnit, 1, this.getFirstWeekDay(), this.dateFormatter.utc, undefined, this._df.timezoneMinutes, this._df.timezone);\r\n\r\n\t\t\tlet actualTime = actualDate.getTime();\r\n\t\t\tlet closestDate: Date;\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tlet dataItem = this.getSeriesDataItem(series, position, true);\r\n\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tlet date: Date;\r\n\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\tdate = dataItem.dateX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\t\tdate = dataItem.dateY;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!closestDate) {\r\n\t\t\t\t\t\t\tclosestDate = date;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (Math.abs(closestDate.getTime() - actualTime) > Math.abs(date.getTime() - actualTime)) {\r\n\t\t\t\t\t\t\t\tclosestDate = date;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (closestDate) {\r\n\t\t\t\tlet closestTime = closestDate.getTime();\r\n\t\t\t\tclosestDate = $time.round(\r\n\t\t\t\t\tnew Date(closestTime),\r\n\t\t\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\t\t\tthis.baseInterval.count,\r\n\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t);\r\n\t\t\t\tclosestTime = closestDate.getTime();\r\n\r\n\t\t\t\tlet tooltipLocation = this.renderer.tooltipLocation;\r\n\t\t\t\tif (tooltipLocation == 0) {\r\n\t\t\t\t\ttooltipLocation = 0.0001;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclosestDate = new Date(closestDate.getTime() + this.baseDuration * tooltipLocation);\r\n\t\t\t\tposition = this.dateToPosition(closestDate);\r\n\r\n\t\t\t\tif (this.chart.cursor && this.chart.cursor.snapToSeries) {\r\n\t\t\t\t\t//void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\r\n\t\t\t\t\t\tlet dataItem = series.dataItemsByAxis.getKey(this.uid).getKey(closestTime + series.currentDataSetId);\r\n\t\t\t\t\t\tlet point = series.showTooltipAtDataItem(dataItem);\r\n\t\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\t\tthis.chart._seriesPoints.push({ series: series, point: point });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// check, otherwise column tooltip will be hidden\r\n\t\t\t\t\t\t\tif (series.tooltipText || series.tooltipHTML) {\r\n\t\t\t\t\t\t\t\tseries.hideTooltip();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//this.chart.sortSeriesTooltips(seriesPoints);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.showTooltipAtPosition(position, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if data should be aggregated to composide data items if there\r\n\t * are more data items in selected range than `groupCount`.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * NOTE: This works only if [[DateAxis]] is base axis of an [[XYSeries]].\r\n\t *\r\n\t * The related [[XYSeries]] also needs to be set up to take advantage of, by\r\n\t * setting its [`groupFields`](https://www.amcharts.com/docs/v4/reference/xyseries/#groupFields_property).\r\n\t *\r\n\t * The group intervals to aggregate data to is defined by `groupIntervals`\r\n\t * property.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t * \r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t * \r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t * \r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t * \r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t * @param  value  Group data points?\r\n\t */\r\n\tpublic set groupData(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"groupData\", value)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.setDataSet(\"\");\r\n\r\n\t\t\t\tif (value && !series.dataGrouped && series.inited) {\r\n\t\t\t\t\tseries._baseInterval[this.uid] = this.mainBaseInterval;\r\n\t\t\t\t\tthis.groupSeriesData(series);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis._currentDataSetId = \"\"\r\n\t\t\tthis._groupInterval = undefined;\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Group data points?\r\n\t */\r\n\tpublic get groupData(): boolean {\r\n\t\treturn this.getPropertyValue(\"groupData\");\r\n\t}\r\n\r\n\t/**\r\n\t * Disables automatic selection of data grouping intervals and always uses\r\n\t * `groupInterval` if set. Works only if `groupData = true`.\r\n\t * \r\n\t * @since 4.9.24\r\n\t * @param  value  Interval\r\n\t */\r\n\tpublic set groupInterval(value: ITimeInterval) {\r\n\t\tif (this.setPropertyValue(\"groupInterval\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Interval\r\n\t */\r\n\tpublic get groupInterval(): ITimeInterval {\r\n\t\treturn this.getPropertyValue(\"groupInterval\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates threshold of data items in selected range at which to start\r\n\t * aggregating data items if `groupData = true`.\r\n\t * \r\n\t * @default 200\r\n\t * @since 4.7.0\r\n\t * @param  value  Number of data items\r\n\t */\r\n\tpublic set groupCount(value: number) {\r\n\t\tthis.setPropertyValue(\"groupCount\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number of data items\r\n\t */\r\n\tpublic get groupCount(): number {\r\n\t\treturn this.getPropertyValue(\"groupCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data by applying specific offset\r\n\t * in minutes.\r\n\t *\r\n\t * IMPORTANT: do not set `timezoneOffset` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying offset twice.\r\n\t * \r\n\t * @since 4.8.5\r\n\t * @param  value Time zone offset in minutes\r\n\t */\r\n\tpublic set timezoneOffset(value: number) {\r\n\t\tthis.setPropertyValue(\"timezoneOffset\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @todo Timezone offset in minutes\r\n\t */\r\n\tpublic get timezoneOffset(): number {\r\n\t\treturn this.getPropertyValue(\"timezoneOffset\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data to specific named timezone,\r\n\t * e.g. `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`, etc.\r\n\t *\r\n\t * IMPORTANT: it is no longer recommended to use this setting. Please \r\n\t * set`timezone` on `dateFormatter`.\r\n\t *\r\n\t * @deprecated\r\n\t * @since 4.10.1\r\n\t * @param  value Time zone\r\n\t */\r\n\tpublic set timezone(value: string) {\r\n\t\tthis.setPropertyValue(\"timezone\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Timezone\r\n\t */\r\n\tpublic get timezone(): string {\r\n\t\treturn this.getPropertyValue(\"timezone\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current grid interval.\r\n\t *\r\n\t * @return Grid interval\r\n\t */\r\n\tpublic get gridInterval(): ITimeInterval {\r\n\t\treturn this._gridInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeGap(dataItem: LineSeriesDataItem, previous: LineSeriesDataItem): boolean {\r\n\t\tlet series = dataItem.component;\r\n\t\tif (dataItem && previous) {\r\n\t\t\tif (!series.connect && $type.isNumber(series.autoGapCount)) {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tlet date = dataItem.dates[\"date\" + this.axisLetter];\r\n\t\t\t\t\tlet prevDate = previous.dates[\"date\" + this.axisLetter];\r\n\r\n\t\t\t\t\tif (date && prevDate) {\r\n\t\t\t\t\t\tlet time = date.getTime();\r\n\t\t\t\t\t\tlet prevTime = prevDate.getTime();\r\n\r\n\t\t\t\t\t\tif (time - prevTime > series.autoGapCount * this.baseDuration) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\t\treturn this.min;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxis\"] = DateAxis;\r\nregistry.registeredClasses[\"DateAxisDataItem\"] = DateAxisDataItem;\r\n","/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Category break starts on.\r\n\t */\r\n\tstartCategory?: string;\r\n\r\n\t/**\r\n\t * Category break ends on.\r\n\t */\r\n\tendCategory?: string;\r\n\r\n\t/**\r\n\t * Location where break starts within cell (0-1).\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Location where break ends within cell (0-1).\r\n\t */\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CategoryAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisBreakAdapters extends IAxisBreakAdapters, ICategoryAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nexport class CategoryAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: CategoryAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisBreak\";\r\n\t\tthis.properties.startLocation = 0.5;\r\n\t\tthis.properties.endLocation = 0.5;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A category break starts on.\r\n\t *\r\n\t * @param value Start category\r\n\t */\r\n\tpublic set startCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"startCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start category\r\n\t */\r\n\tpublic get startCategory(): string {\r\n\t\treturn this.getPropertyValue(\"startCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * A category break ends on.\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"endCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.getPropertyValue(\"endCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * An index of start category.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"startCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"startValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An index of end category or a end value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"endCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"endValue\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within starting category break should begin.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within ending category break should end.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break end location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break end location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n","/**\r\n * Category axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisItemLocation, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents, IAxisDataItemAdapters } from \"./Axis\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererX } from \"./AxisRendererX\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { ColumnSeries } from \"../series/ColumnSeries\";\r\nimport { CategoryAxisBreak } from \"./CategoryAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CategoryAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CategoryAxisDataItem extends AxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CategoryAxis;\r\n\r\n\tpublic seriesDataItems: { [index: string]: XYSeriesDataItem[] } = {};\r\n\r\n\tpublic deltaAnimation: Animation;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisDataItemAdapters;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisDataItem\";\r\n\t\tthis.text = \"{category}\";\r\n\r\n\t\tthis.locations.category = 0;\r\n\t\tthis.locations.endCategory = 1;\r\n\r\n\t\tthis.deltaPosition = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Category.\r\n\t *\r\n\t * @param value  Category\r\n\t */\r\n\tpublic set category(value: string) {\r\n\t\tlet oldCategory = this.properties.category;\r\n\t\tthis.setProperty(\"category\", value);\r\n\t\tif ($type.hasValue(oldCategory) && oldCategory != value) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get category(): string {\r\n\t\tif (this._adapterO) {\r\n\t\t\tif (this._adapterO.isEnabled(\"category\")) {\r\n\t\t\t\treturn this._adapterO.apply(\"category\", this.properties.category);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.properties.category;\r\n\t}\r\n\r\n\t/**\r\n\t * End category.\r\n\t *\r\n\t * Used for items that span several categories, like [[CategoryAxisBreak]].\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tthis.setProperty(\"endCategory\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.properties.endCategory;\r\n\t}\r\n\r\n\tpublic set deltaPosition(value: number) {\r\n\t\tif (value != this.properties.deltaCoordinate) {\r\n\t\t\tthis.setProperty(\"deltaCoordinate\", value);\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t\tthis.component.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get deltaPosition(): number {\r\n\t\treturn this.properties.deltaCoordinate;\r\n\t}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisDataItemAdapters extends IAxisDataItemAdapters {\r\n\tcategory: string;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisDataFields extends IAxisDataFields {\r\n\r\n\t/**\r\n\t * A field that holds category information.\r\n\t */\r\n\tcategory?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisProperties extends IAxisProperties {\r\n\tsortBySeries?: ColumnSeries;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisEvents extends IAxisEvents { }\r\n\r\n/**\r\n * Defines adapter for [[CategoryAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisAdapters extends IAxisAdapters, ICategoryAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a category-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"CategoryAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Clients\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link ICategoryAxisEvents} for a list of available Events\r\n * @see {@link ICategoryAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CategoryAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ICategoryAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: CategoryAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: CategoryAxisBreak;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: SerialChart;\r\n\r\n\t/**\r\n\t * Frequency of the labels on axis.\r\n\t */\r\n\tprotected _frequency: number;\r\n\r\n\t/**\r\n\t * A collection that holds Axis' data items sorted by each category.\r\n\t */\r\n\tpublic dataItemsByCategory: Dictionary<string, this[\"_dataItem\"]> = new Dictionary<string, this[\"_dataItem\"]>();\r\n\r\n\t/**\r\n\t * last data item is used for the closing grid\r\n\t */\r\n\tprotected _lastDataItem: CategoryAxisDataItem;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"category\";\r\n\r\n\t\tthis._lastDataItem = this.createDataItem();\r\n\t\tthis._lastDataItem.component = this;\r\n\t\tthis._disposers.push(this._lastDataItem);\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tlet dataItemsByCategory = this.dataItemsByCategory;\r\n\t\tthis.addDisposer(this.mainDataSet.events.on(\"removed\", function(event) {\r\n\t\t\tdataItemsByCategory.removeKey(event.oldValue.category);\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CategoryAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new CategoryAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes a related series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\t\tsuper.processSeriesDataItem(dataItem, axisLetter);\r\n\t\tlet category: string = (<any>dataItem)[\"category\" + this.axisLetter];\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet categoryAxisDataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\t\t\tif (categoryAxisDataItem) {\r\n\t\t\t\tlet seriesId = dataItem.component.uid;\r\n\t\t\t\tlet seriesDataItems = categoryAxisDataItem.seriesDataItems[seriesId];\r\n\t\t\t\tif (!seriesDataItems) {\r\n\t\t\t\t\tseriesDataItems = [];\r\n\t\t\t\t\tcategoryAxisDataItem.seriesDataItems[seriesId] = seriesDataItems;\r\n\t\t\t\t}\r\n\t\t\t\tseriesDataItems.push(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.component.dataItems.remove(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\r\n\t\tsuper.validateDataRange();\r\n\r\n\t\t$iter.each(this._series.iterator(), (series) => {\r\n\t\t\tif ((series.xAxis instanceof CategoryAxis) && (series.yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tseries.invalidateDataRange();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet startIndex = this.positionToIndex(this.start);\r\n\t\t\t\tlet endIndex = this.positionToIndex(this.end);\r\n\r\n\t\t\t\tif (endIndex >= this.dataItems.length) {\r\n\t\t\t\t\tendIndex--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesId = series.uid;\r\n\t\t\t\tlet minIndex: number;\r\n\t\t\t\tlet maxIndex: number;\r\n\r\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\r\n\t\t\t\t\tlet axisDataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (axisDataItem) {\r\n\t\t\t\t\t\tlet seriesDataItems = axisDataItem.seriesDataItems[seriesId];\r\n\r\n\t\t\t\t\t\tif (seriesDataItems) {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < seriesDataItems.length; i++) {\r\n\t\t\t\t\t\t\t\tlet seriesDataItem = seriesDataItems[i];\r\n\t\t\t\t\t\t\t\tif (seriesDataItem) {\r\n\t\t\t\t\t\t\t\t\tlet index = seriesDataItem.index;\r\n\t\t\t\t\t\t\t\t\tif (!$type.isNumber(minIndex) || index < minIndex) {\r\n\t\t\t\t\t\t\t\t\t\tminIndex = index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!$type.isNumber(maxIndex) || index > maxIndex) {\r\n\t\t\t\t\t\t\t\t\t\tmaxIndex = index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(minIndex)) {\r\n\t\t\t\t\tseries.startIndex = minIndex;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.start = this.start;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(maxIndex)) {\r\n\t\t\t\t\tseries.endIndex = maxIndex + 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.end = this.end;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// range might not change, but axis breaks might.\r\n\t\t\t\tif (this._axisBreaks && this._axisBreaks.length > 0) {\r\n\t\t\t\t\tseries.invalidateDataRange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet dataCount: number = this.dataItems.length;\r\n\r\n\t\tlet startIndex = $math.fitToRange(Math.floor(this.start * dataCount - 1), 0, dataCount);\r\n\t\tlet endIndex = $math.fitToRange(Math.ceil(this.end * dataCount), 0, dataCount);\r\n\r\n\t\tif (this.renderer.invalid) {\r\n\t\t\tthis.renderer.validate();\r\n\t\t}\r\n\r\n\t\t// find frequency at which we'll show items\r\n\t\tlet maxCount: number = this.renderer.axisLength / Math.max(this.renderer.minGridDistance, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\tlet frequency: number = Math.min(this.dataItems.length, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\tthis._startIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\tthis._endIndex = Math.ceil(this.end * dataCount);\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tif (this._startIndex == this._endIndex) {\r\n\t\t\tthis._endIndex++;\r\n\t\t}\r\n\r\n\t\tthis._frequency = frequency;\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.maxZoomFactor = this.dataItems.length;\r\n\t\tif (this.dataItems.length <= 0) {\r\n\t\t\tthis.maxZoomFactor = 1;\r\n\t\t}\r\n\r\n\t\tthis.resetIterators();\r\n\r\n\t\t// it's important to use protected variables here, as getters will return 0 - length\r\n\t\t// TODO use iterator instead\r\n\t\t// @ todo: not solved cat axis item fading\r\n\t\tstartIndex = $math.max(0, this._startIndex - this._frequency);\r\n\t\tendIndex = $math.min(this.dataItems.length, this._endIndex + this._frequency);\r\n\r\n\t\tlet itemIndex = 0;\r\n\r\n\t\tfor (let i = 0; i < startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\r\n\t\tfor (let i = endIndex, len = this.dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tif (i < this.dataItems.length) {\r\n\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\t\tif (i / this._frequency == Math.round(i / this._frequency)) {\r\n\t\t\t\t\tlet axisBreak: CategoryAxisBreak = this.isInBreak(i);\r\n\t\t\t\t\tif (!axisBreak) {\r\n\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\tthis.validateDataElement(dataItem, itemIndex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titemIndex++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//previously we disabled all before, but this is better for cpu\r\n\t\t\t\t\t//this.validateDataElement(dataItem, itemIndex); // helps to solve shrinking // not good - creates all items\r\n\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.appendDataItem(this._lastDataItem);\r\n\t\tthis.validateDataElement(this._lastDataItem, itemIndex + 1, this.dataItems.length);\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet adjustedStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet adjustedEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tif ($math.intersect({ start: adjustedStartValue, end: adjustedEndValue }, { start: this._startIndex, end: this._endIndex })) {\r\n\r\n\t\t\t\t\tfor (let b = adjustedStartValue; b <= adjustedEndValue; b++) {\r\n\t\t\t\t\t\tlet dataItem = this.dataItems.getIndex(b);\r\n\t\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet frequency: number = $math.fitToRange(Math.ceil(this._frequency / axisBreak.breakSize), 1, adjustedEndValue - adjustedStartValue);\r\n\t\t\t\t\tlet itemIndex = 0;\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// TODO use iterator instead\r\n\t\t\t\t\t\tfor (let b = adjustedStartValue; b <= adjustedEndValue; b = b + frequency) {\r\n\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(b);\r\n\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\tthis.validateDataElement(dataItem, itemIndex);\r\n\t\t\t\t\t\t\titemIndex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.validateBreaks();\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.ghostLabel.invalidate(); // solves font issue\r\n\t\tthis.renderer.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem   [description]\r\n\t * @param itemIndex  [description]\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"], itemIndex?: number, index?: number): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = this.categoryToIndex(dataItem.category);\r\n\t\t}\r\n\r\n\t\tlet endIndex = this.categoryToIndex(dataItem.endCategory);\r\n\r\n\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\tendIndex = index;\r\n\t\t}\r\n\r\n\t\tlet position: number = this.indexToPosition(index, dataItem.locations.category);\r\n\t\tlet endPosition: number = this.indexToPosition(endIndex, dataItem.locations.endCategory);\r\n\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet fillEndIndex: number;\r\n\t\tlet fillPosition: number;\r\n\t\tlet fillEndPosition: number;\r\n\r\n\t\tif (dataItem.isRange) {\r\n\t\t\tfillEndIndex = endIndex;\r\n\t\t\tfillPosition = this.indexToPosition(index, dataItem.locations.category);\r\n\t\t\tfillEndPosition = this.indexToPosition(fillEndIndex, dataItem.locations.endCategory);\r\n\t\t}\r\n\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\t// theorethically this might result problems if category text changes, the range text won't change. But otherwise range.label.text = \"custom text\" won't work, which is not intuitive.\r\n\t\t\tif (!dataItem.isRange || label.text == undefined) {\r\n\t\t\t\tdataItem.text = dataItem.text;\r\n\t\t\t}\r\n\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\r\n\t\t\tif ((renderer instanceof AxisRendererY && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (renderer instanceof AxisRendererX && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\tif (dataItem.label.html) {\r\n\t\t\t\t\tthis.ghostLabel.html = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tfillEndIndex = index + this._frequency;\r\n\t\t\t\tfillPosition = this.indexToPosition(index, fill.location);\r\n\t\t\t\tfillEndPosition = this.indexToPosition(fillEndIndex, fill.location);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.updateFillElement(fill, fillPosition, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem, itemIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, fillPosition, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tthis.dataItemsByCategory.clear();\r\n\t\tsuper.disposeData();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  The raw data that corresponds to this data item\r\n\t */\r\n\tpublic processDataItem(dataItem: this[\"_dataItem\"], dataContext: Object): void {\r\n\t\tif (dataItem) {\r\n\t\t\t// creat a collection for fast access\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\t\t\t// check if such category already exists\r\n\t\t\t//let existingDataItem: CategoryAxisDataItem = this.dataItemsByCategory.getKey(dataItem.category);\r\n\t\t\t//if (existingDataItem && existingDataItem != dataItem) {\r\n\t\t\t//\tthis.dataItems.remove(existingDataItem);\r\n\t\t\t//}\r\n\r\n\t\t\tif ($type.hasValue(dataItem.category)) {\r\n\t\t\t\tthis.dataItemsByCategory.setKey(dataItem.category, dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected getDataItem(dataContext?: any): this[\"_dataItem\"] {\r\n\t\tlet category: string = <string>(dataContext[this.dataFields.category]);\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.dataItems.create();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a category index to an actual screen coordinate on the axis.\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t *\r\n\t * @param index     Index\r\n\t * @param location  Location (0-1)\r\n\t * @return Position (px)\r\n\t */\r\n\tpublic indexToPosition(index: number, location?: AxisItemLocation | number): number {\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = 0.5;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet difference: number = this.adjustDifference(startIndex, endIndex);\r\n\r\n\t\tlet startLocation = this.startLocation;\r\n\t\tlet endLocation = this.endLocation;\r\n\r\n\t\tdifference -= startLocation;\r\n\t\tdifference -= (1 - endLocation);\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet breakStartIndex: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet breakEndIndex: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tif (index < startIndex || !$type.isNumber(breakStartIndex) || !$type.isNumber(breakEndIndex)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.intersect({ start: breakStartIndex, end: breakEndIndex }, { start: startIndex, end: endIndex })) {\r\n\t\t\t\t\tbreakStartIndex = Math.max(startIndex, breakStartIndex);\r\n\t\t\t\t\tbreakEndIndex = Math.min(endIndex, breakEndIndex);\r\n\r\n\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\tif (index > breakEndIndex) {\r\n\t\t\t\t\t\tstartIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\telse if (index < breakStartIndex) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// value within break\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = breakStartIndex + (index - breakStartIndex) * breakSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet deltaPosition = 0;\r\n\t\tlet dataItem = this.dataItems.getIndex(index);\r\n\t\tif (dataItem) {\r\n\t\t\tdeltaPosition = dataItem.deltaPosition;\r\n\t\t}\r\n\r\n\t\treturn $math.round(deltaPosition + (index + location - startLocation - startIndex) / difference, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a string category name to relative position on axis.\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t *\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Position\r\n\t */\r\n\tpublic categoryToPosition(category: string, location?: AxisItemLocation): number {\r\n\t\tlet index: number = this.categoryToIndex(category);\r\n\t\treturn this.indexToPosition(index, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a string category name to a orientation point (x, y, angle) on axis\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic categoryToPoint(category: string, location?: AxisItemLocation): IOrientationPoint {\r\n\t\tlet position = this.categoryToPosition(category, location);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a string category name to a orientation point (x, y, angle) on axis\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Orientation point\r\n\t */\r\n\tanyToPoint(category: string, location?: AxisItemLocation): IOrientationPoint {\r\n\t\treturn this.categoryToPoint(category, location);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a string category name to relative position on axis.\r\n\t *\r\n\t * An alias to `categoryToPosition()`.\r\n\t *\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Relative position\r\n\t */\r\n\tpublic anyToPosition(category: string, location?: AxisItemLocation): number {\r\n\t\treturn this.categoryToPosition(category, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts named category to an index of data item it corresponds to.\r\n\t *\r\n\t * @param category  Category\r\n\t * @return Data item index\r\n\t */\r\n\tpublic categoryToIndex(category: string): number {\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem.index;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific named ctaegories.\r\n\t *\r\n\t * @param startCategory  Start category\r\n\t * @param endCategory    End category\r\n\t */\r\n\tpublic zoomToCategories(startCategory: string, endCategory: string): void {\r\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start         [description]\r\n\t * @param end           [description]\r\n\t * @param startLocation [description]\r\n\t * @param endLocation   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: string, end: string, startLocation?: AxisItemLocation, endLocation?: AxisItemLocation): string {\r\n\t\tlet startPos: number = this.categoryToPosition(start, startLocation);\r\n\t\tlet endPos: number = this.categoryToPosition(end, endLocation);\r\n\t\treturn this.getPositionRangePath(startPos, endPos); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Takes an absolute position (px) within axis and adjust it to a specific\r\n\t * `location` within category it corresponds to.\r\n\t *\r\n\t * @param position  Source position (px)\r\n\t * @param location  Location within category (0-1)\r\n\t * @return Adjusted position (px)\r\n\t */\r\n\tpublic roundPosition(position: number, location?: AxisItemLocation): number {\r\n\t\tlet index: number = this.positionToIndex(position);\r\n\t\treturn this.indexToPosition(index, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and returns first series data item with specific category\r\n\t * @param series    Target series\r\n\t * @param category  Category\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getFirstSeriesDataItem(series: XYSeries, category: string): XYSeriesDataItem {\r\n\r\n\t\tfor (let i = 0; i < series.dataItems.length; i++) {\r\n\t\t\tlet dataItem = series.dataItems.getIndex(i);\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and returns last series data item with specific category.\r\n\t * @param series    Target series\r\n\t * @param category  Category\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getLastSeriesDataItem(series: XYSeries, category: string): XYSeriesDataItem {\r\n\r\n\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = series.dataItems.getIndex(i);\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// todo: optimize\r\n\tpublic getSeriesDataItemByCategory(category: string, series: XYSeries): XYSeriesDataItem {\r\n\t\tlet seriesDataItem: XYSeriesDataItem;\r\n\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\tseriesDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\tseriesDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn seriesDataItem;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a data item from Series that corresponds to a specific absolute\r\n\t * position on the Axis.\r\n\t *\r\n\t * @param series    Target series\r\n\t * @param position  Position (px)\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\r\n\t\tif ($type.isNumber(position)) {\r\n\r\n\t\t\tlet index = this.positionToIndex(position);\r\n\r\n\t\t\tif (index >= this.dataItems.length) {\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.dataItems.getIndex(index);\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet category = dataItem.category;\r\n\t\t\t\tlet sdi: XYSeriesDataItem;\r\n\r\n\t\t\t\tlet seriesDataItem = series.dataItems.getIndex(index);\r\n\t\t\t\tif (seriesDataItem) {\r\n\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\tif (seriesDataItem.categoryX == category) {\r\n\t\t\t\t\t\t\treturn seriesDataItem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\tif (seriesDataItem.categoryY == category) {\r\n\t\t\t\t\t\t\treturn seriesDataItem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\t\t\tif (!sdi) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(index - sdi.index) > Math.abs(index - dataItem.index)) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\t\t\tif (!sdi) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(index - sdi.index) > Math.abs(index - dataItem.index)) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//@todo\r\n\t\t\t\tif (findNearest) {\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sdi;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position = this.getPositionX(dataItem, key, location, stackKey, range);\r\n\r\n\t\tif ($type.isNaN(position)) {\r\n\t\t\treturn this.basePoint.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.positionToPoint(position).x;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Category\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position;\r\n\t\tif ($type.hasValue(key)) {\r\n\t\t\tposition = this.categoryToPosition(dataItem.categories[key], location);\r\n\t\t}\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\r\n\t\tlet position = this.getPositionY(dataItem, key, location, stackKey, range);\r\n\r\n\t\tif ($type.isNaN(position)) {\r\n\t\t\treturn this.basePoint.y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.positionToPoint(position).y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Category\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position;\r\n\t\tif ($type.hasValue(key)) {\r\n\t\t\tposition = this.categoryToPosition(dataItem.categories[key], location);\r\n\t\t}\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack key (?)\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position = this.categoryToPosition(dataItem.categories[key], location);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an absolute pixel coordinate of the start of the cell (category),\r\n\t * that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Position (px)\r\n\t * @return Cell start position (px)\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an absolute pixel coordinate of the end of the cell (category),\r\n\t * that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Position (px)\r\n\t * @return Cell end position (px)\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a category tooltip, based on specific position\r\n\t * within axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (category)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(this.positionToIndex(position));\r\n\r\n\t\tif (dataItem) {\r\n\t\t\tthis.tooltipDataItem = dataItem;\r\n\t\t\tthis.tooltip.dataItem = dataItem;\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treturn this.tooltipText;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\treturn dataItem.category;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._adapterO.apply(\"getTooltipText\", dataItem.category);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the category that corresponds to specific pixel\r\n\t * position within axis.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Category index\r\n\t */\r\n\tpublic positionToIndex(position: number): number {\r\n\t\tposition = $math.round(position, 10);\r\n\t\tif (position < 0) {\r\n\t\t\tposition = 0;\r\n\t\t}\r\n\r\n\t\tif (position > 1) {\r\n\t\t\tposition = 1;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet difference: number = endIndex - startIndex - this.startLocation - (1 - this.endLocation);\r\n\r\n\t\tposition += 1 / difference * this.startLocation;\r\n\t\tlet index: number = null;\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\t// in case we have some axis breaks\r\n\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\tlet breakStartIndex: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet breakEndIndex: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tbreakStartIndex = $math.max(breakStartIndex, startIndex);\r\n\t\t\t\tbreakEndIndex = $math.min(breakEndIndex, endIndex);\r\n\r\n\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\tdifference -= (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\r\n\t\t\t\t// position to the right of break end\r\n\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\tstartIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\t\t\t\t}\r\n\t\t\t\t// position to the left of break start\r\n\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// value within break\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\tindex = breakStartIndex + Math.round(breakPosition * (breakEndIndex - breakStartIndex));\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = Math.floor(position * difference + startIndex);\r\n\t\t}\r\n\t\tif (index >= this.dataItems.length) {\r\n\t\t\tindex = this.dataItems.length - 1;\r\n\t\t}\r\n\t\t// not good, when panning out of bounds, each time one less item gets selected\r\n\t\t//if (index >= endIndex) {\r\n\t\t//\tindex--;\r\n\t\t//}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns category based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * This is a synonim of `getPositionLabel()` implemented here for consistentcy.\r\n\t *\r\n\t * @since 4.3.8\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic positionToCategory(position: number): string {\r\n\t\treturn this.getPositionLabel(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns category based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(this.positionToIndex(position));\r\n\t\tif (dataItem) {\r\n\t\t\treturn dataItem.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\t// This makes base grid to be drawn at the end of the axis and adds extra\r\n\t\t// grid which we need to nicely close the chart.\r\n\t\treturn this.renderer.positionToPoint(1);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\t\tsuper.initRenderer();\r\n\r\n\t\tlet renderer = this.renderer;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Current frequency of labels of the axis.\r\n\t *\r\n\t * Normally it would be 1, but when labels start to be hidden due\r\n\t * to `minGridDistance` this read-only property will increase.\r\n\t *\r\n\t * @readonly\r\n\t * @since 4.2.0\r\n\t * @return Label frequency\r\n\t */\r\n\tpublic get frequency(): number {\r\n\t\treturn this._frequency;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to a reference of [[ColumnSeries]] the categories will be sorted\r\n\t * by actual values.\r\n\t *\r\n\t * The categories are ordered in descending order (from highest values to\r\n\t * lowest). To reverse the order, use axis renderer's `inversed` setting.\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.sortBySeries = series;\r\n\t * categoryAxis.renderer.inversed = true;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.sortBySeries = series;\r\n\t * categoryAxis.renderer.inversed = true;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"sortBySeries\": \"s1\",\r\n\t *     \"renderer\": {\r\n\t *       // ...\r\n\t *       \"inversed\": true\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.8.7\r\n\t * @param  value  Sort categories?\r\n\t */\r\n\tpublic set sortBySeries(value: ColumnSeries) {\r\n\t\tthis.setPropertyValue(\"sortBySeries\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sort categories?\r\n\t */\r\n\tpublic get sortBySeries(): ColumnSeries {\r\n\t\treturn this.getPropertyValue(\"sortBySeries\");\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.sortBySeries) && $type.isString(config.sortBySeries)) {\r\n\t\t\t\tif (this.map.hasKey(config.sortBySeries)) {\r\n\t\t\t\t\tconfig.sortBySeries = this.map.getKey(config.sortBySeries);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.addDelayedMap(\"sortBySeries\", config.sortBySeries);\r\n\t\t\t\t\tdelete config.sortBySeries;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxis\"] = CategoryAxis;\r\nregistry.registeredClasses[\"CategoryAxisDataItem\"] = CategoryAxisDataItem;\r\n","/**\r\n * XY series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYCursor } from \"../cursors/XYCursor\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * [_minX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minX: number;\r\n\r\n\t/**\r\n\t * [_maxX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxX: number;\r\n\r\n\t/**\r\n\t * [_minY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minY: number;\r\n\r\n\t/**\r\n\t * [_maxY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxY: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic _component!: XYSeries;\r\n\r\n\t/**\r\n\t * References to any aggregate data items this data item is part of.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupDataItems: this[];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYSeriesDataItem\";\r\n\r\n\t\tthis.values.customValue = {};\r\n\r\n\t\tthis.values.valueX = { stack: 0 };\r\n\t\tthis.values.valueY = { stack: 0 };\r\n\t\tthis.values.openValueX = {};\r\n\t\tthis.values.openValueY = {};\r\n\r\n\t\tthis.values.dateX = {};\r\n\t\tthis.values.dateY = {};\r\n\t\tthis.values.openDateX = {};\r\n\t\tthis.values.openDateY = {};\r\n\r\n\t\tthis.setLocation(\"dateX\", 0.5, 0);\r\n\t\tthis.setLocation(\"dateY\", 0.5, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0.5, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0.5, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's custom numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set customValue(value: number) {\r\n\t\tthis.setValue(\"customValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get customValue(): number {\r\n\t\treturn this.values.customValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateX(date: Date) {\r\n\t\tthis.setDate(\"dateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateX(): Date {\r\n\t\treturn this.getDate(\"dateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateY(date: Date) {\r\n\t\tthis.setDate(\"dateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateY(): Date {\r\n\t\treturn this.getDate(\"dateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryX(category: string) {\r\n\t\tthis.setCategory(\"categoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryX(): string {\r\n\t\treturn this.categories.categoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryY(category: string) {\r\n\t\tthis.setCategory(\"categoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryY(): string {\r\n\t\treturn this.categories.categoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueX(value: number) {\r\n\t\tthis.setValue(\"openValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueX(): number {\r\n\t\treturn this.values.openValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueY(value: number) {\r\n\t\tthis.setValue(\"openValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueY(): number {\r\n\t\treturn this.values.openValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateX(date: Date) {\r\n\t\tthis.setDate(\"openDateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateX(): Date {\r\n\t\treturn this.getDate(\"openDateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateY(date: Date) {\r\n\t\tthis.setDate(\"openDateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateY(): Date {\r\n\t\treturn this.getDate(\"openDateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryX(category: string) {\r\n\t\tthis.setCategory(\"openCategoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryX(): string {\r\n\t\treturn this.categories.openCategoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryY(category: string) {\r\n\t\tthis.setCategory(\"openCategoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryY(): string {\r\n\t\treturn this.categories.openCategoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Return smallest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMin(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) {  // dumped because of non smooth zooming\r\n\t\tlet min: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value < min || !$type.isNumber(min)) {\r\n\t\t\t\tmin = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn min;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Return biggest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMax(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) { // dumped because of non smooth zooming\r\n\t\tlet max: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value > max || !$type.isNumber(max)) {\r\n\t\t\t\tmax = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn max;\r\n\t\t//}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Defines property set for a [[XYSeries]] tooltip event that contains information about dataItem\r\n */\r\nexport type XYSeriesTooltipEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tdataItem: XYSeriesDataItem;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for horizontal axis.\r\n\t */\r\n\tvalueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for vertical axis.\r\n\t */\r\n\tvalueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for horizontal axis.\r\n\t */\r\n\tcategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for vertical axis.\r\n\t */\r\n\tcategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for horizontal axis.\r\n\t */\r\n\tdateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for vertical axis.\r\n\t */\r\n\tdateY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for horizontal\r\n\t * axis.\r\n\t */\r\n\topenValueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for vertical\r\n\t * axis.\r\n\t */\r\n\topenValueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for horizontal axis.\r\n\t */\r\n\topenCategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for vertical axis.\r\n\t */\r\n\topenCategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for horizontal axis.\r\n\t */\r\n\topenDateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for vertical axis.\r\n\t */\r\n\topenDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for some custom data.\r\n\t */\r\n\tcustomValue?: string;\r\n}\r\n\r\n\r\n/**\r\n * Defines types of the aggregate value.\r\n *\r\n * @since 4.7.0\r\n */\r\nexport type GroupField = \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\";\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueX` data field.\r\n\t *\r\n\t * @default \"close\"\r\n\t */\r\n\tvalueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueY` data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tvalueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `customValue` value data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tcustomValue?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueX` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueY` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueY?: GroupField;\r\n}\r\n\r\n/**\r\n * Defines properties for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tstacked?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tcursorHoverEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\texcludeFromTotal?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\t/**\r\n\t * Should series bullets be masked?\r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [boolean description]\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @default true\r\n\t */\r\n\tstackToNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesEvents extends ISeriesEvents {\r\n\t/**\r\n\t * Invoked when series tooltip was shown on some particular data item\r\n\t */\r\n\ttooltipshownat: XYSeriesTooltipEvent;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[XYSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYSeriesAdapters extends ISeriesAdapters, IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to a source value that is being used to calculate aggregate values\r\n\t * for a grouped data item.\r\n\t * \r\n\t * applied only if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupValue: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n\t/**\r\n\t * Applied to a calculated aggregate data item and its values, so that\r\n\t * specific logic can be applied to calculation of derivative values.\r\n\t *\r\n\t * User's code needs to modify specific value in `values` object, most\r\n\t * probably `close` as it's the default grouping field.\r\n\t * \r\n\t * Applied only * if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.36\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupDataItem: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: IXYSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Indicates which of the series' `dataFields` to calculate aggregate values\r\n\t * for.\r\n\t *\r\n\t * Available data fields for all [[XYSeries]] are:\r\n\t * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n\t *\r\n\t * [[CandlestickSeries]] adds:\r\n\t * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n\t *\r\n\t * Available options:\r\n\t * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n\t *\r\n\t * Defaults are as follows:\r\n\t * * `valueX`: `\"close\"`\r\n\t * * `valueY`: `\"close\"`\r\n\t * * `openValueX`: `\"open\"`\r\n\t * * `openValueY`: `\"open\"`\r\n\t * * `lowValueX`: `\"low\"`\r\n\t * * `lowValueY`: `\"low\"`\r\n\t * * `highValueX`: `\"high\"`\r\n\t * * `highValueY`: `\"high\"`\r\n\t *\r\n\t * Is required only if data being plotted on a `DateAxis` and\r\n\t * its `groupData` is set to `true`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above setup will ensure, that if there are many data items within\r\n\t * selected range, they will be grouped into aggregated data points, using\r\n\t * average value of all the values.\r\n\t *\r\n\t * For example if we have 2 years worth of daily data (~700 data items), when\r\n\t * fully zoomed out, the chart would show ~100 data items instead: one for\r\n\t * each week in those two years.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupFields: this[\"_groupFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IXYSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t */\r\n\tprotected _baseAxis: Axis;\r\n\r\n\t/**\r\n\t * Total data item count.\r\n\t */\r\n\tprotected _count: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * Data item count in current selection.\r\n\t */\r\n\tprotected _scount: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * [_xField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xField: string;\r\n\r\n\t/**\r\n\t * [_yField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yField: string;\r\n\r\n\t/**\r\n\t * [_xOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xOpenField: string;\r\n\r\n\t/**\r\n\t * [_yOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yOpenField: string;\r\n\r\n\t/**\r\n\t * [_tooltipXField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipXField: string;\r\n\r\n\t/**\r\n\t * [_tooltipYField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipYField: string;\r\n\r\n\t/**\r\n\t * [_xValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * [_yValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * Series which is stacked on top of this series, if any.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stackedSeries: XYSeries;\r\n\r\n\t/**\r\n\t * Dataitem of previously shown tooltip, used to avoid multiple\r\n\t * tooltipshownat dispatches.\r\n\t */\r\n\tprotected _prevTooltipDataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _baseInterval: { [index: string]: ITimeInterval } = {};\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataGrouped = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic usesShowFields: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _dataSetChanged: boolean = false;\r\n\r\n\r\n\tprotected _maxxX: number = 100000;\r\n\tprotected _maxxY: number = 100000;\r\n\r\n\tprotected _propertiesChanged: boolean = false;\r\n\r\n\t/**\r\n\t * If this series was used to create a series for scrollbar, this is a reference to it.\r\n\t */\r\n\tpublic scrollbarSeries: this;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic outOfRange: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYSeries\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\r\n\t\tthis.groupFields.valueX = \"close\";\r\n\t\tthis.groupFields.valueY = \"close\";\r\n\t\tthis.groupFields.customValue = \"close\";\r\n\r\n\t\tthis.groupFields.openValueX = \"open\";\r\n\t\tthis.groupFields.openValueY = \"open\";\r\n\r\n\t\tthis.cursorTooltipEnabled = true;\r\n\r\n\t\tthis.cursorHoverEnabled = true;\r\n\t\tthis.excludeFromTotal = false;\r\n\r\n\t\tthis.mainContainer.mask = new Sprite();\r\n\t\tthis.mainContainer.mask.setElement(this.paper.add(\"path\"));\r\n\r\n\t\tthis.stacked = false;\r\n\t\tthis.snapTooltip = false;\r\n\r\n\t\tthis._showBullets = false;\r\n\r\n\t\tthis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\tthis.properties.stackToNegative = true;\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.setPropertyValue(\"maskBullets\", true);\r\n\r\n\t\tthis.tooltip.events.on(\"hidden\", () => {\r\n\t\t\tthis.returnBulletDefaultState();\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.observe(visualProperties, () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis._propertiesChanged = true;\r\n\t\t\t\tif (this.legendDataItem) {\r\n\t\t\t\t\tthis.legendDataItem.childrenCreated = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.chart && this.chart.legend) {\r\n\t\t\t\t\tthis.chart.legend.invalidateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new XYSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic resetExtremes() {\r\n\t\tthis._tmin.clear();\r\n\t\tthis._tmax.clear();\r\n\r\n\t\tthis._smin.clear();\r\n\t\tthis._smax.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\t\tthis.dataGrouped = false;\r\n\t\tthis._baseInterval = {};\r\n\t\tthis._currentDataSetId = \"\";\r\n\r\n\t\tthis.resetExtremes();\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\r\n\t\tif (this.yAxis) {\r\n\t\t\tthis.yAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series' data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._baseInterval = {};\r\n\t\tlet dataFields = this.dataFields;\r\n\t\tif (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n\t\t\tthis.usesShowFields = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.usesShowFields = false;\r\n\t\t}\r\n\r\n\t\tthis.defineFields();\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tthis.dataChangeUpdate();\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.updateItemReaderText();\r\n\t\tif (this.chart) {\r\n\t\t\tif (!$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._xField]) || !$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._yField])) {\r\n\t\t\t\tthrow Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 4.7.21 solves 51540\r\n\t\tif (this.inited && this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\r\n\t\tthis.dataGrouped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\ttry {\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\r\n\t\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\r\n\t\t\tthis.setInitialWorkingValues(dataItem);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (this._chart) {\r\n\t\t\t\tthis._chart.raiseCriticalError(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.updateDataItem(dataItem);\r\n\r\n\t\t//dataItem.events.disable();\r\n\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\t\t//dataItem.events.enable();\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis) {\r\n\t\t\tlet dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n\t\t\tif (dataItemsX) {\r\n\t\t\t\tdataItemsX.clear();\r\n\t\t\t}\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(xAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (yAxis) {\r\n\t\t\tlet dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n\t\t\tif (dataItemsY) {\r\n\t\t\t\tdataItemsY.clear();\r\n\t\t\t}\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(yAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected clearCatAxis(axis: CategoryAxis) {\r\n\t\tlet uid = this.uid;\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.seriesDataItems[uid]) {\r\n\t\t\t\tdataItem.seriesDataItems[uid] = [];\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tlet xAxisFieldName: string = xAxis.axisFieldName;\r\n\t\t\tlet xField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(xAxisFieldName + \"X\");\r\n\t\t\tlet xOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n\r\n\t\t\tlet yAxisFieldName: string = yAxis.axisFieldName;\r\n\t\t\tlet yField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(yAxisFieldName + \"Y\");\r\n\t\t\tlet yOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n\r\n\t\t\tthis._xField = xField;\r\n\t\t\tthis._yField = yField;\r\n\r\n\t\t\tif (this.dataFields[xOpenField]) {\r\n\t\t\t\tthis._xOpenField = xOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataFields[yOpenField]) {\r\n\t\t\t\tthis._yOpenField = yOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tif (!this._yOpenField) {\r\n\t\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._xValueFields = [];\r\n\t\t\tthis._yValueFields = [];\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xOpenField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yOpenField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [axis description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param axis    Axis\r\n\t * @param fields  Fields (?)\r\n\t * @param field   Field\r\n\t */\r\n\tprotected addValueField<Key extends keyof this[\"_dataFields\"]>(axis: Axis, fields: Array<Key>, field: Key): void {\r\n\t\tif (axis instanceof ValueAxis) {\r\n\t\t\tif ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n\t\t\t\tfields.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets category field from the category axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setCategoryAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: CategoryAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets date field from the date axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setDateAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: DateAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.date;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs after-draw tasks, e.g. creates masks.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\tthis.createMask();\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\t\t// this mask from which we cut out ranges. does not work well if ranges overlap.\r\n\t\tif (this.mainContainer.mask) {\r\n\t\t\tlet path: string = this.getMaskPath();\r\n\r\n\t\t\t// @todo: this approach won't work well on circluar or other non x/y axes\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tif (range.axisFill.fillPath) {\r\n\t\t\t\t\trange.axisFill.validate();\r\n\t\t\t\t\tpath += range.axisFill.fillPath;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.mainContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength,\r\n\t\t\t\theight: this.yAxis.axisLength\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns axis data field to use.\r\n\t *\r\n\t * @param axis  Axis\r\n\t * @return Field name\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\tif (axis == this.xAxis) {\r\n\t\t\treturn this.xField;\r\n\t\t}\r\n\t\tif (axis == this.yAxis) {\r\n\t\t\treturn this.yField;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n\t\t\tthis._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n\t\t}\r\n\r\n\t\t// this helps date axis to check which baseInterval we should use\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.updateAxisBySeries();\r\n\t\t\tyAxis.updateAxisBySeries();\r\n\t\t}\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.postProcessSeriesDataItems(this);\r\n\t\t\tyAxis.postProcessSeriesDataItems(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange() {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.dataRangeInvalid) {\r\n\t\t\t\txAxis.validateDataRange();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.dataRangeInvalid) {\r\n\t\t\t\tyAxis.validateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.invalid) {\r\n\t\t\t\txAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.invalid) {\r\n\t\t\t\tyAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tthis.y = yAxis.pixelY;\r\n\t\t\tthis.x = xAxis.pixelX;\r\n\r\n\r\n\t\t\tthis._showBullets = true;\r\n\t\t\tlet minBulletDistance: number = this.minBulletDistance;\r\n\t\t\tif ($type.isNumber(minBulletDistance)) {\r\n\t\t\t\tif (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n\t\t\t\t\tthis._showBullets = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateTooltip();\r\n\r\n\t\tif ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet maskBullets = this.maskBullets;\r\n\t\tif (chart && maskBullets) {\r\n\t\t\tif (chart.className == \"XYChart\") {\r\n\t\t\t\tif (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n\t\t\t\t\tif (this.yAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n\t\t\t\t\tif (this.xAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tthis.setXAxis(axis);\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._xAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._xAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._xAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._xAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.xAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no X axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xAxis = axis;\r\n\t\t\t}\r\n\t\t\treturn this._xAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tthis.setYAxis(axis);\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._yAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._yAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._yAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tif (axis.chart instanceof XYChart) {\r\n\t\t\t\taxis.chart.handleYAxisSet(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._yAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.yAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no Y axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.yAxis = axis;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._yAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t *\r\n\t * @param value  Axis\r\n\t */\r\n\tpublic set baseAxis(value: Axis) {\r\n\t\tif (this._baseAxis != value) {\r\n\t\t\tthis._baseAxis = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get baseAxis(): Axis {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this._baseAxis && xAxis && yAxis) {\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._baseAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._baseAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number, skipRaw?: boolean): void {\r\n\t\tsuper.addData(rawDataItem, removeCount, skipRaw);\r\n\t\tconst scrollbarSeries = this.scrollbarSeries;\r\n\t\tif (scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n\t\t\tthis.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tsuper.setData(value);\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.setData(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the chart use particular data set.\r\n\t *\r\n\t * If `id` is not provided or there is no such data set, main data will be\r\n\t * used.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @param  id  Data set id\r\n\t */\r\n\tpublic setDataSet(id: string): boolean {\r\n\t\tlet changed = super.setDataSet(id);\r\n\r\n\t\tif (changed) {\r\n\r\n\t\t\tthis._dataSetChanged = true;\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tthis.resetExtremes();\r\n\r\n\t\t\tif (dataItems && dataItems.length > 0) {\r\n\r\n\t\t\t\tlet xAxis = this.xAxis;\r\n\t\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\t\tthis._prevStartIndex = undefined;\r\n\t\t\t\tthis._prevEndIndex = undefined;\r\n\t\t\t\tthis._startIndex = undefined;\r\n\t\t\t\tthis._endIndex = undefined;\r\n\r\n\t\t\t\tif (!this.appeared) {\r\n\t\t\t\t\tthis.processValues(false); // this will slow down!\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes values after data items' were added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tpublic processValues(working: boolean): void {\r\n\t\tsuper.processValues(working);\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet minX = Infinity;\r\n\t\tlet maxX = - Infinity;\r\n\r\n\t\tlet minY = Infinity;\r\n\t\tlet maxY = - Infinity;\r\n\r\n\t\tlet startIndex = this.startIndex;\r\n\t\tlet endIndex = this.endIndex;\r\n\r\n\t\tlet workingStartIndex = startIndex;\r\n\t\tlet workingEndIndex = endIndex;\r\n\r\n\t\tif (!working) {\r\n\t\t\tstartIndex = 0;\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\tif (this.stacked) {\r\n\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// this is mainly for value axis to calculate total and perecent.total of each series category\r\n\t\txAxis.processSeriesDataItems();\r\n\t\tyAxis.processSeriesDataItems();\r\n\r\n\t\tlet xAxisId: string = xAxis.uid;\r\n\t\tlet yAxisId: string = yAxis.uid;\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!working) {\r\n\t\t\tif (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\r\n\t\t\t\tlet stackedSeries = this.stackedSeries;\r\n\t\t\t\tif (stackedSeries) {\r\n\t\t\t\t\tif (stackedSeries.isDisposed()) {\r\n\t\t\t\t\t\tthis.stackedSeries = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstackedSeries.processValues(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n\t\t\tminX = Infinity;\r\n\t\t\tmaxX = - Infinity;\r\n\r\n\t\t\tminY = Infinity;\r\n\t\t\tmaxY = - Infinity;\r\n\r\n\t\t\tfor (let i = workingStartIndex; i < workingEndIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\r\n\t\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\t\tif (this.stacked) {\r\n\t\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n\t\t\tthis._smin.setKey(xAxisId, minX);\r\n\t\t\tthis._smax.setKey(xAxisId, maxX);\r\n\t\t\tthis._smin.setKey(yAxisId, minY);\r\n\t\t\tthis._smax.setKey(yAxisId, maxY);\r\n\r\n\t\t\tif (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n\t\t\t\t/// new, helps to handle issues with change percent\r\n\t\t\t\tlet changed = false;\r\n\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(yAxisId);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(yAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.start == 0 && this.end == 1) {\r\n\t\t\t\t\t// yes, its ok. otherwise min/max won't be updated when zooming out\r\n\t\t\t\t\tthis._dataSetChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!working && this.stacked) {\r\n\t\t\tthis.processValues(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number) {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis.returnBulletDefaultState();\r\n\t\tthis._prevTooltipDataItem = undefined;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific position.\r\n\t *\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): IPoint {\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"];\r\n\r\n\t\tif (this.visible && !this.isHiding && !this.isShowing) {\r\n\r\n\t\t\tlet xAxis: Axis = this._xAxis.get();\r\n\t\t\tlet yAxis: Axis = this._yAxis.get();\r\n\r\n\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n\t\t\t}\r\n\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n\t\t\t}\r\n\r\n\t\t\tlet point = this.showTooltipAtDataItem(dataItem);\r\n\r\n\t\t\tif (point) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\t// so that if tooltip is shown on columns or bullets for it not to be hidden\r\n\t\t\tif (!this.tooltipText && !this.tooltipHTML) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.hideTooltip();\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific dataItem.\r\n\t *\r\n\t * @param dataItem\r\n\t */\r\n\tpublic showTooltipAtDataItem(dataItem: this[\"_dataItem\"]): IPoint {\r\n\r\n\t\tlet cursor = <XYCursor>this.chart.cursor;\r\n\t\tif (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n\t\t\tthis.hideTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.returnBulletDefaultState(dataItem);\r\n\t\tif (dataItem && dataItem.visible) {\r\n\r\n\t\t\tthis.updateLegendValue(dataItem);\r\n\t\t\tif (this.cursorTooltipEnabled) {\r\n\t\t\t\tthis.tooltipDataItem = dataItem;\r\n\r\n\t\t\t\t// todo: add tooltipXField and tooltipYField.\r\n\t\t\t\tlet tooltipXField = this.tooltipXField;\r\n\t\t\t\tlet tooltipYField = this.tooltipYField;\r\n\r\n\t\t\t\tif ($type.hasValue((<any>dataItem)[tooltipXField]) && $type.hasValue((<any>dataItem)[tooltipYField])) {\r\n\r\n\t\t\t\t\tlet tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n\r\n\t\t\t\t\tif (tooltipPoint) {\r\n\r\n\t\t\t\t\t\tif (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.tooltipX = tooltipPoint.x;\r\n\t\t\t\t\t\t\tthis.tooltipY = tooltipPoint.y;\r\n\r\n\t\t\t\t\t\t\tif (this._prevTooltipDataItem != dataItem) {\r\n\r\n\t\t\t\t\t\t\t\tthis.dispatchImmediately(\"tooltipshownat\", {\r\n\t\t\t\t\t\t\t\t\ttype: \"tooltipshownat\",\r\n\t\t\t\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tthis._prevTooltipDataItem = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.cursorHoverEnabled) {\r\n\t\t\t\t\t\t\t\tfor (let sprite of dataItem.sprites) {\r\n\t\t\t\t\t\t\t\t\tif (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (!sprite.interactions.isRealHover) {\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.dispatchImmediately(\"over\");\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.interactions.isRealHover = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsprite.isHover = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.showTooltip()) {\r\n\t\t\t\t\t\t\t\treturn $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLegendValue(dataItem, true);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns default state to bullets when tooltip is shown at some other data\r\n\t * item or hidden\r\n\t */\r\n\tprotected returnBulletDefaultState(dataItem?: XYSeriesDataItem) {\r\n\t\tif (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n\t\t\tfor (let sprite of this._prevTooltipDataItem.sprites) {\r\n\t\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\t\tconst fireEvent = sprite.interactions.isRealHover;\r\n\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\tsprite.dispatchImmediately(\"out\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._prevTooltipDataItem = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Bullet): boolean {\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bulletTemplate.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bulletTemplate.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tif ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (bulletTemplate.disabled) {\r\n\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\tif (dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tif (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n\t\t\tthis.showTooltipAtDataItem(<this[\"_dataItem\"]>this.tooltipDataItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet) {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: XYSeriesDataItem = <XYSeriesDataItem>bullet.dataItem;\r\n\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bullet.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bullet.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bulletLocationX: number = this.getBulletLocationX(bullet, xField);\r\n\t\t\tlet bulletLocationY: number = this.getBulletLocationY(bullet, yField);\r\n\r\n\t\t\tlet point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n\t\t\tif (point) {\r\n\t\t\t\tlet xOpenField = this.xOpenField;\r\n\t\t\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\t\t\tlet positionX: number;\r\n\t\t\t\tlet positionY: number;\r\n\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = xAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = xAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof CategoryAxis) {\r\n\r\n\t\t\t\t\tlet rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n\t\t\t\t\tlet leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.categoryToPosition((<any>dataItem)[xField], rightLocation);\r\n\t\t\t\t\tlet openPositionX: number;\r\n\r\n\r\n\t\t\t\t\tif (xOpenField) {\r\n\t\t\t\t\t\topenPositionX = xAxis.categoryToPosition((<any>dataItem)[xOpenField], leftLocation);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openPositionX)) {\r\n\t\t\t\t\t\topenPositionX = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = yAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = yAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\r\n\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], bulletLocationY);\r\n\r\n\t\t\t\t\tlet topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n\t\t\t\t\tlet bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], topLocation);\r\n\t\t\t\t\tlet openPositionY: number;\r\n\r\n\t\t\t\t\tif (yOpenField) {\r\n\t\t\t\t\t\topenPositionY = yAxis.categoryToPosition((<any>dataItem)[yOpenField], bottomLocation);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.isNumber(openPositionY)) {\r\n\t\t\t\t\t\topenPositionY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tthis.positionBulletReal(bullet, positionX, positionY);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbullet.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tbullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n\t\tbullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationX;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationY;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * This method must be called if you update Series' data fields that might\r\n\t * affect stacking of the series.\r\n\t *\r\n\t * Since individual `dataField` changes are not being monitored, you need\r\n\t * todo it manually for changes to take affect.\r\n\t *\r\n\t * @since 4.7.21\r\n\t */\r\n\tpublic updateStacking(): void {\r\n\t\tthis.invalidateDataItems();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this.baseAxis) {\r\n\t\t\t\t\tseries.stackedSeries = undefined;\r\n\t\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t * \r\n\t * Note: proper stacking is only possible if series have the same number\r\n\t * of data items. To ensure this, don't set data directly on series\r\n\t * but do this on chart instead.\r\n\t *\r\n\t * @default false\r\n\t * @param stacked  Can be stacked?\r\n\t */\r\n\tpublic set stacked(stacked: boolean) {\r\n\t\tif (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n\t\t\tthis.updateStacking();\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (!stacked) {\r\n\t\t\t\tlet field: string;\r\n\r\n\t\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.xField;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.yField;\r\n\t\t\t\t}\r\n\t\t\t\tif (field) {\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Can be stacked?\r\n\t */\r\n\tpublic get stacked(): boolean {\r\n\t\treturn this.getPropertyValue(\"stacked\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tif(this.isHidden){\r\n\t\t\tif (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.yAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.yAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t\tif (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.xAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.xAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fields: string[];\r\n\t\tif (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet delay: number = 0;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t\tdelay = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tanim = dataItem.show(realDuration, delay, fields);\r\n\t\t});\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\tif (this.hidden) {\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\tthis.hidden = false;\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[];\r\n\t\tlet value: number;\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\r\n\t\tif (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = xAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = xAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = yAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = yAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if ($type.hasValue(fields)) {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (realDuration == 0) {\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t\t}\r\n\t\t\t\tanim = dataItem.hide(realDuration, delay, value, fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.hide(interpolationDuration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\t// helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n\t\tthis.validateDataElements();\r\n\t\t//}\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemWorkingValueChange(dataItem, name);\r\n\r\n\t\t// to calculate stack values\r\n\t\tlet axisSeries: List<XYSeries> = <List<XYSeries>>this.baseAxis.series;\r\n\r\n\t\t$iter.each(axisSeries.iterator(), (series) => {\r\n\t\t\tif (series.stacked || series.stackedSeries) {\r\n\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [getStackValue description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic getStackValue(dataItem: this[\"_dataItem\"], working?: boolean): void {\r\n\t\t// todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n\t\t// if this series is not stacked or new stack begins, return.\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this.stacked || !xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n\t\t\tlet chart: XYChart = this.chart;\r\n\t\t\tlet index: number = chart.series.indexOf(this);\r\n\r\n\t\t\tlet field: string;\r\n\r\n\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.xField;\r\n\t\t\t}\r\n\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!field) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\r\n\t\t\t$iter.eachContinue(chart.series.range(0, index).backwards().iterator(), (prevSeries) => {\r\n\t\t\t\t// stacking is only possible if both axes are the same\r\n\t\t\t\tif (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == this.className) {\r\n\t\t\t\t\t// saving value\r\n\t\t\t\t\tprevSeries.stackedSeries = this;\r\n\r\n\t\t\t\t\tlet prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n\r\n\t\t\t\t\tif (prevDataItem && prevDataItem.hasValue(this._xValueFields) && prevDataItem.hasValue(this._yValueFields)) {\r\n\r\n\t\t\t\t\t\tlet value = dataItem.getValue(field);\r\n\t\t\t\t\t\tlet prevValue: number;\r\n\t\t\t\t\t\tlet prevRealValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\r\n\t\t\t\t\t\tif (working) {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getWorkingValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.stackToNegative) {\r\n\t\t\t\t\t\t\tif ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(!prevSeries.stacked){\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!prevSeries.stacked) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This setting indicates how negative values are treated in stacked stacked\r\n\t * series.\r\n\t *\r\n\t * If set to `true` (default), negative values will stack on the base line.\r\n\t *\r\n\t * If set to `false`, negative value will stack in relation to the previous\r\n\t * value in the stack.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Stack to base line\r\n\t */\r\n\tpublic set stackToNegative(value: boolean) {\r\n\t\tthis.setPropertyValue(\"stackToNegative\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stack to base line\r\n\t */\r\n\tpublic get stackToNegative(): boolean {\r\n\t\treturn this.getPropertyValue(\"stackToNegative\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * [xOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xOpenField(): string {\r\n\t\treturn this._xOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yOpenField(): string {\r\n\t\treturn this._yOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipXField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipXField(value: string) {\r\n\t\tthis._tooltipXField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipXField(): string {\r\n\t\tif (this._tooltipXField) {\r\n\t\t\treturn this._tooltipXField;\r\n\t\t}\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipYField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipYField(value: string) {\r\n\t\tthis._tooltipYField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipYField(): string {\r\n\t\tif (this._tooltipYField) {\r\n\t\t\treturn this._tooltipYField;\r\n\t\t}\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic min(axis: ValueAxis): number {\r\n\t\treturn this._tmin.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic max(axis: ValueAxis): number {\r\n\t\treturn this._tmax.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMin(axis: ValueAxis): number {\r\n\t\tlet value = this._smin.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.min(axis);\r\n\t\t//}\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMax(axis: ValueAxis): number {\r\n\t\tlet value = this._smax.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.max(axis);\r\n\t\t//}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up base axes\r\n\t\t\tif ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.baseAxis)) {\r\n\t\t\t\t\tconfig.baseAxis = this.map.getKey(config.baseAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n\t\t\t\t\tdelete config.baseAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\t\t\t\t\tif (!$type.hasValue(range.type)) {\r\n\t\t\t\t\t\trange.type = \"AxisDataItem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.axis);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse date fields based on the series fields\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: XYSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string): IPoint {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tlet x: number = this.xAxis.getX(dataItem, xKey, locationX);\r\n\t\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY);\r\n\r\n\t\t\tx = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\t\ty = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t\treturn { x: x, y: y };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates item reader text based on the type and set up of axis.\r\n\t */\r\n\tprotected updateItemReaderText(): void {\r\n\r\n\t\t// We do not want to overwrite this if `itemReaderText` was changed by\r\n\t\t// user code.\r\n\t\tif (this._itemReaderTextChanged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet text = \"\"\r\n\t\t$object.each(this.dataFields, (key, val) => {\r\n\t\t\ttext += \"{\" + key + \"} \";\r\n\t\t});\r\n\t\tthis.itemReaderText = text;\r\n\t\tthis._itemReaderTextChanged = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * If set to `true` (default), the tooltips set for all series item's\r\n\t * elements like columns and bullets will be automatically shown\r\n\t * when [[XYCursor]] passes over category/date, even if its not hovered\r\n\t * directly over the item.\r\n\t *\r\n\t * Set this to `false` to disable such behavior and display item-specific\r\n\t * tooltips only when hovered directly over them\r\n\t *\r\n\t * @default true\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t *\r\n\t * If set to `true` (default) and chart cursor is enabled on th chart,\r\n\t * hovering over date/category will trigger hover states on related Series\r\n\t * items like bullets and columns.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.2\r\n\t * @param  value  Hover enabled?\r\n\t */\r\n\tpublic set cursorHoverEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorHoverEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hover enabled?\r\n\t */\r\n\tpublic get cursorHoverEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorHoverEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Exclude from totals?\r\n\t */\r\n\tpublic set excludeFromTotal(value: boolean) {\r\n\t\tthis.setPropertyValue(\"excludeFromTotal\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from totals?\r\n\t */\r\n\tpublic get excludeFromTotal(): boolean {\r\n\t\treturn this.getPropertyValue(\"excludeFromTotal\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming).\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' bullets should be masked.\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t * @param  value  Mask bullets?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value)\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.axisBulletsContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullets?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.groupFields = $utils.copyProperties(source.groupFields, {});\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n","/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChartScrollbar]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChartScrollbarAdapters extends IScrollbarAdapters, IXYChartScrollbarProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYChartScrollbar extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChartScrollbarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChartScrollbarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChartScrollbarEvents;\r\n\r\n\t/**\r\n\t * An [[XYSeries]] used to draw a graph on the Scrollbar.\r\n\t */\r\n\tprotected _series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * A chart element Scrollbar is for.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart>();\r\n\r\n\t/**\r\n\t * A chart instance that shows mini-chart within Scrollbar.\r\n\t */\r\n\tprotected _scrollbarChart: XYChart;\r\n\r\n\t/**\r\n\t * [_unselectedOverlay description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _unselectedOverlay: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChartScrollbar\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\tlet scrollbarChart: XYChart = this.createChild(XYChart);\r\n\t\tscrollbarChart.shouldClone = false;\r\n\t\tscrollbarChart.margin(0, 0, 0, 0);\r\n\t\tscrollbarChart.padding(0, 0, 0, 0);\r\n\t\tscrollbarChart.interactionsEnabled = false;\r\n\r\n\t\tthis._scrollbarChart = scrollbarChart;\r\n\t\tif (!$utils.isIE()) {\r\n\t\t\tlet filter = new DesaturateFilter();\r\n\t\t\tfilter.filterUnits = \"userSpaceOnUse\";\r\n\t\t\tscrollbarChart.plotContainer.filters.push(filter);\r\n\t\t}\r\n\t\tthis._disposers.push(this._scrollbarChart);\r\n\r\n\t\tthis.minHeight = 60;\r\n\t\tthis.minWidth = 60;\r\n\r\n\t\tlet unselectedOverlay: Sprite = this.createChild(Sprite);\r\n\t\tunselectedOverlay.shouldClone = false;\r\n\t\tunselectedOverlay.setElement(this.paper.add(\"path\"));\r\n\t\tunselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n\t\tunselectedOverlay.fillOpacity = 0.8;\r\n\t\tunselectedOverlay.interactionsEnabled = false;\r\n\t\tunselectedOverlay.isMeasured = false;\r\n\t\tunselectedOverlay.toBack();\r\n\t\tthis._unselectedOverlay = unselectedOverlay;\r\n\t\tthis._disposers.push(this._unselectedOverlay);\r\n\r\n\t\tscrollbarChart.toBack();\r\n\r\n\t\tthis.background.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tlet thumbBackground = this.thumb.background;\r\n\t\tthumbBackground.cornerRadius(0, 0, 0, 0);\r\n\t\tthumbBackground.fillOpacity = 0;\r\n\t\tthumbBackground.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\tlet hoverState = thumbBackground.states.getKey(\"hover\");\r\n\t\tif (hoverState) {\r\n\t\t\thoverState.properties.fillOpacity = 0.2;\r\n\t\t}\r\n\r\n\t\tlet downState = thumbBackground.states.getKey(\"down\");\r\n\t\tif (downState) {\r\n\t\t\tdownState.properties.fillOpacity = 0.4;\r\n\t\t}\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of series that are used to draw graph(s) on the scrollbar.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t\tthis._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n\t\t\tthis._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<XYSeries>[\"inserted\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.newValue;\r\n\t\tif (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\tscrollbarChart.zoomOutButton.disabled = true;\r\n\r\n\t\tthis.chart = sourceSeries.chart;\r\n\r\n\t\tscrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\r\n\r\n\t\t// Ensure that scrollbar chart shares the same locale as parent chart\r\n\t\tscrollbarChart.language.locale = this.chart.language.locale;\r\n\r\n\t\tlet addXAxis: boolean = true;\r\n\t\tlet addYAxis: boolean = true;\r\n\r\n\t\t// check if we haven't added clone of x or y axis before\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series != sourceSeries) {\r\n\t\t\t\tif (series.xAxis == sourceSeries.xAxis && this.scrollbarChart.xAxes.length > 0) {\r\n\t\t\t\t\taddXAxis = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (series.yAxis == sourceSeries.yAxis && this.scrollbarChart.yAxes.length > 0) {\r\n\t\t\t\t\taddYAxis = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsourceSeries.events.on(\"beforedisposed\", () => {\r\n\t\t\tthis.series.removeValue(sourceSeries)\r\n\t\t})\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet series: XYSeries = <XYSeries>sourceSeries.clone();\r\n\r\n\t\tif(options.onlyShowOnViewport || options.queue){\r\n\t\t\tthis.addDisposer(this.chart.events.on(\"removedfromqueue\", function(){\r\n\t\t\t\tscrollbarChart.invalidateData();\r\n\t\t\t}))\r\n\t\t}\r\n\r\n\t\tif($utils.isIE()){\r\n\t\t\tseries.stroke = color(\"#aaaaaa\");\r\n\t\t\tseries.fill = series.stroke;\r\n\t\t\tseries.propertyFields.fill = undefined;\r\n\t\t\tseries.propertyFields.stroke = undefined;\r\n\t\t}\r\n\t\tsourceSeries.scrollbarSeries = series;\r\n\r\n\t\tif (addXAxis) {\r\n\r\n\t\t\tlet xAxis = sourceSeries.xAxis.clone();\r\n\t\t\tscrollbarChart.xAxes.moveValue(xAxis);\r\n\t\t\txAxis.title.disabled = true;\r\n\t\t\txAxis.rangeChangeDuration = 0;\r\n\t\t\t//xAxis.id = sourceSeries.uid;\r\n\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\r\n\t\t\txAxis.width = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\t\t\txAxis.maxZoomCount = undefined;\r\n\t\t\txAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <DateAxis>xAxis;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.xAxis;\r\n\t\t\t\tvAxis.groupCount = sourceAxis.groupCount * 5;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>xAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.min;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\r\n\r\n\t\t\tseries.xAxis = xAxis;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.xAxes.each((xAxis) => {\r\n\t\t\t\tif (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n\t\t\t\t\tseries.xAxis = xAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (addYAxis) {\r\n\t\t\tlet yAxis: Axis = <Axis>sourceSeries.yAxis.clone();\r\n\t\t\tscrollbarChart.yAxes.moveValue(yAxis);\r\n\t\t\tyAxis.title.disabled = true;\r\n\t\t\tyAxis.rangeChangeDuration = 0;\r\n\r\n\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\t\t\tyAxis.height = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\r\n\t\t\tseries.yAxis = yAxis;\r\n\r\n\t\t\tyAxis.maxZoomCount = undefined;\r\n\t\t\tyAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.yAxis;\r\n\t\t\t\tyAxis.groupCount = sourceAxis.groupCount * 5;\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.yAxes.each((yAxis) => {\r\n\t\t\t\tif (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n\t\t\t\t\tseries.yAxis = yAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tseries.rangeChangeDuration = 0;\r\n\t\tseries.interpolationDuration = 0;\r\n\t\tseries.defaultState.transitionDuration = 0;\r\n\t\tseries.showOnInit = false;\r\n\r\n\t\tthis._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n\r\n\t\t// data might be set drectly on series\r\n\t\tthis._disposers.push(sourceSeries.events.on(\"datavalidated\", () => {\r\n\t\t\tif (series.data != sourceSeries.data) { // data setter doesn't check this\r\n\t\t\t\tseries.data = sourceSeries.data;\r\n\t\t\t}\r\n\t\t}, undefined, false));\r\n\t\tseries.defaultState.properties.visible = true;\r\n\r\n\t\tscrollbarChart.series.push(series);\r\n\r\n\t\tthis.updateByOrientation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateByOrientation() {\r\n\t\tif (this._scrollbarChart) {\r\n\t\t\t$iter.each(this._scrollbarChart.xAxes.iterator(), (xAxis) => {\r\n\t\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\t$iter.each(this._scrollbarChart.yAxes.iterator(), (yAxis) => {\r\n\t\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<XYSeries>[\"removed\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.oldValue;\r\n\t\tlet scrollbarChart = this.scrollbarChart;\r\n\r\n\t\tscrollbarChart.series.each((series) => {\r\n\t\t\tif (series && series.clonedFrom == sourceSeries) {\r\n\t\t\t\tscrollbarChart.series.removeValue(series);\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (scrollbarChart.series.length == 0) {\r\n\t\t\tscrollbarChart.xAxes.clear();\r\n\t\t\tscrollbarChart.yAxes.clear();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A chart element that is used to display graphs in the Scrollbar.\r\n\t *\r\n\t * This is not the same as `chart`. It's a totally independent instance of\r\n\t * [[XYChart]] with separate config, series, etc.\r\n\t *\r\n\t * It can be configured just like any other [[XYChart]].\r\n\t *\r\n\t * @readonly\r\n\t * @return Scrollbar's internal chart\r\n\t */\r\n\tpublic get scrollbarChart(): XYChart {\r\n\t\treturn this._scrollbarChart;\r\n\t}\r\n\r\n\t/**\r\n\t * A chart that Scrollbar belongs to.\r\n\t *\r\n\t * @param chart  Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart) {\r\n\t\tif (this._chart.get() !== chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n\t\t\tthis.handleDataChanged();\r\n\t\t\tthis._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] object representing overlay that is used to dim area of the\r\n\t * scrollbar that is currently not selected.\r\n\t *\r\n\t * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n\t * completely disabling the dimming, and `1` making unselected area completely\r\n\t * blank.\r\n\t *\r\n\t * @since 4.6.1\r\n\t * @readonly\r\n\t * @return Unselected area curtain element\r\n\t */\r\n\tpublic get unselectedOverlay(): Sprite {\r\n\t\treturn this._unselectedOverlay;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Scrollbar's internal chart's data when the main chart's data\r\n\t * changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataChanged() {\r\n\t\tif (this.chart.data != this.scrollbarChart.data) {\r\n\t\t\tthis.scrollbarChart.data = this.chart.data;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// add data is handled in XYChart\r\n\t\t\t// invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n\t\t\tthis.scrollbarChart.invalidateRawData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out all axes on the internal chart.\r\n\t */\r\n\tprotected zoomOutAxes() {\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\t$iter.each(scrollbarChart.xAxes.iterator(), (x) => {\r\n\t\t\tx.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t\t$iter.each(scrollbarChart.yAxes.iterator(), (y) => {\r\n\t\t\ty.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates scrollbar thumb.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic updateThumb(dispatchEvents: boolean = true) {\r\n\t\tsuper.updateThumb(dispatchEvents);\r\n\t\tif (this._unselectedOverlay) {\r\n\t\t\tlet thumb = this.thumb;\r\n\t\t\tlet x: number = thumb.pixelX || 0;\r\n\t\t\tlet y: number = thumb.pixelY || 0;\r\n\t\t\tlet w: number = thumb.pixelWidth || 0;\r\n\t\t\tlet h: number = thumb.pixelHeight || 0;\r\n\r\n\t\t\tlet path: string = \"\";\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: -1,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: x,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: x + w,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: (this.pixelWidth || 0) - x - w,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: y\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: y + h,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: (this.pixelHeight || 0) - y - h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._unselectedOverlay.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series)) {\r\n\t\t\t\t\t\tif (this.map.hasKey(series)) {\r\n\t\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n","/**\r\n * XY Chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { List, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Optional } from \"../../core/utils/Type\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { AxisRendererX } from \"../axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { Scrollbar, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { XYCursor, IXYCursorEvents } from \"../cursors/XYCursor\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { XYChartScrollbar } from \"../elements/XYChartScrollbar\";\r\n\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $number from \"../../core/utils/Number\";\r\n\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: XYChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYChart]].\r\n */\r\nexport interface IXYChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[XYChart]].\r\n */\r\nexport interface IXYChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * A container that is used as a maske for bullets so that they can't\r\n\t * \"spill\" outside of the plot area.\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @default \"none\"\r\n\t */\r\n\tmouseWheelBehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when horizontal mouse wheel is rotated.\r\n\t *\r\n\t * @default \"none\"\r\n\t */\r\n\thorizontalMouseWheelBehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Specifies if chart should arrange series tooltips so that they won't\r\n\t * overlap.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tarrangeTooltips?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYChart]].\r\n */\r\nexport interface IXYChartEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChartAdapters extends ISerialChartAdapters, IXYChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates an XY chart, and any derivative chart, like Serial, Date-based, etc.\r\n *\r\n * Basically this is a chart type, that is used to display any chart\r\n * information in a square plot area.\r\n *\r\n * The horizontal and vertical scale is determined by the type of Axis.\r\n *\r\n * The plot types are determined by type of Series.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * let series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"XYChart\");\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * var series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Category axis\r\n * \t\"xAxes\": [{\r\n * \t\t\"type\": \"CategoryAxis\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Value axis\r\n * \t\"yAxes\": [{\r\n * \t\t\"type\": \"ValueAxis\"\r\n * \t}],\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"ColumnSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"categoryX\": \"country\",\r\n * \t\t\t\"valueY\": \"visits\"\r\n * \t\t},\r\n * \t\t\"name\": \"Web Traffic\"\r\n * \t}],\r\n *\r\n * \t// Cursor\r\n * \t\"cursor\": {},\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"USA\",\r\n * \t\t\"visits\": 3025\r\n * \t}, {\r\n * \t\t\"country\": \"China\",\r\n * \t\t\"visits\": 1882\r\n * \t}, {\r\n * \t\t\"country\": \"Japan\",\r\n * \t\t\"visits\": 1809\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"XYChart\");\r\n * ```\r\n *\r\n *\r\n * @see {@link IXYChartEvents} for a list of available Events\r\n * @see {@link IXYChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IXYChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: XYSeries;\r\n\r\n\t/**\r\n\t * A list of horizontal axes.\r\n\t */\r\n\tprotected _xAxes: List<Axis<this[\"_xAxisRendererType\"]>>;\r\n\r\n\t/**\r\n\t * A list of vertical axes.\r\n\t */\r\n\tprotected _yAxes: List<Axis<this[\"_yAxisRendererType\"]>>;\r\n\r\n\t/**\r\n\t * A container that holds vertical axes and plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic yAxesAndPlotContainer: Container\r\n\r\n\t/**\r\n\t * A container that holds top axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic topAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds bottom axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic bottomAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds left axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic leftAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds right axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic rightAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container for plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic plotContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to horizontal [[Scrollbar]].\r\n\t */\r\n\tprotected _scrollbarX: Scrollbar;\r\n\r\n\t/**\r\n\t * A reference to vertical [[Scrollbar]].\r\n\t */\r\n\tprotected _scrollbarY: Scrollbar;\r\n\r\n\t/**\r\n\t * A reference to chart's cursor.\r\n\t */\r\n\tpublic _cursor: XYCursor;\r\n\r\n\t/**\r\n\t * A container that chart's cursor is placed in.\r\n\t */\r\n\tprotected _cursorContainer: Container;\r\n\r\n\t/**\r\n\t * Defines the type of horizontal axis rederer.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererX = AxisRendererX;\r\n\r\n\t/**\r\n\t * Defines the type of vertical axis rederer.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererY = AxisRendererY;\r\n\r\n\t/**\r\n\t * Defines the type horizontal axis renderer.\r\n\t */\r\n\tpublic _xAxisRendererType: AxisRendererX;\r\n\r\n\t/**\r\n\t * Defines the type of vertical axis renderer.\r\n\t */\r\n\tpublic _yAxisRendererType: AxisRendererY;\r\n\r\n\t/**\r\n\t * A button which is used to zoom out the chart.\r\n\t */\r\n\tprotected _zoomOutButton: Button;\r\n\r\n\t/**\r\n\t * An element that is used as a mask to contain bullets from spilling out of\r\n\t * the plot area.\r\n\t */\r\n\tprotected _bulletMask: Sprite;\r\n\r\n\r\n\tprotected _panStartXRange: IRange;\r\n\r\n\tprotected _panStartYRange: IRange;\r\n\r\n\tprotected _panEndXRange: IRange;\r\n\r\n\tprotected _panEndYRange: IRange;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\tprotected _mouseWheelDisposer2: IDisposer;\r\n\r\n\tprotected _cursorXPosition: number;\r\n\r\n\tprotected _cursorYPosition: number;\r\n\r\n\t/**\r\n\t * Holds a reference to the container axis bullets are drawn in.\r\n\t */\r\n\tpublic axisBulletsContainer: Container;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _seriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYChart\";\r\n\r\n\t\t// Set defaults\r\n\t\t//this.margin(10, 10, 10, 10);\r\n\t\tthis.maskBullets = true;\r\n\t\tthis.arrangeTooltips = true;\r\n\r\n\t\t// Create main chart container\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.layout = \"vertical\";\r\n\t\tthis.padding(15, 15, 15, 15);\r\n\r\n\t\t// Create top axes container\r\n\t\tlet topAxesCont = chartContainer.createChild(Container);\r\n\t\ttopAxesCont.shouldClone = false;\r\n\t\ttopAxesCont.layout = \"vertical\";\r\n\t\ttopAxesCont.width = percent(100);\r\n\t\ttopAxesCont.zIndex = 1;\r\n\t\tthis.topAxesContainer = topAxesCont;\r\n\r\n\t\t// Create vertical axes and plot area container\r\n\t\t// Plot area and vertical axes share the whole width of the chart,\r\n\t\t// so we need to put then into a separate container so that layouting\r\n\t\t// engine takes care of the positioning\r\n\t\tlet yAxesAndPlotCont = chartContainer.createChild(Container);\r\n\t\tyAxesAndPlotCont.shouldClone = false;\r\n\t\tyAxesAndPlotCont.layout = \"horizontal\";\r\n\t\tyAxesAndPlotCont.width = percent(100);\r\n\t\tyAxesAndPlotCont.height = percent(100);\r\n\t\tyAxesAndPlotCont.zIndex = 0;\r\n\t\tthis.yAxesAndPlotContainer = yAxesAndPlotCont;\r\n\r\n\t\t// Create a container for bottom axes\r\n\t\tlet bottomAxesCont = chartContainer.createChild(Container);\r\n\t\tbottomAxesCont.shouldClone = false;\r\n\t\tbottomAxesCont.width = percent(100);\r\n\t\tbottomAxesCont.layout = \"vertical\";\r\n\t\tbottomAxesCont.zIndex = 1;\r\n\t\tthis.bottomAxesContainer = bottomAxesCont;\r\n\r\n\t\t// Create a container for left-side axes\r\n\t\tlet leftAxesCont = yAxesAndPlotCont.createChild(Container);\r\n\t\tleftAxesCont.shouldClone = false;\r\n\t\tleftAxesCont.layout = \"horizontal\";\r\n\t\tleftAxesCont.height = percent(100);\r\n\t\tleftAxesCont.contentAlign = \"right\";\r\n\t\tleftAxesCont.events.on(\"transformed\", this.updateXAxesMargins, this, false);\r\n\t\tleftAxesCont.zIndex = 1;\r\n\t\tthis.leftAxesContainer = leftAxesCont;\r\n\r\n\t\t// Create a container for plot area\r\n\t\tlet plotCont = yAxesAndPlotCont.createChild(Container);\r\n\t\tplotCont.shouldClone = false;\r\n\t\tplotCont.height = percent(100);\r\n\t\tplotCont.width = percent(100);\r\n\t\t// Create transparend background for plot container so that hover works\r\n\t\t// on all of it\r\n\t\tplotCont.background.fillOpacity = 0;\r\n\t\tthis.plotContainer = plotCont;\r\n\r\n\t\t// must go below plot container\r\n\t\tthis.mouseWheelBehavior = \"none\";\r\n\r\n\t\tthis._cursorContainer = plotCont;\r\n\r\n\t\t// Create a container for right-side axes\r\n\t\tlet rightAxesCont = yAxesAndPlotCont.createChild(Container);\r\n\t\trightAxesCont.shouldClone = false;\r\n\t\trightAxesCont.layout = \"horizontal\";\r\n\t\trightAxesCont.height = percent(100);\r\n\t\trightAxesCont.zIndex = 1;\r\n\t\trightAxesCont.events.on(\"transformed\", this.updateXAxesMargins, this, false);\r\n\t\tthis.rightAxesContainer = rightAxesCont;\r\n\r\n\t\tthis.seriesContainer.parent = plotCont;\r\n\t\tthis.bulletsContainer.parent = plotCont;\r\n\r\n\t\tlet zoomOutButton = plotCont.createChild(ZoomOutButton);\r\n\t\tzoomOutButton.shouldClone = false;\r\n\t\tzoomOutButton.align = \"right\";\r\n\t\tzoomOutButton.valign = \"top\";\r\n\t\tzoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n\t\tzoomOutButton.marginTop = 5;\r\n\t\tzoomOutButton.marginRight = 5;\r\n\r\n\t\tzoomOutButton.hide(0);\r\n\t\tthis.zoomOutButton = zoomOutButton;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet axisBulletsContainer: Container = this.plotContainer.createChild(Container);\r\n\t\taxisBulletsContainer.shouldClone = false;\r\n\t\taxisBulletsContainer.width = percent(100);\r\n\t\taxisBulletsContainer.height = percent(100);\r\n\t\taxisBulletsContainer.isMeasured = false;\r\n\t\taxisBulletsContainer.zIndex = 4;\r\n\t\taxisBulletsContainer.layout = \"none\";\r\n\t\tthis.axisBulletsContainer = axisBulletsContainer;\r\n\r\n\t\tthis._bulletMask = this.plotContainer;\r\n\r\n\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.dataGrouped = false;\r\n\t\t\t\tseries._baseInterval = {};\r\n\t\t\t})\r\n\t\t}, this, false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tthis.zoomOutButton.exportable = false;\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tthis.seriesContainer.toFront();\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\tif (this.maskBullets) {\r\n\t\t\tthis.bulletsContainer.mask = this._bulletMask;\r\n\t\t}\r\n\r\n\t\tthis.updateSeriesLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a redrawing of all chart's series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updatePlotElements(): void {\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers data (re)validation which in turn can cause a redraw of the\r\n\t * whole chart or just aprticular series / elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\r\n\t\t// tell axes that data changed\r\n\t\tif (this._parseDataFrom == 0) {\r\n\t\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\t\taxis.dataChangeUpdate();\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\t\taxis.dataChangeUpdate();\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.dataChangeUpdate();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates margins for horizontal axes based on settings and available space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateXAxesMargins(): void {\r\n\r\n\t\tlet leftAxesWidth = this.leftAxesContainer.measuredWidth;\r\n\t\tlet rightAxesWidth = this.rightAxesContainer.measuredWidth;\r\n\t\tlet bottomAxesCont = this.bottomAxesContainer;\r\n\r\n\t\tif (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\tbottomAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\tbottomAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\r\n\t\tlet topAxesCont = this.topAxesContainer;\r\n\r\n\t\tif (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\ttopAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\ttopAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a re-initialization of this element.\r\n\t *\r\n\t * Will result in complete redrawing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tsuper.reinit();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tseries.appeared = false;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers an update on the horizontal axis when one of its properties\r\n\t * change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event An event object\r\n\t */\r\n\tpublic handleXAxisChange(event: AMEvent<AxisRenderer, ISpriteEvents>[\"propertychanged\"]) {\r\n\t\tthis.updateXAxis(event.target);\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers an update on the vertical axis when one of its properties\r\n\t * change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event An event object\r\n\t */\r\n\tpublic handleYAxisChange(event: AMEvent<AxisRenderer, ISpriteEvents>[\"propertychanged\"]) {\r\n\t\tthis.updateYAxis(event.target);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up a new horizontal (X) axis when it is added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Axis insert event\r\n\t */\r\n\tpublic processXAxis(event: IListEvents<Axis>[\"inserted\"]): void {\r\n\r\n\t\tlet axis: Axis = event.newValue;\r\n\t\taxis.chart = this;\r\n\r\n\t\tif (!axis.renderer) {\r\n\t\t\taxis.renderer = new this._axisRendererX();\r\n\t\t\taxis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleXAxisChange, this, false);\r\n\t\t}\r\n\t\taxis.axisLetter = \"X\";\r\n\r\n\t\taxis.events.on(\"startendchanged\", this.handleXAxisRangeChange, this, false);\r\n\t\t//axis.events.on(\"endchanged\", this.handleXAxisRangeChange, this, false);\r\n\r\n\t\t// Although axis does not use data directly, we set dataProvider here\r\n\t\t// (but not add to chart data users) to hold up rendering before data\r\n\t\t// is parsed (system handles this)\r\n\t\taxis.dataProvider = this;\r\n\r\n\t\tthis.updateXAxis(axis.renderer);\r\n\t\tthis.processAxis(axis);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up a new vertical (Y) axis when it is added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Axis insert event\r\n\t */\r\n\tpublic processYAxis(event: IListEvents<Axis>[\"inserted\"]): void {\r\n\r\n\t\tlet axis: Axis = event.newValue;\r\n\t\taxis.chart = this;\r\n\t\tif (!axis.renderer) {\r\n\t\t\taxis.renderer = new this._axisRendererY();\r\n\t\t\taxis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleYAxisChange, this, false);\r\n\t\t}\r\n\t\taxis.axisLetter = \"Y\";\r\n\r\n\t\taxis.events.on(\"startendchanged\", this.handleYAxisRangeChange, this, false);\r\n\t\t//axis.events.on(\"endchanged\", this.handleYAxisRangeChange, this, false);\r\n\r\n\t\t// Although axis does not use data directly, we set dataProvider here\r\n\t\t// (but not add to chart data users) to hold up rendering before data\r\n\t\t// is parsed (system handles this)\r\n\t\taxis.dataProvider = this;\r\n\r\n\t\tthis.updateYAxis(axis.renderer);\r\n\t\tthis.processAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates horizontal (X) scrollbar and other horizontal axis whenever axis'\r\n\t * value range changes.\r\n\t */\r\n\tprotected handleXAxisRangeChange() {\r\n\t\tlet range: IRange = this.getCommonAxisRange(this.xAxes);\r\n\t\tif (this.scrollbarX) {\r\n\t\t\tthis.zoomAxes(this.xAxes, range, true);\r\n\t\t}\r\n\t\tthis.toggleZoomOutButton();\r\n\t\tthis.updateScrollbar(this.scrollbarX, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows or hides the Zoom Out button depending on whether the chart is fully\r\n\t * zoomed out or not.\r\n\t */\r\n\tpublic toggleZoomOutButton() {\r\n\t\tif (this.zoomOutButton) {\r\n\t\t\tlet show = false;\r\n\r\n\t\t\t$iter.eachContinue(this.xAxes.iterator(), (axis): boolean => {\r\n\t\t\t\tif (axis.toggleZoomOutButton) {\r\n\t\t\t\t\tif (axis.maxZoomCount > 0) {\r\n\t\t\t\t\t\tlet minZoomFactor: number = axis.maxZoomFactor / axis.maxZoomCount;\r\n\t\t\t\t\t\tif ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ($math.round(axis.start, 3) > 0 || $math.round(axis.end, 3) < 1) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\t$iter.eachContinue(this.yAxes.iterator(), (axis): boolean => {\r\n\t\t\t\tif (axis.toggleZoomOutButton) {\r\n\t\t\t\t\tif (axis.maxZoomCount > 0) {\r\n\t\t\t\t\t\tlet minZoomFactor: number = axis.maxZoomFactor / axis.maxZoomCount;\r\n\t\t\t\t\t\tif ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ($math.round(axis.start, 3) > 0 || $math.round(axis.end, 3) < 1) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!this.seriesAppeared) {\r\n\t\t\t\tshow = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (show) {\r\n\t\t\t\tthis.zoomOutButton.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.zoomOutButton.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * moved this check to a separate method so that we could override it in TreeMapSeries\r\n\t */\r\n\tprotected seriesAppeared(): boolean {\r\n\t\tlet appeared: boolean = false;\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.appeared) {\r\n\t\t\t\tappeared = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn appeared;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates vertical (Y) scrollbar and other horizontal axis whenever axis'\r\n\t * value range changes.\r\n\t */\r\n\tprotected handleYAxisRangeChange() {\r\n\t\tlet range: IRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\tif (this.scrollbarY) {\r\n\t\t\tthis.zoomAxes(this.yAxes, range, true);\r\n\t\t}\r\n\t\tthis.toggleZoomOutButton();\r\n\t\tthis.updateScrollbar(this.scrollbarY, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a relative scrollbar whenever data range of the axis changes.\r\n\t *\r\n\t * @param scrollbar  Scrollbar instance\r\n\t * @param range      New data (values) range of the axis\r\n\t */\r\n\tprotected updateScrollbar(scrollbar: Scrollbar, range: IRange): void {\r\n\t\tif (scrollbar) {\r\n\t\t\tscrollbar.skipRangeEvents();\r\n\t\t\tscrollbar.start = range.start;\r\n\t\t\tscrollbar.end = range.end;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a common range of values between a list of axes.\r\n\t *\r\n\t * This is used to synchronize the zoom between multiple axes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axes  A list of axes\r\n\t * @return Common value range\r\n\t */\r\n\tpublic getCommonAxisRange(axes: List<Axis>): IRange {\r\n\t\tlet start: Optional<number>;\r\n\t\tlet end: Optional<number>;\r\n\r\n\t\taxes.each((axis) => {\r\n\t\t\tif (!axis.zoomable || (axis instanceof ValueAxis && axis.syncWithAxis)) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet axisStart = axis.start;\r\n\t\t\t\tlet axisEnd = axis.end;\r\n\r\n\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\taxisStart = 1 - axis.end;\r\n\t\t\t\t\taxisEnd = 1 - axis.start;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.isNumber(start) || (axisStart < start)) {\r\n\t\t\t\t\tstart = axisStart;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(end) || (axisEnd > end)) {\r\n\t\t\t\t\tend = axisEnd;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { start: start, end: end };\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the horizontal (X) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic updateXAxis(renderer: AxisRenderer) {\r\n\t\tlet axis = renderer.axis;\r\n\t\tif (renderer.opposite) {\r\n\t\t\taxis.parent = this.topAxesContainer;\r\n\t\t\taxis.toFront();\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxis.parent = this.bottomAxesContainer;\r\n\t\t\taxis.toBack();\r\n\t\t}\r\n\t\tif (axis.renderer) {\r\n\t\t\taxis.renderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the vertical (Y) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic updateYAxis(renderer: AxisRenderer) {\r\n\t\tlet axis = renderer.axis;\r\n\t\tif (renderer.opposite) {\r\n\t\t\taxis.parent = this.rightAxesContainer;\r\n\t\t\taxis.toBack();\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxis.parent = this.leftAxesContainer;\r\n\t\t\taxis.toFront();\r\n\t\t}\r\n\t\tif (axis.renderer) {\r\n\t\t\taxis.renderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an Axis for use with this chart, e.g. sets proper renderer\r\n\t * and containers for placement.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tprotected processAxis(axis: Axis): void {\r\n\t\t// Value axis does not use data directly, only category axis does\r\n\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\tthis._dataUsers.moveValue(axis);\r\n\t\t}\r\n\r\n\t\tlet renderer: AxisRenderer = axis.renderer;\r\n\r\n\t\trenderer.gridContainer.parent = this.plotContainer;\r\n\t\trenderer.gridContainer.toBack();\r\n\r\n\t\trenderer.breakContainer.parent = this.plotContainer;\r\n\t\trenderer.breakContainer.toFront();\r\n\t\trenderer.breakContainer.zIndex = 10;\r\n\r\n\t\taxis.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(axis);\r\n\t\t}))\r\n\r\n\t\trenderer.bulletsContainer.parent = this.axisBulletsContainer;\r\n\r\n\t\tthis._disposers.push(axis.events.on(\"positionchanged\", () => {\r\n\t\t\tlet point = $utils.spritePointToSprite({ x: 0, y: 0 }, axis, this.axisBulletsContainer);\r\n\t\t\tif (axis.renderer instanceof AxisRendererY) {\r\n\t\t\t\trenderer.bulletsContainer.y = point.y;\r\n\t\t\t}\r\n\t\t\tif (axis.renderer instanceof AxisRendererX) {\r\n\t\t\t\trenderer.bulletsContainer.x = point.x;\r\n\t\t\t}\r\n\t\t}, undefined, false));\r\n\r\n\t\tthis.plotContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\taxis.invalidateDataItems();\r\n\t\t\t\tthis.updateSeriesMasks();\r\n\t\t\t}\r\n\t\t}, axis, false);\r\n\t}\r\n\r\n\t/**\r\n\t * This is done because for some reason IE doesn't change mask if path of a\r\n\t * mask changes.\r\n\t */\r\n\tprotected updateSeriesMasks(): void {\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet mask = series.mainContainer.mask;\r\n\t\t\t\tseries.mainContainer.mask = undefined;\r\n\t\t\t\tseries.mainContainer.mask = mask;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<XYSeries>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\r\n\t\tif (series) {\r\n\t\t\tif (series.xAxis) {\r\n\t\t\t\tseries.xAxis.series.removeValue(series);\r\n\t\t\t\tseries.xAxis.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t\tif (series.yAxis) {\r\n\t\t\t\tseries.yAxis.series.removeValue(series);\r\n\t\t\t\tseries.yAxis.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t\t// otherwise extremes won't change\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.resetExtremes();\r\n\t\t\t})\r\n\t\t}\r\n\t\tsuper.handleSeriesRemoved(event);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of horizontal (X) axes.\r\n\t *\r\n\t * @return List of axes\r\n\t */\r\n\tpublic get xAxes(): List<Axis<this[\"_xAxisRendererType\"]>> {\r\n\t\tif (!this._xAxes) {\r\n\t\t\tthis._xAxes = new List<Axis<this[\"_xAxisRendererType\"]>>();\r\n\t\t\tthis._xAxes.events.on(\"inserted\", this.processXAxis, this, false);\r\n\t\t\tthis._xAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._xAxes, false));\r\n\t\t}\r\n\r\n\t\treturn this._xAxes;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleAxisRemoval(event: IListEvents<Axis>[\"removed\"]) {\r\n\t\tlet axis = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(axis); // need to remove, as it might not be disposed\r\n\t\tif (axis.autoDispose) {\r\n\t\t\taxis.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of vertical (Y) axes.\r\n\t *\r\n\t * @return List of axes\r\n\t */\r\n\tpublic get yAxes(): List<Axis<this[\"_yAxisRendererType\"]>> {\r\n\t\tif (!this._yAxes) {\r\n\t\t\tthis._yAxes = new List<Axis<this[\"_yAxisRendererType\"]>>();\r\n\t\t\tthis._yAxes.events.on(\"inserted\", this.processYAxis, this, false);\r\n\t\t\tthis._yAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._yAxes, false));\r\n\t\t}\r\n\r\n\t\treturn this._yAxes;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[XYSeries]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<XYSeries>[\"inserted\"]): void {\r\n\t\ttry {\r\n\t\t\tsuper.handleSeriesAdded(event);\r\n\t\t\tlet series: XYSeries = event.newValue;\r\n\r\n\t\t\tif (this.xAxes.length == 0 || this.yAxes.length == 0) {\r\n\t\t\t\tregistry.removeFromInvalidComponents(series);\r\n\t\t\t\tseries.dataInvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\t$utils.used(series.xAxis); // this is enough to get axis, handled in getter\r\n\t\t\t$utils.used(series.yAxis); // this is enough to get axis, handled in getter\r\n\r\n\t\t\tseries.maskBullets = series.maskBullets;\r\n\r\n\t\t\tif (series.fill == undefined) {\r\n\t\t\t\tif (this.patterns) {\r\n\t\t\t\t\tif (!$type.hasValue(series.stroke)) {\r\n\t\t\t\t\t\tseries.stroke = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tseries.fill = this.patterns.next();\r\n\t\t\t\t\tif ($type.hasValue(series.fillOpacity)) {\r\n\t\t\t\t\t\tseries.fill.backgroundOpacity = series.fillOpacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.stroke instanceof Color) {\r\n\t\t\t\t\t\tseries.fill.stroke = series.stroke;\r\n\t\t\t\t\t\tseries.fill.fill = series.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.fill = this.colors.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.hasValue(series.stroke)) {\r\n\t\t\t\tseries.stroke = series.fill;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tthis.raiseCriticalError(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's [[Cursor]].\r\n\t *\r\n\t * @param cursor  Cursor\r\n\t */\r\n\tpublic set cursor(cursor: this[\"_cursor\"]) {\r\n\t\tif (this._cursor != cursor) {\r\n\t\t\tif (this._cursor) {\r\n\t\t\t\tthis.removeDispose(this._cursor);\r\n\t\t\t}\r\n\r\n\t\t\tthis._cursor = cursor;\r\n\r\n\t\t\tif (cursor) {\r\n\t\t\t\t// TODO this is wrong, fix it\r\n\t\t\t\tthis._disposers.push(cursor);\r\n\t\t\t\tcursor.chart = this;\r\n\t\t\t\tcursor.shouldClone = false;\r\n\t\t\t\tcursor.parent = this._cursorContainer;\r\n\t\t\t\tcursor.events.on(\"cursorpositionchanged\", this.handleCursorPositionChange, this, false);\r\n\t\t\t\tcursor.events.on(\"zoomstarted\", this.handleCursorZoomStart, this, false);\r\n\t\t\t\tcursor.events.on(\"zoomended\", this.handleCursorZoomEnd, this, false);\r\n\t\t\t\tcursor.events.on(\"panstarted\", this.handleCursorPanStart, this, false);\r\n\t\t\t\tcursor.events.on(\"panning\", this.handleCursorPanning, this, false);\r\n\t\t\t\tcursor.events.on(\"panended\", this.handleCursorPanEnd, this, false);\r\n\t\t\t\tcursor.events.on(\"behaviorcanceled\", this.handleCursorCanceled, this, false);\r\n\t\t\t\tcursor.events.on(\"hidden\", this.handleHideCursor, this, false);\r\n\t\t\t\tcursor.zIndex = Number.MAX_SAFE_INTEGER - 1;\r\n\r\n\t\t\t\tif (this.tapToActivate) {\r\n\t\t\t\t\t// We need this in order to setup cursor properly\r\n\t\t\t\t\tthis.setTapToActivate(this.tapToActivate);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cursor\r\n\t */\r\n\tpublic get cursor(): this[\"_cursor\"] {\r\n\t\treturn this._cursor;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks when the cursor's position changes, e.g. shows proper\r\n\t * tooltips on axes and series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleCursorPositionChange(): void {\r\n\r\n\t\tlet cursor = this.cursor;\r\n\r\n\t\tif (cursor.visible && !cursor.isHiding) {\r\n\t\t\tlet xPosition: number = this.cursor.xPosition;\r\n\t\t\tlet yPosition: number = this.cursor.yPosition;\r\n\r\n\t\t\tthis.showSeriesTooltip({\r\n\t\t\t\tx: xPosition,\r\n\t\t\t\ty: yPosition\r\n\t\t\t});\r\n\r\n\t\t\tlet exceptAxes: Axis[] = [];\r\n\t\t\tlet snapToSeries = cursor.snapToSeries;\r\n\r\n\t\t\tif (snapToSeries && !cursor.downPoint) {\r\n\t\t\t\tif (snapToSeries instanceof XYSeries) {\r\n\t\t\t\t\tsnapToSeries = [snapToSeries];\r\n\t\t\t\t}\r\n\t\t\t\tlet dataItems: XYSeriesDataItem[] = [];\r\n\r\n\t\t\t\t$array.each(snapToSeries, (snpSeries) => {\r\n\t\t\t\t\tif (!snpSeries.isHidden && !snpSeries.isHiding) {\r\n\r\n\t\t\t\t\t\tlet xAxis = snpSeries.xAxis;\r\n\t\t\t\t\t\tlet yAxis = snpSeries.yAxis;\r\n\r\n\t\t\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\r\n\t\t\t\t\t\t\tsnpSeries.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.yAxis);\r\n\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.xAxis);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (snpSeries.baseAxis == snpSeries.xAxis) {\r\n\t\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.yAxis);\r\n\t\t\t\t\t\t\t\tdataItems.push(xAxis.getSeriesDataItem(snpSeries, xAxis.toAxisPosition(xPosition), true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (snpSeries.baseAxis == snpSeries.yAxis) {\r\n\t\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.xAxis);\r\n\t\t\t\t\t\t\t\tdataItems.push(yAxis.getSeriesDataItem(snpSeries, yAxis.toAxisPosition(yPosition), true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet closestDataItem = this.getClosest(dataItems, xPosition, yPosition);\r\n\r\n\t\t\t\tif (closestDataItem) {\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tlet closestSeries = closestDataItem.component;\r\n\t\t\t\t\t\tif (series != closestSeries) {\r\n\t\t\t\t\t\t\tseries.hideTooltip();\r\n\t\t\t\t\t\t\tif (series.xAxis != closestSeries.xAxis) {\r\n\t\t\t\t\t\t\t\tseries.xAxis.hideTooltip();\r\n\t\t\t\t\t\t\t\texceptAxes.push(series.xAxis);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (series.yAxis != closestSeries.yAxis) {\r\n\t\t\t\t\t\t\t\tseries.yAxis.hideTooltip();\r\n\t\t\t\t\t\t\t\texceptAxes.push(series.yAxis);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tclosestDataItem.component.showTooltipAtDataItem(closestDataItem);\r\n\t\t\t\t\tcursor.handleSnap(closestDataItem.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//}\r\n\t\t\tthis._seriesPoints = [];\r\n\r\n\t\t\tif (this._cursorXPosition != xPosition) {\r\n\t\t\t\tthis.showAxisTooltip(this.xAxes, xPosition, exceptAxes);\r\n\t\t\t}\r\n\t\t\tif (this._cursorYPosition != yPosition) {\r\n\t\t\t\tthis.showAxisTooltip(this.yAxes, yPosition, exceptAxes);\r\n\t\t\t}\r\n\t\t\tif (this.arrangeTooltips) {\r\n\t\t\t\tthis.sortSeriesTooltips(this._seriesPoints);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.afterDraw();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds closest data item to position out of the array of items.\r\n\t *\r\n\t * @since 4.9.29\r\n\t * @param   dataItems  Array of items\r\n\t * @param              xPosition X position\r\n\t * @param              yPosition Y position\r\n\t * @return             Data item\r\n\t */\r\n\tpublic getClosest(dataItems: XYSeriesDataItem[], xPosition: number, yPosition: number): XYSeriesDataItem {\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet closestDataItem: XYSeriesDataItem\r\n\r\n\t\t$array.eachContinue(dataItems, (dataItem) => {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet xAxis = dataItem.component.xAxis;\r\n\t\t\t\tlet yAxis = dataItem.component.yAxis;\r\n\r\n\t\t\t\tlet xPos = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.toAxisPosition(xPosition)));\r\n\t\t\t\tlet yPos = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.toAxisPosition(yPosition)));\r\n\r\n\t\t\t\tlet xField = dataItem.component.xField;\r\n\t\t\t\tlet yField = dataItem.component.yField;\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !$type.isNumber(dataItem.getValue(xField))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !$type.isNumber(dataItem.getValue(yField))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet dxPosition = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.getPositionX(dataItem, xField, dataItem.locations[xField], \"valueX\")));\r\n\t\t\t\tlet dyPosition = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.getPositionY(dataItem, yField, dataItem.locations[yField], \"valueY\")));\r\n\r\n\t\t\t\tlet distance = Math.sqrt(Math.pow(xPos - dxPosition, 2) + Math.pow(yPos - dyPosition, 2));\r\n\r\n\t\t\t\tif (distance < minDistance) {\r\n\t\t\t\t\tminDistance = distance;\r\n\t\t\t\t\tclosestDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn closestDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all cursor-related tooltips when the cursor itself is hidden.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleHideCursor(): void {\r\n\t\tthis.hideObjectTooltip(this.xAxes);\r\n\t\tthis.hideObjectTooltip(this.yAxes);\r\n\t\tthis.hideObjectTooltip(this.series);\r\n\t\tthis._cursorXPosition = undefined;\r\n\t\tthis._cursorYPosition = undefined;\r\n\r\n\t\tthis.updateSeriesLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates values for each series' legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSeriesLegend(): void {\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.updateLegendValue();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Hides a tooltip for a list of objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprites  A list of sprites to hide tooltip for\r\n\t */\r\n\tpublic hideObjectTooltip(sprites: List<Axis | XYSeries>): void {\r\n\t\t$iter.each(sprites.iterator(), (sprite) => {\r\n\t\t\tif (sprite.cursorTooltipEnabled) {\r\n\t\t\t\tsprite.hideTooltip(0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Shows a tooltip for all chart's series, using specific coordinates as a\r\n\t * reference point.\r\n\t *\r\n\t * The tooltip might be shown at different coordinates depending on the\r\n\t * actual data point's position, overlapping with other tooltips, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Reference point\r\n\t */\r\n\tpublic showSeriesTooltip(position?: IPoint): void {\r\n\r\n\t\tif (!position) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.hideTooltip();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet seriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\t//if (series.tooltipText || series.tooltipHTML) { // not good, bullets are not hovered then\r\n\r\n\t\t\tif ((series.xAxis instanceof DateAxis && series.xAxis.snapTooltip) || (series.yAxis instanceof DateAxis && series.yAxis.snapTooltip)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet point = series.showTooltipAtPosition(position.x, position.y);\r\n\t\t\t\tif (point) {\r\n\t\t\t\t\tseries.tooltip.setBounds($utils.spriteRectToSvg({ x: 0, y: 0, width: this.pixelWidth, height: this.pixelHeight }, this));\r\n\t\t\t\t\tseriesPoints.push({ series: series, point: point });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//}\r\n\t\t});\r\n\r\n\t\tif (this.arrangeTooltips) {\r\n\t\t\tthis.sortSeriesTooltips(seriesPoints);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic sortSeriesTooltips(seriesPoints: { point: IPoint, series: XYSeries }[]) {\r\n\t\tif (seriesPoints.length > 0) {\r\n\t\t\tlet cursor = this.cursor;\r\n\r\n\t\t\tif (cursor && $type.isNumber(cursor.maxTooltipDistance)) {\r\n\r\n\t\t\t\tlet cursorPoint = $utils.spritePointToSvg({ x: cursor.point.x, y: cursor.point.y }, cursor);\r\n\r\n\t\t\t\tlet nearestSeries: XYSeries;\r\n\t\t\t\tlet nearestPoint: IPoint;\r\n\t\t\t\tlet smallestDistance: number = Infinity;\r\n\r\n\t\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\t\tlet series = seriesPoint.series;\r\n\t\t\t\t\tlet fixedPoint = seriesPoint.point;\r\n\t\t\t\t\tif (fixedPoint) {\r\n\t\t\t\t\t\tlet point = { x: fixedPoint.x, y: fixedPoint.y };\r\n\r\n\t\t\t\t\t\tlet distance = Math.abs($math.getDistance(point, cursorPoint));\r\n\t\t\t\t\t\tif (distance < smallestDistance) {\r\n\t\t\t\t\t\t\tnearestPoint = point;\r\n\t\t\t\t\t\t\tsmallestDistance = distance;\r\n\t\t\t\t\t\t\tnearestSeries = series;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tlet newSeriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\t\t\t\tif (nearestSeries) {\r\n\r\n\t\t\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\t\t\tif (Math.abs($math.getDistance(seriesPoint.point, nearestPoint)) <= Math.abs(cursor.maxTooltipDistance)) {\r\n\t\t\t\t\t\t\tnewSeriesPoints.push({ series: seriesPoint.series, point: seriesPoint.point });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet tooltipDataItem = seriesPoint.series.tooltipDataItem;\r\n\t\t\t\t\t\t\tif (tooltipDataItem) {\r\n\t\t\t\t\t\t\t\t$array.each(tooltipDataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\t\t\t\t\tsprite.handleOutReal(); // to avoid flicker\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tseriesPoint.series.hideTooltip(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (cursor.maxTooltipDistance < 0) {\r\n\t\t\t\t\t\tif (newSeriesPoints.length > 0) {\r\n\t\t\t\t\t\t\t$array.each(newSeriesPoints, (np) => {\r\n\t\t\t\t\t\t\t\tif (nearestSeries != np.series) {\r\n\t\t\t\t\t\t\t\t\tnp.series.hideTooltip(0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewSeriesPoints = [{ series: nearestSeries, point: nearestPoint }];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseriesPoints = newSeriesPoints;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet topLeft = $utils.spritePointToSvg({ x: -0.5, y: -0.5 }, this.plotContainer);\r\n\t\t\tlet bottomRight = $utils.spritePointToSvg({ x: this.plotContainer.pixelWidth + 0.5, y: this.plotContainer.pixelHeight + 0.5 }, this.plotContainer);\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tlet filteredSeriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\tlet point = seriesPoint.point;\r\n\t\t\t\tif (point && $math.isInRectangle(point, { x: topLeft.x, y: topLeft.y, width: bottomRight.x - topLeft.x, height: bottomRight.y - topLeft.y })) {\r\n\t\t\t\t\tfilteredSeriesPoints.push({ point: point, series: seriesPoint.series });\r\n\t\t\t\t\tsum += point.y;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tseriesPoints = filteredSeriesPoints;\r\n\r\n\t\t\tlet firstSeries = this.series.getIndex(0);\r\n\t\t\tlet inversed = false;\r\n\t\t\tif (firstSeries && firstSeries.yAxis && firstSeries.yAxis.renderer.inversed) {\r\n\t\t\t\tinversed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (inversed) {\r\n\t\t\t\tseriesPoints.sort((a, b) => $number.order(a.point.y, b.point.y))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tseriesPoints.sort((a, b) => $number.order(b.point.y, a.point.y))\r\n\t\t\t\tseriesPoints.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tlet averageY = sum / seriesPoints.length;\r\n\t\t\tlet maxY = $utils.svgPointToDocument({ x: 0, y: 0 }, this.svgContainer.SVGContainer).y;\r\n\r\n\t\t\tif (seriesPoints.length > 0) {\r\n\t\t\t\tlet top = topLeft.y;\r\n\t\t\t\tlet bottom = bottomRight.y;\r\n\r\n\t\t\t\t// TODO is this needed ?\r\n\t\t\t\t$utils.spritePointToDocument({ x: 0, y: top }, this);\r\n\r\n\t\t\t\tlet dropped = false;\r\n\r\n\t\t\t\tif (averageY > top + (bottom - top) / 2) {\r\n\t\t\t\t\tlet nextHeight = bottom;\r\n\t\t\t\t\tfor (let i = seriesPoints.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tlet series = seriesPoints[i].series;\r\n\r\n\t\t\t\t\t\tlet tooltip = series.tooltip;\r\n\t\t\t\t\t\tlet pointY = seriesPoints[i].point.y;\r\n\r\n\t\t\t\t\t\ttooltip.setBounds({ x: 0, y: -maxY, width: this.pixelWidth, height: nextHeight + maxY });\r\n\r\n\t\t\t\t\t\tif (tooltip.invalid) {\r\n\t\t\t\t\t\t\ttooltip.validate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttooltip.toBack();\r\n\t\t\t\t\t\tnextHeight = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY - tooltip.pixelY + pointY - tooltip.pixelMarginTop }, tooltip).y;\r\n\r\n\t\t\t\t\t\tif (nextHeight < -maxY) {\r\n\t\t\t\t\t\t\tdropped = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (averageY <= top + (bottom - top) / 2 || dropped) {\r\n\t\t\t\t\tlet nextY = top;\r\n\t\t\t\t\tfor (let i = 0, len = seriesPoints.length; i < len; i++) {\r\n\t\t\t\t\t\tlet series = seriesPoints[i].series;\r\n\t\t\t\t\t\tlet pointY = seriesPoints[i].point.y;\r\n\t\t\t\t\t\tlet tooltip = series.tooltip;\r\n\t\t\t\t\t\ttooltip.setBounds({ x: 0, y: nextY, width: this.pixelWidth, height: bottom });\r\n\r\n\t\t\t\t\t\tif (tooltip.invalid) {\r\n\t\t\t\t\t\t\ttooltip.validate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttooltip.toBack();\r\n\r\n\t\t\t\t\t\tnextY = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY + tooltip.label.measuredHeight - tooltip.pixelY + pointY + tooltip.pixelMarginBottom }, tooltip).y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows tooltips for a list of axes at specific position.\r\n\t *\r\n\t * Position might be X coordinate for horizontal axes, and Y coordinate for\r\n\t * vertical axes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axes      List of axes to show tooltip on\r\n\t * @param position  Position (px)\r\n\t */\r\n\tpublic showAxisTooltip(axes: List<Axis>, position: number, except?: Axis[]): void {\r\n\t\t$iter.each(axes.iterator(), (axis) => {\r\n\t\t\tif (!except || except.indexOf(axis) == -1) {\r\n\t\t\t\tif (this.dataItems.length > 0 || axis.dataItems.length > 0) {\r\n\t\t\t\t\taxis.showTooltipAtPosition(position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the value range for the axis taking into account zoom level & inversed.\r\n\t *\r\n\t * @param axis   Axis\r\n\t * @param range  Range\r\n\t * @return Modified range\r\n\t */\r\n\tpublic getUpdatedRange(axis: Axis<this[\"_xAxisRendererType\"]>, range: IRange): IRange {\r\n\r\n\t\tif (!axis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet start: number;\r\n\t\tlet end: number;\r\n\t\tlet inversed = axis.renderer.inversed;\r\n\r\n\t\tif (inversed) {\r\n\t\t\t$math.invertRange(range);\r\n\r\n\t\t\tstart = 1 - axis.end;\r\n\t\t\tend = 1 - axis.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstart = axis.start;\r\n\t\t\tend = axis.end;\r\n\t\t}\r\n\r\n\t\tlet difference: number = end - start;\r\n\r\n\t\treturn {\r\n\t\t\tstart: start + range.start * difference,\r\n\t\t\tend: start + range.end * difference\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user finishes zooming using chart\r\n\t * cursor, e.g. zooms axes.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorZoomEnd(event: IXYCursorEvents[\"zoomended\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\t\tif (behavior == \"zoomX\" || behavior == \"zoomXY\") {\r\n\t\t\tlet xRange: IRange = cursor.xRange;\r\n\t\t\tif (xRange && this.xAxes.length > 0) {\r\n\t\t\t\txRange = this.getUpdatedRange(this.xAxes.getIndex(0), xRange);\r\n\t\t\t\txRange.priority = \"start\";\r\n\t\t\t\tthis.zoomAxes(this.xAxes, xRange);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (behavior == \"zoomY\" || behavior == \"zoomXY\") {\r\n\t\t\tlet yRange: IRange = cursor.yRange;\r\n\t\t\tif (yRange && this.yAxes.length > 0) {\r\n\t\t\t\tyRange = this.getUpdatedRange(this.yAxes.getIndex(0), yRange);\r\n\t\t\t\tyRange.priority = \"start\";\r\n\t\t\t\tthis.zoomAxes(this.yAxes, yRange);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.handleHideCursor();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanStart(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet xAxis = this.xAxes.getIndex(0);\r\n\t\tif (xAxis) {\r\n\t\t\tthis._panStartXRange = { start: xAxis.start, end: xAxis.end };\r\n\t\t\tif (xAxis.renderer.inversed) {\r\n\t\t\t\tthis._panStartXRange = $math.invertRange(this._panStartXRange)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis = this.yAxes.getIndex(0);\r\n\t\tif (yAxis) {\r\n\t\t\tthis._panStartYRange = { start: yAxis.start, end: yAxis.end };\r\n\t\t\tif (yAxis.renderer.inversed) {\r\n\t\t\t\tthis._panStartYRange = $math.invertRange(this._panStartYRange)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user ends panning\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanEnd(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\r\n\t\tif (this._panEndXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n\t\t\tlet panEndRange = this._panEndXRange;\r\n\t\t\tlet panStartRange = this._panStartXRange;\r\n\t\t\tlet delta = 0;\r\n\r\n\t\t\tif (panEndRange.start < 0) {\r\n\t\t\t\tdelta = panEndRange.start;\r\n\t\t\t}\r\n\r\n\t\t\tif (panStartRange.end > 1) {\r\n\t\t\t\tif (panEndRange.end > panStartRange.end) {\r\n\t\t\t\t\tdelta = panEndRange.end - panStartRange.end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (panEndRange.end > 1) {\r\n\t\t\t\tdelta = panEndRange.end - 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zoomAxes(this.xAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, cursor.snapOnPan);\r\n\t\t\tthis._panEndXRange = undefined;\r\n\t\t\tthis._panStartXRange = undefined;\r\n\t\t}\r\n\t\tif (this._panEndYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n\t\t\tlet panEndRange = this._panEndYRange;\r\n\r\n\t\t\tlet delta = 0;\r\n\t\t\tif (panEndRange.start < 0) {\r\n\t\t\t\tdelta = panEndRange.start;\r\n\t\t\t}\r\n\t\t\tif (panEndRange.end > 1) {\r\n\t\t\t\tdelta = panEndRange.end - 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zoomAxes(this.yAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, cursor.snapOnPan);\r\n\t\t\tthis._panEndYRange = undefined;\r\n\t\t\tthis._panStartYRange = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleCursorCanceled(): void {\r\n\t\tthis._panEndXRange = undefined;\r\n\t\tthis._panStartXRange = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanning(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\t\tlet maxPanOut = cursor.maxPanOut;\r\n\t\tif (this._panStartXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n\t\t\tlet panStartRange = this._panStartXRange;\r\n\t\t\tlet range = cursor.xRange;\r\n\r\n\t\t\tlet axisRange = this.getCommonAxisRange(this.xAxes);\r\n\r\n\t\t\tlet difference = (panStartRange.end - panStartRange.start);\r\n\t\t\tlet delta = range.start * (axisRange.end - axisRange.start);\r\n\r\n\t\t\tlet newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n\t\t\tlet newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n\r\n\t\t\tif (newStart <= 0) {\r\n\t\t\t\tnewEnd = newStart + difference;\r\n\t\t\t}\r\n\r\n\t\t\tif (newEnd >= 1) {\r\n\t\t\t\tnewStart = newEnd - difference;\r\n\t\t\t}\r\n\r\n\t\t\tlet newRange = {\r\n\t\t\t\tstart: newStart,\r\n\t\t\t\tend: newEnd\r\n\t\t\t}\r\n\t\t\tthis._panEndXRange = newRange;\r\n\r\n\t\t\tthis.zoomAxes(this.xAxes, newRange, false, false, cursor.maxPanOut);\r\n\t\t}\r\n\r\n\t\tif (this._panStartYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n\t\t\tlet panStartRange = this._panStartYRange;\r\n\t\t\tlet range = cursor.yRange;\r\n\r\n\t\t\tlet axisRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\t\tlet difference = panStartRange.end - panStartRange.start;\r\n\t\t\tlet delta = range.start * (axisRange.end - axisRange.start);\r\n\r\n\t\t\tlet newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n\t\t\tlet newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n\r\n\t\t\tif (newStart <= 0) {\r\n\t\t\t\tnewEnd = newStart + difference;\r\n\t\t\t}\r\n\r\n\t\t\tif (newEnd >= 1) {\r\n\t\t\t\tnewStart = newEnd - difference;\r\n\t\t\t}\r\n\r\n\t\t\tlet newRange = {\r\n\t\t\t\tstart: newStart,\r\n\t\t\t\tend: newEnd\r\n\t\t\t}\r\n\t\t\tthis._panEndYRange = newRange;\r\n\t\t\tthis.zoomAxes(this.yAxes, newRange, false, false, cursor.maxPanOut);\r\n\t\t}\r\n\r\n\t\tthis.handleHideCursor();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleYAxisSet(series: XYSeries) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user starts zooming using chart\r\n\t * cursor, e.g. zooms axes.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorZoomStart(event: IXYCursorEvents[\"zoomstarted\"]): void {\r\n\r\n\t\t// Nothing here\r\n\t\t// This method is here only as a \"placeholder\" for extending classes to\r\n\t\t// override if necessary\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal (X) scrollbar.\r\n\t *\r\n\t * @param scrollbar Scrollbar\r\n\t */\r\n\tpublic set scrollbarX(scrollbar: Scrollbar) {\r\n\t\tif (this._scrollbarX) {\r\n\t\t\tthis.removeDispose(this._scrollbarX);\r\n\t\t}\r\n\t\tthis._scrollbarX = scrollbar;\r\n\r\n\t\tif (scrollbar) {\r\n\t\t\tthis._disposers.push(scrollbar);\r\n\t\t\tscrollbar.parent = this.topAxesContainer;\r\n\t\t\tscrollbar.shouldClone = false;\r\n\t\t\tscrollbar.startGrip.exportable = false;\r\n\t\t\tscrollbar.endGrip.exportable = false;\r\n\t\t\tscrollbar.toBack();\r\n\t\t\tscrollbar.orientation = \"horizontal\";\r\n\t\t\tscrollbar.events.on(\"rangechanged\", this.handleXScrollbarChange, this, false);\r\n\t\t\tthis.events.on(\"datavalidated\", () => scrollbar.updateThumb(false), this, false);\r\n\t\t\t// accessibility related\r\n\t\t\tscrollbar.adapter.add(\"positionValue\", (arg) => {\r\n\t\t\t\tlet xAxis = this.xAxes.getIndex(0);\r\n\t\t\t\tif (xAxis) {\r\n\t\t\t\t\targ.value = xAxis.getPositionLabel(\r\n\t\t\t\t\t\txAxis.renderer.inversed\r\n\t\t\t\t\t\t\t? 1 - arg.position\r\n\t\t\t\t\t\t\t: arg.position\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scrollbar\r\n\t */\r\n\tpublic get scrollbarX(): Scrollbar {\r\n\t\treturn this._scrollbarX;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical (Y) scrollbar.\r\n\t *\r\n\t * @param scrollbar Scrollbar\r\n\t */\r\n\tpublic set scrollbarY(scrollbar: Scrollbar) {\r\n\t\tif (this._scrollbarY) {\r\n\t\t\tthis.removeDispose(this._scrollbarY);\r\n\t\t}\r\n\t\tthis._scrollbarY = scrollbar;\r\n\r\n\t\tif (scrollbar) {\r\n\t\t\tthis._disposers.push(scrollbar);\r\n\t\t\tscrollbar.parent = this.rightAxesContainer;\r\n\t\t\tscrollbar.startGrip.exportable = false;\r\n\t\t\tscrollbar.shouldClone = false;\r\n\t\t\tscrollbar.endGrip.exportable = false;\r\n\t\t\tscrollbar.toFront();\r\n\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\tscrollbar.events.on(\"rangechanged\", this.handleYScrollbarChange, this, false);\r\n\t\t\tthis.events.on(\"datavalidated\", () => scrollbar.updateThumb(false), this, false);\r\n\t\t\t// accessibility related\r\n\t\t\tscrollbar.adapter.add(\"positionValue\", (arg) => {\r\n\t\t\t\tlet yAxis = this.yAxes.getIndex(0);\r\n\t\t\t\tif (yAxis) {\r\n\t\t\t\t\targ.value = yAxis.getPositionLabel(arg.position);\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scrollbar\r\n\t */\r\n\tpublic get scrollbarY(): Scrollbar {\r\n\t\treturn this._scrollbarY;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes affected by the horizontal (X) scrollbar when the selection\r\n\t * on it changes.\r\n\t *\r\n\t * @param event Scrollbar range change event\r\n\t */\r\n\tprotected handleXScrollbarChange(event: AMEvent<Scrollbar, IScrollbarEvents>[\"rangechanged\"]): void {\r\n\r\n\t\tif (this.inited) {\r\n\t\t\tlet scrollbar: Scrollbar = event.target;\r\n\t\t\tlet range = scrollbar.range;\r\n\r\n\t\t\tif (range.start == 0) {\r\n\t\t\t\trange.priority = \"start\";\r\n\t\t\t}\r\n\r\n\t\t\tif (range.end == 1) {\r\n\t\t\t\trange.priority = \"end\";\r\n\t\t\t}\r\n\r\n\t\t\trange = this.zoomAxes(this.xAxes, range);\r\n\r\n\t\t\tscrollbar.fixRange(range);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes affected by the vertical (Y) scrollbar when the selection\r\n\t * on it changes.\r\n\t *\r\n\t * @param event Scrollbar range change event\r\n\t */\r\n\tprotected handleYScrollbarChange(event: AMEvent<Scrollbar, IScrollbarEvents>[\"rangechanged\"]): void {\r\n\t\tif (this.inited) {\r\n\t\t\tlet scrollbar: Scrollbar = event.target;\r\n\t\t\tlet range = scrollbar.range;\r\n\t\t\tif (range.end == 1) {\r\n\t\t\t\trange.priority = \"end\";\r\n\t\t\t}\r\n\t\t\tif (range.start == 0) {\r\n\t\t\t\trange.priority = \"start\";\r\n\t\t\t}\r\n\t\t\trange = this.zoomAxes(this.yAxes, range);\r\n\t\t\tscrollbar.fixRange(range);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes that are affected by to specific relative range.\r\n\t *\r\n\t * @param axes       List of axes to zoom\r\n\t * @param range      Range of values to zoom to (0-1)\r\n\t * @param instantly  If set to `true` will skip zooming animation\r\n\t * @return Recalculated range that is common to all involved axes\r\n\t */\r\n\tprotected zoomAxes(axes: List<Axis<this[\"_xAxisRendererType\"]>>, range: IRange, instantly?: boolean, round?: boolean, declination?: number, stop?: boolean): IRange {\r\n\t\tlet realRange: IRange = { start: 0, end: 1 };\r\n\r\n\t\tthis.showSeriesTooltip(); // hides\r\n\r\n\t\tlet originalRange = range;\r\n\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\t$iter.each(axes.iterator(), (axis) => {\r\n\r\n\t\t\t\tlet maxZoomFactor = axis.maxZoomFactor;\r\n\t\t\t\tif ($type.isNumber(axis.minZoomCount)) {\r\n\t\t\t\t\tmaxZoomFactor = maxZoomFactor / axis.minZoomCount\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (stop && 1 / (range.end - range.start) >= maxZoomFactor) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (axis.zoomable) {\r\n\t\t\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\t\t\trange = $math.invertRange(originalRange);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trange = originalRange;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\taxis.hideTooltip(0);\r\n\r\n\t\t\t\t\t\tif (round) {\r\n\t\t\t\t\t\t\t//let diff = range.end - range.start;\r\n\t\t\t\t\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\t\t\t\t\tlet cellWidth = axis.getCellEndPosition(0) - axis.getCellStartPosition(0);\r\n\r\n\t\t\t\t\t\t\t\trange.start = axis.roundPosition(range.start + cellWidth / 2 - (axis.startLocation) * cellWidth, axis.startLocation);\r\n\t\t\t\t\t\t\t\trange.end = axis.roundPosition(range.end - cellWidth / 2 + (1 - axis.endLocation) * cellWidth, axis.endLocation);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\trange.start = axis.roundPosition(range.start + 0.0001, 0, axis.startLocation);\r\n\t\t\t\t\t\t\t\trange.end = axis.roundPosition(range.end + 0.0001, 0, axis.endLocation);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet axisRange: IRange = axis.zoom(range, instantly, instantly, declination);\r\n\r\n\t\t\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\t\t\taxisRange = $math.invertRange(axisRange);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trealRange = axisRange;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn realRange;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if bullet container is masked.\r\n\t *\r\n\t * If it is set to `true`, any bullets that do not fit into bullet container\r\n\t * will be clipped off. Settting to `false` will allow bullets to \"spill out\"\r\n\t * of the plot area so they are not cut off.\r\n\t *\r\n\t * @param value Mask bullet container?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"maskBullets\", value, true) && this.bulletsContainer) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.mask = this._bulletMask;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullet container?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if chart should arrange series tooltips so that they would not\r\n\t * overlap.\r\n\t *\r\n\t * If set to `true` (default), the chart will adjust vertical positions of\r\n\t * all simultaneously shown tooltips to avoid overlapping.\r\n\t *\r\n\t * However, if you have a vertically-arranged chart, it might not make sense,\r\n\t * because tooltips would most probably not be aligned horizontally. In this\r\n\t * case it would probably be a good idea to set this setting to `false`.\r\n\t *\r\n\t * @default true\r\n\t * @param value Arrange tooltips?\r\n\t */\r\n\tpublic set arrangeTooltips(value: boolean) {\r\n\t\tthis.setPropertyValue(\"arrangeTooltips\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrange tooltips?\r\n\t */\r\n\tpublic get arrangeTooltips(): boolean {\r\n\t\treturn this.getPropertyValue(\"arrangeTooltips\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles mouse wheel event.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\t\tlet plotContainer = this.plotContainer;\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n\t\tlet shift = event.shift.y;\r\n\r\n\t\tthis.handleWheelReal(shift, this.mouseWheelBehavior, plotPoint);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles mouse wheel event.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleHorizontalWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\t\tlet plotContainer = this.plotContainer;\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n\r\n\t\tthis.handleWheelReal(event.shift.x, this.horizontalMouseWheelBehavior, plotPoint)\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleWheelReal(shift: number, mouseWheelBehavior: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\", plotPoint: IPoint) {\r\n\t\tif (shift != 0) {\r\n\t\t\tlet plotContainer = this.plotContainer;\r\n\r\n\t\t\tlet rangeX: IRange = this.getCommonAxisRange(this.xAxes);\r\n\t\t\tlet rangeY: IRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\t\tlet shiftStep = 0.1;\r\n\r\n\t\t\tlet maxPanOut = 0;\r\n\r\n\t\t\tif (mouseWheelBehavior == \"panX\" || mouseWheelBehavior == \"panXY\") {\r\n\r\n\t\t\t\tlet differenceX = rangeX.end - rangeX.start;\r\n\r\n\t\t\t\tlet newStartX = Math.max(-maxPanOut, rangeX.start + shiftStep * shift / 100 * (rangeX.end - rangeX.start));\r\n\t\t\t\tlet newEndX = Math.min(rangeX.end + shiftStep * shift / 100 * (rangeX.end - rangeX.start), 1 + maxPanOut);\r\n\r\n\t\t\t\tif (newStartX <= 0) {\r\n\t\t\t\t\tnewEndX = newStartX + differenceX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (newEndX >= 1) {\r\n\t\t\t\t\tnewStartX = newEndX - differenceX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"panY\" || mouseWheelBehavior == \"panXY\") {\r\n\t\t\t\tshift *= -1;\r\n\t\t\t\tlet differenceY = rangeY.end - rangeY.start;\r\n\r\n\t\t\t\tlet newStartY = Math.max(-maxPanOut, rangeY.start + shiftStep * shift / 100 * (rangeY.end - rangeY.start));\r\n\t\t\t\tlet newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n\r\n\t\t\t\tif (newStartY <= 0) {\r\n\t\t\t\t\tnewEndY = newStartY + differenceY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (newEndY >= 1) {\r\n\t\t\t\t\tnewStartY = newEndY - differenceY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"zoomX\" || mouseWheelBehavior == \"zoomXY\") {\r\n\t\t\t\tlet locationX = plotPoint.x / plotContainer.maxWidth;\r\n\r\n\t\t\t\tlet location2X = this.xAxes.getIndex(0).toAxisPosition(locationX);\r\n\r\n\t\t\t\tlet newStartX = Math.max(-maxPanOut, rangeX.start - shiftStep * (rangeX.end - rangeX.start) * shift / 100 * locationX);\r\n\t\t\t\tnewStartX = Math.min(newStartX, location2X);\r\n\r\n\t\t\t\tlet newEndX = Math.min(rangeX.end + shiftStep * (rangeX.end - rangeX.start) * shift / 100 * (1 - locationX), 1 + maxPanOut);\r\n\t\t\t\tnewEndX = Math.max(newEndX, location2X);\r\n\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: newStartX, end: newEndX }, undefined, undefined, undefined, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"zoomY\" || mouseWheelBehavior == \"zoomXY\") {\r\n\t\t\t\tlet locationY = plotPoint.y / plotContainer.maxHeight;\r\n\r\n\t\t\t\tlet location2Y = this.yAxes.getIndex(0).toAxisPosition(locationY);\r\n\r\n\t\t\t\tlet newStartY = Math.max(-maxPanOut, rangeY.start - shiftStep * (rangeY.end - rangeY.start) * shift / 100 * (1 - locationY));\r\n\t\t\t\tnewStartY = Math.min(newStartY, location2Y);\r\n\r\n\t\t\t\tlet newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * locationY * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n\t\t\t\tnewEndY = Math.max(newEndY, location2Y);\r\n\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: newStartY, end: newEndY }, undefined, undefined, undefined, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies action for when mouse wheel is used when over the chart.\r\n\t *\r\n\t * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`,`\"panXY\"`, `\"none\"` (default).\r\n\t *\r\n\t * You can control sensitivity of wheel zooming via `mouseOptions`.\r\n\t *\r\n\t * @default \"none\"\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.plotContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis.plotContainer.wheelable = false;\r\n\t\t\t\t\tthis.plotContainer.hoverable = false;\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies action for when horizontal mouse wheel is used when over the chart.\r\n\t *\r\n\t * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`, `\"panXY\"`, `\"none\"` (default).\r\n\t *\r\n\t * @default \"none\"\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t */\r\n\tpublic set horizontalMouseWheelBehavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"horizontalMouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer2 = this.plotContainer.events.on(\"wheel\", this.handleHorizontalWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer2) {\r\n\t\t\t\t\tthis.plotContainer.wheelable = false;\r\n\t\t\t\t\tthis.plotContainer.hoverable = false;\r\n\t\t\t\t\tthis._mouseWheelDisposer2.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal mouse wheel behavior\r\n\t */\r\n\tpublic get horizontalMouseWheelBehavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"horizontalMouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @param fields  Array of date fields\r\n\t * @return Array of date fields populated with chart's date fields\r\n\t */\r\n\tprotected dataSourceDateFields(fields: string[]): string[] {\r\n\t\t// Process parent\r\n\t\tfields = super.dataSourceDateFields(fields);\r\n\r\n\t\t// Check if we have any series with date-fields\r\n\t\t$iter.each(this.series.iterator(), (series: this[\"_seriesType\"]) => {\r\n\t\t\tfields = this.populateDataSourceFields(\r\n\t\t\t\tfields,\r\n\t\t\t\t<any>series.dataFields,\r\n\t\t\t\t[\"dateX\", \"dateY\", \"openDateX\", \"openDateY\"]\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @param value  Array of number fields\r\n\t * @return Array of number fields populated with chart's number fields\r\n\t */\r\n\tprotected dataSourceNumberFields(fields: string[]): string[] {\r\n\t\tfields = super.dataSourceDateFields(fields);\r\n\r\n\t\t// Check if we have any series with date-fields\r\n\t\t$iter.each(this.series.iterator(), (series: this[\"_seriesType\"]) => {\r\n\t\t\tfields = this.populateDataSourceFields(\r\n\t\t\t\tfields,\r\n\t\t\t\t<any>series.dataFields,\r\n\t\t\t\t[\"valueX\", \"valueY\", \"openValueX\", \"openValueY\"]\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Save axis ranges for later processing\r\n\t\t\tlet xAxes: any[] = [];\r\n\t\t\tlet yAxes: any[] = [];\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n\t\t\t\t\tif (!config.xAxes[i].type) {\r\n\t\t\t\t\t\tthrow Error(\"[XYChart error] No type set for xAxes[\" + i + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(config.xAxes[i][\"axisRanges\"])) {\r\n\r\n\t\t\t\t\t\t// Maybe convert string dates?\r\n\t\t\t\t\t\tfor (let x = 0, len = config.xAxes[i][\"axisRanges\"].length; x < len; x++) {\r\n\t\t\t\t\t\t\tlet range = config.xAxes[i][\"axisRanges\"][x];\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n\t\t\t\t\t\t\t\trange.date = this.dateFormatter.parse(range.date);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n\t\t\t\t\t\t\t\trange.endDate = this.dateFormatter.parse(range.endDate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\txAxes.push({\r\n\t\t\t\t\t\t\taxisRanges: config.xAxes[i][\"axisRanges\"],\r\n\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdelete (config.xAxes[i][\"axisRanges\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n\t\t\t\t\tif (!config.yAxes[i].type) {\r\n\t\t\t\t\t\tthrow Error(\"[XYChart error] No type set for yAxes[\" + i + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(config.yAxes[i][\"axisRanges\"])) {\r\n\r\n\t\t\t\t\t\t// Maybe convert string dates?\r\n\t\t\t\t\t\tfor (let x = 0, len = config.yAxes[i][\"axisRanges\"].length; x < len; x++) {\r\n\t\t\t\t\t\t\tlet range = config.yAxes[i][\"axisRanges\"][x];\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n\t\t\t\t\t\t\t\trange.date = this.dateFormatter.parse(range.date);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n\t\t\t\t\t\t\t\trange.endDate = this.dateFormatter.parse(range.endDate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tyAxes.push({\r\n\t\t\t\t\t\t\taxisRanges: config.yAxes[i][\"axisRanges\"],\r\n\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdelete (config.yAxes[i][\"axisRanges\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"LineSeries\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up cursor\r\n\t\t\tif ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n\t\t\t\tconfig.cursor.type = \"XYCursor\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set up scrollbars\r\n\t\t\tif ($type.hasValue(config.scrollbarX) && !$type.hasValue(config.scrollbarX.type)) {\r\n\t\t\t\tconfig.scrollbarX.type = \"Scrollbar\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.scrollbarY) && !$type.hasValue(config.scrollbarY.type)) {\r\n\t\t\t\tconfig.scrollbarY.type = \"Scrollbar\";\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig(config);\r\n\r\n\t\t\t// Finish up with ranges.\r\n\t\t\t// We need to do this here because series are processed last in JSON\r\n\t\t\t// config. Therefore their respective objects are not yet are available\r\n\t\t\t// when axis (and respectively their ranges) are being processed.\r\n\t\t\tif (yAxes.length) {\r\n\t\t\t\tfor (let i = 0, len = yAxes.length; i < len; i++) {\r\n\t\t\t\t\tthis.yAxes.getIndex(yAxes[i].index).config = {\r\n\t\t\t\t\t\taxisRanges: yAxes[i].axisRanges\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (xAxes.length) {\r\n\t\t\t\tfor (let i = 0, len = xAxes.length; i < len; i++) {\r\n\t\t\t\t\tthis.xAxes.getIndex(xAxes[i].index).config = {\r\n\t\t\t\t\t\taxisRanges: xAxes[i].axisRanges\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"scrollbarX\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"scrollbarX\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"scrollbarY\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"scrollbarY\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"cursor\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"cursor\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Series of type suitable for this chart.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new XYSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Button]] element that is used for zooming out the chart.\r\n\t *\r\n\t * This button appears only when chart is zoomed in, and disappears\r\n\t * autoamatically when it is zoome dout.\r\n\t *\r\n\t * @param button  Zoom out button\r\n\t */\r\n\tpublic set zoomOutButton(button: Button) {\r\n\t\tthis._zoomOutButton = button;\r\n\t\tif (button) {\r\n\t\t\tbutton.events.on(\"hit\", () => {\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: 0, end: 1 });\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: 0, end: 1 });\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom out button\r\n\t */\r\n\tpublic get zoomOutButton(): Button {\r\n\t\treturn this._zoomOutButton;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[XYChart]].\r\n\t *\r\n\t * @param source Source XYChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\r\n\t\tsource.xAxes.each((axis) => {\r\n\t\t\tlet a = this.xAxes.push(axis.clone());\r\n\t\t\ta.chart = this;\r\n\t\t\ta.renderer.chart = this;\r\n\t\t})\r\n\r\n\t\tsource.yAxes.each((axis) => {\r\n\t\t\tlet a = this.yAxes.push(axis.clone());\r\n\t\t\ta.renderer.chart = this;\r\n\t\t\ta.chart = this;\r\n\t\t})\r\n\r\n\t\t//this.xAxes.copyFrom(source.xAxes);\r\n\t\t//this.yAxes.copyFrom(source.yAxes);\r\n\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\t//this.zoomOutButton.copyFrom(source.zoomOutButton);\r\n\r\n\t\tif (source.cursor) {\r\n\t\t\tthis.cursor = source.cursor.clone();\r\n\t\t}\r\n\r\n\t\tif (source.scrollbarX) {\r\n\t\t\tthis.scrollbarX = source.scrollbarX.clone();\r\n\t\t}\r\n\r\n\t\tif (source.scrollbarY) {\r\n\t\t\tthis.scrollbarY = source.scrollbarY.clone();\r\n\t\t}\r\n\t\t//@todo copy all container properties\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\r\n\t\tlet scrollbarX = this.scrollbarX;\r\n\t\tif (scrollbarX && scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tscrollbarX.scrollbarChart.disposeData();\r\n\t\t}\r\n\r\n\t\tlet scrollbarY = this.scrollbarY;\r\n\t\tif (scrollbarY && scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tscrollbarY.scrollbarChart.disposeData();\r\n\t\t}\r\n\r\n\t\tthis.xAxes.each((axis) => {\r\n\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\taxis.disposeData();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.yAxes.each((axis) => {\r\n\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\taxis.disposeData();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number): void {\r\n\t\tif (this.scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tthis.addScrollbarData(this.scrollbarX, removeCount);\r\n\t\t}\r\n\t\tif (this.scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tthis.addScrollbarData(this.scrollbarY, removeCount);\r\n\t\t}\r\n\r\n\t\tsuper.addData(rawDataItem, removeCount);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected addScrollbarData(scrollbar: XYChartScrollbar, removeCount: number) {\r\n\t\tlet chart = scrollbar.scrollbarChart;\r\n\t\tchart._parseDataFrom = chart.data.length;\r\n\t\tchart.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected removeScrollbarData(scrollbar: XYChartScrollbar, removeCount: number) {\r\n\t\tlet chart = scrollbar.scrollbarChart;\r\n\t\tif ($type.isNumber(removeCount)) {\r\n\t\t\twhile (removeCount > 0) {\r\n\t\t\t\tlet dataItem = this.dataItems.getIndex(0);\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tchart.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.dataUsers.each((dataUser) => {\r\n\t\t\t\t\tlet dataItem = dataUser.dataItems.getIndex(0);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataUser.dataItems.remove(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tchart._parseDataFrom--;\r\n\r\n\t\t\t\tremoveCount--;\r\n\t\t\t}\r\n\r\n\t\t\tchart.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes elements from the beginning of data\r\n\t *\r\n\t * @param count number of elements to remove\r\n\t */\r\n\tpublic removeData(count: $type.Optional<number>) {\r\n\t\tif (this.scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tthis.removeScrollbarData(this.scrollbarX, count);\r\n\t\t}\r\n\t\tif (this.scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tthis.removeScrollbarData(this.scrollbarY, count);\r\n\t\t}\r\n\r\n\t\tsuper.removeData(count);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = value;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = value;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = false;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = true;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart\"] = XYChart;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Remove horizontal scrollbar on narrow charts.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof XYChart && target.scrollbarX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tlet sbstate = target.scrollbarX.states.create(stateId);\r\n\t\t\tsbstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical scrollbar on short charts.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof XYChart && target.scrollbarY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tlet sbstate = target.scrollbarY.states.create(stateId);\r\n\t\t\tsbstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[LineSeriesSegment]].\r\n */\r\nexport interface ILineSeriesSegmentProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[LineSeriesSegment]].\r\n */\r\nexport interface ILineSeriesSegmentEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[LineSeriesSegment]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineSeriesSegmentAdapters extends IContainerAdapters, ILineSeriesSegmentProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link ILineSeriesSegmentEvents} for a list of available events\r\n * @see {@link ILineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nexport class LineSeriesSegment extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILineSeriesSegmentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILineSeriesSegmentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILineSeriesSegmentEvents;\r\n\r\n\t/**\r\n\t * Segment's line element.\r\n\t */\r\n\tpublic strokeSprite: Sprite;\r\n\r\n\t/**\r\n\t * Segment's fill element.\r\n\t */\r\n\tpublic fillSprite: Sprite;\r\n\r\n\tpublic series: LineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"LineSeriesSegment\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.interactionsEnabled = false;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\t// Create fill element\r\n\t\tlet fillSprite = this.createChild(Sprite);\r\n\t\tthis.fillSprite = fillSprite;\r\n\t\tfillSprite.shouldClone = false;\r\n\t\tfillSprite.setElement(this.paper.add(\"path\"));\r\n\t\tfillSprite.isMeasured = false;\r\n\t\tthis._disposers.push(fillSprite);\r\n\r\n\r\n\t\t// Create line element\r\n\t\tlet strokeSprite = this.createChild(Sprite);\r\n\t\tthis.strokeSprite = strokeSprite;\r\n\t\tstrokeSprite.shouldClone = false;\r\n\t\tstrokeSprite.fill = color();\r\n\t\tstrokeSprite.setElement(this.paper.add(\"path\"));\r\n\t\tstrokeSprite.isMeasured = false;\r\n\t\tthis._disposers.push(strokeSprite);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the series segment.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param points       Points to connect\r\n\t * @param closePoints  ?\r\n\t * @param smoothnessX  Horizontal bezier setting (?)\r\n\t * @param smoothnessY  Vertical bezier setting (?)\r\n\t */\r\n\tpublic drawSegment(points: IPoint[], closePoints: IPoint[], smoothnessX: number, smoothnessY: number): void {\r\n\t\tif (!this.disabled) {\r\n\t\t\tif (points.length > 0 && closePoints.length > 0 && $type.isNumber(points[0].x) && $type.isNumber(points[0].y)) {\r\n\t\t\t\t// first moveTo helps to avoid Chrome straight line in the mask bug.\r\n\t\t\t\tlet path: string = $path.moveTo({ x: points[0].x - 0.2, y: points[0].y - 0.2 }) + $path.moveTo(points[0])\r\n\r\n\t\t\t\tlet series = this.series;\r\n\r\n\t\t\t\tif (series.smoothing == \"bezier\") {\r\n\t\t\t\t\tpath += new $smoothing.Tension(smoothnessX, smoothnessY).smooth(points);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.smoothing == \"monotoneX\") {\r\n\t\t\t\t\tpath += new $smoothing.MonotoneX({ closed: false }).smooth(points);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.smoothing == \"monotoneY\") {\r\n\t\t\t\t\tpath += new $smoothing.MonotoneY({ closed: false }).smooth(points);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.strokeOpacity == 0 || this.strokeSprite.strokeOpacity == 0) {\r\n\t\t\t\t\t// like this and not if != 0, otherwise ranges stroke won't be drawn.\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.strokeSprite.path = path;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tif ($type.isNumber(closePoints[0].x) && $type.isNumber(closePoints[0].y)) {\r\n\t\t\t\t\t\tpath += $path.lineTo(closePoints[0]);\r\n\r\n\t\t\t\t\t\tif (series.smoothing == \"bezier\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.Tension(smoothnessX, smoothnessY).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (series.smoothing == \"monotoneX\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.MonotoneX({ closed: false }).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (series.smoothing == \"monotoneY\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.MonotoneY({ closed: false }).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fillSprite.path = \"\";\r\n\t\t\t\tthis.strokeSprite.path = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from a [[Sprite]] to both line and fill elements.\r\n\t *\r\n\t * @param source Source [[Sprite]] to copy properties from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tlet lineElement = this.strokeSprite;\r\n\t\t$object.copyProperties(source, lineElement.properties, visualProperties);\r\n\t\tlineElement.events.copyFrom(source.strokeSprite.events);\r\n\t\tlineElement.fillOpacity = 0;\r\n\r\n\t\tlet fillElement = this.fillSprite;\r\n\t\t$object.copyProperties(source, fillElement.properties, visualProperties);\r\n\t\tfillElement.events.copyFrom(source.fillSprite.events);\r\n\t\tfillElement.strokeOpacity = 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeriesSegment\"] = LineSeriesSegment;\r\n","/**\r\n * DurationAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem, IValueAxisProperties, IValueAxisDataFields, IValueAxisAdapters, IValueAxisEvents } from \"./ValueAxis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { TimeUnit } from \"../../core/defs/TimeUnit\";\r\nimport { IMinMaxStep } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data item for [[DurationAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class DurationAxisDataItem extends ValueAxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: DurationAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationAxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisDataFields extends IValueAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisProperties extends IValueAxisProperties { }\r\n\r\n/**\r\n * Defines events for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisEvents extends IValueAxisEvents { }\r\n\r\n/**\r\n * Defines adapters for [[DurationAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDurationAxisAdapters extends IValueAxisAdapters, IDurationAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create an axis that shows time durations.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DurationAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information about duration formatters.\r\n * @see {@link IDurationAxisEvents} for a list of available Events\r\n * @see {@link IDurationAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class DurationAxis<T extends AxisRenderer = AxisRenderer> extends ValueAxis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IDurationAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDurationAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDurationAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDurationAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: DurationAxisDataItem;\r\n\r\n\t/**\r\n\t * A base unit (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t */\r\n\tprotected _baseUnit: TimeUnit = \"second\";\r\n\r\n\t/**\r\n\t * A special duration format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t */\r\n\tprotected _tooltipDurationFormat: string;\r\n\r\n\t/**\r\n\t * Axis date format chosen dynamically based on min/max and baseUnit.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisDurationFormat: string;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationAxis\";\r\n\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000000);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[DurationFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number, format?: string): string {\r\n\t\treturn this.durationFormatter.format(value, format || this.axisDurationFormat);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\tlet minMaxStep: IMinMaxStep;\r\n\r\n\t\tlet timeUnit = this.baseUnit;\r\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\r\n\t\tthis.setPropertyValue(\"maxPrecision\", 0);\r\n\r\n\t\tif (timeUnit == \"millisecond\" || timeUnit == \"second\" || timeUnit == \"minute\" || timeUnit == \"hour\") {\r\n\t\t\t// will fail if 0\r\n\t\t\tif (gridCount <= 1) {\r\n\t\t\t\tgridCount = 1;\r\n\t\t\t}\r\n\r\n\t\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\t\tlet initialMin: number = min;\r\n\t\t\tlet initialMax: number = max;\r\n\r\n\t\t\t// in case min and max is the same, use max\r\n\t\t\tif (difference === 0) {\r\n\t\t\t\tdifference = Math.abs(max);\r\n\t\t\t}\r\n\r\n\t\t\tlet step = difference / gridCount;\r\n\r\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\r\n\t\t\tlet realDivisor = 1;\r\n\r\n\t\t\tif (timeUnit == \"hour\") {\r\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\r\n\t\t\t}\r\n\r\n\t\t\tfor (let divisor of divisors) {\r\n\t\t\t\tif (difference / divisor > gridCount) {\r\n\t\t\t\t\trealDivisor = divisor;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\r\n\r\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\r\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\r\n\t\t\tlet reducedCount = count / power;\r\n\r\n\t\t\t// find closest to divisor\r\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\r\n\t\t\tcount = closest * power;\r\n\r\n\t\t\tstep = realDivisor * count;\r\n\r\n\t\t\t// TODO can this be removed ?\r\n\t\t\tthis.durationFormatter.getValueUnit(step, this.baseUnit);\r\n\r\n\t\t\tmin = Math.floor(min / step) * step;\r\n\t\t\tmax = Math.ceil(max / step) * step;\r\n\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin -= step;\r\n\t\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t\t}\r\n\t\t\t\tmax += step;\r\n\r\n\t\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tminMaxStep = { min: min, max: max, step: step };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminMaxStep = super.adjustMinMax(min, max, difference, gridCount, strictMode);\r\n\t\t}\r\n\r\n\t\t// choose duration formatter based on step\r\n\t\tthis.axisDurationFormat = this.durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, this.baseUnit);\r\n\r\n\t\treturn minMaxStep;\r\n\t}\r\n\r\n\t/**\r\n\t * A special duration format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information.\r\n\t * @param value  Duration format for axis labels\r\n\t */\r\n\tpublic set tooltipDurationFormat(value: string) {\r\n\t\tthis._tooltipDurationFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration format for axis labels\r\n\t */\r\n\tpublic get tooltipDurationFormat(): string {\r\n\t\treturn this._tooltipDurationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces);\r\n\t\tlet valueStr = this.formatLabel(value, this.tooltipDurationFormat)\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A base unit (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t *\r\n\t * Available options: \"millisecond\", \"second\" (default), \"minute\", \"hour\",\r\n\t * \"day\", \"week\", \"month\", \"year\".\r\n\t *\r\n\t * @default \"second\"\r\n\t * @param timeUnit\r\n\t */\r\n\tpublic set baseUnit(timeUnit: TimeUnit) {\r\n\t\tif (this._baseUnit != timeUnit) {\r\n\t\t\tthis._baseUnit = timeUnit;\r\n\t\t\tthis.durationFormatter.baseUnit = timeUnit;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base unit\r\n\t */\r\n\tpublic get baseUnit(): TimeUnit {\r\n\t\treturn this._baseUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.baseUnit = source.baseUnit;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationAxis\"] = DurationAxis;\r\nregistry.registeredClasses[\"DurationAxisDataItem\"] = DurationAxisDataItem;\r\n","/**\r\n * Line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem, IXYSeriesProperties, IXYSeriesDataFields, IXYSeriesAdapters, IXYSeriesEvents } from \"./XYSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { Axis, AxisDataItem } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { DurationAxis } from \"../axes/DurationAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { LegendDataItem } from \"../Legend\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[LineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LineSeriesDataItem extends XYSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: LineSeries;\r\n\r\n\t/**\r\n\t * Point of line series data item\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * A reference to a segment object, used for getting proper colors for tooltips\r\n\t */\r\n\tpublic segment: LineSeriesSegment;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LineSeriesDataItem\";\r\n\t}\r\n\r\n\t// @todo: minimums/maximums\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesDataFields extends IXYSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesProperties extends IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionX?: number;\r\n\r\n\t/**\r\n\t * Vertical tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionY?: number;\r\n\r\n\t/**\r\n\t * Connect the lines over empty data points?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tconnect?: boolean;\r\n\r\n\t/**\r\n\t * If `connect = false` and distance between two data points is bigger\r\n\t * than `baseInterval * autoGapCount`, a line will break automatically.\r\n\t *\r\n\t * @default 1.1\r\n\t */\r\n\tautoGapCount?: number;\r\n\r\n\t/**\r\n\t * Smoothing algorythm to use for the line.\r\n\t *\r\n\t * @since 4.10.0\r\n\t */\r\n\tsmoothing: \"bezier\" | \"monotoneX\" | \"monotoneY\";\r\n}\r\n\r\n/**\r\n * Defines events for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesEvents extends IXYSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[LineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineSeriesAdapters extends IXYSeriesAdapters, ILineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a line graph.\r\n *\r\n * @see {@link ILineSeriesEvents} for a list of available Events\r\n * @see {@link ILineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ILineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: LineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A list of line series segments.\r\n\t *\r\n\t * Segments are used in two cases:\r\n\t *\r\n\t * * When we want to change the appearance of a part of the line series;\r\n\t * * When we have an axis range.\r\n\t */\r\n\tpublic segments: ListTemplate<this[\"_segment\"]>;\r\n\r\n\t/**\r\n\t * Defines type for segment.\r\n\t */\r\n\tpublic _segment: LineSeriesSegment;\r\n\r\n\t/**\r\n\t * A container for segment elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic segmentsContainer: Container;\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between two adjacent points.\r\n\t *\r\n\t * If the distance is less than this setting, a point is skipped.\r\n\t *\r\n\t * This allows acceptable performance with huge amounts of data points.\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tpublic minDistance: number = 0.5;\r\n\r\n\t/**\r\n\t * Iterator for segments.\r\n\t */\r\n\tprotected _segmentsIterator: $iter.ListIterator<this[\"_segment\"]>;\r\n\r\n\tprotected _adjustedStartIndex: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.segments = new ListTemplate<LineSeriesSegment>(this.createSegment());\r\n\t\tthis.segments.template.applyOnClones = true;\r\n\r\n\t\tthis._disposers.push(new ListDisposer(this.segments));\r\n\t\tthis._disposers.push(this.segments.template);\r\n\r\n\t\tthis._segmentsIterator = new $iter.ListIterator<LineSeriesSegment>(this.segments, () => this.segments.create());\r\n\t\tthis._segmentsIterator.createNewItems = true;\r\n\r\n\t\tthis.className = \"LineSeries\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.connect = true;\r\n\r\n\t\tthis.tensionX = 1;\r\n\t\tthis.tensionY = 1;\r\n\r\n\t\tthis.autoGapCount = 1.1;\r\n\r\n\t\tthis.smoothing = \"bezier\";\r\n\r\n\r\n\t\tthis.segmentsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis.segmentsContainer.isMeasured = false;\r\n\r\n\t\t// line series might have multiple segments and it has a separate sprite for fill and stroke for each segment. So we need to observe all the changes on series and set them on the segments\r\n\t\t// todo: we need list here, otherwise everything will be redrawn event on change of properties like tooltipX or similar.\r\n\t\t// this.addEventListener(SpriteEvent.PROPERTY_CHANGED, this.validateDataElements, false, this);\r\n\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Line Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createSegment(): this[\"_segment\"] {\r\n\t\treturn new LineSeriesSegment();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\t\t// this makes data items animate when added\r\n\r\n\t\tlet yAxis: Axis = this._yAxis.get();\r\n\t\tlet xAxis: Axis = this._xAxis.get();\r\n\r\n\t\tif (this.appeared && this.visible) {\r\n\r\n\t\t\tlet previousDataItem: XYSeriesDataItem = this.dataItems.getIndex(dataItem.index - 1);\r\n\r\n\t\t\tdataItem.component = this; // as these values are set before, we don't know component yet\r\n\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tif (yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tlet initialY: number = yAxis.minZoomed;\r\n\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\tinitialY = previousDataItem.values[\"valueY\"].workingValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this makes line animate from previous point to newly added point\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", initialY, 0);\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", dataItem.values.valueY.value);\r\n\r\n\t\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX); // animate to it's location\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (xAxis instanceof DurationAxis) {\r\n\t\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\t\tlet value = dataItem.valueX;\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", previousDataItem.valueX, 0); // instantly move it to previous\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", value); // animate to new value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tif (xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tlet initialX: number = xAxis.minZoomed;\r\n\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\tinitialX = previousDataItem.values[\"valueX\"].workingValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", initialX, 0);\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", dataItem.values.valueX.value);\r\n\r\n\t\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY); // animate to it's location\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (yAxis instanceof DurationAxis) {\r\n\t\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\t\tlet value = dataItem.valueY;\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", previousDataItem.valueY, 0); // instantly move it to previous\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", value); // animate to new value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tif (yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"categoryX\", dataItem.locations.categoryX);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tif (xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"categoryY\", dataItem.locations.categoryY);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\tsuper.updateLegendValue(dataItem, notRange);\r\n\t\t//This is hack to save some methos, used to set tooltip color source only\r\n\t\tif (dataItem && dataItem.segment) {\r\n\t\t\tthis.tooltipColorSource = dataItem.segment;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tthis._segmentsIterator.reset();\r\n\r\n\t\t\tthis.openSegmentWrapper(this._adjustedStartIndex);\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tthis.openSegmentWrapper(this._adjustedStartIndex, range);\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this._segmentsIterator.iterator(), (segment) => {\r\n\t\t\t\tsegment.__disabled = true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [sliceData description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected sliceData(): void {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\t// we need extra one item to both sides with values for line series, otherwise the line will not continue out of bounds of the chart while scrolling\r\n\t\t// find first to the left\r\n\t\t// TODO use iterator instead\r\n\t\tfor (let i = this.startIndex - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tstartIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._adjustedStartIndex = this.findAdjustedIndex(startIndex, [\"stroke\", \"strokeWidth\", \"strokeDasharray\", \"strokeOpacity\", \"fill\", \"fillOpacity\", \"opacity\"]);\r\n\r\n\t\t// find first to the right\r\n\t\t// TODO use iterator instead\r\n\t\tfor (let i = this.endIndex, len = this.dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tendIndex = i + 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._workingStartIndex = startIndex;\r\n\t\tthis._workingEndIndex = endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected findAdjustedIndex(adjustedIndex: number, properties: string[]): number {\r\n\t\tlet propertyFields: any = this.propertyFields;\r\n\t\tlet startIndex = adjustedIndex;\r\n\r\n\t\t$array.each(properties, (property) => {\r\n\t\t\tif ($type.hasValue(propertyFields[property])) {\r\n\t\t\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tif ($type.hasValue(dataItem.properties[property])) {\r\n\t\t\t\t\t\t\tif (adjustedIndex > i) {\r\n\t\t\t\t\t\t\t\tadjustedIndex = i;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn adjustedIndex;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Wraps openSegment call with iterative solution to prevent stack overflow\r\n\t *\r\n\t * @param openIndex  Index\r\n\t * @param axisRange  Range\r\n\t */\r\n\tprotected openSegmentWrapper(openIndex: number, axisRange?: AxisDataItem): void {\r\n\t\tlet params = {\r\n\t\t\t\"index\": openIndex,\r\n\t\t\t\"axisRange\": axisRange\r\n\t\t};\r\n\t\tdo {\r\n\t\t\tparams = this.openSegment(params.index, params.axisRange);\r\n\t\t} while (params)\r\n\t}\r\n\r\n\r\n\tprotected getSegment(): LineSeriesSegment {\r\n\t\tlet segment = this._segmentsIterator.getFirst();\r\n\t\tsegment.series = this;\r\n\t\tif (segment.isDisposed()) {\r\n\t\t\tthis.segments.removeValue(segment);\r\n\t\t\treturn this.getSegment();\r\n\t\t}\r\n\t\treturn segment;\r\n\t}\r\n\r\n\t/**\r\n\t * [openSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param openIndex  [description]\r\n\t * @param axisRange  [description]\r\n\t */\r\n\tprotected openSegment(openIndex: number, axisRange?: AxisDataItem): { \"index\": number, \"axisRange\": AxisDataItem } {\r\n\t\tlet addToClose = false;\r\n\t\tlet points: IPoint[] = [];\r\n\t\topenIndex = Math.min(openIndex, this.dataItems.length);\r\n\t\tlet endIndex: number = Math.min(this._workingEndIndex, this.dataItems.length);\r\n\t\tthis._workingEndIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n\r\n\t\tlet closeIndex: number;\r\n\t\tlet propertiesChanged: boolean = false;\r\n\r\n\t\tlet segment: LineSeriesSegment = this.getSegment();\r\n\t\tsegment.strokeDasharray = undefined;\r\n\t\tsegment.__disabled = false;\r\n\r\n\t\tif (axisRange) {\r\n\t\t\tsegment.parent = axisRange.contents;\r\n\t\t\t$object.copyProperties(axisRange.contents, segment, visualProperties);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$object.copyProperties(this, segment, visualProperties);\r\n\t\t\tsegment.filters.clear();\r\n\t\t\tsegment.parent = this.segmentsContainer;\r\n\t\t}\r\n\r\n\t\tthis.group.node.removeAttribute(\"fill\");\r\n\r\n\t\tlet connect: boolean = this.connect;\r\n\t\tlet valuesFound: boolean = false; // some flag to avoid multiple closes if no values found\r\n\r\n\t\tfor (let i: number = openIndex; i < endIndex; i++) {\r\n\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.segment = segment;\r\n\r\n\t\t\tif (dataItem.hasProperties) {\r\n\t\t\t\t// if this is first item of segment\r\n\t\t\t\tif (i == openIndex) {\r\n\t\t\t\t\tthis.updateSegmentProperties(dataItem.properties, segment);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// this time we only need to know if properties changed, so we don't pass segment\r\n\t\t\t\t\tpropertiesChanged = this.updateSegmentProperties(dataItem.properties, segment, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tthis.addPoints(points, dataItem, this.xField, this.yField);\r\n\t\t\t\tvaluesFound = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no values in first data item, go to next\r\n\t\t\t\tif (i == openIndex) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// stop cycle\r\n\t\t\t\t\tif (!connect && valuesFound) {\r\n\t\t\t\t\t\tcloseIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcloseIndex = i;\r\n\r\n\t\t\tif (this.baseAxis instanceof DateAxis) {\r\n\t\t\t\tlet next = this.dataItems.getIndex(i + 1)\r\n\t\t\t\tif (next && this.baseAxis.makeGap(next, dataItem)) {\r\n\t\t\t\t\taddToClose = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (propertiesChanged) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.closeSegment(segment, points, openIndex, closeIndex, axisRange, addToClose);\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points    [description]\r\n\t * @param dataItem  [description]\r\n\t * @param xField    [description]\r\n\t * @param yField    [description]\r\n\t * @param backwards [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean) {\r\n\t\tlet point = this.getPoint(dataItem, xField, yField, dataItem.workingLocations[xField], dataItem.workingLocations[yField]);\r\n\t\tif (!backwards) {\r\n\t\t\tdataItem.point = point;\r\n\t\t}\r\n\t\tpoints.push(point);\r\n\t}\r\n\r\n\t/**\r\n\t * [closeSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param segment    [description]\r\n\t * @param points     [description]\r\n\t * @param openIndex  [description]\r\n\t * @param closeIndex [description]\r\n\t * @param axisRange  [description]\r\n\t */\r\n\tprotected closeSegment(segment: LineSeriesSegment, points: IPoint[], openIndex: number, closeIndex: number, axisRange?: AxisDataItem, add?: boolean) {\r\n\t\tlet closePoints: IPoint[] = [];\r\n\r\n\t\tif (this.dataFields[<keyof this[\"_dataFields\"]>this._xOpenField] ||\r\n\t\t\tthis.dataFields[<keyof this[\"_dataFields\"]>this._yOpenField] ||\r\n\t\t\tthis.stacked) {\r\n\t\t\tfor (let i: number = closeIndex; i >= openIndex; i--) {\r\n\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) { // not sure, this means that open point will only be added if value is also set for this point, but maybe it's ok.\r\n\t\t\t\t\tthis.addPoints(closePoints, dataItem, this.xOpenField, this.yOpenField, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet baseAxis: Axis = this.baseAxis;\r\n\t\t\tlet count: number = points.length;\r\n\t\t\tlet xAxis: Axis = this.xAxis;\r\n\t\t\tlet yAxis: Axis = this.yAxis;\r\n\t\t\tif (count > 0) {\r\n\t\t\t\tif (baseAxis == xAxis) {\r\n\t\t\t\t\tclosePoints.push({ x: points[count - 1].x, y: yAxis.basePoint.y }); // last x\r\n\t\t\t\t\tclosePoints.push({ x: points[0].x, y: yAxis.basePoint.y }); // first x\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclosePoints.push({ x: xAxis.basePoint.x, y: points[count - 1].y }); // last y\r\n\t\t\t\t\tclosePoints.push({ x: xAxis.basePoint.x, y: points[0].y }); // first y\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.drawSegment(segment, points, closePoints);\r\n\r\n\t\tif (add) {\r\n\t\t\tcloseIndex++;\r\n\t\t}\r\n\r\n\t\tif (closeIndex < this._workingEndIndex - 1) {\r\n\t\t\treturn { \"index\": closeIndex, \"axisRange\": axisRange };\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the line segment.\r\n\t *\r\n\t * @param segment     Segment\r\n\t * @param points      Segment points\r\n\t * @param closePoints Segment close points\r\n\t */\r\n\tprotected drawSegment(segment: LineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tsegment.drawSegment(points, closePoints, this.tensionX, this.tensionY);\r\n\t}\r\n\r\n\t/**\r\n\t * Segement will get its colors from `this.dataItem`, as thats how\r\n\t * `getPropertyValue()` method works.\r\n\t *\r\n\t * We pass `lineSeriesDataItem.properties` as item here each time when a flag\r\n\t * `hasProperties` is set to `true` on data item (this means it can contain\r\n\t * some properties set).\r\n\t *\r\n\t * @param itemProperties  Item properties\r\n\t * @param segment         Segment\r\n\t * @return Properties changed?\r\n\t */\r\n\tprotected updateSegmentProperties(itemProperties: { [index: string]: any }, segment: LineSeriesSegment, checkOnly?: boolean): boolean {\r\n\t\tlet changed: boolean = false;\r\n\r\n\t\t$object.each(itemProperties, (propertyName, value) => {\r\n\t\t\t// some value must be defined\r\n\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\tlet currentValue = (<any>segment)[propertyName];\r\n\t\t\t\tlet currentValueStr: string;\r\n\t\t\t\t// current value can be Color, number, anything. So we check if it has toString, otherwise just do String().\r\n\t\t\t\t// toString() will return hex if it's color. The only problem is that it will return lowercased hex and if we have uppercase in data, it will think that it changed\r\n\t\t\t\tif (currentValue) {\r\n\t\t\t\t\tif (currentValue.toString) {\r\n\t\t\t\t\t\tcurrentValueStr = currentValue.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcurrentValueStr = currentValue; // not doing String(currentValue) as this will make all Objects the same\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tlet valueStr: string;\r\n\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tif (value.toString) {\r\n\t\t\t\t\t\tvalueStr = value.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalueStr = value;  // not doing String(currentValue) as this will make all Objects the same\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentValue == value || (currentValueStr != undefined && valueStr != undefined && currentValueStr == valueStr)) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!checkOnly) {\r\n\t\t\t\t\t\t(<any>segment)[propertyName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Connect the lines over empty data points?\r\n\t *\r\n\t * If set to `true` the line will connect two adjacent data points by a\r\n\t * straight line. Even if there are data points with missing values\r\n\t * in-between.\r\n\t *\r\n\t * If you set this to `false`, the line will break when there are missing\r\n\t * values.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#Line_series_with_gaps} for more information about this feature\r\n\t * @default true\r\n\t * @param value  Connect?\r\n\t */\r\n\tpublic set connect(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"connect\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Connect?\r\n\t */\r\n\tpublic get connect(): boolean {\r\n\t\treturn this.getPropertyValue(\"connect\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Can be used to create smoothed lines. It works like this:\r\n\t *\r\n\t * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n\t * will mean that the \"tension\" is very high, so the line is maximally\r\n\t * attracted to the points it connects, hence the straight line.\r\n\t *\r\n\t * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n\t *\r\n\t * The smaller the tension setting, the more relaxed the line and the more\r\n\t * wide the curve.\r\n\t *\r\n\t * This setting is for horizontal tension, meaning the curve will bend in\r\n\t * such way that it never goes below or above connecting points. To enable\r\n\t * vertical bending as well, use `tensionY`.\r\n\t *\r\n\t * IMPORTANT: line smoothing works best when data items are placed at regular\r\n\t * intervals. For setups where data items are spaced erratically, enabling\r\n\t * smoothing might result in awkwardly looking lines.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Horizontal tension (0-1)\r\n\t */\r\n\tpublic set tensionX(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal tension (0-1)\r\n\t */\r\n\tpublic get tensionX(): number {\r\n\t\treturn this.getPropertyValue(\"tensionX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Can be used to create smoothed lines. It works like this:\r\n\t *\r\n\t * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n\t * will mean that the \"tension\" is very high, so the line is maximally\r\n\t * attracted to the points it connects, hence the straight line.\r\n\t *\r\n\t * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n\t *\r\n\t * The smaller the tension setting, the more relaxed the line and the more\r\n\t * wide the curve.\r\n\t *\r\n\t * This setting is for vertical tension, meaning the curve might bend in\r\n\t * such way that it will go below or above connected points.\r\n\t *\r\n\t * Combine this setting with `tensionX` to create beautifully looking\r\n\t * smoothed line series.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Vertical tension (0-1)\r\n\t */\r\n\tpublic set tensionY(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical tension (0-1)\r\n\t */\r\n\tpublic get tensionY(): number {\r\n\t\treturn this.getPropertyValue(\"tensionY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.disposeChildren();\r\n\r\n\t\tlet line: Line = marker.createChild(Line);\r\n\t\tline.shouldClone = false;\r\n\t\t//line.copyFrom(<any>this); coppies events which is not good\r\n\t\t$object.copyProperties(this, line, visualProperties);\r\n\r\n\t\tline.x2 = w;\r\n\t\tline.y = h / 2;\r\n\t\tline.y2 = 0.00001;\r\n\t\tline.visible = true;\r\n\r\n\t\tif (this.fillOpacity > 0) {\r\n\t\t\tlet fill: Rectangle = marker.createChild(Rectangle);\r\n\t\t\t//fill.copyFrom(<any>this); coppies events which is not good\r\n\t\t\t$object.copyProperties(this, fill, visualProperties);\r\n\t\t\tfill.width = w;\r\n\t\t\tfill.height = h;\r\n\t\t\tfill.y = 0;\r\n\t\t\tfill.strokeOpacity = 0;\r\n\t\t\tfill.visible = true;\r\n\r\n\t\t\tline.y = 0;\r\n\t\t}\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = this.stroke;\r\n\t\tlegendDataItem.colorOrig = this.fill;\r\n\r\n\t\t$iter.eachContinue(this.bullets.iterator(), (bullet) => {\r\n\r\n\t\t\tif ((bullet instanceof Bullet) && !bullet.copyToLegendMarker) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tlet hasLabels: boolean = false;\r\n\r\n\t\t\tif (bullet instanceof Container) {\r\n\t\t\t\t// do not copy bullets with labels\r\n\r\n\t\t\t\t$iter.each(bullet.children.iterator(), (child) => {\r\n\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\thasLabels = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (!hasLabels) {\r\n\t\t\t\tlet clone: Sprite = <Sprite>bullet.clone();\r\n\t\t\t\tclone.parent = marker;\r\n\t\t\t\tclone.isMeasured = true;\r\n\t\t\t\tclone.tooltipText = undefined;\r\n\t\t\t\tclone.x = w / 2;\r\n\t\t\t\tif (this.fillOpacity > 0) {\r\n\t\t\t\t\tclone.y = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclone.y = h / 2;\r\n\t\t\t\t}\r\n\t\t\t\tclone.visible = true;\r\n\r\n\t\t\t\t// otherwise will not transit to color after hiding\r\n\t\t\t\tif (!$type.hasValue(clone.fill)) {\r\n\t\t\t\t\tclone.fill = this.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.hasValue(clone.stroke)) {\r\n\t\t\t\t\tclone.stroke = this.stroke;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.segments.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * If `connect = false` and distance between two data points is bigger\r\n\t * than `baseInterval * autoGapCount`, a line will break automatically.\r\n\t *\r\n\t * @since 4.2.4\r\n\t * @param  value  Gap count\r\n\t */\r\n\tpublic set autoGapCount(value: number) {\r\n\t\tthis.setPropertyValue(\"autoGapCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Gap count\r\n\t */\r\n\tpublic get autoGapCount(): number {\r\n\t\treturn this.getPropertyValue(\"autoGapCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Smoothing algorithm to be used for lines.\r\n\t *\r\n\t * Available options: `\"bezier\"` (default), `\"monotoneX\"`, and `\"monotoneY\"`.\r\n\t *\r\n\t * Monotone options are best suited for data with irregular intervals. Use `\"monotoneX\"` for\r\n\t * horizontal lines, and `\"monotoneY\"` vertical ones.\r\n\t *\r\n\t * NOTE: Both \"monotone\" algorithms will ignore `tensionX` and `tensionY` settings.\r\n\t *\r\n\t * @since 4.10.0\r\n\t * @param  value  Smoothing algorithm\r\n\t */\r\n\tpublic set smoothing(value: \"bezier\" | \"monotoneX\" | \"monotoneY\") {\r\n\t\tthis.setPropertyValue(\"smoothing\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Smoothing algorithm\r\n\t */\r\n\tpublic get smoothing(): \"bezier\" | \"monotoneX\" | \"monotoneY\" {\r\n\t\treturn this.getPropertyValue(\"smoothing\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeries\"] = LineSeries;\r\nregistry.registeredClasses[\"LineSeriesDataItem\"] = LineSeriesDataItem;\r\n","/**\r\n * Radar series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem, ILineSeriesDataFields, ILineSeriesProperties, ILineSeriesAdapters, ILineSeriesEvents } from \"./LineSeries\";\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n//import { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\n//import { Sprite } from \"../../core/Sprite\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarSeriesDataItem extends LineSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarSeriesDataItem\";\r\n\r\n\t\tthis.setLocation(\"dateX\", 0, 0);\r\n\t\tthis.setLocation(\"dateY\", 0, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesDataFields extends ILineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesProperties extends ILineSeriesProperties {\r\n\r\n\t/**\r\n\t * Should the last and and first data points be connected, forming a complete\r\n\t * closed circle?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tconnectEnds?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesEvents extends ILineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarSeriesAdapters extends ILineSeriesAdapters, IRadarSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a radar graph.\r\n *\r\n * @see {@link IRadarSeriesEvents} for a list of available Events\r\n * @see {@link IRadarSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class RadarSeries extends LineSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IRadarSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: RadarSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarSeries\";\r\n\t\tthis.connectEnds = true;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new RadarSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: RadarSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string) {\r\n\t\tif (!stackKeyX) {\r\n\t\t\tstackKeyX = \"valueX\";\r\n\t\t}\r\n\t\tif (!stackKeyY) {\r\n\t\t\tstackKeyY = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet x: number = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n\r\n\t\tlet radius: number = $math.getDistance({ x: x, y: y });\r\n\r\n\t\t// hack to be able to determine angle later\r\n\t\tif (radius == 0) {\r\n\t\t\tradius = 0.00001;\r\n\t\t}\r\n\r\n\t\tlet angle: number = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n\r\n\t\tlet startAngle = this.chart.startAngle;\r\n\t\tlet endAngle = this.chart.endAngle;\r\n\r\n\t\t//\t\tangle = $math.fitToRange(angle, startAngle, endAngle);\r\n\t\tif (angle < startAngle || angle > endAngle) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points    [description]\r\n\t * @param dataItem  [description]\r\n\t * @param xField    [description]\r\n\t * @param yField    [description]\r\n\t * @param backwards [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean): void {\r\n\t\tlet point = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], dataItem.locations[yField]);\r\n\t\tif (point) {\r\n\t\t\tpoints.push(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to be used as a mask for the series.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>this.yAxis.renderer;\r\n\t\treturn $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n\t}\r\n\r\n\t/**\r\n\t * [drawSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param segment      [description]\r\n\t * @param points       [description]\r\n\t * @param closePoints  [description]\r\n\t */\r\n\tprotected drawSegment(segment: LineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tlet axis: Axis = this.yAxis;\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>axis.renderer;\r\n\r\n\t\tif (this.connectEnds && Math.abs(renderer.endAngle - renderer.startAngle) == 360) {\r\n\t\t\t// adds one point to the beginning of closePoints array, if needed\r\n\t\t\tif (this.dataFields[<keyof this[\"_dataFields\"]>this._xOpenField] ||\r\n\t\t\t\tthis.dataFields[<keyof this[\"_dataFields\"]>this._yOpenField] ||\r\n\t\t\t\tthis.stacked) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t\tif (closePoints.length > 0) {\r\n\t\t\t\t\tclosePoints.unshift(closePoints[closePoints.length - 1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.drawSegment(segment, points, closePoints);\r\n\t}\r\n\r\n\t/**\r\n\t * Should the last and and first data points be connected, forming a complete\r\n\t * closed circle?\r\n\t *\r\n\t * @default true\r\n\t * @param value  Connect?\r\n\t */\r\n\tpublic set connectEnds(value: boolean) {\r\n\t\tthis.setPropertyValue(\"connectEnds\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Connect?\r\n\t */\r\n\tpublic get connectEnds(): boolean {\r\n\t\treturn this.getPropertyValue(\"connectEnds\");\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet:Sprite, positionX:number, positionY:number){\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif(positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end){\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\t\r\n\t\tbullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\t\t\r\n\t}\r\n\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tsuper.setXAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tsuper.setYAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected updateRendererRefs() {\r\n\t\tlet rendererX = <AxisRendererCircular>this.xAxis.renderer;\r\n\t\tlet rendererY = <AxisRendererRadial>this.yAxis.renderer;\r\n\r\n\t\trendererX.axisRendererY = rendererY;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarSeries\"] = RadarSeries;\r\nregistry.registeredClasses[\"RadarSeriesDataItem\"] = RadarSeriesDataItem;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisFill, IAxisFillProperties, IAxisFillAdapters, IAxisFillEvents } from \"./AxisFill\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { AxisRendererCircular } from \"./AxisRendererCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFillCircular]].\r\n */\r\nexport interface IAxisFillCircularProperties extends IAxisFillProperties {\r\n\r\n\t/**\r\n\t * Inner radius. Relative ir absolute.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius. Relative or absolute.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Corner radius for the fill. In pixels.\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFillCircular]].\r\n */\r\nexport interface IAxisFillCircularEvents extends IAxisFillEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFillCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillCircularAdapters extends IAxisFillAdapters, IAxisFillCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Provides fill element functionality for circular Axes.\r\n *\r\n * @see {@link IAxisFillCircularEvents} for a list of available events\r\n * @see {@link IAxisFillCircularAdapters} for a list of available Adapters\r\n * @todo Needs description\r\n */\r\nexport class AxisFillCircular extends AxisFill {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillCircularEvents;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper(axis);\r\n\r\n\t\tthis.className = \"AxisFillCircular\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif(this.__disabled || this.disabled){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRendererCircular = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\tthis.fillPath = renderer.getPositionRangePath(this.startPosition, this.endPosition, this.radius, $type.hasValue(this.innerRadius) ? this.innerRadius : renderer.innerRadius, this.cornerRadius);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Corner radius for the fill. In pixels.\r\n\t *\r\n\t * @param value  Corner radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Corner radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFillCircular\"] = AxisFillCircular;\r\n","/**\r\n * A module defining functionality for circular axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Grid, IGridProperties, IGridAdapters, IGridEvents } from \"./Grid\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[GridCircular]].\r\n */\r\nexport interface IGridCircularProperties extends IGridProperties {\r\n\r\n\t/**\r\n\t * Inner radius of the circular grid. (absolute or relative)\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius of the circular grid. (absolute or relative)\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[GridCircular]].\r\n */\r\nexport interface IGridCircularEvents extends IGridEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GridCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridCircularAdapters extends IGridAdapters, IGridCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a circular grid element for circular-type axis.\r\n *\r\n * @see {@link IGridCircularEvents} for a list of available events\r\n * @see {@link IGridCircularAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the GridCircular, also with 3d charts we might need some additional elements\r\n */\r\nexport class GridCircular extends Grid {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridCircularEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GridCircular\";\r\n\t\tthis.pixelPerfect = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circular grid. (absolute or relative)\r\n\t *\r\n\t * @param value Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the circular grid. (absolute or relative)\r\n\t *\r\n\t * @param value Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GridCircular\"] = GridCircular;\r\n","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisLabel, IAxisLabelProperties, IAxisLabelAdapters, IAxisLabelEvents } from \"./AxisLabel\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabelCircular]].\r\n */\r\nexport interface IAxisLabelCircularProperties extends IAxisLabelProperties {\r\n\r\n\t/**\r\n\t * Rotation angle of the label in relation to circle line.\r\n\t */\r\n\trelativeRotation?: number;\r\n\r\n\t/**\r\n\t * Distance of the label from circle line.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Specifies if label should be bent along the circle\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tbent?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabelCircular]].\r\n */\r\nexport interface IAxisLabelCircularEvents extends IAxisLabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabelCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelCircularAdapters extends IAxisLabelAdapters, IAxisLabelCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on circular axis.\r\n *\r\n * @see {@link IAxisLabelCircularEvents} for a list of available events\r\n * @see {@link IAxisLabelCircularAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLabelCircular extends AxisLabel {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelCircularEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: any;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic fdx: number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic fdy: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabelCircular\";\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\t\tthis.location = 0.5;\r\n\t\tthis.locationOnPath = 0.5;\r\n\t\tthis.radius = 0;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative rotation of the label.\r\n\t *\r\n\t * It is an angle to circle. In case 90, labels will be positioned like rays\r\n\t * of light, if 0 - positioned along the circle.\r\n\t *\r\n\t * @param value Rotation angle\r\n\t */\r\n\tpublic set relativeRotation(value: number) {\r\n\t\tthis.setPropertyValue(\"relativeRotation\", value, true);\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tthis.rotation = undefined;\r\n\r\n\t\t\tlet dataItem = this.dataItem;\r\n\t\t\tif (dataItem && dataItem.component) {\r\n\t\t\t\tdataItem.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation angle\r\n\t */\r\n\tpublic get relativeRotation(): number {\r\n\t\treturn this.getPropertyValue(\"relativeRotation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Distance from axis circle to label in pixels or percent.\r\n\t *\r\n\t * @param value Distance (px or percent)\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if label should be bent along the circle.\r\n\t *\r\n\t * IMPORTANT: Use this with caution, since it is quite CPU-greedy.\r\n\t *\r\n\t * @since 4.1.2\r\n\t * @default false\r\n\t * @param  value  Bent?\r\n\t */\r\n\tpublic set bent(value: boolean) {\r\n\t\tthis.setPropertyValue(\"bent\", value, true);\r\n\t\tthis.setPropertyValue(\"wrap\", false);\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.setPropertyValue(\"dx\", 0);\r\n\t\t\tthis.setPropertyValue(\"dy\", 0);\r\n\t\t\tthis.setPropertyValue(\"x\", 0);\r\n\t\t\tthis.setPropertyValue(\"y\", 0);\r\n\t\t\tthis.setPropertyValue(\"rotation\", 0)\r\n\t\t\t//this.setPropertyValue(\"relativeRotation\", undefined);\r\n\t\t\tthis.fdx = 0;\r\n\t\t\tthis.fdy = 0;\r\n\t\t\tthis.textAlign = \"middle\";\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(this.textPathElement){\r\n\t\t\t\tthis.textPathElement.dispose();\r\n\t\t\t\tthis.textPathElement = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bent?\r\n\t */\r\n\tpublic get bent(): boolean {\r\n\t\treturn this.getPropertyValue(\"bent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label radius in pixels.\r\n\t * \r\n\t * @param   axisRadius  Radius\r\n\t * @return              Pixel radius\r\n\t */\r\n\tpublic pixelRadius(axisRadius: number): number {\r\n\t\tlet sign: number = 1;\r\n\t\tif (this.inside) {\r\n\t\t\tsign = -1;\r\n\t\t}\r\n\r\n\t\treturn $utils.relativeToValue(this.radius, axisRadius) * sign;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label horizontal radius in pixels.\r\n\t * \r\n\t * @param   axisRadius   Radius\r\n\t * @param   axisRadiusY  Vertical radius\r\n\t * @return               Radius\r\n\t */\r\n\tpublic pixelRadiusY(axisRadius: number, axisRadiusY: number): number {\r\n\t\tlet sign: number = 1;\r\n\t\tif (this.inside) {\r\n\t\t\tsign = -1;\r\n\t\t}\r\n\r\n\t\tlet radius = this.radius;\r\n\r\n\t\tif ($type.isNumber(radius)) {\r\n\t\t\tradius *= axisRadiusY / axisRadius;\r\n\t\t\treturn $utils.relativeToValue(radius, axisRadius) * sign;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn $utils.relativeToValue(radius, axisRadiusY) * sign;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param point       Label affixation point\r\n\t * @param axisRadius  Distance from point (px)\r\n\t */\r\n\tpublic fixPosition(angle: number, axisRadius: number, axisRadiusY?: number, dx?: number, dy?: number) {\r\n\t\tif (!$type.isNumber(axisRadiusY)) {\r\n\t\t\taxisRadiusY = axisRadius;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(dx)) {\r\n\t\t\tdx = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(dy)) {\r\n\t\t\tdy = 0;\r\n\t\t}\r\n\r\n\t\tlet point = { x: axisRadius * $math.cos(angle), y: axisRadiusY * $math.sin(angle) };\r\n\r\n\t\tif (this.invalid) {\r\n\t\t\tthis.validate();  //@todo\" check if we need this\r\n\t\t}\r\n\r\n\t\tlet isNegative = false;\r\n\t\tlet realRadius = this.radius;\r\n\r\n\t\tif (realRadius instanceof Percent && realRadius.value < 0) {\r\n\t\t\tisNegative = true;\r\n\t\t}\r\n\t\telse if (realRadius < 0) {\r\n\t\t\tisNegative = true;\r\n\t\t}\r\n\r\n\t\tlet relativeRotation = this.relativeRotation;\r\n\t\tlet labelRadius = this.pixelRadius(axisRadius);\r\n\r\n\t\tif (this.bent) {\r\n\t\t\tlet point = { x: (axisRadius + labelRadius )* $math.cos(angle + 180), y: (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * $math.sin(angle + 180) };\r\n\t\t\tthis.path = $path.moveTo(point) + $path.arcTo(angle + 180, 360, axisRadius + labelRadius, axisRadiusY + labelRadius * axisRadiusY / axisRadius);\r\n\t\t\t\r\n\t\t\tif (this.textPathElement) {\r\n\t\t\t\tthis.textPathElement.attr({ \"startOffset\": (this.locationOnPath * 100) + \"%\" })\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// WHEN ROTATED\r\n\t\tif ($type.isNumber(relativeRotation)) {\r\n\r\n\t\t\tthis.horizontalCenter = \"none\";\r\n\t\t\tthis.verticalCenter = \"none\";\r\n\r\n\t\t\tangle = $math.fitAngleToRange(angle, -180, 180);\r\n\r\n\t\t\tlet pixelWidth = this.bbox.width;\r\n\t\t\tlet pixelHeight = this.bbox.height;\r\n\r\n\t\t\tlet pixelPaddingBottom = this.pixelPaddingBottom;\r\n\t\t\tlet pixelPaddingTop = this.pixelPaddingTop;\r\n\t\t\tlet pixelPaddingLeft = this.pixelPaddingLeft;\r\n\t\t\tlet pixelPaddingRight = this.pixelPaddingRight;\r\n\r\n\t\t\tif (angle > 90 || angle < -90) {\r\n\t\t\t\tif (relativeRotation == -90) {\r\n\t\t\t\t\trelativeRotation = 90;\r\n\t\t\t\t\tpixelWidth = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (relativeRotation == -90) {\r\n\t\t\t\t\tpixelHeight = - pixelHeight;\r\n\t\t\t\t}\r\n\t\t\t\tif (relativeRotation == 90) {\r\n\t\t\t\t\trelativeRotation = -90;\r\n\t\t\t\t\tpixelWidth = -pixelPaddingLeft - pixelPaddingRight;\r\n\t\t\t\t\tpixelHeight = - pixelHeight - pixelPaddingTop - pixelPaddingBottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.rotation = relativeRotation + angle + 90;\r\n\r\n\t\t\tlet dH = $math.sin(relativeRotation) / 2;\r\n\t\t\tlet dW = $math.cos(relativeRotation) / 2;\r\n\r\n\t\t\tlet rotation = this.rotation;\r\n\r\n\t\t\tthis.dx = pixelHeight * dH * $math.sin(rotation) - pixelWidth * dW * $math.cos(rotation);\r\n\t\t\tthis.dy = -pixelHeight * dH * $math.cos(rotation) - pixelWidth * dW * $math.sin(rotation);\r\n\r\n\t\t\tif (!this.inside) {\r\n\t\t\t\tlabelRadius += (pixelHeight + pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelWidth + pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (angle > 90 || angle < -90) {\r\n\t\t\t\t\tlabelRadius -= (pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelRadius += (pixelPaddingBottom + this.bbox.height + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight + this.bbox.width) * $math.sin(relativeRotation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x += $math.cos(angle) * labelRadius;\r\n\t\t\tpoint.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// END OF ROTATED\r\n\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\tthis.verticalCenter = \"middle\";\r\n\r\n\t\t\tif (isNegative) {\r\n\t\t\t\tthis.dx = 0;\r\n\t\t\t\tthis.dy = 0;\r\n\t\t\t\tpoint.x = (axisRadius + labelRadius) * $math.cos(angle);\r\n\t\t\t\tpoint.y = (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * $math.sin(angle);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// we don't use valign for labels because then they would jump while animating. instead we modify dy depending on a y position\r\n\t\t\t\t// this math makes dy to be 1 at the top of the circle, 0.5 at the middle and 1 at the bottom\r\n\t\t\t\t// @todo with this math doesn't work well with inside = true\r\n\t\t\t\tthis.dy = this._measuredHeight / 2 * $math.sin(angle) //(1 - (point.y + axisRadiusY) / (2 * axisRadiusY));\r\n\t\t\t\t// simmilar with dx\r\n\t\t\t\tthis.dx = this._measuredWidth / 2 * $math.cos(angle) //(1 - (point.x + axisRadius) / (2 * axisRadius));\r\n\r\n\t\t\t\tpoint.x += $math.cos(angle) * labelRadius;\r\n\t\t\t\tpoint.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpoint.x += dx;\r\n\t\tpoint.y += dy;\r\n\r\n\t\tthis.fdx = this.dx;\r\n\t\tthis.fdy = this.dy;\r\n\r\n\t\tthis.moveTo(point);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabelCircular\"] = AxisLabelCircular;\r\n","/**\r\n * Module, defining Axis Renderer for circular axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Axis } from \"./Axis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { AxisFillCircular } from \"./AxisFillCircular\";\r\nimport { AxisRendererRadial } from \"./AxisRendererRadial\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { GridCircular } from \"./GridCircular\";\r\nimport { AxisLabelCircular } from \"./AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererCircular]].\r\n */\r\nexport interface IAxisRendererCircularProperties extends IAxisRendererProperties {\r\n\r\n\t/**\r\n\t * Start angle of the circular axis in degrees (0-360).\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle of the circular axis in degrees (0-360).\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * Outer radius of the circular axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the circular axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Specifies if axis should use it's own start/end angles or the ones set on chart.\r\n\t */\r\n\tuseChartAngles?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRendererCircular]].\r\n */\r\nexport interface IAxisRendererCircularEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererCircularAdapters extends IAxisRendererAdapters, IAxisRendererCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for circular axis.\r\n */\r\nexport class AxisRendererCircular extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererCircularEvents;\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: GridCircular;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFillCircular;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic pixelRadiusReal: number = 0;\r\n\r\n\r\n\t/**\r\n\t * Y axis renderer\r\n\t */\r\n\tpublic axisRendererY: AxisRendererRadial;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\t// axis.layout = \"none\"; // does not trigger redraw when size changes\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.className = \"AxisRendererCircular\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.useChartAngles = true;\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.grid.template.location = 0;\r\n\r\n\t\tthis.labels.template.location = 0;\r\n\t\tthis.labels.template.radius = 15;\r\n\r\n\t\tthis.ticks.template.location = 0;\r\n\t\tthis.ticks.template.pixelPerfect = false;\r\n\t\tthis.tooltipLocation = 0;\r\n\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.isMeasured = false;\r\n\r\n\t\t// modify x and y so that tooltip would always be on circle\r\n\t\tlet tooltip = axis.tooltip;\r\n\r\n\t\ttooltip.adapter.add(\"dx\", (x, target) => {\r\n\t\t\tlet point: IPoint = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, this);\r\n\t\t\treturn this.pixelRadius * Math.cos(Math.atan2(point.y, point.x)) - point.x;\r\n\t\t});\r\n\r\n\t\ttooltip.adapter.add(\"dy\", (y, target) => {\r\n\t\t\tlet point: IPoint = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, this);\r\n\t\t\treturn this.pixelRadius * Math.sin(Math.atan2(point.y, point.x)) - point.y;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart && this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\treturn 2 * Math.PI * this.pixelRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"radius\", value, false, false, 10, false)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"innerRadius\", value, false, false, 10, false)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\tlet chart = <RadarChart>this.chart;\t\t\r\n\t\tlet innerRadius = this.getPropertyValue(\"innerRadius\");\r\n\t\tif(chart){\r\n\t\t\tif (!$type.hasValue(innerRadius)) {\r\n\t\t\t\tinnerRadius = chart.innerRadius;\r\n\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tinnerRadius = percent(innerRadius.value * chart.innerRadiusModifyer * 100)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tlet mr = chart.mr;\r\n\t\t\t\t\tlet value = innerRadius.value;\r\n\t\t\t\t\tvalue = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n\t\t\t\t\tinnerRadius = percent(value * 100);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn innerRadius;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if axis should use its own `startAngle` and `endAngle` or\r\n\t * inherit them from relative properties from chart.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use chart's angles\r\n\t */\r\n\tpublic set useChartAngles(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useChartAngles\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use chart angles\r\n\t */\r\n\tpublic get useChartAngles(): boolean {\r\n\t\treturn this.getPropertyValue(\"useChartAngles\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\r\n\t\tif (!$type.isNumber(position2)) {\r\n\t\t\tposition2 = 1;\r\n\t\t}\r\n\r\n\t\tlet coordinate: number = this.positionToCoordinate(position);\r\n\t\tlet angle: number = this.startAngle + (this.endAngle - this.startAngle) * coordinate / this.axisLength;\r\n\t\tlet radius = this.pixelRadius;\r\n\t\tlet innerRadius = this.pixelInnerRadius;\r\n\r\n\t\tif (this.axisRendererY) {\r\n\t\t\tlet realRadius = $math.fitToRange(this.axisRendererY.positionToCoordinate(position2), 0, Infinity)\r\n\r\n\t\t\tif(realRadius == 0){\r\n\t\t\t\trealRadius = 0.000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet point = { x: realRadius * $math.cos(angle), y: realRadius * $math.sin(angle) };\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\treturn { x: $math.cos(angle) * innerRadius + (radius - innerRadius) * $math.cos(angle) * position2, y: $math.sin(angle) * innerRadius + (radius - innerRadius) * $math.sin(angle) * position2 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to angle in degrees (0-360).\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle (0-360)\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet arc: number = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n\r\n\t\tlet angle: number;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tangle = this.startAngle + (axis.end - position) * arc;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tangle = this.startAngle + (position - axis.start) * arc;\r\n\t\t}\r\n\r\n\t\treturn $math.round(angle, 3);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts angle on axis to relative position(0-1).\r\n\t *\r\n\t * @param angle Angle in degrees\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic angleToPosition(angle: number): number {\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet arc: number = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n\t\tlet position: number\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - (angle - this.startAngle) / arc;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = (angle - this.startAngle) / arc + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\tlet arc: number = $math.min(360, endAngle - startAngle);\t\t\r\n\t\tthis.line.path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius, radius);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: GridCircular, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif ($type.isNumber(point.x) && $type.isNumber(point.y) && grid.element) {\r\n\r\n\t\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\t\t\tlet radius: number = $utils.relativeRadiusToValue($type.hasValue(grid.radius) ? grid.radius : percent(100), this.pixelRadius);\r\n\r\n\t\t\tlet gridInnerRadius = $utils.relativeRadiusToValue(grid.innerRadius, this.pixelRadius);\r\n\t\t\tgrid.zIndex = 0;\r\n\r\n\t\t\tlet innerRadius: number = $utils.relativeRadiusToValue($type.isNumber(gridInnerRadius) ? gridInnerRadius : this.innerRadius, this.pixelRadiusReal, true);\r\n\r\n\t\t\tif(!$type.isNumber(innerRadius)){\r\n\t\t\t\tinnerRadius = 0;\r\n\t\t\t}\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t}\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (tick.element) {\r\n\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\t\t\tlet tickLength: number = tick.length;\r\n\t\t\tif (tick.inside) {\r\n\t\t\t\ttickLength = -tickLength;\r\n\t\t\t}\r\n\t\t\ttick.zIndex = 1;\r\n\t\t\ttick.path = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }) + $path.lineTo({ x: (radius + tickLength) * $math.cos(angle), y: (radius + tickLength) * $math.sin(angle) });\r\n\t\t}\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\r\n\t\tpoint = { x: radius * $math.cos(angle), y: radius * $math.sin(angle) }\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: this[\"_labelType\"], position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlabel.fixPosition(this.positionToAngle(position), this.pixelRadius);\r\n\t\tlabel.zIndex = 2;\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point Point coordinates\r\n\t * @return Fits?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle of the axis in degrees (0-360).\r\n\t *\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"startAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the axis in degrees (0-360).\r\n\t *\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"endAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number, radius?: number | Percent, innerRadius?: number | Percent, cornerRadius?: number): string {\r\n\t\tlet path: string = \"\";\r\n\t\tif ($type.isNumber(startPosition) && $type.isNumber(endPosition)) {\r\n\r\n\t\t\tif (!$type.hasValue(radius)) {\r\n\t\t\t\tradius = this.radius;\r\n\t\t\t}\r\n\r\n\t\t\tstartPosition = $math.max(startPosition, this.axis.start);\r\n\t\t\tendPosition = $math.min(endPosition, this.axis.end);\r\n\r\n\t\t\tif (endPosition < startPosition) {\r\n\t\t\t\tendPosition = startPosition;\r\n\t\t\t}\r\n\r\n\t\t\tlet pixelRadius: number = $utils.relativeRadiusToValue(radius, this.pixelRadius);\r\n\t\t\tlet pixelInnerRadius: number = $utils.relativeRadiusToValue(innerRadius, this.pixelRadius, true);\r\n\r\n\t\t\tlet startAngle: number = this.positionToAngle(startPosition);\r\n\t\t\tlet endAngle: number = this.positionToAngle(endPosition);\r\n\r\n\t\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\t\tpath = $path.arc(startAngle, arc, pixelRadius, pixelInnerRadius, pixelRadius, cornerRadius);\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new GridCircular();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFillCircular(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabelCircular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\tlet angle = $math.fitAngleToRange($math.getAngle(point), this.startAngle, this.endAngle);\r\n\t\treturn this.coordinateToPosition((angle - this.startAngle) / 360 * this.axisLength);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererCircular\"] = AxisRendererCircular;\r\n","/**\r\n * Module, defining Axis Renderer for radial axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY, IAxisRendererYProperties, IAxisRendererYAdapters, IAxisRendererYEvents } from \"./AxisRendererY\";\r\nimport { Axis } from \"./Axis\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedCircle } from \"../../core/elements/WavedCircle\";\r\nimport { PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererRadial]].\r\n */\r\nexport interface IAxisRendererRadialProperties extends IAxisRendererYProperties {\r\n\r\n\t/**\r\n\t * Start angle of the radial axis in degrees. (0-360)\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle of the radial axis in degrees. (0-360)\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * A grid type to display: \"circles\" or \"polygons\".\r\n\t *\r\n\t * @default \"circles\"\r\n\t */\r\n\tgridType?: \"circles\" | \"polygons\"; //@todo: move it to GridRadial?\r\n\r\n\t/**\r\n\t * An angle of the axis in degrees. (0-360)\r\n\t */\r\n\taxisAngle?: number;\r\n\r\n\r\n\t/**\r\n\t * Outer radius of the radial axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the radial axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRendererRadial]].\r\n */\r\nexport interface IAxisRendererRadialEvents extends IAxisRendererYEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererRadialAdapters extends IAxisRendererYAdapters, IAxisRendererRadialProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for radial axis.\r\n */\r\nexport class AxisRendererRadial extends AxisRendererY {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererRadialProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererRadialAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererRadialEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<RadarChart>();\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic pixelRadiusReal: number = 0;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _chartType: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererRadial\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\t\tthis.minGridDistance = 30;\r\n\t\tthis.gridType = \"circles\";\r\n\t\tthis.axisAngle = -90;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart && this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\treturn this.pixelRadius - this.pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, false, false, 10, false)\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\tlet chart = this.chart;\r\n\t\tlet innerRadius = this.getPropertyValue(\"innerRadius\");\r\n\t\tif(chart){\r\n\t\t\tif (!$type.hasValue(innerRadius)) {\r\n\t\t\t\tinnerRadius = chart.innerRadius;\r\n\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tinnerRadius = percent(innerRadius.value * chart.innerRadiusModifyer * 100)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tlet mr = chart.mr;\r\n\t\t\t\t\tlet value = innerRadius.value;\r\n\t\t\t\t\tvalue = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n\t\t\t\t\tinnerRadius = percent(value * 100);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn innerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\tlet radius: number = $math.fitToRange(this.positionToCoordinate(position), 0, Infinity);\r\n\t\treturn { x: radius * $math.cos(this.axisAngle), y: radius * $math.sin(this.axisAngle) };\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: this.pixelInnerRadius * $math.cos(this.axisAngle), y: this.pixelInnerRadius * $math.sin(this.axisAngle) }) + $path.lineTo({ x: this.pixelRadius * $math.cos(this.axisAngle), y: this.pixelRadius * $math.sin(this.axisAngle) });\r\n\r\n\t\tlet title = this.axis.title;\r\n\t\ttitle.valign = \"none\";\r\n\t\ttitle.horizontalCenter = \"middle\";\r\n\t\ttitle.verticalCenter = \"bottom\";\r\n\t\ttitle.y = - this.axisLength / 2;\r\n\t\tlet rotation: number = 90;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (!this.inside) {\r\n\t\t\t\trotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.inside) {\r\n\t\t\t\trotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttitle.rotation = rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tlet path: string;\r\n\t\tlet radius: number = $math.getDistance(point);\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif ($type.isNumber(radius) && grid.element && chart) {\r\n\t\t\t\r\n\t\t\tlet xAxis = chart.xAxes.getIndex(0);\r\n\t\t\tlet count = 0;\r\n\r\n\t\t\tlet series = chart.series.getIndex(0);\r\n\r\n\t\t\tif (series) {\r\n\t\t\t\tcount = series.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\t// polygons are only possible if x axis is present\r\n\t\t\t// @todo: review this\r\n\t\t\tif (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n\t\t\t\tlet gridLocation = xAxis.renderer.grid.template.location;\r\n\r\n\t\t\t\tlet angle: number = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius, radius);\r\n\t\t\t}\r\n\t\t\tgrid.path = path;\r\n\t\t}\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: this[\"_labelType\"], position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// @todo? zero grid for radar chart, is it needed?\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point Point coordinates\r\n\t * @return Fits?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle of the axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\t// do not normalize angle here!\r\n\t\tif (this.setPropertyValue(\"startAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"endAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the radial axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  Axis angle\r\n\t */\r\n\tpublic set axisAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"axisAngle\", $math.normalizeAngle(value));\r\n\t\tthis.invalidateAxisItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis angle\r\n\t */\r\n\tpublic get axisAngle(): number {\r\n\t\treturn this.getPropertyValue(\"axisAngle\");\r\n\t\t//return $math.fitToRange(this.getPropertyValue(\"axisAngle\"), this.startAngle, this.endAngle); // no good, as less flexible\r\n\t}\r\n\r\n\t// polygons grid type is only possible under these conditions: xAxis is available and it is CategoryAxis, also at least one series should be added to a chart\r\n\r\n\t/**\r\n\t * Grid type for radial axis.\r\n\t *\r\n\t * A grid on radia axis can either be perfect circles (\"circles\"), or\r\n\t * straight lines (\"polygons\").\r\n\t *\r\n\t * @default \"circles\"\r\n\t * @param value  Grid type\r\n\t */\r\n\tpublic set gridType(value: \"circles\" | \"polygons\") {\r\n\t\tthis.setPropertyValue(\"gridType\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Grid type\r\n\t */\r\n\tpublic get gridType(): \"circles\" | \"polygons\" {\r\n\t\tlet axis: Axis = this.chart.xAxes.getIndex(0);\r\n\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\treturn this.getPropertyValue(\"gridType\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"circles\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet pixelInnerRadius = this.pixelInnerRadius;\r\n\t\tlet pixelRadius = this.axisLength + pixelInnerRadius;\r\n\t\tlet innerRadius: number = $math.fitToRange(this.positionToCoordinate(startPosition), pixelInnerRadius, pixelRadius);\r\n\t\tlet radius: number = $math.fitToRange(this.positionToCoordinate(endPosition), pixelInnerRadius, pixelRadius);\r\n\r\n\t\t//let angleCount: number = this.angleCount;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\tlet path: string;\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet xAxis = chart.xAxes.getIndex(0);\r\n\t\tlet series = chart.series.getIndex(0);\r\n\r\n\t\tlet count = 0;\r\n\t\tif (series) {\r\n\t\t\tcount = series.dataItems.length;\r\n\t\t}\r\n\r\n\t\t// polygons are only possible if x axis is present\r\n\t\t// @todo: review this\r\n\t\tif (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n\t\t\tlet gridLocation = xAxis.renderer.grid.template.location;\r\n\r\n\t\t\tlet angle: number = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n\t\t\tpath = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t}\r\n\r\n\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\tpath += $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) })\r\n\r\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) });\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpath = $path.arc(startAngle, arc, radius, innerRadius);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\t// @todo: someday we might need axis break when gridType is polygons\r\n\r\n\t\tlet startLine: WavedCircle = <WavedCircle>axisBreak.startLine;\r\n\t\tlet endLine: WavedCircle = <WavedCircle>axisBreak.endLine;\r\n\t\tlet fillShape: WavedCircle = <WavedCircle>axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tstartLine.radius = Math.abs(startPoint.y);\r\n\t\tendLine.radius = Math.abs(endPoint.y);\r\n\t\tfillShape.radius = Math.abs(endPoint.y);\r\n\t\tfillShape.innerRadius = Math.abs(startPoint.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedCircle();\r\n\t\taxisBreak.endLine = new WavedCircle();\r\n\t\taxisBreak.fillShape = new WavedCircle();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 4000;\r\n\t\t\tlet bbx: number = -4000;\r\n\t\t\tlet bby: number = -4000;\r\n\t\t\tlet bbw: number = bigNum * 2;\r\n\t\t\tlet bbh: number = bigNum * 2;\r\n\t\t\tlet axisAngle: number = this.axisAngle;\r\n\t\t\tif (axisAngle < 0) {\r\n\t\t\t\taxisAngle += 360;\r\n\t\t\t}\r\n\t\t\tlet tooltipOrientation: PointerOrientation = \"vertical\";\r\n\t\t\tif ((axisAngle > 45 && axisAngle < 135) || (axisAngle > 225 && axisAngle < 315)) {\r\n\t\t\t\ttooltipOrientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(tooltipOrientation, { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick      Tick element\r\n\t * @param position  Position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (tick.element) {\r\n\t\t\tlet angle: number = $math.normalizeAngle(this.axisAngle + 90);\r\n\t\t\tif (angle / 90 != Math.round(angle / 90)) {\r\n\t\t\t\ttick.pixelPerfect = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.pixelPerfect = true;\r\n\t\t\t}\r\n\t\t\tlet tickLength = -tick.length;\r\n\t\t\tif (tick.inside) {\r\n\t\t\t\ttickLength *= -1;\r\n\t\t\t}\r\n\t\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength * $math.cos(angle), y: tickLength * $math.sin(angle) });\r\n\t\t}\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\t\tlet innerRadius = this.pixelInnerRadius;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength + innerRadius;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength + innerRadius;\r\n\t\t}\r\n\r\n\t\treturn $math.round(coordinate, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\tlet coordinate = ($math.getDistance(point) - this.pixelInnerRadius);\r\n\t\treturn this.coordinateToPosition(coordinate);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: RadarChart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): RadarChart {\r\n\t\treturn this._chart.get();\r\n\t}\t\r\n\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererRadial\"] = AxisRendererRadial;\r\n","/**\r\n * Radar chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { RadarSeries } from \"../series/RadarSeries\";\r\nimport { RadarColumnSeries } from \"../series/RadarColumnSeries\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { RadarCursor } from \"../cursors/RadarCursor\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarChartDataItem extends XYChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarChart]].\r\n */\r\nexport interface IRadarChartDataFields extends IXYChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarChart]].\r\n */\r\nexport interface IRadarChartProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Radius of the Radar face. Absolute or relative.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the Radar face. Percent value is relative to radius.\r\n\t *\r\n\t * @todo review desc\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle radar face starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle radar face ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarChart]].\r\n */\r\nexport interface IRadarChartEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarChartAdapters extends IXYChartAdapters, IRadarChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Radar chart.\r\n *\r\n * @see {@link IRadarChartEvents} for a list of available Events\r\n * @see {@link IRadarChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/radar-chart/} for documentation\r\n * @important\r\n */\r\nexport class RadarChart extends XYChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IRadarChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: RadarSeries | RadarColumnSeries;\r\n\r\n\t/**\r\n\t * Defines X axis renderer type.\r\n\t */\r\n\tpublic _xAxisRendererType: AxisRendererCircular;\r\n\r\n\t/**\r\n\t * Defines Y axis renderer type.\r\n\t */\r\n\tpublic _yAxisRendererType: AxisRendererRadial;\r\n\r\n\t/**\r\n\t * Defines X axis renderer type.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererCircular = AxisRendererCircular;\r\n\r\n\t/**\r\n\t * Defines Y axis renderer type.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererRadial = AxisRendererRadial;\r\n\r\n\t/**\r\n\t * [_cursor description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _cursor: RadarCursor;\r\n\r\n\t/**\r\n\t * A container that holds Radar visual elements.\r\n\t */\r\n\tpublic radarContainer: Container;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _pixelInnerRadius: number;\r\n\r\n\r\n\t/**\r\n\t * used by cursor. We adjust innerradius if start and end angle are close to each other\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic innerRadiusModifyer: number = 1;\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic mr: number = 1;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarChart\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.radius = percent(80);\r\n\t\tthis.innerRadius = 0;\r\n\r\n\t\tlet radarContainer = this.plotContainer.createChild(Container);\r\n\t\tradarContainer.shouldClone = false;\r\n\t\tradarContainer.layout = \"absolute\";\r\n\t\tradarContainer.align = \"center\";\r\n\t\tradarContainer.valign = \"middle\";\r\n\r\n\t\tthis.seriesContainer.parent = radarContainer;\r\n\t\tthis.radarContainer = radarContainer;\r\n\t\tthis.bulletsContainer.parent = radarContainer;\r\n\t\tthis.axisBulletsContainer = radarContainer;\r\n\r\n\t\tthis._cursorContainer = radarContainer;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.invalidate, this, false); // need this for the chart to change radius if legend is removed/disabled\r\n\r\n\t\tthis._bulletMask = radarContainer.createChild(Circle);\r\n\t\tthis._bulletMask.shouldClone = false;\r\n\t\tthis._bulletMask.element = this.paper.add(\"path\");\r\n\t\tthis._bulletMask.opacity = 0;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Radar chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates Axis with required properties for this chart.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tprotected processAxis(axis: Axis): void {\r\n\t\tsuper.processAxis(axis);\r\n\t\tlet renderer: AxisRenderer = axis.renderer;\r\n\t\trenderer.gridContainer.parent = renderer;\r\n\t\trenderer.breakContainer.parent = renderer;\r\n\t\taxis.parent = this.radarContainer;\r\n\t\trenderer.toBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all X axes after range change event.\r\n\t */\r\n\tprotected handleXAxisRangeChange() {\r\n\t\tsuper.handleXAxisRangeChange();\r\n\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\taxis.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all Y axes after range change event.\r\n\t */\r\n\tprotected handleYAxisRangeChange() {\r\n\t\tsuper.handleYAxisRangeChange();\r\n\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\taxis.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up cursor\r\n\t\t\tif ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n\t\t\t\tconfig.cursor.type = \"RadarCursor\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"RadarSeries\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\t/*if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n\t\t\t\t\tconfig.xAxes[i].type = config.xAxes[i].type || \"AxisRendererCircular\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n\t\t\t\t\tconfig.yAxes[i].type = config.yAxes[i].type || \"AxisRendererRadial\";\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Does calculations before drawing the chart.\r\n\t */\r\n\tprotected beforeDraw(): void {\r\n\t\tsuper.beforeDraw();\r\n\r\n\t\tlet plotContainer = this.plotContainer;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\tlet wr = plotContainer.innerWidth / rect.width;\r\n\t\tlet hr = plotContainer.innerHeight / rect.height;\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tlet value = innerRadius.value;\r\n\t\t\tlet mr = Math.min(wr, hr);\r\n\r\n\t\t\tthis.mr = mr;\r\n\r\n\t\t\tvalue = Math.max(mr * value, mr - Math.min(plotContainer.innerHeight, plotContainer.innerWidth)) / mr;\r\n\t\t\tinnerRect = $math.getArcRect(this.startAngle, this.endAngle, value);\r\n\r\n\t\t\tthis.innerRadiusModifyer = value / innerRadius.value;\r\n\r\n\t\t\tinnerRadius = percent(value * 100);\r\n\t\t}\r\n\r\n\t\t// @todo handle this when innerRadius set in pixels (do it for pie also)\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(plotContainer.innerWidth / rect.width, plotContainer.innerHeight / rect.height);\r\n\r\n\t\tlet diameter = $utils.relativeRadiusToValue(this.radius, maxRadius) * 2 || 0;\r\n\t\tlet radius = diameter / 2;\r\n\t\tlet startAngle = this.startAngle;\r\n\t\tlet endAngle = this.endAngle;\r\n\r\n\t\tthis._pixelInnerRadius = $utils.relativeRadiusToValue(innerRadius, radius);\r\n\r\n\t\tthis._bulletMask.path = $path.arc(startAngle, endAngle - startAngle, radius, this._pixelInnerRadius);\r\n\r\n\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\tif (axis.renderer.useChartAngles) {\r\n\t\t\t\taxis.renderer.startAngle = startAngle;\r\n\t\t\t\taxis.renderer.endAngle = endAngle;\r\n\t\t\t}\r\n\r\n\t\t\taxis.width = diameter;\r\n\t\t\taxis.height = diameter;\r\n\t\t\t//axis.renderer.width = diameter;\r\n\t\t\t//axis.renderer.height = diameter;\r\n\t\t\taxis.renderer.pixelRadiusReal = radius;\r\n\t\t\t//axis.renderer.innerRadius = innerRadius;\r\n\t\t});\r\n\r\n\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\taxis.renderer.startAngle = startAngle;\r\n\t\t\taxis.renderer.endAngle = endAngle;\r\n\r\n\t\t\taxis.width = diameter;\r\n\t\t\taxis.height = diameter;\r\n\t\t\t//axis.renderer.width = diameter;\r\n\t\t\t//axis.renderer.height = diameter;\r\n\t\t\taxis.renderer.pixelRadiusReal = radius;\r\n\t\t\t//axis.renderer.innerRadius = innerRadius;\r\n\t\t});\r\n\r\n\r\n\r\n\t\tlet cursor = this.cursor;\r\n\t\tif (cursor) {\r\n\t\t\tcursor.width = diameter;\r\n\t\t\tcursor.height = diameter;\r\n\t\t\tcursor.startAngle = startAngle;\r\n\t\t\tcursor.endAngle = endAngle;\r\n\t\t}\r\n\r\n\t\tthis.radarContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n\t\tthis.radarContainer.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for RadarChart.\r\n\t *\r\n\t * @return New Series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new RadarSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n\t * top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the radial axis start horizontally to\r\n\t * the right, as opposed to vertical.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n\t * where it has started, forming a full 360 circle. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to end the circle somewhere else.\r\n\t *\r\n\t * E.g. setting this to 180 will make the radar face end at horizontal line\r\n\t * to the left off the center.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the Radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius in pixels\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn this._pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * If set in Percent, it will be relative to `radius`. (outer radius)\r\n\t *\r\n\t * @param value Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the horizontal (X) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis Axis\r\n\t */\r\n\tpublic updateXAxis(renderer: AxisRenderer) {\r\n\t\t//do not call super!\r\n\t\tif (renderer) {\r\n\t\t\trenderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the vertical (Y) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis Axis\r\n\t */\r\n\tpublic updateYAxis(renderer: AxisRenderer) {\r\n\t\t// do not call super!\r\n\t\tif (renderer) {\r\n\t\t\trenderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarChart\"] = RadarChart;\r\n","/**\r\n * Functionality for drawing simple ClockHands\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Trapezoid } from \"../../core/elements/Trapezoid\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GaugeChart } from \"../types/GaugeChart\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ClockHand]].\r\n */\r\nexport interface IClockHandProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Radius of the hand's outer end. (tip)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n\t/**\r\n\t * Radius of the hand's inner end. (base)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's tip.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tendWidth: number;\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's base.\r\n\t *\r\n\t * @default 5\r\n\t */\r\n\tstartWidth: number;\r\n\r\n\t/**\r\n\t * rotation direction\r\n\t * @default \"any\"\r\n\t */\r\n\trotationDirection: \"any\" | \"clockWise\" | \"counterClockWise\";\r\n}\r\n\r\n/**\r\n * Defines events for [[ClockHand]].\r\n */\r\nexport interface IClockHandEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ClockHand]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IClockHandAdapters extends IContainerAdapters, IClockHandProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ClockHand class is capable of drawing a simple pointy shape with optionally\r\n * rounderd corners and an icon.\r\n *\r\n * @see {@link IClockHandEvents} for a list of available events\r\n * @see {@link IClockHandAdapters} for a list of available Adapters\r\n * @todo Improve\r\n * @important\r\n */\r\nexport class ClockHand extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IClockHandProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IClockHandAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IClockHandEvents;\r\n\r\n\t/**\r\n\t * A circle element used as hand's base.\r\n\t */\r\n\tprotected _pin: Circle;\r\n\r\n\t/**\r\n\t * A trapezoid shape used for hand itself.\r\n\t */\r\n\tprotected _hand: Trapezoid;\r\n\r\n\t/**\r\n\t * An Axis hand is related to.\r\n\t */\r\n\tprotected _axis: MutableValueDisposer<Axis> = new MutableValueDisposer<Axis>();\r\n\r\n\t/**\r\n\t * Hand's current value.\r\n\t */\r\n\tprotected _value: any;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ClockHand\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.stroke = this.fill;\r\n\r\n\t\tlet pin: Circle = new Circle();\r\n\t\tpin.radius = 5;\r\n\t\tthis.pin = pin;\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.startWidth = 5;\r\n\t\tthis.endWidth = 1;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.innerRadius = percent(0);\r\n\r\n\t\tlet hand: Trapezoid = new Trapezoid();\r\n\t\tthis.hand = hand;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Re(validates) the clock hand, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet hand = this.hand;\r\n\t\thand.width = this.pixelWidth;\r\n\t\tlet h: number = Math.max(this.startWidth, this.endWidth);\r\n\t\thand.height = h;\r\n\t\thand.leftSide = percent(this.startWidth / h * 100);\r\n\t\thand.rightSide = percent(this.endWidth / h * 100);\r\n\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRendererCircular = <AxisRendererCircular>this.axis.renderer;\r\n\r\n\t\t\tlet x0: number = $utils.relativeRadiusToValue(this.innerRadius, renderer.pixelRadius);\r\n\t\t\tlet x1: number = $utils.relativeRadiusToValue(this.radius, renderer.pixelRadius);\r\n\r\n\t\t\thand.x = x0;\r\n\t\t\thand.y = - h / 2;\r\n\r\n\t\t\thand.width = x1 - x0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A circle element used as hand's base. (pin)\r\n\t *\r\n\t * @param pin  Pin element\r\n\t */\r\n\tpublic set pin(pin: Circle) {\r\n\t\tif (this._pin) {\r\n\t\t\tthis.removeDispose(this._pin);\r\n\t\t}\r\n\t\tif (pin) {\r\n\t\t\tthis._pin = pin;\r\n\t\t\tpin.parent = this;\r\n\t\t\tthis._disposers.push(pin);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pin element\r\n\t */\r\n\tpublic get pin(): Circle {\r\n\t\treturn this._pin;\r\n\t}\r\n\r\n\t/**\r\n\t * A trapezoid shape used for hand itself.\r\n\t *\r\n\t * The shape of the trapezoid is controlled by ClockHand's `startWidth` and\r\n\t * `endWidth` properties.\r\n\t *\r\n\t * Set `endWidth` to 1 (px) to make it pointy.\r\n\t *\r\n\t * @param hand  Hand element\r\n\t */\r\n\tpublic set hand(hand: Trapezoid) {\r\n\t\tif (this._hand) {\r\n\t\t\tthis.removeDispose(this._hand);\r\n\t\t}\r\n\t\tif (hand) {\r\n\t\t\tthis._hand = hand;\r\n\t\t\thand.parent = this;\r\n\t\t\tthis._disposers.push(hand);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hand element\r\n\t */\r\n\tpublic get hand(): Trapezoid {\r\n\t\treturn this._hand;\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the hand's outer end. (tip)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the hand's inner end. (base)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's inner end. (base)\r\n\t *\r\n\t * @default 5\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set startWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"startWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get startWidth(): number {\r\n\t\treturn this.getPropertyValue(\"startWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's outer end. (tip)\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set endWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"endWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get endWidth(): number {\r\n\t\treturn this.getPropertyValue(\"endWidth\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Rotation direction\r\n\t *\r\n\t * @default any\r\n\t * @param value\r\n\t */\r\n\tpublic set rotationDirection(value: \"any\" | \"clockWise\" | \"counterClockWise\") {\r\n\t\tthis.setPropertyValue(\"rotationDirection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return rotationDirection\r\n\t */\r\n\tpublic get rotationDirection(): \"any\" | \"clockWise\" | \"counterClockWise\" {\r\n\t\treturn this.getPropertyValue(\"rotationDirection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Moves clock hand to particular value.\r\n\t *\r\n\t * If `duration` is set to a number in milliseconds, the hand will move\r\n\t * to the new position gracefully, rather than jumping rigth to it.\r\n\t *\r\n\t * Alternatively, you can also set `value` directly.\r\n\t *\r\n\t * @param value     New value\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param easing  Animation easing function\r\n\t */\r\n\tpublic showValue(value: any, duration?: number, easing?: (value: number) => number): void {\r\n\t\tthis._value = value;\r\n\t\tif (value != undefined) {\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tlet renderer = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\t\tlet newAngle = renderer.positionToAngle(this.axis.anyToPosition(value));\r\n\t\t\t\tlet currentAngle = this.rotation;\r\n\r\n\t\t\t\tif (this.rotationDirection == \"clockWise\") {\r\n\t\t\t\t\tif (newAngle < currentAngle) {\r\n\t\t\t\t\t\tthis.rotation = currentAngle - 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.rotationDirection == \"counterClockWise\") {\r\n\t\t\t\t\tif (newAngle > currentAngle) {\r\n\t\t\t\t\t\tthis.rotation = currentAngle + 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animate({ property: \"rotation\", to: newAngle }, duration, easing);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns hand's relative position on axis\r\n\t */\r\n\tpublic get currentPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\treturn renderer.angleToPosition(this.rotation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A current value clock hand is pointing to.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: any) {\r\n\t\tthis.showValue(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): any {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis clock hand is associated with.\r\n\t *\r\n\t * Hand's `value` relates to values on the Axis.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: Axis) {\r\n\t\tif (this.axis != axis) {\r\n\t\t\tthis._axis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.events.on(\"datavalidated\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"datarangechanged\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"dataitemsvalidated\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"propertychanged\", this.invalidate, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t\tif (axis) {\r\n\t\t\tlet chart: GaugeChart = <GaugeChart>axis.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tthis.rotation = chart.startAngle;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.parent = axis.renderer;\r\n\t\tthis.zIndex = 5;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): Axis {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers `value` accessor, so that Hand animates to new position, in case\r\n\t * value has changed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateValue() {\r\n\t\tthis.value = this.value;\r\n\t}\r\n\r\n\t/**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Connect clock hands with axes\r\n\t\t\tif ($type.hasValue(config.axis) && $type.isString(config.axis) && this.map.hasKey(config.axis)) {\r\n\t\t\t\tconfig.axis = this.map.getKey(config.axis);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ClockHand\"] = ClockHand;\r\n","/**\r\n * Module for building Gauge charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart, IRadarChartProperties, IRadarChartDataFields, IRadarChartAdapters, IRadarChartEvents, RadarChartDataItem } from \"./RadarChart\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { ClockHand } from \"../elements/ClockHand\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GaugeChartDataItem extends RadarChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GaugeChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GaugeChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartDataFields extends IRadarChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartProperties extends IRadarChartProperties { }\r\n\r\n/**\r\n * Defines events for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartEvents extends IRadarChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GaugeChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGaugeChartAdapters extends IRadarChartAdapters, IGaugeChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nexport class GaugeChart extends RadarChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGaugeChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGaugeChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGaugeChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGaugeChartEvents;\r\n\r\n\t/**\r\n\t * A list of [[ClockHand]] items displayed on this Gauge chart.\r\n\t */\r\n\tpublic hands: ListTemplate<ClockHand>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"GaugeChart\";\r\n\r\n\t\tthis.startAngle = 180;\r\n\t\tthis.endAngle = 360;\r\n\r\n\t\tthis.hands = new ListTemplate<ClockHand>(new ClockHand());\r\n\t\tthis.hands.events.on(\"inserted\", this.processHand, this, false);\r\n\r\n\t\tthis._disposers.push(new ListDisposer(this.hands));\r\n\t\tthis._disposers.push(this.hands.template);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Gauge chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a [[ClockHand]] when it is added to the chart.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processHand(event: IListEvents<ClockHand>[\"inserted\"]): void {\r\n\t\tlet hand: ClockHand = event.newValue;\r\n\t\tif (!hand.axis) {\r\n\t\t\thand.axis = this.xAxes.getIndex(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"hands\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"hands\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n","/**\r\n * Defines Percent Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem, LegendSettings } from \"../../charts/Legend\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { PercentChart } from \"../types/PercentChart\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PercentSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a slice label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a slice tick element.\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * A reference to a corresponding legend data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Custom settings for the legend item.\r\n\t * Not used, only added to sattisfy LegendDataItem\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic legendSettings: LegendSettings;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PercentSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds an `id` attribute the the slice element and returns its id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic uidAttr(): string {\r\n\t\treturn this.slice.uidAttr();\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param toValue   Target value for animation\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\r\n\t\treturn super.hide(duration, delay, 0, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tif (!noChangeValues) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setWorkingValue(\"value\", 0, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Category.\r\n\t *\r\n\t * @param value  Category\r\n\t */\r\n\tpublic set category(value: string) {\r\n\t\tthis.setProperty(\"category\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get category(): string {\r\n\t\treturn this.properties.category;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * A Tick element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): this[\"_tick\"] {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet tick = this.component.ticks.create();\r\n\t\t\tthis._tick = tick;\r\n\t\t\tthis.addSprite(tick);\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\ttick.parent = this.component.ticksContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.ticks.removeValue(tick);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\r\n\t\t\ttick.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * A Label element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): this[\"_label\"] {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._label = label;\r\n\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.component.labelsContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tlabel.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get slice(): this[\"_slice\"] {\r\n\t\tif (!this._slice) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet slice = component.slices.create();\r\n\t\t\tthis.addSprite(slice);\r\n\r\n\t\t\tthis._slice = slice;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tslice.parent = component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tcomponent.slices.removeValue(slice);\r\n\t\t\t}));\r\n\r\n\r\n\t\t\tslice.visible = this.visible;\r\n\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (component.itemsFocusable()) {\r\n\t\t\t\tif (!$type.hasValue(this.component.role)) {\r\n\t\t\t\t\tthis.component.role = \"menu\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.hasValue(slice.role)) {\r\n\t\t\t\t\tslice.role = \"menuitem\";\r\n\t\t\t\t}\r\n\t\t\t\tslice.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!$type.hasValue(this.component.role)) {\r\n\t\t\t\t\tthis.component.role = \"list\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.hasValue(slice.role)) {\r\n\t\t\t\t\tslice.role = \"listitem\";\r\n\t\t\t\t}\r\n\t\t\t\tslice.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (slice.focusable) {\r\n\t\t\t\tslice.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (slice.hoverable) {\r\n\t\t\t\tslice.events.on(\"over\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.on(\"out\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._slice;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (slice) be hidden in legend?\r\n\t *\r\n\t * @param value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Disabled in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t */\r\n\thiddenInLegend?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesProperties extends ISeriesProperties {\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Pattern set to apply to fills.\r\n\t * \r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\talignLabels?: boolean;\r\n\r\n\t/**\r\n\t * If set to `true` the chart will not show slices with zero values.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.7.9\r\n\t */\r\n\tignoreZeroValues?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PercentSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPercentSeriesAdapters extends ISeriesAdapters, IPercentSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nexport class PercentSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the slice elements for the series.\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * Defines type of the tick elements for the series.\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * Defines type of the label elements for the series.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: PercentChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPercentSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPercentSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPercentSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPercentSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PercentSeriesDataItem;\r\n\r\n\t/**\r\n\t * Container slice elements are put in.\r\n\t */\r\n\tpublic slicesContainer: Container;\r\n\r\n\t/**\r\n\t * Container tick elements are put in.\r\n\t */\r\n\tpublic ticksContainer: Container;\r\n\r\n\t/**\r\n\t * Container label elements are put in.\r\n\t */\r\n\tpublic labelsContainer: Container;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _slices: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * List of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tick\"]>;\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_label\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PercentSeries\";\r\n\r\n\t\tthis._addAllDataItems = false;\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 1;\r\n\t\tthis.isMeasured = true;\r\n\t\tthis.calculatePercent = true;\r\n\r\n\t\tlet slicesContainer = this.createChild(Container);\r\n\t\tslicesContainer.shouldClone = false;\r\n\t\tslicesContainer.isMeasured = false;\r\n\t\tthis.slicesContainer = slicesContainer;\r\n\r\n\t\tlet ticksContainer = this.createChild(Container);\r\n\t\tticksContainer.shouldClone = false;\r\n\t\tticksContainer.isMeasured = false;\r\n\t\tticksContainer.layout = \"none\";\r\n\t\tthis.ticksContainer = ticksContainer;\r\n\r\n\t\tlet labelsContainer = this.createChild(Container);\r\n\t\tlabelsContainer.shouldClone = false;\r\n\t\tlabelsContainer.isMeasured = false;\r\n\t\tlabelsContainer.layout = \"none\";\r\n\t\tthis.labelsContainer = labelsContainer;\r\n\r\n\t\tthis.alignLabels = false;\r\n\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\t// Make all slices focusable\r\n\t\tthis.skipFocusThreshold = 50;\r\n\r\n\t\tlet defaultState = this.defaultState;\r\n\t\tdefaultState.transitionEasing = $ease.sinOut;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.itemReaderText = \"{category}: {value.percent.formatNumber('#.#')}%\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a slice element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Sprite();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a tick element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new Tick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sreates label element.\r\n\t *\r\n\t * @return label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new Label();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of slice elements for the series.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the slices. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.slices.template.stroke = am4core.color(\"#fff\");\r\n\t * series.slices.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.slices.template.stroke = am4core.color(\"#fff\");\r\n\t * series.slices.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"slices\": {\r\n\t *       \"stroke\": \"#fff\",\r\n\t *       \"strokeWidth\": 2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Slices\r\n\t */\r\n\tpublic get slices(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._slices) {\r\n\t\t\tlet slice = this.createSlice();\r\n\r\n\t\t\tslice.applyOnClones = true;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tthis.initSlice(slice);\r\n\r\n\t\t\tthis._slices = new ListTemplate(slice);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._slices));\r\n\t\t}\r\n\t\treturn this._slices;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of tick elements for the series. Ticks connect slice to its label.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.ticks.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.ticks.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"ticks\": {\r\n\t *       \"strokeWidth\": 2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Ticks\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tick\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\tthis.initTick(tick);\r\n\r\n\t\t\tthis._ticks = new ListTemplate(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of slice label elements for the series.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the labels. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.labels.template.fill = am4core.color(\"#c00\");\r\n\t * series.labels.template.fontSize = 20;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.labels.template.fill = am4core.color(\"#c00\");\r\n\t * series.labels.template.fontSize = 20;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"stroke\": \"#c00\",\r\n\t *       \"fontSize\": 20\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Labels\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_label\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tthis.initLabel(label);\r\n\r\n\t\t\tthis._labels = new ListTemplate(label);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PercentSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new slice element.\r\n\t *\r\n\t * @param sliceType  Type of the slice element\r\n\t * @return Slice\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\r\n\t}\r\n\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tlabel.text = \"{category}: {value.percent.formatNumber('#.0')}%\";\r\n\t\tlabel.isMeasured = false;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\tprotected initTick(label: this[\"_tick\"]) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\tthis.colors.reset();\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.reset();\r\n\t\t}\r\n\t\tsuper.validateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\r\n\t\tif (slice) {\r\n\t\t\tif (slice.fill == undefined) {\r\n\t\t\t\tif (this.patterns) {\r\n\t\t\t\t\tif (!$type.hasValue(slice.stroke)) {\r\n\t\t\t\t\t\tslice.stroke = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tslice.fill = this.patterns.next();\r\n\t\t\t\t\tif ($type.hasValue(slice.fillOpacity)) {\r\n\t\t\t\t\t\tslice.fill.backgroundOpacity = slice.fillOpacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (slice.stroke instanceof Color) {\r\n\t\t\t\t\t\tslice.fill.stroke = slice.stroke;\r\n\t\t\t\t\t\tslice.fill.fill = slice.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslice.fill = this.colors.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.colors.currentStep += this.colors.step;\r\n\t\t\t}\r\n\r\n\t\t\tif (slice.stroke == undefined) {\r\n\t\t\t\tslice.stroke = slice.fill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (slice) {\r\n\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\tif (bullet.fill == undefined) {\r\n\t\t\t\t\tbullet.fill = slice.fill;\r\n\t\t\t\t}\r\n\t\t\t\tif (bullet.stroke == undefined) {\r\n\t\t\t\t\tbullet.stroke = slice.stroke;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.updateLegendValue(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Arranges slice labels according to position settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tprotected arrangeLabels(dataItems: this[\"_dataItem\"][]): void {\r\n\t\tfor (let i = 0, len = dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = dataItems[i];\r\n\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\tif (label) {\r\n\r\n\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\tlabel.validate();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet lh = label.measuredHeight;\r\n\t\t\t\tif (!label.visible) {\r\n\t\t\t\t\tlh = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n\t\t\t\t\tlabel.y = -this.maxHeight / 2 + lh / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet nextLabel = this.getNextLabel(i + 1, dataItems);\r\n\r\n\t\t\t\tlet bottom: number = label.pixelY + lh;\r\n\r\n\t\t\t\tif (nextLabel) {\r\n\t\t\t\t\tif (nextLabel.y < bottom) {\r\n\t\t\t\t\t\tnextLabel.y = bottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected arrangeLabels2(dataItems: this[\"_dataItem\"][]): void {\r\n\r\n\t\tlet previousTop = this.maxHeight / 2;\r\n\r\n\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = dataItems[i];\r\n\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\tif (label) {\r\n\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\tlabel.validate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet lh = label.measuredHeight;\r\n\t\t\t\tif (!label.visible) {\r\n\t\t\t\t\tlh = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i == dataItems.length - 1) {\r\n\t\t\t\t\tpreviousTop += lh / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (label.pixelY + lh > previousTop) {\r\n\t\t\t\t\tlabel.y = previousTop - lh;\r\n\t\t\t\t\tpreviousTop = label.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next label according to `index`.\r\n\t *\r\n\t * @param index      Current index\r\n\t * @param dataItems  Data items\r\n\t * @return Label element\r\n\t */\r\n\tprotected getNextLabel(index: number, dataItems: this[\"_dataItem\"][]): this[\"_label\"] {\r\n\t\tif (dataItems.length >= index) {\r\n\t\t\tlet nextDataItem: this[\"_dataItem\"] = dataItems[index];\r\n\t\t\tif (nextDataItem) {\r\n\t\t\t\tif (nextDataItem.label) {\r\n\t\t\t\t\tif (nextDataItem.visible) {\r\n\t\t\t\t\t\treturn nextDataItem.label;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn this.getNextLabel(index + 1, dataItems);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn this.getNextLabel(index + 1, dataItems);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t *\r\n\t * @param value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker    Container\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\t$iter.each(marker.children.iterator(), (child) => {\r\n\t\t\tlet slice: this[\"_slice\"] = dataItem.slice;\r\n\r\n\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tchild.fill = slice.fill;\r\n\t\t\tchild.stroke = slice.stroke;\r\n\t\t\tchild.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tif (child.fill == undefined) {\r\n\t\t\t\tchild.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\t\tlegendDataItem.color = slice.fill;\r\n\t\t\tlegendDataItem.colorOrig = slice.fill;\r\n\r\n\t\t\tchild.addDisposer(slice.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\r\n\t\t\t\t\tchild.__disabled = false;\r\n\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = slice.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\t\t\tlegendDataItem.color = slice.fill;\r\n\t\t\t\t\tlegendDataItem.colorOrig = slice.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = slice.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullets when slice's size changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceScale(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tlet slice: this[\"_slice\"] = event.target;\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>slice.dataItem;\r\n\t\tif(dataItem && dataItem.bullets){\r\n\t\t\t$iter.each(dataItem.bullets.iterator(), (a) => {\r\n\t\t\t\tlet value = a[1];\r\n\t\t\t\tthis.positionBullet(value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullet and labels when slice moves.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceMove(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[PercentSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.slices.template.copyFrom(source.slices.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.colors = source.colors.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * This will ensure that labels never overlap with each other.\r\n\t *\r\n\t * Arranging labels into columns makes them more readble, and better user\r\n\t * experience.\r\n\t *\r\n\t * If set to `false` labels will be positioned at `label.radius` distance,\r\n\t * and may, in some cases, overlap.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Align labels?\r\n\t */\r\n\tpublic set alignLabels(value: boolean) {\r\n\t\tthis.setAlignLabels(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Align labels?\r\n\t */\r\n\tpublic get alignLabels(): boolean {\r\n\t\treturn this.getPropertyValue(\"alignLabels\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tthis.setPropertyValue(\"alignLabels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the chart will not show slices with zero values.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.7.9\r\n\t * @param  value  Ignore zero values\r\n\t */\r\n\tpublic set ignoreZeroValues(value: boolean) {\r\n\t\tthis.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore zero values\r\n\t */\r\n\tpublic get ignoreZeroValues(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreZeroValues\");\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"]) {\r\n\t\tif (dataItem) {\r\n\t\t\tlet legendDataItem = dataItem.legendDataItem;\r\n\t\t\tlet legendSettings = dataItem.legendSettings;\r\n\r\n\t\t\tif (legendDataItem && legendSettings) {\r\n\r\n\t\t\t\tif (legendSettings) {\r\n\t\t\t\t\tif (legendSettings.labelText) {\r\n\t\t\t\t\t\tlegendDataItem.label.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlegendDataItem.label.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.valueText) {\r\n\t\t\t\t\t\tlegendDataItem.valueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tlegendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable labels and ticks.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof PercentSeries) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\r\n\t\t\tlet labelState = target.labels.template.states.create(stateId);\r\n\t\t\tlabelState.properties.disabled = true;\r\n\r\n\t\t\tlet tickState = target.ticks.template.states.create(stateId);\r\n\t\t\ttickState.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Percent chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { PercentSeries, PercentSeriesDataItem } from \"../series/PercentSeries\";\r\nimport { Legend } from \"../Legend\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PercentChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PercentChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PercentChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PercentChart]].\r\n */\r\nexport interface IPercentChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PercentChart]]\r\n */\r\nexport interface IPercentChartProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[PercentChart]].\r\n */\r\nexport interface IPercentChartEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PercentChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPercentChartAdapters extends ISerialChartAdapters, IPercentChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IPercentChartEvents} for a list of available Events\r\n * @see {@link IPercentChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for Pie chart documentation\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for Sliced chart documentation\r\n */\r\nexport class PercentChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IPercentChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPercentChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPercentChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPercentChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PercentSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentChart\";\r\n\r\n\t\tthis.align = \"none\";\r\n\t\tthis.valign = \"none\";\r\n\r\n\t\t// so that the chart is always drawn, even the legend wants all the space\r\n\t\tthis.chartContainer.minHeight = 50;\r\n\t\tthis.chartContainer.minWidth = 50;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tthis.feedLegend();\r\n\t}\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\t$iter.each(series.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\tif (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\t\t\tlegendData.push(<PercentSeriesDataItem>dataItem);\r\n\t\t\t\t\t\t\tif(!dataItem.legendSettings){\r\n\t\t\t\t\t\t\t\tdataItem.legendSettings = series.legendSettings;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"category\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PercentSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PercentSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.labels.template.text = \"{category}\";\r\n\t\t\tlegend.valueLabels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n\r\n\t\t\tlegend.itemContainers.template.events.on(\"over\", (event) => {\r\n\t\t\t\tlet percentSeriesDataItem: PercentSeriesDataItem = <PercentSeriesDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tif (percentSeriesDataItem.visible && !percentSeriesDataItem.isHiding) {\r\n\t\t\t\t\tlet slice = percentSeriesDataItem.slice;\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tslice.dispatchImmediately(\"over\");\t\t\t\t\t\r\n\t\t\t\t\tslice.isHover = true;\t\t\t\t\r\n\t\t\t\t\tslice.interactions.isRealHover = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlegend.itemContainers.template.events.on(\"out\", (event) => {\r\n\t\t\t\tlet percentSeriesDataItem: PercentSeriesDataItem = <PercentSeriesDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tlet slice = percentSeriesDataItem.slice;\r\n\t\t\t\tslice.dispatchImmediately(\"out\");\r\n\t\t\t\tslice.isHover = false;\t\t\t\t\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\nregistry.registeredClasses[\"PercentChart\"] = PercentChart;\r\nregistry.registeredClasses[\"PercentChartDataItem\"] = PercentChartDataItem;\r\n","/**\r\n * Pie tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { PieSeries } from \"../series/PieSeries\"\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PieTick]].\r\n */\r\nexport interface IPieTickProperties extends ITickProperties { }\r\n\r\n/**\r\n * Defines events for [[PieTick]].\r\n */\r\nexport interface IPieTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieTickAdapters extends ITickAdapters, IPieTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\r\nexport class PieTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<AxisLabelCircular>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<Slice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieTick\";\r\n\t\tthis.element = this.paper.add(\"polyline\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: Slice = this.slice;\r\n\t\tlet label = this.label;\r\n\r\n\t\tlet series = <PieSeries>slice.dataItem.component;\r\n\r\n\t\tif (slice && slice.radius > 0 && label && label.text) {\r\n\t\t\tlet x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\r\n\t\t\tlet y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\r\n\r\n\t\t\tlet x1: number;\r\n\t\t\tlet y1: number;\r\n\r\n\t\t\tlet x2: number;\r\n\t\t\tlet y2: number;\r\n\r\n\t\t\tif (series.alignLabels) {\r\n\t\t\t\tx1 = label.pixelX - this.length;\r\n\t\t\t\ty1 = label.pixelY;\r\n\r\n\t\t\t\tx2 = label.pixelX;\r\n\t\t\t\ty2 = y1;\r\n\r\n\t\t\t\tif (label.horizontalCenter == \"right\") {\r\n\t\t\t\t\tx1 += 2 * this.length;\r\n\t\t\t\t\tx2 = x1 - this.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst r = label.pixelRadius(slice.radius);\r\n\r\n\t\t\t\tx1 = x0 + r * slice.ix;\r\n\t\t\t\ty1 = y0 + r * slice.iy;\r\n\r\n\t\t\t\tx2 = x1;\r\n\t\t\t\ty2 = y1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.attr({ \"points\": [x0, y0, x1, y1, x2, y2] });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Slice element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: Slice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Slice\r\n\t */\r\n\tpublic get slice(): Slice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Label element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: AxisLabelCircular) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): AxisLabelCircular {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieTick\"] = PieTick;\r\n","/**\r\n * Defines Pie Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { PieTick } from \"../elements/PieTick\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { PieChart } from \"../types/PieChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: Slice;\r\n\r\n\t/**\r\n\t * A reference to a slice label element.\r\n\t */\r\n\tpublic _label: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * A reference to a slice tick element.\r\n\t */\r\n\tpublic _tick: PieTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeriesDataItem\";\r\n\r\n\t\tthis.values.radiusValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Slice's radius, if other than default.\r\n\t *\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radiusValue(value: number) {\r\n\t\tthis.setValue(\"radiusValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radiusValue(): number {\r\n\t\treturn this.values.radiusValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param toValue   Target value for animation\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\treturn super.hide(duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\treturn super.show(duration, delay, [\"value\", \"radiusValue\"]);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesDataFields extends IPercentSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds item's radius value.\r\n\t */\r\n\tradiusValue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Outer radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Start angle for the series' slices in degrees. (0-360)\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle for the series' slices in degrees. (0-360)\r\n\t */\r\n\tendAngle?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieSeriesAdapters extends IPercentSeriesAdapters, IPieSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n\r\n\tpublic _slice: Slice;\r\n\r\n\tpublic _tick: PieTick;\r\n\r\n\tpublic _label: AxisLabelCircular;\r\n\r\n\tpublic _chart: PieChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPieSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PieSeriesDataItem;\r\n\r\n\t/**\r\n\t * Holds current angle for the next slice to start on.\r\n\t */\r\n\tprotected _currentStartAngle: number;\r\n\r\n\t/**\r\n\t * Data items that fall to the left side of the pie.\r\n\t */\r\n\tprotected _leftItems: this[\"_dataItem\"][];\r\n\r\n\t/**\r\n\t * Data items that fall to the right side of the pie.\r\n\t */\r\n\tprotected _rightItems: this[\"_dataItem\"][];\r\n\r\n\t/**\r\n\t * [_arcRect description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _arcRect: IRectangle;\r\n\r\n\t/**\r\n\t * [_maxRadiusPercent description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxRadiusPercent: number;\r\n\r\n\t/**\r\n\t * [_pixelRadius description]\r\n\t *\r\n\t * @ignore this is set by pie chart, not by user\r\n\t */\r\n\tprotected _pixelRadius: number;\r\n\r\n\t/**\r\n\t * [_pixelInnerRadius description]\r\n\t *\r\n\t * @ignore this is set by pie chart, not by user\r\n\t */\r\n\tprotected _pixelInnerRadius: number;\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _startAngleInternal: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _endAngleInternal: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PieSeries\";\r\n\r\n\t\tthis.alignLabels = true;\r\n\t\t//this.startAngle = -90;\r\n\t\t//this.endAngle = 270;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.labels.template.radius = percent(5);\r\n\r\n\t\tthis.addDisposer(this.labels.template.events.on(\"enabled\", this.invalidate, this, false));\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * creates slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Slice();\r\n\t}\r\n\r\n\t/**\r\n\t * creates tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new PieTick();\r\n\t}\r\n\r\n\t/**\r\n\t * creates label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new AxisLabelCircular();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PieSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits slice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.scale = 1.05;\r\n\r\n\t\tlet defaultState = slice.defaultState;\r\n\t\tdefaultState.properties.shiftRadius = 0;\r\n\r\n\t\tslice.togglable = true;\r\n\r\n\t\tslice.events.on(\"toggled\", (event) => {\r\n\t\t\tevent.target.hideTooltip();\r\n\r\n\t\t\t// The following takes care of removing hover on subsequent click of\r\n\t\t\t// a slice\r\n\t\t\tif (event.target.interactions.lastHitPointer\r\n\t\t\t\t&& event.target.interactions.lastHitPointer.touch\r\n\t\t\t\t&& !event.target.isActive) {\r\n\t\t\t\tevent.target.isHover = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet activeState = slice.states.create(\"active\");\r\n\t\tactiveState.properties.shiftRadius = 0.10;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis._leftItems = [];\r\n\t\tthis._rightItems = [];\r\n\r\n\t\tthis._currentStartAngle = this.startAngle;\r\n\t\tthis._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\r\n\r\n\t\tthis._maxRadiusPercent = 0;\r\n\t\tfor (let i = this.startIndex; i < this.endIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet radiusValuePercent = dataItem.values.radiusValue.percent;\r\n\t\t\tif (radiusValuePercent > this._maxRadiusPercent) {\r\n\t\t\t\tthis._maxRadiusPercent = radiusValuePercent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tif (this.startAngle > this.endAngle) {\r\n\t\t\t\tthis._rightItems.reverse();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._leftItems.reverse()\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._rightItems.sort((a, b) => {\r\n\t\t\t\tlet aAngle = (a.slice.middleAngle + 360) % 360;\r\n\t\t\t\tlet bAngle = (b.slice.middleAngle + 360) % 360;\r\n\r\n\t\t\t\tif (aAngle > 270) {\r\n\t\t\t\t\taAngle -= 360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (bAngle > 270) {\r\n\t\t\t\t\tbAngle -= 360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (aAngle < bAngle) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (aAngle > bAngle) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis._leftItems.sort((a, b) => {\r\n\r\n\t\t\t\tlet aAngle = (a.slice.middleAngle + 360) % 360;\r\n\t\t\t\tlet bAngle = (b.slice.middleAngle + 360) % 360;\r\n\r\n\t\t\t\tif (aAngle < bAngle) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (aAngle > bAngle) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.arrangeLabels(this._rightItems);\r\n\t\t\tthis.arrangeLabels2(this._rightItems);\r\n\t\t\tthis.arrangeLabels(this._leftItems);\r\n\t\t\tthis.arrangeLabels2(this._leftItems);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tif (this.pixelRadius > 0) {\r\n\r\n\t\t\tif (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\r\n\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\t// SLICE\r\n\t\t\tlet slice: Slice = dataItem.slice;\r\n\t\t\tslice.radius = this.pixelRadius;\r\n\r\n\t\t\tif ($type.isNumber(dataItem.radiusValue)) {\r\n\t\t\t\tslice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n\t\t\t}\r\n\t\t\tif (!(slice.innerRadius instanceof Percent)) {\r\n\t\t\t\tslice.innerRadius = this.pixelInnerRadius;\r\n\t\t\t}\r\n\t\t\tslice.startAngle = this._currentStartAngle;\r\n\r\n\t\t\tslice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n\r\n\t\t\t// LABEL\r\n\t\t\tif (!this.labels.template.disabled) {\r\n\t\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\t\tlet tick = dataItem.tick;\r\n\t\t\t\ttick.slice = slice;\r\n\t\t\t\ttick.label = label;\r\n\r\n\t\t\t\tlet normalizedMiddleAngle: number = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n\r\n\t\t\t\tlet point: IPoint;\r\n\r\n\t\t\t\tif (this.alignLabels) {\r\n\t\t\t\t\tlet labelRadius = label.pixelRadius(slice.radius);\r\n\t\t\t\t\tlet x: number = tick.length + labelRadius;\r\n\t\t\t\t\tlabel.dx = 0;\r\n\t\t\t\t\tlabel.dy = 0;\r\n\t\t\t\t\tlabel.verticalCenter = \"middle\";\r\n\t\t\t\t\tlet arcRect = this._arcRect;\r\n\t\t\t\t\t// right half\r\n\t\t\t\t\tif (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n\t\t\t\t\t\tx += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n\t\t\t\t\t\tlabel.horizontalCenter = \"left\";\r\n\t\t\t\t\t\tthis._rightItems.push(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// left half\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tx -= arcRect.x * this.pixelRadius;\r\n\t\t\t\t\t\tlabel.horizontalCenter = \"right\";\r\n\t\t\t\t\t\tthis._leftItems.push(dataItem);\r\n\t\t\t\t\t\tx *= -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet distance = slice.radius + tick.length + labelRadius;\r\n\t\t\t\t\tpoint = { x: x, y: slice.iy * distance };\r\n\t\t\t\t\tlabel.moveTo(point);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet depth = (<any>slice)[\"depth\"];\r\n\t\t\t\t\tif (!$type.isNumber(depth)) {\r\n\t\t\t\t\t\tdepth = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentStartAngle += slice.arc;\r\n\r\n\t\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\t\tsuper.validateDataElement(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius for the series' slices in pixels or [[Percent]].\r\n\t *\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t * @ignore\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn this._pixelRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set pixelRadius(value: number) {\r\n\t\tif (this._pixelRadius != value) {\r\n\t\t\tthis._pixelRadius = value;\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pixel inner radius\r\n\t * @ignore\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn this._pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set pixelInnerRadius(value: number) {\r\n\t\tif (this._pixelInnerRadius != value) {\r\n\t\t\tthis._pixelInnerRadius = value;\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Redo so that users can set it\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle for the series' slices in degrees. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\tlet startAngle = this.getPropertyValue(\"startAngle\");\r\n\t\tif ($type.isNumber(startAngle)) {\r\n\t\t\treturn startAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._startAngleInternal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * End angle for the series' slices in degrees. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\tlet endAngle = this.getPropertyValue(\"endAngle\");\r\n\t\tif ($type.isNumber(endAngle)) {\r\n\t\t\treturn endAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._endAngleInternal;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: Slice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tlet angle = slice.startAngle + slice.arc * locationX;\r\n\r\n\t\tbullet.x = locationY * slice.radius * $math.cos(angle);\r\n\t\tbullet.y = locationY * slice.radiusY * $math.sin(angle);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Repositions bullet and labels when slice moves.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceMove(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (!this.alignLabels) {\r\n\r\n\t\t\tlet slice = event.target;\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>slice.dataItem;\r\n\t\t\t// moving textelement, as label dx and dy are already employed for aligning\r\n\t\t\t//@labeltodo\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet label = dataItem.label;\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tlabel.dx = label.fdx + slice.dx + slice.pixelX;\r\n\t\t\t\t\tlabel.dy = label.fdy + slice.dy + slice.pixelY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\treturn $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\r\n\t\t}\r\n\r\n\t\treturn $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\r\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n","/**\r\n * Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, IPercentChartProperties, IPercentChartDataFields, IPercentChartAdapters, IPercentChartEvents, PercentChartDataItem } from \"./PercentChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { PieSeries } from \"../series/PieSeries\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieChartDataItem extends PercentChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieChart]].\r\n */\r\nexport interface IPieChartDataFields extends IPercentChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PieChart]]\r\n */\r\nexport interface IPieChartProperties extends IPercentChartProperties {\r\n\r\n\t/**\r\n\t * Outer radius of the pie.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Relative inner radius (0-1).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle pie starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle pie ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieChart]].\r\n */\r\nexport interface IPieChartEvents extends IPercentChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieChartAdapters extends IPercentChartAdapters, IPieChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Pie chart.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"PieSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChartEvents} for a list of available Events\r\n * @see {@link IPieChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IPieChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PieSeries;\r\n\r\n\tprotected _chartPixelRadius:number;\r\n\r\n\tprotected _chartPixelInnerRadius:number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.innerRadius = 0;\r\n\t\tthis.radius = percent(80);\r\n\t\tthis.align = \"none\";\r\n\t\tthis.valign = \"none\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.isMeasured = true;\r\n\t\tseriesContainer.valign = \"middle\";\r\n\t\tseriesContainer.align = \"center\";\r\n\t\tseriesContainer.layout = \"absolute\";\r\n\t\tseriesContainer.width = undefined;\r\n\t\tseriesContainer.height = undefined;\r\n\r\n\t\t// so that the pie is always drawn, even the legend wants all the space\r\n\t\tthis.chartContainer.minHeight = 50;\r\n\t\tthis.chartContainer.minWidth = 50;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.updateRadius, this, false); // need this for the chart to change radius if legend is removed/disabled\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pie chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the chart, causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateRadius();\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<PieSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tthis._chartPixelRadius = undefined;\r\n\t\tthis.updateSeriesAngles();\r\n\t}\r\n\r\n\tprotected updateSeriesAngles(){\r\n\t\tthis.series.each((series)=>{\r\n\t\t\tseries._startAngleInternal = this.startAngle;\r\n\t\t\tseries._endAngleInternal = this.endAngle;\r\n\t\t\t//series.defaultState.properties.startAngle = this.startAngle;\r\n\t\t\t//series.defaultState.properties.endAngle = this.endAngle;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates pie's radius, based on a number of criteria.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRadius(): void {\r\n\r\n\t\tlet chartCont = this.chartContainer;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tinnerRect = $math.getArcRect(this.startAngle, this.endAngle, innerRadius.value);\r\n\t\t}\r\n\t\t// @todo handle this when innerRadius set in pixels (do it for radar also)\r\n\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(chartCont.innerWidth / rect.width, chartCont.innerHeight / rect.height);\r\n\r\n\t\tif(!$type.isNumber(maxRadius)){\r\n\t\t\tmaxRadius = 0;\r\n\t\t}\r\n\r\n\t\tlet chartRadius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n\r\n\t\tlet chartPixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, maxRadius);\r\n\r\n\t\tlet seriesRadius = (chartRadius - chartPixelInnerRadius) / this.series.length;\r\n\r\n\t\tif(chartRadius != this._chartPixelRadius || chartPixelInnerRadius != this._chartPixelInnerRadius){\r\n\t\t\tthis._chartPixelRadius = chartRadius;\r\n\t\t\tthis._chartPixelInnerRadius = chartPixelInnerRadius;\r\n\r\n\t\t\t//@todo: make it possible to set series radius in percent\r\n\t\t\t$iter.each($iter.indexed(this.series.iterator()), (a) => {\r\n\t\t\t\tlet i = a[0];\r\n\t\t\t\tlet series = a[1];\r\n\r\n\t\t\t\tlet radius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.radius, chartRadius - chartPixelInnerRadius);\r\n\t\t\t\tlet innerRadius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.innerRadius, chartRadius - chartPixelInnerRadius);\r\n\r\n\t\t\t\tif(!$type.isNumber(radius)){\r\n\t\t\t\t\tradius = chartPixelInnerRadius + seriesRadius * (i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif(!$type.isNumber(innerRadius)){\r\n\t\t\t\t\tinnerRadius = chartPixelInnerRadius + seriesRadius * i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseries.pixelRadius = radius;\r\n\t\t\t\tseries.pixelInnerRadius = innerRadius;\r\n\t\t\t});\r\n\r\n\r\n\t\t\tthis.seriesContainer.definedBBox = { x: chartRadius * rect.x, y: chartRadius * rect.y, width: chartRadius * rect.width, height: chartRadius * rect.height };\r\n\t\t\tthis.seriesContainer.invalidateLayout();\r\n\r\n\t\t\tthis.bulletsContainer.x = this.seriesContainer.x;\r\n\t\t\tthis.bulletsContainer.y = this.seriesContainer.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets radius of the pie chart.\r\n\t *\r\n\t * Setting to a number will mean a fixed pixel radius.\r\n\t *\r\n\t * Setting to an instance of [[Percent]] will mean a relative radius to\r\n\t * available space.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.radius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.radius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // Set pie chart to be at 50% of the available space\r\n\t *   \"radius\": \"50%\"\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 80%\r\n\t * @param value  Radius (px or relative)\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif(this.setPercentProperty(\"radius\", value, true, false, 10, false)){\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or relative)\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets relative inner radius (to create a donut chart).\r\n\t *\r\n\t * Setting to a number will mean a fixed pixel radius.\r\n\t *\r\n\t * Setting to an instance of [[Percent]] will mean a relative radius to\r\n\t * available space.\r\n\t *\r\n\t * NOTE: it's not related to `radius`.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.innerRadius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.innerRadius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // Set pie chart to be at 50% of the available space\r\n\t *   \"innerRadius\": \"50%\"\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Relative inner radius (0-1)\r\n\t * @todo Setting things like `innerRadius` modifies `slice.radius` and it then looks like it is not the same value as in default state\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative inner radius (0-1)\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PieSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PieSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Pie circle. (degrees)\r\n\t *\r\n\t * Normally, a pie chart begins (the left side of the first slice is drawn)\r\n\t * at the top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the first slice be drawn to the right.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set to those lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * NOTE: This setting is not supported in a 3D pie chart.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tif(this.setPropertyValue(\"startAngle\", value)){\r\n\t\t\tthis.updateRadius();\r\n\t\t\tthis.updateSeriesAngles()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the Pie circle. (degrees)\r\n\t *\r\n\t * Normally, a pie chart ends (the right side of the last slice is drawn)\r\n\t * at the top center. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to change this setting.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set to those lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * NOTE: This setting is not supported in a 3D pie chart.\r\n\t *\r\n\t * @default 270\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tif(this.setPropertyValue(\"endAngle\", value)){\r\n\t\t\tthis.updateRadius();\r\n\t\t\tthis.updateSeriesAngles()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart\"] = PieChart;\r\nregistry.registeredClasses[\"PieChartDataItem\"] = PieChartDataItem;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { PieSeries, PieSeriesDataItem, IPieSeriesDataFields, IPieSeriesProperties, IPieSeriesAdapters, IPieSeriesEvents } from \"../series/PieSeries\";\r\nimport { PieChart3D } from \"../types/PieChart3D\";\r\nimport { Slice3D } from \"../../core/elements/3d/Slice3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieSeries3DDataItem extends PieSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines type of the slice represented by this data item.\r\n\t */\r\n\tpublic _slice: Slice3D;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieSeries3D;\r\n\r\n\t/**\r\n\t * @todo Remove?\r\n\t * @deprecated\r\n\t */\r\n\tpublic component: PieSeries3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeries3DDataItem\";\r\n\r\n\t\tthis.values.depthValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Slice depth (height).\r\n\t *\r\n\t * @param value  Depth\r\n\t */\r\n\tpublic set depthValue(value: number) {\r\n\t\tthis.setValue(\"depthValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth\r\n\t */\r\n\tpublic get depthValue(): number {\r\n\t\treturn this.values[\"depthValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DDataFields extends IPieSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds 3D slice depth (height).\r\n\t */\r\n\tdepthValue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DProperties extends IPieSeriesProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the pie slice in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the view point of the 3D pie.\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DEvents extends IPieSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieSeries3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieSeries3DAdapters extends IPieSeriesAdapters, IPieSeries3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a slice series on a 3D pie chart.\r\n *\r\n * @see {@link IPieSeries3DEvents} for a list of available Events\r\n * @see {@link IPieSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class PieSeries3D extends PieSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPieSeries3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieSeries3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieSeries3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieSeries3DEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PieSeries3DDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: PieChart3D;\r\n\r\n\tpublic _slice: Slice3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeries3D\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PieSeries3DDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * creates slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Slice3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: PieSeries3DDataItem): void {\r\n\r\n\t\tlet slice: Slice3D = <Slice3D>dataItem.slice;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tif (!$type.isNumber(depth)) {\r\n\t\t\tdepth = this.chart.depth;\r\n\t\t}\r\n\r\n\t\tlet depthPercent: number = dataItem.values.depthValue.percent;\r\n\t\tif (!$type.isNumber(depthPercent)) {\r\n\t\t\tdepthPercent = 100;\r\n\t\t}\r\n\r\n\t\tslice.depth = depthPercent * depth / 100;\r\n\r\n\t\tlet angle: number = this.angle;\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = this.chart.angle;\r\n\t\t}\r\n\r\n\t\tslice.angle = angle;\r\n\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\r\n\t\tfor (let i = this._workingStartIndex; i < this._workingEndIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet slice: Slice3D = dataItem.slice;\r\n\r\n\t\t\tconst startAngle = slice.startAngle;\r\n\t\t\t// find quarter\r\n\t\t\t//q0 || q1\r\n\t\t\tif ((startAngle >= -90 && startAngle < 90)) {\r\n\t\t\t\tslice.toFront();\r\n\t\t\t}\r\n\t\t\t//q2 || q3\r\n\t\t\telse if ((startAngle >= 90)) {\r\n\t\t\t\tslice.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (height) of the pie slice in pixels.\r\n\t *\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the view point of the 3D pie. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice = dataItem.slice;\r\n\r\n\t\tbullet.y = bullet.pixelY - slice.depth;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries3D\"] = PieSeries3D;\r\nregistry.registeredClasses[\"PieSeries3DDataItem\"] = PieSeries3DDataItem;\r\n","/**\r\n * 3D Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { PieChart, IPieChartProperties, IPieChartDataFields, IPieChartAdapters, IPieChartEvents, PieChartDataItem } from \"./PieChart\";\r\nimport { PieSeries3D } from \"../series/PieSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieChart3DDataItem extends PieChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieChart3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DDataFields extends IPieChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DProperties extends IPieChartProperties {\r\n\r\n\t/**\r\n\t * Pie's \"depth\" or \"height\" in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Pie's angle at which we are looking at it. (degrees)\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DEvents extends IPieChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieChart3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieChart3DAdapters extends IPieChartAdapters, IPieChart3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nexport class PieChart3D extends PieChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IPieChart3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieChart3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieChart3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieChart3DEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PieSeries3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart3D\";\r\n\r\n\t\tthis.depth = 20;\r\n\t\tthis.angle = 10;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the 3D pie in pixels.\r\n\t *\r\n\t * This will determine \"height\" of the pie.\r\n\t *\r\n\t * @default 20\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tif (this.setPropertyValue(\"depth\", value)) {\r\n\t\t\tthis.invalidateDataUsers();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n\t *\r\n\t * @default 10\r\n\t * @param value  Angle (degrees)\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tvalue = $math.fitToRange(value, 0, 90);\r\n\t\tif (this.setPropertyValue(\"angle\", value)) {\r\n\t\t\tthis.invalidateDataUsers();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle (degrees)\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PieSeries3D();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n","/**\r\n * Sliced chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, IPercentChartProperties, IPercentChartDataFields, IPercentChartAdapters, IPercentChartEvents, PercentChartDataItem } from \"./PercentChart\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SlicedChartDataItem extends PercentChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SlicedChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SlicedChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SlicedChart]].\r\n */\r\nexport interface ISlicedChartDataFields extends IPercentChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SlicedChart]]\r\n */\r\nexport interface ISlicedChartProperties extends IPercentChartProperties { }\r\n\r\n/**\r\n * Defines events for [[SlicedChart]].\r\n */\r\nexport interface ISlicedChartEvents extends IPercentChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SlicedChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISlicedChartAdapters extends IPercentChartAdapters, ISlicedChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class SlicedChart extends PercentChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ISlicedChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISlicedChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISlicedChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISlicedChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: FunnelSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SlicedChart\";\r\n\r\n\t\tthis.seriesContainer.layout = \"horizontal\";\r\n\r\n\t\tthis.padding(15, 15, 15, 15);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sliced chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the chart, causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\r\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n","/**\r\n * FlowDiagramNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, AMEvent, visualProperties, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { FlowDiagram, FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $string from \"../../core/utils/String\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendSettings, LegendDataItem } from \"../Legend\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Name of the node.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * Sum of all incomming+outgoing link values\r\n\t */\r\n\ttotal?: number;\r\n\r\n\t/**\r\n\t * Sum of all incoming link values\r\n\t */\r\n\ttotalIncoming?: number;\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values\r\n\t */\r\n\ttotalOutgoing?: number;\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t */\r\n\tcolor?: Color;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramNodeAdapters extends IContainerAdapters, IFlowDiagramNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Flow Diagram.\r\n *\r\n * A Flow node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[FlowLink]] elements.\r\n *\r\n * @see {@link IFlowDiagramNodeEvents} for a list of available events\r\n * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramNode extends Container {\r\n\r\n\t/**\r\n\t * total ajusted taken in mind chart.minNodeSize\r\n\t */\r\n\tpublic adjustedTotal: number;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramNodeEvents;\r\n\r\n\t/**\r\n\t * A list of data items of the items coming in from another node, one level\r\n\t * up.\r\n\t *\r\n\t * These are what ingoing links are build out of.\r\n\t */\r\n\tprotected _incomingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A list of data items of the items going out of the node.\r\n\t *\r\n\t * These are what outgoing links are build out of.\r\n\t */\r\n\tprotected _outgoingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of incoming items.\r\n\t */\r\n\tprotected _incomingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of outgoing items.\r\n\t */\r\n\tprotected _outgoingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: FlowDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[FlowDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this node.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramNode\";\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tnew InterfaceColorSet();\r\n\r\n\t\tthis.draggable = true;\r\n\t\tthis.inert = true;\r\n\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.events.on(\"positionchanged\", this.invalidateLinks, this, false);\r\n\t\tthis.events.on(\"sizechanged\", this.invalidateLinks, this, false);\r\n\t\t//this.events.on(\"hit\", this.handleHit, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleHit(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tif (this.isHidden || this.isHiding) {\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden node.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t\tdataItem.link.show();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t\tdataItem.link.show();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides node.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet animation = super.hide(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t\tdataItem.link.hide();\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t\tdataItem.link.hide();\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Marks node as invalid, for redrawal in the next update cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif(!this.isDisposed()){\r\n\t\t\tsuper.validate();\r\n\t\t\tthis.invalidateLinks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\r\n\t\tthis.outgoingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"fromNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.fromNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.incomingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"toNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.toNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * List of incoming items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return Incoming items\r\n\t */\r\n\tpublic get incomingDataItems(): List<this[\"_dataItem\"]> {\r\n\t\tif (!this._incomingDataItems) {\r\n\t\t\tlet incomingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\tincomingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._incomingSorted = this._incomingDataItems.iterator();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._incomingDataItems = incomingDataItems;\r\n\t\t}\r\n\t\treturn this._incomingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * List of outgoing items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return Outgoing items\r\n\t */\r\n\tpublic get outgoingDataItems(): List<FlowDiagramDataItem> {\r\n\t\tif (!this._outgoingDataItems) {\r\n\t\t\tlet outgoingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\toutgoingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._outgoingSorted = this._outgoingDataItems.iterator();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._outgoingDataItems = outgoingDataItems;\r\n\t\t}\r\n\t\treturn this._outgoingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * A name of the node.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incoming+outgoing link values\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set total(value: number) {\r\n\t\tthis.setPropertyValue(\"total\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get total(): number {\r\n\t\treturn this.getPropertyValue(\"total\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incomming link values.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set totalIncoming(value: number) {\r\n\t\tthis.setPropertyValue(\"totalIncoming\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get totalIncoming(): number {\r\n\t\treturn this.getPropertyValue(\"totalIncoming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set totalOutgoing(value: number) {\r\n\t\tthis.setPropertyValue(\"totalOutgoing\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get totalOutgoing(): number {\r\n\t\treturn this.getPropertyValue(\"totalOutgoing\");\r\n\t}\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setColorProperty(\"color\", value);\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.fill = value;\r\n\t\t}\r\n\t\tthis.fill = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.getPropertyValue(\"color\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\t\tcolumn.stroke = this.fill;\r\n\r\n\t\tcolumn.copyFrom(<any>this);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramNode\"] = FlowDiagramNode;\r\n","/**\r\n * FlowDiagramLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t */\r\n\tcolorMode?: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\";\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n\r\n\t/**\r\n\t * [maskBullets description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [tooltipLocation description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttooltipLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramLinkAdapters extends IContainerAdapters, IFlowDiagramLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Flow Diagram.\r\n *\r\n * @see {@link IFlowDiagramLinkEvents} for a list of available events\r\n * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramLink extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t */\r\n\tprotected _gradient: LinearGradient;\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Link sprite\r\n\t */\r\n\tpublic link: Sprite;\r\n\r\n\t/**\r\n\t * Bullets mask spite\r\n     */\r\n\tprotected _bulletsMask: Sprite;\r\n\r\n\t/**\r\n\t * Bullets container\r\n     */\r\n\tprotected _bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n     */\r\n\tpublic middleLine: Line | Polyline;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.maskBullets = false;\r\n\r\n\t\tthis.colorMode = \"fromNode\";\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\t// this is very important, otherwise the container will be shifted\r\n\t\tthis.verticalCenter = \"none\";\r\n\t\tthis.horizontalCenter = \"none\";\r\n\r\n\t\tthis.tooltipText = \"{fromName}→{toName}:{value.value}\";\r\n\t\tthis.tooltipLocation = 0.5;\r\n\r\n\t\tthis.link = this.createChild(Sprite);\r\n\t\tthis.link.shouldClone = false;\r\n\t\tthis.link.setElement(this.paper.add(\"path\"));\r\n\t\tthis.link.isMeasured = false;\r\n\t\tthis.fillOpacity = 0.2;\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullets() {\r\n\t\t$iter.each(this.bullets.iterator(), (bullet) => {\r\n\t\t\tbullet.parent = this.bulletsContainer;\r\n\r\n\t\t\tbullet.maxWidth = this.maxWidth;\r\n\t\t\tbullet.maxHeight = this.maxHeight;\r\n\r\n\t\t\tthis.positionBullet(bullet);\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Bullets container\r\n     */\r\n\tpublic get bulletsContainer() {\r\n\t\tif (!this._bulletsContainer) {\r\n\t\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\t\tbulletsContainer.shouldClone = false;\r\n\t\t\tbulletsContainer.layout = \"none\";\r\n\t\t\tthis._bulletsContainer = bulletsContainer;\r\n\t\t}\r\n\t\treturn this._bulletsContainer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bullets mask sprite\r\n     */\r\n\tpublic get bulletsMask() {\r\n\t\tif (!this._bulletsMask) {\r\n\t\t\tlet bulletsMask = this.createChild(Sprite);\r\n\t\t\tbulletsMask.shouldClone = false;\r\n\t\t\tbulletsMask.setElement(this.paper.add(\"path\"));\r\n\t\t\tbulletsMask.isMeasured = false;\r\n\t\t\tthis._bulletsMask = bulletsMask;\r\n\t\t}\r\n\t\treturn this._bulletsMask;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets at relative bullet.locationX position on the link.\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullet(bullet: Bullet) {\r\n\r\n\t\tlet location = bullet.locationX;\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = bullet.locationY;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = 0.5;\r\n\t\t}\r\n\t\tlet point = this.middleLine.positionToPoint(location);\r\n\r\n\t\tbullet.moveTo(point);\r\n\r\n\t\tlet rotationField = bullet.propertyFields.rotation;\r\n\t\tlet angle: number;\r\n\t\tif (bullet.dataItem) {\r\n\t\t\tlet dataContext: any = bullet.dataItem.dataContext;\r\n\t\t\tangle = dataContext[rotationField];\r\n\t\t}\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = point.angle;\r\n\t\t}\r\n\r\n\t\tbullet.rotation = angle;\r\n\t}\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t * Some of the links, like ChordLink does not support gradiens well.\r\n\t *\r\n\t * @param value  Fill mode\r\n\t */\r\n\tpublic set colorMode(value: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\") {\r\n\t\tif (value == \"gradient\") {\r\n\t\t\tlet color = this.fill;\r\n\r\n\t\t\tthis.gradient.stops.clear();\r\n\t\t\tif (color instanceof Color) {\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t}\r\n\t\t\tthis.fill = this.gradient;\r\n\t\t\tthis.stroke = this.gradient;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"colorMode\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Fill mode\r\n\t */\r\n\tpublic get colorMode(): \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\" {\r\n\t\treturn this.getPropertyValue(\"colorMode\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link bullets be masked or not\r\n\t *\r\n\t * @param value\r\n\t * @default false\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return mask bullets value\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of a tooltip.\r\n\t * @default 0.5\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Tooltip location value\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Adds color steps in the link gradient.\r\n\t *\r\n\t * @param value  Fill option\r\n\t */\r\n\tprotected setFill(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tsuper.setFill(value)\r\n\t\tlet gradient = this._gradient;\r\n\r\n\t\tif (gradient && value instanceof Color) {\r\n\t\t\tgradient.stops.clear();\r\n\t\t\tgradient.addColor(value);\r\n\t\t\tgradient.addColor(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box based on element dimension settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t *\r\n\t * @return [description]\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t\tthis._bullets.events.on(\"inserted\", (event) => {\r\n\t\t\t\tevent.newValue.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"locationX\" || event.property == \"locationY\") {\r\n\t\t\t\t\t\tthis.positionBullet(event.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t}, undefined, false)\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties from another [[FlowDiagramLink]].\r\n\t *\r\n\t * @param source  Source link\r\n\t */\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tlet middleLine = this.middleLine;\r\n\t\tif (middleLine) {\r\n\t\t\tif (middleLine instanceof Line && source.middleLine instanceof Line) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\r\n\t\t\tif (middleLine instanceof Polyline && source.middleLine instanceof Polyline) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.link.copyFrom(source.link);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Tooltip X (px)\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).x;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Tooltip Y (px)\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t */\r\n\tpublic get gradient() {\r\n\t\tif (!this._gradient) {\r\n\t\t\tthis._gradient = new LinearGradient();\r\n\t\t}\r\n\t\treturn this._gradient;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramLink\"] = FlowDiagramLink;\r\n","/**\r\n * FlowDiagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { FlowDiagramNode } from \"../elements/FlowDiagramNode\";\r\nimport { FlowDiagramLink } from \"../elements/FlowDiagramLink\";\r\nimport { LinearGradientModifier } from \"../../core/rendering/fills/LinearGradientModifier\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FlowDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FlowDiagramDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FlowDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: FlowDiagramLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Source node's name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set fromName(value: string) {\r\n\t\tthis.setProperty(\"fromName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return name\r\n\t */\r\n\tpublic get fromName(): string {\r\n\t\treturn this.properties.fromName;\r\n\t}\r\n\r\n\t/**\r\n\t * Destination node's name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set toName(value: string) {\r\n\t\tthis.setProperty(\"toName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return name\r\n\t */\r\n\tpublic get toName(): string {\r\n\t\treturn this.properties.toName;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Node color\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setProperty(\"color\", toColor(value));\r\n\t}\r\n\r\n\t/**\r\n\t * @return color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Link's value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * A visual element, representing link between the source and target nodes.\r\n\t *\r\n\t * Link's actual thickness will be determined by `value` of this link and\r\n\t * `value` of the source node.\r\n\t *\r\n\t * @readonly\r\n\t * @return Link element\r\n\t */\r\n\tpublic get link(): this[\"_link\"] {\r\n\t\tif (!this._link) {\r\n\t\t\tlet link = this.component.links.create();\r\n\t\t\tthis._link = link;\r\n\r\n\t\t\tthis.addSprite(link);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.links.removeValue(link);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._link;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramDataFields extends IChartDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Visibility of a node\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[FlowDiagram]]\r\n */\r\nexport interface IFlowDiagramProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t */\r\n\tnodePadding?: number;\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort a\r\n\t */\r\n\tsortBy?: \"none\" | \"name\" | \"value\";\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t */\r\n\tminNodeSize: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramAdapters extends IChartAdapters, IFlowDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Pie chart\r\n * @see {@link IFlowDiagramEvents} for a list of available Events\r\n * @see {@link IFlowDiagramAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagram extends Chart {\r\n\r\n\t/**\r\n\t * A Color Set to use when applying/generating colors for each subsequent\r\n\t * node.\r\n\t */\r\n\tpublic colors: ColorSet = new ColorSet();\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IFlowDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramEvents;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node: FlowDiagramNode;\r\n\r\n\r\n\t/**\r\n\t * A list of chart's FlowDiagram nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tprotected _nodes: DictionaryTemplate<string, this[\"_node\"]>;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _link: FlowDiagramLink;\r\n\r\n\t/**\r\n\t * A list of FlowDiagram links connecting nodes.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * A container that holds all of the link elements.\r\n\t */\r\n\tpublic linksContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds all of the node elements.\r\n\t */\r\n\tpublic nodesContainer: Container;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, FlowDiagramNode]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagram\";\r\n\t\tthis.nodePadding = 20;\r\n\t\tthis.sortBy = \"none\";\r\n\t\tthis.sequencedInterpolation = true;\r\n\r\n\t\tthis.colors.step = 2;\r\n\t\tthis.minNodeSize = 0.02;\r\n\r\n\t\tlet linksContainer = this.chartContainer.createChild(Container);\r\n\t\tlinksContainer.shouldClone = false;\r\n\t\tlinksContainer.layout = \"none\";\r\n\t\tlinksContainer.isMeasured = false;\r\n\t\tthis.linksContainer = linksContainer;\r\n\r\n\t\tlet nodesContainer = this.chartContainer.createChild(Container);\r\n\t\tnodesContainer.shouldClone = false;\r\n\t\tnodesContainer.layout = \"none\";\r\n\t\tnodesContainer.isMeasured = false;\r\n\t\tthis.nodesContainer = nodesContainer;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tthis.dataItem.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this._parseDataFrom == 0) {\r\n\t\t\tthis.nodes.clear();\r\n\t\t}\r\n\r\n\t\tthis.sortNodes();\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tlet sum = 0;\r\n\t\tlet count = 0;\r\n\t\tlet low: number;\r\n\t\tlet high: number;\r\n\r\n\t\t// build blocks\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet fromName = dataItem.fromName;\r\n\r\n\t\t\tif (fromName) {\r\n\t\t\t\tlet node = this.nodes.getKey(fromName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(fromName);\r\n\t\t\t\t\tnode.name = fromName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.fromNode = node;\r\n\t\t\t\tdataItem.fromNode.outgoingDataItems.push(dataItem);\r\n\t\t\t}\r\n\t\t\tlet toName = dataItem.toName;\r\n\t\t\tif (toName) {\r\n\t\t\t\tlet node = this.nodes.getKey(toName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(toName);\r\n\t\t\t\t\tnode.name = toName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.toNode = node;\r\n\t\t\t\tdataItem.toNode.incomingDataItems.push(dataItem);\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\tlet strokeModifier = new LinearGradientModifier();\r\n\t\t\t\tstrokeModifier.opacities = [0, 1];\r\n\t\t\t\tdataItem.link.strokeModifier = strokeModifier;\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\tlet fillModifier = new LinearGradientModifier();\r\n\t\t\t\tfillModifier.opacities = [1, 0];\r\n\t\t\t\tdataItem.link.strokeModifier = fillModifier;\r\n\t\t\t}\r\n\r\n\t\t\tlet value = dataItem.value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\tsum += value;\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif (low > value || !$type.isNumber(low)) {\r\n\t\t\t\t\tlow = value;\r\n\t\t\t\t}\r\n\t\t\t\tif (high < value || !$type.isNumber(high)) {\r\n\t\t\t\t\thigh = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet key = \"value\";\r\n\r\n\t\tthis.dataItem.setCalculatedValue(key, high, \"high\");\r\n\t\tthis.dataItem.setCalculatedValue(key, low, \"low\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum, \"sum\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum / count, \"average\");\r\n\t\tthis.dataItem.setCalculatedValue(key, count, \"count\");\r\n\r\n\r\n\t\t$iter.each(this.nodes.iterator(), (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\r\n\t\t\tif (node.fill instanceof Color) {\r\n\t\t\t\tnode.color = node.fill;\r\n\t\t\t}\r\n\r\n\t\t\tif (node.color == undefined) {\r\n\t\t\t\tnode.color = this.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tif (node.dataItem.color != undefined) {\r\n\t\t\t\tnode.color = node.dataItem.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (!node.dataItem.visible) {\r\n\t\t\t\tnode.hide(0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.sortNodes();\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sorts nodes by either their values or names, based on `sortBy` setting.\r\n\t */\r\n\tprotected sortNodes() {\r\n\t\tif (this.sortBy == \"name\") {\r\n\t\t\tthis._sorted = this.nodes.sortedIterator();\r\n\t\t}\r\n\t\telse if (this.sortBy == \"value\") {\r\n\t\t\tthis._sorted = $iter.sort(this.nodes.iterator(), (x, y) => $order.reverse($number.order(x[1].total, y[1].total)));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._sorted = this.nodes.iterator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a cummulative value of the node.\r\n\t *\r\n\t * A node's value is determined by summing values of all of the incoming\r\n\t * links or all of the outgoing links, whichever results in bigger number.\r\n\t *\r\n\t * @param node  Node value\r\n\t */\r\n\tprotected getNodeValue(node: FlowDiagramNode) {\r\n\r\n\t\t// todo: totalIncomming totalOutgoing, total\r\n\r\n\t\tlet incomingTotal = 0;\r\n\t\tlet outgoingTotal = 0;\r\n\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\tincomingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\toutgoingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tnode.total = incomingTotal + outgoingTotal;\r\n\t\tnode.totalIncoming = incomingTotal;\r\n\t\tnode.totalOutgoing = outgoingTotal;\r\n\t};\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Flow diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FlowDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t *\r\n\t * Padding will add extra space around node's name label.\r\n\t *\r\n\t * @param value Padding (px)\r\n\t */\r\n\tpublic set nodePadding(value: number) {\r\n\t\tthis.setPropertyValue(\"nodePadding\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding (px)\r\n\t */\r\n\tpublic get nodePadding(): number {\r\n\t\treturn this.getPropertyValue(\"nodePadding\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sort nodes by \"name\" or \"value\" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.\r\n\t * @default \"none\"\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set sortBy(value: \"none\" | \"name\" | \"value\") {\r\n\t\tthis.setPropertyValue(\"sortBy\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Node sorting\r\n\t */\r\n\tpublic get sortBy(): \"none\" | \"name\" | \"value\" {\r\n\t\treturn this.getPropertyValue(\"sortBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t * @default 0.02\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set minNodeSize(value: number) {\r\n\t\tthis.setPropertyValue(\"minNodeSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns min node size\r\n\t */\r\n\tpublic get minNodeSize(): number {\r\n\t\treturn this.getPropertyValue(\"minNodeSize\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of chart's nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tpublic get nodes(): DictionaryTemplate<string, this[\"_node\"]> {\r\n\t\tif (!this._nodes) {\r\n\t\t\tlet template = this.createNode();\r\n\t\t\ttemplate.events.on(\"hit\", (event) => {\r\n\t\t\t\tevent.target.handleHit(event);\r\n\t\t\t});\r\n\t\t\tthis._nodes = new DictionaryTemplate<string, this[\"_node\"]>(template);\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode(): this[\"_node\"] {\r\n\t\tlet node = new FlowDiagramNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's links.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tpublic get links(): ListTemplate<this[\"_link\"]> {\r\n\t\tif (!this._links) {\r\n\t\t\tthis._links = new ListTemplate<this[\"_link\"]>(this.createLink());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink(): this[\"_link\"] {\r\n\t\tlet link = new FlowDiagramLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.nodes.each((key, node) => {\r\n\t\t\t\tlegendData.push(node);\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.nodes.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagram\"] = FlowDiagram;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ILabelBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ILabelBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelBulletAdapters extends IBulletAdapters, ILabelBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class LabelBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILabelBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILabelBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILabelBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"LabelBullet\";\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.hideOversized = false;\r\n\r\n\t\tlabel.maxWidth = 500;\r\n\t\tlabel.maxHeight = 500;\r\n\r\n\t\tlabel.stroke = color();\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.fill = new InterfaceColorSet().getFor(\"text\");\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", this.handleMaxSize, this, false);\r\n\r\n\t\tthis.label = label;\r\n\r\n\t\t// not good, as lineSeries will have labels somewhere in the middle.\r\n\t\t//this.locationX = 0.5;\r\n\t\t//this.locationY = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected handleMaxSize(){\r\n\t\tthis.label.maxWidth = this.maxWidth;\r\n\t\tthis.label.maxHeight = this.maxHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[LabelBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n","/**\r\n * SankeyNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { SankeyDiagram, SankeyDiagramDataItem } from \"../types/SankeyDiagram\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeProperties extends IFlowDiagramNodeProperties {\r\n\r\n\t/**\r\n\t * A level node is at. (0 - ...)\r\n\t */\r\n\tlevel?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyNodeAdapters extends IFlowDiagramNodeAdapters, ISankeyNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyNodeEvents;\r\n\r\n\r\n\t/**\r\n\t * [nextInCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextInCoord: number = 0;\r\n\r\n\t/**\r\n\t * [nextOutCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextOutCoord: number = 0;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[SankeyDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * A label element which shows node's value.\r\n\t */\r\n\tpublic valueLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t */\r\n\tpublic nameLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyNode\";\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tlet nameLabel = this.createChild(LabelBullet);\r\n\t\tnameLabel.shouldClone = false;\r\n\t\t//@should we auto update these locations if position is changed?\r\n\t\tnameLabel.locationX = 1;\r\n\t\tnameLabel.locationY = 0.5;\r\n\t\tnameLabel.label.text = \"{name}\";\r\n\r\n\t\t//nameLabel.label.textElement.hideOversized = false;\r\n\t\tnameLabel.width = 150;\r\n\t\tnameLabel.height = 150;\r\n\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\tnameLabel.label.padding(0, 5, 0, 5);\r\n\t\tthis.nameLabel = nameLabel;\r\n\r\n\t\tlet valueLabel = this.createChild(LabelBullet);\r\n\t\tvalueLabel.shouldClone = false;\r\n\t\tvalueLabel.label.hideOversized = false;\r\n\t\tvalueLabel.locationX = 0.5;\r\n\t\tvalueLabel.locationY = 0.5;\r\n\t\tvalueLabel.width = 150;\r\n\t\tvalueLabel.height = 150;\r\n\t\t//valueLabel.label.text = \"{value}\";\r\n\t\tvalueLabel.label.horizontalCenter = \"middle\";\r\n\t\tthis.valueLabel = valueLabel;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.background.hiddenState.copyFrom(hiddenState);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\t\tthis.nextInCoord = 0;\r\n\t\tthis.nextOutCoord = 0;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tlet orientation = chart.orientation;\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tx = this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.nextInCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tx = this.nextInCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.endX = x;\r\n\t\t\t\t\t\tlink.endY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.fromNode) {\r\n\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = this.pixelX + this.dx - link.maxWidth;\r\n\t\t\t\t\t\t\t\tlink.startY = link.endY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = link.endX;\r\n\t\t\t\t\t\t\t\tlink.startY = this.pixelY + this.dy - link.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// TODO is this needed ?\r\n\t\t\t\t\t\t\t$utils.used(link.gradient);\r\n\r\n\t\t\t\t\t\t\tlink.fill = dataItem.toNode.color;\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextInCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t\tx = this.pixelX + this.pixelWidth + this.dx - 1;\r\n\t\t\t\t\t\t\ty = this.nextOutCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t\tx = this.nextOutCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.pixelY + this.pixelHeight + this.dy - 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.startX = x;\r\n\t\t\t\t\t\tlink.startY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * this.chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = this.pixelX + link.maxWidth + this.dx;\r\n\t\t\t\t\t\t\t\tlink.endY = link.startY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = link.startX;\r\n\t\t\t\t\t\t\t\tlink.endY = this.pixelY + link.maxHeight + this.dy;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlink.opacity = this.opacity;\r\n\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextOutCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.positionBullet(this.nameLabel);\r\n\t\tthis.positionBullet(this.valueLabel);\r\n\t}\r\n\r\n\t/**\r\n\t * Positions the bullet so it is centered within the node element.\r\n\t *\r\n\t * @param bullet  Target bullet\r\n\t */\r\n\tprotected positionBullet(bullet: LabelBullet) {\r\n\t\tif (bullet) {\r\n\t\t\tbullet.x = this.measuredWidth * bullet.locationX;\r\n\t\t\tbullet.y = this.measuredHeight * bullet.locationY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A level node is displayed at. (0 - ...)\r\n\t *\r\n\t * Levels are measured from left to right.\r\n\t *\r\n\t * The nodes in the left-most column will have `level = 0`.\r\n\t *\r\n\t * Nodes in second column - `level = 1`, etc.\r\n\t *\r\n\t * @param value  Level\r\n\t */\r\n\tpublic set level(value: number) {\r\n\t\tthis.setPropertyValue(\"level\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\treturn this.getPropertyValue(\"level\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[SankeyNode]].\r\n\t *\r\n\t * @param source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.nameLabel.copyFrom(source.nameLabel);\r\n\t\tthis.valueLabel.copyFrom(source.valueLabel);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n","/**\r\n * SankeyLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SankeyDiagramDataItem, SankeyDiagram } from \"../types/SankeyDiagram\";\r\nimport { FlowDiagramLink, IFlowDiagramLinkAdapters, IFlowDiagramLinkEvents, IFlowDiagramLinkProperties } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkProperties extends IFlowDiagramLinkProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkEvents extends IFlowDiagramLinkEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyLinkAdapters extends IFlowDiagramLinkAdapters, ISankeyLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyLink extends FlowDiagramLink {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n\t */\r\n\tpublic middleLine: Polyspline;\r\n\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyLink\";\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tnew InterfaceColorSet();\r\n\r\n\t\tthis.tension = 0.8;\r\n\t\tthis.controlPointDistance = 0.2;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.linkWidth = 0;\r\n\r\n\t\tthis.startX = 0;\r\n\t\tthis.endX = 0;\r\n\r\n\t\tthis.startY = 0;\r\n\t\tthis.endY = 0;\r\n\r\n\t\tthis.middleLine = this.createChild(Polyspline);\r\n\t\tthis.middleLine.shouldClone = false;\r\n\t\tthis.middleLine.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected makeBackwards() {\r\n\t\tif (this.states.getKey(\"backwards\") != undefined) {\r\n\t\t\tthis.setState(\"backwards\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates (redraws) the link.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tif (!this.isTemplate) {\r\n\r\n\t\t\tlet x0 = this.startX\r\n\t\t\tlet y0 = this.startY;\r\n\t\t\tlet x1 = this.endX;\r\n\t\t\tlet y1 = this.endY;\r\n\r\n\t\t\tif (this.states.getKey(\"backwards\")) {\r\n\t\t\t\tthis.setState(\"default\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataItem) {\r\n\t\t\t\tlet chart = this.dataItem.component;\r\n\r\n\t\t\t\tif (chart) {\r\n\t\t\t\t\tif (chart.orientation == \"horizontal\") {\r\n\t\t\t\t\t\tif (x1 < x0) {\r\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\r\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\r\n\t\t\t\t\t\t\tthis.makeBackwards();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (y1 < y0) {\r\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\r\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\r\n\t\t\t\t\t\t\tthis.makeBackwards();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(x1)) {\r\n\t\t\t\tx1 = x0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(y1)) {\r\n\t\t\t\ty1 = y0;\r\n\t\t\t}\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\t\t\tlet w = this.linkWidth;\r\n\r\n\t\t\tlet path = \"\";\r\n\r\n\t\t\tlet xt0 = x0;\r\n\t\t\tlet yt0 = y0;\r\n\r\n\t\t\tlet xt1 = x1;\r\n\t\t\tlet yt1 = y1;\r\n\r\n\t\t\tlet xb0 = x0 + w * $math.sin(startAngle);\r\n\t\t\tlet xb1 = x1 + w * $math.sin(endAngle);\r\n\r\n\t\t\tlet yb0 = y0 + w * $math.cos(startAngle);\r\n\t\t\tlet yb1 = y1 + w * $math.cos(endAngle);\r\n\r\n\t\t\tlet xm0 = x0 + w / 2 * $math.sin(startAngle);\r\n\t\t\tlet xm1 = x1 + w / 2 * $math.sin(endAngle);\r\n\r\n\t\t\tlet ym0 = y0 + w / 2 * $math.cos(startAngle);\r\n\t\t\tlet ym1 = y1 + w / 2 * $math.cos(endAngle);\r\n\r\n\t\t\tthis.zIndex = this.zIndex || this.dataItem.index;\r\n\r\n\t\t\tlet tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\r\n\t\t\tlet tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\r\n\r\n\t\t\tthis.middleLine.tensionX = tensionX;\r\n\t\t\tthis.middleLine.tensionY = tensionY;\r\n\r\n\t\t\tif ($type.isNumber(w) && ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1))) {\r\n\r\n\t\t\t\t// solves issues with gradient fill of straight lines\r\n\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\r\n\t\t\t\t\txt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\r\n\t\t\t\t\tyt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\r\n\t\t\t\t\txb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\r\n\t\t\t\t\tyb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minX = Math.min(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet minY = Math.min(yb0, yb1, yt0, yt1);\r\n\t\t\t\tlet maxX = Math.max(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet maxY = Math.max(yb0, yb1, yt0, yt1);\r\n\r\n\t\t\t\tthis._bbox = {\r\n\t\t\t\t\tx: minX,\r\n\t\t\t\t\ty: minY,\r\n\t\t\t\t\twidth: maxX - minX,\r\n\t\t\t\t\theight: maxY - minY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet cpd = this.controlPointDistance;\r\n\r\n\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n\r\n\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\r\n\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\r\n\r\n\r\n\t\t\t\tthis.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n\r\n\t\t\t\tkxt0 += dx / 2;\r\n\t\t\t\tkyt0 += dy / 2;\r\n\r\n\t\t\t\tkxt1 += dx / 2;\r\n\t\t\t\tkyt1 += dy / 2;\r\n\r\n\t\t\t\tpath += $path.moveTo({ x: xt0, y: yt0 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n\t\t\t\tpath += $path.lineTo({ x: xb1, y: yb1 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n\t\t\t\tpath += $path.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tthis.link.path = path;\r\n\r\n\t\t\tif (this.maskBullets) {\r\n\t\t\t\tthis.bulletsMask.path = path;\r\n\t\t\t\tthis.bulletsContainer.mask = this.bulletsMask;\r\n\t\t\t}\r\n\t\t\tthis.positionBullets();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start X\r\n\t */\r\n\tpublic set startX(value: number) {\r\n\t\tthis.setPropertyValue(\"startX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start X\r\n\t */\r\n\tpublic get startX(): number {\r\n\t\treturn this.getPropertyValue(\"startX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  End X\r\n\t */\r\n\tpublic set endX(value: number) {\r\n\t\tthis.setPropertyValue(\"endX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End X\r\n\t */\r\n\tpublic get endX(): number {\r\n\t\treturn this.getPropertyValue(\"endX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start Y\r\n\t */\r\n\tpublic set startY(value: number) {\r\n\t\tthis.setPropertyValue(\"startY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start Y\r\n\t */\r\n\tpublic get startY(): number {\r\n\t\treturn this.getPropertyValue(\"startY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value End Y\r\n\t */\r\n\tpublic set endY(value: number) {\r\n\t\tthis.setPropertyValue(\"endY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End Y\r\n\t */\r\n\tpublic get endY(): number {\r\n\t\treturn this.getPropertyValue(\"endY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set linkWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"linkWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get linkWidth(): number {\r\n\t\treturn this.getPropertyValue(\"linkWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n\t * @default 0.2\r\n\t * @param value\r\n\t */\r\n\tpublic set controlPointDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return relative control point distance\r\n\t */\r\n\tpublic get controlPointDistance(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of a spline, 1 would make the link to have sharp edges\r\n\t * @default 0.8\r\n\t * @param value\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return tension value\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n","/**\r\n * Sankey diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem, IFlowDiagramAdapters, IFlowDiagramDataFields, IFlowDiagramEvents, IFlowDiagramProperties } from \"./FlowDiagram\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SankeyNode } from \"../elements/SankeyNode\";\r\nimport { SankeyLink } from \"../elements/SankeyLink\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $object from \"../../core/utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SankeyDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SankeyDiagramDataItem extends FlowDiagramDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SankeyDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: SankeyNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: SankeyNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagramDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramDataFields extends IFlowDiagramDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[SankeyDiagram]]\r\n */\r\nexport interface ISankeyDiagramProperties extends IFlowDiagramProperties {\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort at all\r\n\t */\r\n\tnodeAlign?: \"top\" | \"bottom\" | \"middle\";\r\n\r\n\r\n\t/**\r\n\t * Orientation of the chart.\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramEvents extends IFlowDiagramEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyDiagramAdapters extends IFlowDiagramAdapters, ISankeyDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Sankey Diagram chart.\r\n *\r\n * @see {@link ISankeyDiagramEvents} for a list of available Events\r\n * @see {@link ISankeyDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation\r\n * @important\r\n */\r\nexport class SankeyDiagram extends FlowDiagram {\r\n\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ISankeyDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyDiagramEvents;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelSum: { [index: number]: number };\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelNodesCount: { [index: number]: number };\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node: SankeyNode;\r\n\r\n\t/**\r\n\t * [maxSum description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic maxSum: number;\r\n\r\n\t/**\r\n\t * level with max sum\r\n\t */\r\n\tprotected _maxSumLevel: number;\r\n\r\n\t/**\r\n\t * [valueHeight description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _valueHeight: number;\r\n\r\n\t/**\r\n\t * A total number of levels, present on this chart.\r\n\t */\r\n\tprotected _levelCount: number;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, this[\"_node\"]]>;\r\n\r\n\tprotected _heightAnimation: Animation;\r\n\r\n\tprotected _level: number;\r\n\r\n\tprotected _counter: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagram\";\r\n\t\tthis.orientation = \"horizontal\";\r\n\t\tthis.nodeAlign = \"middle\";\r\n\r\n\t\tthis.nodesContainer.width = percent(100);\r\n\t\tthis.nodesContainer.height = percent(100);\r\n\r\n\t\tthis.linksContainer.width = percent(100);\r\n\t\tthis.linksContainer.height = percent(100);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._valueHeight = undefined;\t\t\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis._levelCount = 0;\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tnode.level = undefined;\r\n\t\t});\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tnode.level = this.getNodeLevel(node, 0);\r\n\t\t\tthis._levelCount = $math.max(this._levelCount, node.level);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns node's highest level.\r\n\t *\r\n\t * @param node   Node\r\n\t * @param level  Current level\r\n\t * @return New level\r\n\t */\r\n\tprotected getNodeLevel(node: this[\"_node\"], level: number): number {\r\n\t\tlet levels: number[] = [level];\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (link) => {\r\n\t\t\tif (link.fromNode) {\r\n\t\t\t\tif ($type.isNumber(link.fromNode.level)) {\r\n\t\t\t\t\tlevels.push(link.fromNode.level + 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._counter = 0;\r\n\t\t\t\t\tthis.checkLoop(link.fromNode);\r\n\t\t\t\t\tif (this._counter < this.dataItems.length) {\r\n\t\t\t\t\t\tlevels.push(this.getNodeLevel(link.fromNode, level + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn Math.max(...levels);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's no loop in the ancestor chain.\r\n\t * \r\n\t * @param  node  Node\r\n\t */\r\n\tprotected checkLoop(node: this[\"_node\"]): void {\r\n\t\tthis._counter++;\r\n\r\n\t\tif (this._counter > this.dataItems.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (link) => {\r\n\t\t\tthis.checkLoop(link.fromNode);\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates relation between pixel height and total value.\r\n\t *\r\n\t * In Sankey the actual thickness of links and height of nodes will depend\r\n\t * on their values.\r\n\t */\r\n\tprotected calculateValueHeight() {\r\n\t\t// calculate sums of each level\r\n\t\tthis._levelSum = {};\r\n\t\tthis._levelNodesCount = {};\r\n\t\tthis.maxSum = 0;\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelSum[level])) {\r\n\t\t\t\tthis._levelSum[level] += value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelSum[level] = value;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelNodesCount[level])) {\r\n\t\t\t\tthis._levelNodesCount[level]++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelNodesCount[level] = 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tlet availableHeight: number;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tavailableHeight = this.chartContainer.maxHeight - 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tavailableHeight = this.chartContainer.maxWidth - 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet maxSumLevel: number;\r\n\t\tlet minHeight: number;\r\n\r\n\t\t$object.each(this._levelSum, (key, value) => {\r\n\t\t\tlet realValue = value;\r\n\r\n\t\t\tlet levelNodeCount = this._levelNodesCount[key];\r\n\t\t\tlet valueHeight = (availableHeight - (levelNodeCount - 1) * this.nodePadding) / realValue;\r\n\r\n\t\t\tif (valueHeight == Infinity) {\r\n\t\t\t\tvalueHeight = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (minHeight > valueHeight || !$type.isNumber(minHeight)) {\r\n\t\t\t\tminHeight = valueHeight;\r\n\t\t\t\tthis.maxSum = realValue;\r\n\t\t\t\tmaxSumLevel = $type.toNumber(key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._maxSumLevel = maxSumLevel;\r\n\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;\r\n\r\n\t\tif (valueHeight == Infinity) {\r\n\t\t\tvalueHeight = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(this.valueHeight)) {\r\n\t\t\tthis.valueHeight = valueHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet finalHeight;\r\n\t\t\ttry {\r\n\t\t\t\tfinalHeight = this._heightAnimation.animationOptions[0].to;\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\r\n\t\t\t}\r\n\t\t\t// without animations it will be non-smooth as maxValue jumps from one column to another\r\n\t\t\tif (finalHeight != valueHeight) {\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tduration = this.nodes.template.states.getKey(\"active\").transitionDuration;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._heightAnimation = new Animation(this, { property: \"valueHeight\", from: this.valueHeight, to: valueHeight }, duration, this.interpolationEasing).start();\r\n\t\t\t\tthis._disposers.push(this._heightAnimation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.calculateValueHeight();\r\n\r\n\t\tlet container = this.nodesContainer;\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\tlet availableHeight: number;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tavailableHeight = this.chartContainer.maxHeight - 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tavailableHeight = this.chartContainer.maxWidth - 1;\r\n\t\t}\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\t\t\tlet levelCoordinate: number = 0;\r\n\r\n\t\t\tlet nodeCount = this._levelNodesCount[level];\r\n\r\n\t\t\tswitch (this.nodeAlign) {\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight - (nodeCount - maxSumLevelNodeCount) * this.nodePadding;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * this.nodePadding / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.maxSum == 0) {\r\n\t\t\t\tswitch (this.nodeAlign) {\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tlevelCoordinate = availableHeight - nodeCount * (this.minNodeSize * availableHeight + this.nodePadding);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tlevelCoordinate = availableHeight / 2 - nodeCount / 2 * (this.minNodeSize * availableHeight + this.nodePadding);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = container;\r\n\r\n\t\t\tlet delta: number;\r\n\t\t\tlet x: number;\r\n\t\t\tlet y: number;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tdelta = (this.innerWidth - node.pixelWidth) / this._levelCount;\r\n\r\n\t\t\t\tx = delta * node.level;\r\n\t\t\t\ty = nextCoordinate[level] || levelCoordinate;\r\n\r\n\t\t\t\tlet h = value * this.valueHeight;\r\n\r\n\t\t\t\tif (total == 0 && h == 0) {\r\n\t\t\t\t\th = this.minNodeSize * availableHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.height = h;\r\n\t\t\t\tnode.minX = x;\r\n\t\t\t\tnode.maxX = x;\r\n\t\t\t\tnextCoordinate[level] = y + h + this.nodePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdelta = (this.innerHeight - node.pixelHeight) / this._levelCount;\r\n\r\n\t\t\t\tx = nextCoordinate[level] || levelCoordinate;\r\n\t\t\t\ty = delta * node.level;\r\n\r\n\t\t\t\tlet w = value * this.valueHeight;\r\n\r\n\t\t\t\tif (total == 0 && w == 0) {\r\n\t\t\t\t\tw = this.minNodeSize * availableHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.width = w;\r\n\t\t\t\tnode.minY = y;\r\n\t\t\t\tnode.maxY = y;\r\n\t\t\t\tnextCoordinate[level] = x + w + this.nodePadding;\r\n\t\t\t}\r\n\t\t\tnode.x = x;\r\n\t\t\tnode.y = y;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Performs actual operations to reveal this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param duration Fade in duration (ms)\r\n\t * @return Fade in duration (ms)\r\n\t */\r\n\tprotected showReal(duration?: number): $type.Optional<Animation> {\r\n\r\n\t\tif (this.preventShow) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.interpolationDuration > 0) {\r\n\t\t\tlet container = this.nodesContainer;\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\t$iter.each(this.links.iterator(), (link) => {\r\n\t\t\t\tlink.hide(0);\r\n\t\t\t})\r\n\r\n\t\t\t$iter.each(this._sorted, (strNode) => {\r\n\r\n\t\t\t\tlet node = strNode[1];\r\n\r\n\t\t\t\tlet property: \"dx\" | \"dy\";\r\n\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\tnode.dx = -(container.pixelWidth - node.pixelWidth) / Math.max(this._levelCount, 1);\r\n\t\t\t\t\tproperty = \"dx\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.dy = -(container.pixelHeight - node.pixelHeight) / Math.max(this._levelCount, 1);\r\n\t\t\t\t\tproperty = \"dy\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet delay = 0;\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + duration * i / $iter.length(this.nodes.iterator());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.opacity = 0;\r\n\t\t\t\tnode.invalidateLinks();\r\n\r\n\t\t\t\tnode.animate([{ property: \"opacity\", from: 0, to: 1 }, { property: property, to: 0 }], this.interpolationDuration, this.interpolationEasing).delay(delay);\r\n\r\n\t\t\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn super.showReal();\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet levelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2;\r\n\r\n\t\t\tlet property: \"x\" | \"y\";\r\n\t\t\tlet nodeHeight: number;\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tproperty = \"y\";\r\n\t\t\t\tnodeHeight = node.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tproperty = \"x\";\r\n\t\t\t\tnodeHeight = node.pixelWidth;\r\n\t\t\t}\r\n\r\n\t\t\tnode.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, this.interpolationDuration, this.interpolationEasing);\r\n\t\t\tnextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + this.nodePadding;\r\n\r\n\t\t\tnode.invalidateLinks();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sankey diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SankeyDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * How to align nodes. In case layout is vertical, top means left and bottom means right\r\n\t *\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set nodeAlign(value: \"top\" | \"middle\" | \"bottom\") {\r\n\t\tthis.setPropertyValue(\"nodeAlign\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Returns nodeAlign value\r\n\t */\r\n\tpublic get nodeAlign(): \"top\" | \"middle\" | \"bottom\" {\r\n\t\treturn this.getPropertyValue(\"nodeAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the chart: \"horizontal\" or \"vertical\";\r\n\t *\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet nameLabel = this.nodes.template.nameLabel;\r\n\r\n\t\tif (value == \"vertical\") {\r\n\t\t\tthis.nodes.template.width = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"middle\";\r\n\t\t\tnameLabel.locationX = 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.nodes.template.height = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\t\tnameLabel.locationX = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode(): this[\"_node\"] {\r\n\t\tlet node = new SankeyNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink(): this[\"_link\"] {\r\n\t\tlet link = new SankeyLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get valueHeight(): number {\r\n\t\treturn this._valueHeight;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set valueHeight(value: number) {\r\n\t\tif (value != this._valueHeight) {\r\n\t\t\tthis._valueHeight = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tdisposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis._sorted = this.nodes.iterator();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyDiagram\"] = SankeyDiagram;\r\n","/**\r\n * ChordNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { ChordDiagram, ChordDiagramDataItem } from \"../types/ChordDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ChordNode]].\r\n */\r\nexport interface IChordNodeProperties extends IFlowDiagramNodeProperties { }\r\n\r\n/**\r\n * Defines events for [[ChordNode]].\r\n */\r\nexport interface IChordNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordNodeAdapters extends IFlowDiagramNodeAdapters, IChordNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Chord Diagram.\r\n *\r\n * A Chord node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[ChordLink]] elements.\r\n *\r\n * @see {@link IChordNodeEvents} for a list of available events\r\n * @see {@link IChordNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ChordNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordNodeEvents;\r\n\r\n\t/**\r\n\t * A list of data items of the items coming in from another node, one level\r\n\t * up.\r\n\t *\r\n\t * These are what ingoing links are build out of.\r\n\t */\r\n\tprotected _incomingDataItems: List<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * A list of data items of the items going out of the node.\r\n\t *\r\n\t * These are what outgoing links are build out of.\r\n\t */\r\n\tprotected _outgoingDataItems: List<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * Sorted list of incoming items.\r\n\t */\r\n\tprotected _incomingSorted: $iter.Iterator<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * Sorted list of outgoing items.\r\n\t */\r\n\tprotected _outgoingSorted: $iter.Iterator<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: ChordDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[ChordDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\r\n\t/**\r\n\t * Slice sprite of a node\r\n\t */\r\n\tpublic slice: Slice;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t */\r\n\tpublic label: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic nextAngle: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic trueStartAngle: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordNode\";\r\n\r\n\t\tlet label = this.createChild(AxisLabelCircular);\r\n\t\tlabel.location = 0.5;\r\n\t\tlabel.radius = 5;\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.zIndex = 1;\r\n\t\tlabel.shouldClone = false;\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.events.on(\"positionchanged\", this.updateRotation, this, false);\r\n\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.slice = this.createChild(Slice);\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.setStateOnChildren = false;\r\n\r\n\t\tthis.slice.hiddenState.properties.visible = true;\r\n\r\n\t\tthis.adapter.add(\"tooltipX\", (tooltipX, target)=>{\r\n\t\t    return target.slice.ix * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n\t\t})\r\n\r\n\t\tthis.adapter.add(\"tooltipY\", (tooltipY, target)=>{\r\n\t\t    return target.slice.iy * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\r\n\t\tlet label = this.label;\r\n\t\tlet slice = this.slice;\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart && slice) {\r\n\r\n\t\t\tlet sum = this.total;\r\n\t\t\tlet arc = slice.arc;\r\n\t\t\tlet sliceStartAngle = slice.startAngle;\r\n\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tif (child instanceof Bullet) {\r\n\t\t\t\t\tlet locationX = child.locationX;\r\n\t\t\t\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\t\t\t\tlocationX = 0.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet locationY = child.locationY;\r\n\t\t\t\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\t\t\t\tlocationY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet childAngle = sliceStartAngle + arc * locationX;\r\n\t\t\t\t\tlet childRadius = locationY * slice.radius;\r\n\r\n\t\t\t\t\tchild.x = childRadius * $math.cos(childAngle);\r\n\t\t\t\t\tchild.y = childRadius * $math.sin(childAngle);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\tlet labelAngle = sliceStartAngle + arc * label.location;\r\n\t\t\tlet startAngle = sliceStartAngle + (1 - sum / this.adjustedTotal) * arc * 0.5; // if value of a node is > then sum of the links, add to center link\r\n\r\n\t\t\tif ($type.isNaN(startAngle)) {\r\n\t\t\t\tstartAngle = sliceStartAngle;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.fixPosition(labelAngle, slice.radius);\r\n\r\n\t\t\tthis.nextAngle = startAngle;\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\tif (chart.nonRibbon) {\r\n\t\t\t\t\t\t\tlet percentWidth = link.percentWidth;\r\n\t\t\t\t\t\t\tif (!$type.isNumber(percentWidth)) {\r\n\t\t\t\t\t\t\t\tpercentWidth = 5;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpercentWidth = percentWidth / 100;\r\n\r\n\t\t\t\t\t\t\tlink.startAngle = sliceStartAngle + arc / 2 - arc / 2 * percentWidth;\r\n\t\t\t\t\t\t\tlink.arc = arc * percentWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlink.arc = value * chart.valueAngle;\r\n\t\t\t\t\t\t\tlink.startAngle = this.nextAngle;\r\n\t\t\t\t\t\t\tthis.nextAngle += link.arc;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tlink.endAngle = link.startAngle;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.radius = slice.pixelInnerRadius;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//link.validate();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\r\n\t\t\t\t\tlink.radius = slice.pixelInnerRadius;\r\n\r\n\t\t\t\t\tif (chart.nonRibbon) {\r\n\t\t\t\t\t\tlet percentWidth = link.percentWidth;\r\n\t\t\t\t\t\tif (!$type.isNumber(percentWidth)) {\r\n\t\t\t\t\t\t\tpercentWidth = 5;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpercentWidth = percentWidth / 100;\r\n\r\n\t\t\t\t\t\tlink.endAngle = sliceStartAngle + arc / 2 - arc / 2 * percentWidth;\r\n\t\t\t\t\t\tlink.arc = arc * percentWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlink.endAngle = this.nextAngle;\r\n\t\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tlink.arc = value * chart.valueAngle; // yes, this is needed\r\n\t\t\t\t\t\t\tthis.nextAngle += link.arc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\t\t\tlink.startAngle = link.endAngle;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//link.validate();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * updates slice start angle so that when we drag a node it would face the center\r\n\t */\r\n\tprotected updateRotation() {\r\n\t\tlet slice = this.slice;\r\n\t\tlet mAngle = this.trueStartAngle + slice.arc / 2;\r\n\t\tlet radius = slice.radius;\r\n\r\n\t\tlet tx = radius * $math.cos(mAngle);\r\n\t\tlet ty = radius * $math.sin(mAngle);\r\n\r\n\t\tlet angle = $math.getAngle({ x: tx + this.pixelX, y: ty + this.pixelY });\r\n\r\n\t\tslice.startAngle = this.trueStartAngle + (angle - mAngle);\r\n\r\n\t\tthis.dx = - this.pixelX;\r\n\t\tthis.dy = - this.pixelY;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[ChordNode]].\r\n\t *\r\n\t * @param source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t\tthis.slice.copyFrom(source.slice);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordNode\"] = ChordNode;\r\n","/**\r\n * Functionality for drawing quadratic curves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line, ILineProperties, ILineAdapters, ILineEvents } from \"./Line\";\r\nimport { IPoint, IOrientationPoint } from \"../defs/IPoint\";\r\nimport { color } from \"../utils/Color\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[QuadraticCurve]].\r\n */\r\nexport interface IQuadraticCurveProperties extends ILineProperties {\r\n\t/**\r\n\t * X coordinate of control point.\r\n\t */\r\n\tcpx?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of control point.\r\n\t */\r\n\tcpy?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[QuadraticCurve]].\r\n */\r\nexport interface IQuadraticCurveEvents extends ILineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[QuadraticCurve]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IQuadraticCurveAdapters extends ILineAdapters, IQuadraticCurveProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\r\nexport class QuadraticCurve extends Line {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IQuadraticCurveProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IQuadraticCurveAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IQuadraticCurveEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"QuadraticCurve\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.pixelPerfect = false;\r\n\r\n\t\tthis.fill = color();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\t//super.draw();\r\n\t\tif($type.isNumber(this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy )){\r\n\r\n\t\t\tlet p1: IPoint = { x: this.x1, y: this.y1 };\r\n\t\t\tlet p2: IPoint = { x: this.x2, y: this.y2 };\r\n\t\t\tlet cp: IPoint = { x: this.cpx, y: this.cpy };\r\n\r\n\t\t\tlet d: string = $path.moveTo(p1) + $path.quadraticCurveTo(p2, cp);\r\n\r\n\t\t\tthis.path = d;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of control point.\r\n\t *\r\n\t * @param value X\r\n\t */\r\n\tpublic set cpx(value: number) {\r\n\t\tthis.setPropertyValue(\"cpx\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get cpx(): number {\r\n\t\treturn this.getPropertyValue(\"cpx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of control point.\r\n\t *\r\n\t * @param value Y\r\n\t */\r\n\tpublic set cpy(value: number) {\r\n\t\tthis.setPropertyValue(\"cpy\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get cpy(): number {\r\n\t\treturn this.getPropertyValue(\"cpy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tlet p1 = {x:this.x1, y:this.y1};\r\n\t\tlet cp = {x:this.cpx, y:this.cpy};\r\n\t\tlet p2 = {x:this.x2, y:this.y2};\r\n\r\n\t\tlet point1 = $math.getPointOnQuadraticCurve(p1, p2, cp, position);\r\n\t\tlet point2 = $math.getPointOnQuadraticCurve(p1, p2, cp, position + 0.001);\r\n\r\n\t\treturn {x:point1.x, y:point1.y, angle:$math.getAngle(point1, point2)};\r\n\t}\r\n}\r\n","/**\r\n * ChordLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ChordDiagramDataItem } from \"../types/ChordDiagram\";\r\nimport { FlowDiagramLink, IFlowDiagramLinkAdapters, IFlowDiagramLinkEvents, IFlowDiagramLinkProperties } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { QuadraticCurve } from \"../../core/elements/QuadraticCurve\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ChordLink]].\r\n */\r\nexport interface IChordLinkProperties extends IFlowDiagramLinkProperties {\r\n\r\n\t/**\r\n\t * [radius description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tradius?: number;\r\n\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tarc?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ChordLink]].\r\n */\r\nexport interface IChordLinkEvents extends IFlowDiagramLinkEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordLinkAdapters extends IFlowDiagramLinkAdapters, IChordLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ChordLink extends FlowDiagramLink {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n     */\r\n\tpublic middleLine: QuadraticCurve;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordLink\";\r\n\r\n\t\tthis.middleLine = this.createChild(QuadraticCurve);\r\n\t\tthis.middleLine.shouldClone = false;\r\n\t\tthis.middleLine.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates (redraws) the link.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tif (!this.isTemplate) {\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\r\n\t\t\tlet arc = this.arc;\r\n\t\t\tlet radius = this.radius;\r\n\r\n\t\t\tlet fromNode = this.dataItem.fromNode;\r\n\t\t\tlet toNode = this.dataItem.toNode;\r\n\r\n\t\t\tlet fromX = 0;\r\n\t\t\tlet fromY = 0;\r\n\r\n\t\t\tif (fromNode) {\r\n\t\t\t\tfromX = fromNode.pixelX + fromNode.dx;\r\n\t\t\t\tfromY = fromNode.pixelY + fromNode.dy;\r\n\t\t\t}\r\n\r\n\t\t\tlet toX = 0;\r\n\t\t\tlet toY = 0;\r\n\r\n\t\t\tif (toNode) {\r\n\t\t\t\ttoX = toNode.pixelX + toNode.dx;\r\n\t\t\t\ttoY = toNode.pixelY + toNode.dy;\r\n\t\t\t}\r\n\r\n\t\t\tif (radius > 0) {\r\n\t\t\t\tlet x1 = radius * $math.cos(startAngle) + fromX;\r\n\t\t\t\tlet y1 = radius * $math.sin(startAngle) + fromY;\r\n\t\t\t\tlet x2 = radius * $math.cos(endAngle) + toX;\r\n\t\t\t\tlet y2 = radius * $math.sin(endAngle) + toY;\r\n\r\n\t\t\t\t//let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\r\n\t\t\t\t//let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\r\n\r\n\t\t\t\t//let cpx = (arcWidth) * $math.cos(cpAngle);\r\n\t\t\t\t//let cpy = (arcWidth) * $math.sin(cpAngle);\r\n\r\n\t\t\t\tlet cp = { x: 0, y: 0 };\r\n\t\t\t\tlet path = $path.moveTo({ x: x1, y: y1 });\r\n\r\n\t\t\t\tpath += $path.arcTo(startAngle, arc, radius);\r\n\t\t\t\tpath += $path.quadraticCurveTo({ x: x2, y: y2 }, cp);\r\n\t\t\t\tpath += $path.arcTo(endAngle, arc, radius);\r\n\t\t\t\tpath += $path.quadraticCurveTo({ x: x1, y: y1 }, cp);\r\n\r\n\t\t\t\tif (arc > 0) {\r\n\t\t\t\t\tthis.link.path = path;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.link.path = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.maskBullets) {\r\n\t\t\t\t\tthis.bulletsMask.path = path;\r\n\t\t\t\t\tthis.bulletsContainer.mask = this.bulletsMask;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet mAngle1 = startAngle + arc / 2;\r\n\t\t\t\tlet mAngle2 = endAngle + arc / 2;\r\n\r\n\t\t\t\tlet middleLine = this.middleLine;\r\n\r\n\t\t\t\tmiddleLine.x1 = radius * $math.cos(mAngle1) + fromX;\r\n\t\t\t\tmiddleLine.y1 = radius * $math.sin(mAngle1) + fromY;\r\n\t\t\t\tmiddleLine.x2 = radius * $math.cos(mAngle2) + toX;\r\n\t\t\t\tmiddleLine.y2 = radius * $math.sin(mAngle2) + toY;\r\n\r\n\t\t\t\tmiddleLine.cpx = 0;\r\n\t\t\t\tmiddleLine.cpy = 0;\r\n\r\n\t\t\t\tmiddleLine.stroke = this.fill;\r\n\r\n\t\t\t\tthis.positionBullets();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * [radius description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value End Y\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End Y\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set arc(value: number) {\r\n\t\tthis.setPropertyValue(\"arc\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get arc(): number {\r\n\t\treturn this.getPropertyValue(\"arc\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordLink\"] = ChordLink;\r\n","/**\r\n * Chord diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem, IFlowDiagramAdapters, IFlowDiagramDataFields, IFlowDiagramEvents, IFlowDiagramProperties } from \"./FlowDiagram\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { DictionaryTemplate } from \"../../core/utils/Dictionary\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ChordNode } from \"../elements/ChordNode\";\r\nimport { ChordLink } from \"../elements/ChordLink\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ChordDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChordDiagramDataItem extends FlowDiagramDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ChordDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: ChordLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: ChordNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: ChordNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordDiagramDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ChordDiagram]].\r\n */\r\nexport interface IChordDiagramDataFields extends IFlowDiagramDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ChordDiagram]]\r\n */\r\nexport interface IChordDiagramProperties extends IFlowDiagramProperties {\r\n\t/**\r\n\t * Radius of the Chord. Absolute or relative.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the Chord nodes. Absolute or relative. Negative value means that the inner radius will be calculated from the radius, not from the center.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle radar face starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle radar face ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\r\n\t/**\r\n\t * If you set this to true, all the lines will be of the same width.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tnonRibbon?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[ChordDiagram]].\r\n */\r\nexport interface IChordDiagramEvents extends IFlowDiagramEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordDiagramAdapters extends IFlowDiagramAdapters, IChordDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Chord Diagram chart.\r\n *\r\n * @see {@link IChordDiagramEvents} for a list of available Events\r\n * @see {@link IChordDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/chord-diagram/} for documentation\r\n * @important\r\n */\r\nexport class ChordDiagram extends FlowDiagram {\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IChordDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordDiagramEvents;\r\n\r\n\t/**\r\n\t * A list of chart's Chord nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, ChordNode>}\r\n\t */\r\n\tpublic nodes: DictionaryTemplate<string, ChordNode>;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: ChordLink;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, ChordNode]>;\r\n\r\n\t/**\r\n\t * [valueAngle description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueAngle: number = 0;\r\n\r\n\t/**\r\n\t * A container for chord elemens.\r\n\t */\r\n\tpublic chordContainer:Container;\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node:ChordNode;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordDiagram\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.radius = percent(80);\r\n\r\n\t\tthis.innerRadius = - 15;\r\n\r\n\t\tthis.nodePadding = 5;\r\n\r\n\t\tlet chordContainer = this.chartContainer.createChild(Container);\r\n\t\tchordContainer.align = \"center\";\r\n\t\tchordContainer.valign = \"middle\";\r\n\t\tchordContainer.shouldClone = false;\r\n\t\tchordContainer.layout = \"absolute\";\r\n\t\tthis.chordContainer = chordContainer;\r\n\r\n\t\tthis.nodesContainer.parent = chordContainer;\r\n\t\tthis.linksContainer.parent = chordContainer;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.invalidate, this, false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chartContainer = this.chartContainer;\r\n\r\n\t\tlet endAngle = this.endAngle;\r\n\t\tlet startAngle = this.startAngle + this.nodePadding / 2;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(chartContainer.innerWidth / rect.width, chartContainer.innerHeight / rect.height);\r\n\r\n\t\tif(!$type.isNumber(maxRadius)){\r\n\t\t\tmaxRadius = 0;\r\n\t\t}\r\n\r\n\t\tlet radius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n\t\tlet pixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, radius, true);\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\t\tlet count = 0;\r\n\r\n\t\tlet newTotal = 0;\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t\tcount++;\r\n\t\t\tlet value = node.total;\r\n\t\t\tif(node.total / total < this.minNodeSize){\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\t\t\tnewTotal += value;\r\n\t\t});\r\n\r\n\t\tthis.valueAngle = (endAngle - this.startAngle - this.nodePadding * count) / newTotal;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet slice = node.slice;\r\n\r\n\t\t\tslice.radius = radius;\r\n\t\t\tslice.innerRadius = pixelInnerRadius;\r\n\r\n\t\t\tlet value = node.total;\r\n\r\n\t\t\tif(node.total / total < this.minNodeSize){\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tnode.adjustedTotal = value;\r\n\r\n\t\t\tlet arc: number;\r\n\t\t\tif (this.nonRibbon) {\r\n\t\t\t\tarc = (endAngle - this.startAngle) / count - this.nodePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tarc = this.valueAngle * value;\r\n\t\t\t}\r\n\r\n\t\t\tslice.arc = arc;\r\n\t\t\tslice.startAngle = startAngle;\r\n\t\t\tnode.trueStartAngle = startAngle;\r\n\t\t\tnode.parent = this.nodesContainer;\r\n\t\t\tnode.validate(); // otherwise flickers - nodes are already created, but not yet positioned etc.\r\n\t\t\tstartAngle += arc + this.nodePadding;\r\n\t\t})\r\n\r\n\t\tthis.chordContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n\t\tthis.chordContainer.invalidateLayout();\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chord diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ChordDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n\t * top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the radial axis start horizontally to\r\n\t * the right, as opposed to vertical.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n\t * where it has started, forming a full 360 circle. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to end the circle somewhere else.\r\n\t *\r\n\t * E.g. setting this to 180 will make the radar face end at horizontal line\r\n\t * to the left off the center.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the Radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the Chord nodes.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * If you set this to true, all the lines will be of the same width. This is done by making middleLine of a ChordLink visible.\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set nonRibbon(value: boolean) {\r\n\t\tthis.setPropertyValue(\"nonRibbon\", value, true);\r\n\t\tthis.links.template.middleLine.strokeOpacity = 1;\r\n\t\tthis.links.template.link.fillOpacity = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Non-ribbon\r\n\t */\r\n\tpublic get nonRibbon(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonRibbon\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode():this[\"_node\"]{\r\n\t\tlet node = new ChordNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink():this[\"_link\"]{\r\n\t\tlet link = new ChordLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordDiagram\"] = ChordDiagram;\r\n","/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column]].\r\n */\r\nexport interface IColumnProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Column]].\r\n */\r\nexport interface IColumnEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnAdapters extends IContainerAdapters, IColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnEvents;\r\n\r\n\t/**\r\n\t * column element\r\n\t */\r\n\tpublic column: RoundedRectangle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realX: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realY: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column\";\r\n\r\n\t\tthis.width = percent(80);\r\n\t\tthis.height = percent(80);\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.events.disableType(\"transformed\"); // not to bug parent\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.createAssets();\r\n\r\n\t\t// otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n\t\tthis.events.on(\"childadded\", this.handleKidAdded, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleKidAdded() {\r\n\t\tif (this.layout == \"none\") {\r\n\t\t\tthis.layout = \"absolute\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column = this.createChild(RoundedRectangle);\r\n\t\tthis.column.shouldClone = false;\r\n\t\tthis.column.isMeasured = false;\r\n\t\tthis.column.cornerRadius(0, 0, 0, 0);\r\n\t\tthis._disposers.push(this.column);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet column = this.column;\r\n\t\tif (column) {\r\n\t\t\tcolumn.width = $math.min(this.pixelWidth, this.maxWidth);\r\n\t\t\tcolumn.height = $math.min(this.pixelHeight, this.maxHeight);\r\n\t\t\tif(column.invalid){\r\n\t\t\t\tcolumn.validate(); // important!\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Copies all parameters from another [[Column]].\r\n\t *\r\n\t * @param source Source Column\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.column) {\r\n\t\t\tthis.column.copyFrom(source.column);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tif (this.column) {\r\n\t\t\treturn { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n","/**\r\n * Column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, IXYSeriesDataFields, XYSeriesDataItem, IXYSeriesProperties, IXYSeriesAdapters, IXYSeriesEvents } from \"./XYSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { SpriteState } from \"../../core/SpriteState\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Column } from \"../elements/Column\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeriesDataItemAdapters extends IDataItemAdapters {\r\n\twidth: number | Percent;\r\n\theight: number | Percent;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ColumnSeriesDataItem extends XYSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeriesDataItemAdapters;\r\n\r\n\t/**\r\n\t * A Column Element\r\n\t */\r\n\tpublic _column: Column;\r\n\r\n\t/**\r\n\t * Indicates if this data items close value is lower than its open value.\r\n\t */\r\n\tpublic droppedFromOpen: boolean;\r\n\r\n\t/**\r\n\t * Indicates if this items value is lower than previous data item's value.\r\n\t */\r\n\tpublic droppedFromPrevious: boolean;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: ColumnSeries;\r\n\r\n\t/**\r\n\t * A dictionary storing axes ranges columns by axis uid\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _rangesColumns: Dictionary<string, this[\"_column\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeriesDataItem\";\r\n\r\n\t\tthis.locations[\"dateX\"] = 0.5;\r\n\t\tthis.locations[\"dateY\"] = 0.5;\r\n\r\n\t\tthis.locations[\"categoryX\"] = 0.5;\r\n\t\tthis.locations[\"categoryY\"] = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A column used to draw a column for this data item.\r\n\t *\r\n\t * @param column\r\n\t */\r\n\tpublic set column(column: this[\"_column\"]) {\r\n\t\tthis.setColumn(column);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Column\r\n\t */\r\n\tpublic get column(): this[\"_column\"] {\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tprotected setColumn(column: this[\"_column\"]) {\r\n\t\tif (this._column && column != this._column) {\r\n\t\t\t$array.remove(this.sprites, this._column);\r\n\t\t}\r\n\t\tthis._column = column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet prevDataItem: ColumnSeriesDataItem = <any>column.dataItem;\r\n\t\t\tif (prevDataItem && prevDataItem != this) {\r\n\t\t\t\tprevDataItem.column = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(column);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t// TODO investigate why component is undefined\r\n\t\t\t\t// https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.columns.removeValue(column);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic set width(value: number | Percent) {\r\n\t\tif (this.properties.width != value) {\r\n\t\t\tthis.properties.width = value;\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get width(): number | Percent {\r\n\t\tlet width = this.properties.width;\r\n\t\tif (this._adapterO) {\r\n\t\t\twidth = this._adapterO.apply(\"width\", width);\r\n\t\t}\r\n\t\treturn width;\r\n\t}\r\n\r\n\r\n\tpublic set height(value: number | Percent) {\r\n\t\tif (this.properties.height != value) {\r\n\t\t\tthis.properties.height = value;\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get height(): number | Percent {\r\n\t\tlet height = this.properties.height;\r\n\t\tif (this._adapterO) {\r\n\t\t\theight = this._adapterO.apply(\"height\", height);\r\n\t\t}\r\n\t\treturn height;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A dictionary storing axes ranges columns by axis uid\r\n\t */\r\n\tpublic get rangesColumns(): Dictionary<string, this[\"_column\"]> {\r\n\t\tif (!this._rangesColumns) {\r\n\t\t\tthis._rangesColumns = new Dictionary<string, this[\"_column\"]>();\r\n\t\t}\r\n\t\treturn this._rangesColumns;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IColumnSeriesDataFields extends IXYSeriesDataFields {\r\n\twidth?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ColumnSeries]].\r\n */\r\nexport interface IColumnSeriesProperties extends IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Cluster this series columns?\r\n\t *\r\n\t * Setting to `false` will make columns overlap with other series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tclustered?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ColumnSeries]].\r\n */\r\nexport interface IColumnSeriesEvents extends IXYSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeriesAdapters extends IXYSeriesAdapters, IColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ColumnSeries extends XYSeries {\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: Column;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IColumnSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * A list of column elements.\r\n\t */\r\n\tprotected _columns: ListTemplate<this[\"_column\"]>;\r\n\r\n\t/**\r\n\t * Container to put column elements in.\r\n\t */\r\n\tprotected _columnsContainer: Container;\r\n\r\n\t/**\r\n\t * Start location within cell for columns.\r\n\t */\r\n\tprotected _startLocation: number = 0;\r\n\r\n\t/**\r\n\t * End location within cell for columns.\r\n\t */\r\n\tprotected _endLocation: number = 1;\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is lower than open value.\r\n\t */\r\n\tprotected _dropFromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is lower value of a previous\r\n\t * column.\r\n\t */\r\n\tprotected _dropFromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is same or higher than open\r\n\t * value.\r\n\t */\r\n\tprotected _riseFromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is same or higher than value\r\n\t * of a previous column.\r\n\t */\r\n\tprotected _riseFromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeries\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\t\tthis.fillOpacity = 1;\r\n\r\n\t\tthis.clustered = true;\r\n\r\n\t\tlet columnsContainer = this.mainContainer.createChild(Container);\r\n\t\tcolumnsContainer.shouldClone = false;\r\n\t\tcolumnsContainer.isMeasured = false;\r\n\t\tcolumnsContainer.layout = \"none\";\r\n\t\tthis._columnsContainer = columnsContainer;\r\n\r\n\t\tthis.columns.template.pixelPerfect = false;\r\n\r\n\t\tthis.tooltipColorSource = this.columns.template;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A container that columns are created in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get columnsContainer() {\r\n\t\treturn this._columnsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Column Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ColumnSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\t//@todo Check if we can do better than use `instanceof`\r\n\t\t// find start/end locations based on clustered/stacked settings\r\n\t\t// go through chart series instead of base axis series, because axis series doesn't maintain order\r\n\r\n\t\tthis.group.node.removeAttribute(\"fill\");\r\n\r\n\t\tif (this.chart && this.xAxis && this.yAxis) {\r\n\t\t\tlet baseAxisSeries = this.chart.series;\r\n\t\t\tlet clusterCount: number = 0;\r\n\t\t\tlet index: number = 0;\r\n\r\n\t\t\tlet sortedByAxis: { series: XYSeries, axis: number }[] = [];\r\n\t\t\t$iter.each(baseAxisSeries.iterator(), (series) => {\r\n\t\t\t\tif (series instanceof ColumnSeries) {\r\n\t\t\t\t\tif (this.baseAxis == series.baseAxis) {\r\n\t\t\t\t\t\tlet index: number;\r\n\t\t\t\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\t\t\t\tindex = this.chart.yAxes.indexOf(series.yAxis);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tindex = this.chart.xAxes.indexOf(series.xAxis);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsortedByAxis.push({ series: series, axis: index })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\tsortedByAxis.sort((a, b) => a.axis - b.axis);\r\n\t\t\tlet prevAxisIndex: number;\r\n\r\n\t\t\t$array.each(sortedByAxis, (sortedItem) => {\r\n\t\t\t\tlet series = sortedItem.series;\r\n\t\t\t\tif (series instanceof ColumnSeries) {\r\n\t\t\t\t\tif ((!series.stacked && series.clustered) || (prevAxisIndex != sortedItem.axis && series.clustered)) {\r\n\t\t\t\t\t\tclusterCount++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (series == this) {\r\n\t\t\t\t\t\tindex = clusterCount - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprevAxisIndex = sortedItem.axis;\r\n\t\t\t});\r\n\r\n\t\t\tif (!this.clustered) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tclusterCount = 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.baseAxis.renderer;\r\n\r\n\t\t\tlet cellStartLocation: number = renderer.cellStartLocation;\r\n\t\t\tlet cellEndLocation: number = renderer.cellEndLocation;\r\n\r\n\t\t\tthis._startLocation = cellStartLocation + (index / clusterCount) * (cellEndLocation - cellStartLocation);\r\n\t\t\tthis._endLocation = cellStartLocation + (index + 1) / clusterCount * (cellEndLocation - cellStartLocation);\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tif (xAxis.sortBySeries == this) {\r\n\t\t\t\t\tthis.sortCategoryAxis(xAxis, \"valueY\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tif (yAxis.sortBySeries == this) {\r\n\t\t\t\t\tthis.sortCategoryAxis(yAxis, \"valueX\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tthis._propertiesChanged = false;\r\n\t}\r\n\r\n\tprotected sortCategoryAxis(axis: CategoryAxis, key: string) {\r\n\t\tthis.dataItems.values.sort((x, y) => {\r\n\t\t\treturn (<any>y).values[key].workingValue - (<any>x).values[key].workingValue;\r\n\t\t})\r\n\t\tlet i = 0;\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tdataItem._index = i;\r\n\t\t\ti++;\r\n\t\t})\r\n\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tlet axis = dataItem.component;\r\n\t\t\tlet currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\r\n\r\n\t\t\tlet seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, this);\r\n\r\n\t\t\tif (seriesDataItem) {\r\n\t\t\t\tlet index = this.dataItems.indexOf(<ColumnSeriesDataItem>seriesDataItem);\r\n\r\n\t\t\t\tdataItem._index = index;\r\n\r\n\t\t\t\tlet deltaPosition = $math.round((index + 0.5) / this.dataItems.length - currentPosition, 3);\r\n\r\n\t\t\t\tif (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\r\n\t\t\t\t\tif (dataItem.deltaAnimation) {\r\n\t\t\t\t\t\tdataItem.deltaAnimation.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.deltaAnimation = dataItem.animate({ property: \"deltaPosition\", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);\r\n\t\t\t\t\tthis._disposers.push(dataItem.deltaAnimation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\taxis.dataItems.values.sort((x, y) => {\r\n\t\t\treturn x.index - y.index;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t// important oder here, first real, then super. we need this to know size\r\n\t\tif (this.chart && this.xAxis && this.yAxis) {\r\n\t\t\tthis.validateDataElementReal(dataItem);\r\n\t\t\tsuper.validateDataElement(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative start location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getStartLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\tlet startLocation = this._startLocation;\r\n\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tstartLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstartLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n\t\t}\r\n\t\treturn startLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\t/*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t   if (this.simplifiedProcessing) {\r\n\t\t   this.validateDataElement(dataItem);\r\n\t   }\r\n\t   else {\r\n\t\t   super.handleDataItemWorkingValueChange(dataItem, name);\r\n\t   }\r\n   }*/\r\n\r\n\t/**\r\n\t * Returns relative end location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getEndLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\tlet endLocation = this._endLocation;\r\n\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tendLocation += dataItem.locations[this.xField] - 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tendLocation += dataItem.locations[this.yField] - 0.5;\r\n\t\t}\r\n\t\treturn endLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n\t\tlet l: number;\r\n\t\tlet r: number;\r\n\t\tlet t: number;\r\n\t\tlet b: number;\r\n\r\n\t\tlet startLocation = this.getStartLocation(dataItem);\r\n\t\tlet endLocation = this.getEndLocation(dataItem);\r\n\r\n\t\tlet xField = this.xField;\r\n\t\tlet xOpenField = this.xOpenField;\r\n\t\tlet yField = this.yField;\r\n\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\tlet template: Sprite = this.columns.template;\r\n\r\n\t\tlet percentWidth: number = template.percentWidth;\r\n\t\tlet percentHeight: number = template.percentHeight;\r\n\r\n\t\tlet pixelWidth: number = template.pixelWidth;\r\n\t\tlet pixelHeight: number = template.pixelHeight;\r\n\r\n\t\tlet maxWidth: number = template.maxWidth;\r\n\t\tlet maxHeight: number = template.maxHeight;\r\n\r\n\t\tlet paddingLeft: number = template.pixelPaddingLeft;\r\n\t\tlet paddingRight: number = template.pixelPaddingRight;\r\n\t\tlet paddingTop: number = template.pixelPaddingTop;\r\n\t\tlet paddingBottom: number = template.pixelPaddingBottom;\r\n\r\n\t\tlet outOfBounds: boolean = false;\r\n\r\n\t\tlet diw = dataItem.width;\r\n\t\tif ($type.hasValue(diw)) {\r\n\t\t\tif ($type.isNumber(diw)) {\r\n\t\t\t\tpixelWidth = diw;\r\n\t\t\t}\r\n\t\t\tif (diw instanceof Percent) {\r\n\t\t\t\tpercentWidth = diw.value * 100;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet dih = dataItem.height;\r\n\t\tif ($type.hasValue(dih)) {\r\n\t\t\tif ($type.isNumber(dih)) {\r\n\t\t\t\tpixelHeight = dih;\r\n\t\t\t}\r\n\t\t\tif (dih instanceof Percent) {\r\n\t\t\t\tpercentHeight = dih.value * 100;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// two category axes\r\n\t\tif ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n\r\n\t\t\tif (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstartLocation = 0;\r\n\t\t\tendLocation = 1;\r\n\t\t\tif (!$type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = ((r - l) - pixelWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case max width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n\t\t\t\tlet offset: number = ((r - l) - maxWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tstartLocation = 0;\r\n\t\t\tendLocation = 1;\r\n\r\n\t\t\tif (!$type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = $math.round((1 - percentHeight / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n\t\t\tb = this.yAxis.getY(dataItem, yField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = ((b - t) - pixelHeight) / 2;\r\n\t\t\t\tb += offset;\r\n\t\t\t\tt -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case max width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n\t\t\t\tlet offset: number = ((b - t) - maxHeight) / 2;\r\n\t\t\t\tb += offset;\r\n\t\t\t\tt -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tr = this.fixHorizontalCoordinate(r);\r\n\t\t\tl = this.fixHorizontalCoordinate(l);\r\n\t\t\tt = this.fixVerticalCoordinate(t);\r\n\t\t\tb = this.fixVerticalCoordinate(b);\r\n\t\t}\r\n\t\telse if (this.baseAxis == this.xAxis) {\r\n\r\n\t\t\tif (!dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// in case width is set in percent\r\n\t\t\tif (!$type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = ((r - l) - pixelWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n\t\t\t\tlet offset: number = ((r - l) - maxWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomLocation = dataItem.locations[yOpenField];\r\n\t\t\tlet topLocation = dataItem.locations[yField];\r\n\t\t\t// otherwise gantt chart will start items in the middle of a cell\r\n\t\t\tif (this.yAxis instanceof ValueAxis) {\r\n\t\t\t\tif ((<any>this.dataFields)[this.yField] != (<any>this.dataFields)[this.yOpenField]) {\r\n\t\t\t\t\tbottomLocation = 0;\r\n\t\t\t\t\ttopLocation = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tb = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n\t\t\tt = this.yAxis.getY(dataItem, yField, topLocation);\r\n\r\n\t\t\t// used to save location for bullets, but it's not a good approach\r\n\t\t\t// dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n\r\n\t\t\tlet axisLenght = Math.ceil(this.yAxis.axisLength);\r\n\r\n\t\t\tif ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.fixVerticalCoordinate(t);\r\n\t\t\tb = this.fixVerticalCoordinate(b);\r\n\r\n\t\t\tif (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// horizontal bars\r\n\t\telse {\r\n\t\t\tif (!dataItem.hasValue(this._xValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n\t\t\tb = this.yAxis.getY(dataItem, yField, endLocation);\r\n\r\n\t\t\t// in case height is set in pixels\r\n\t\t\tif ($type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = ((b - t) - pixelHeight) / 2;\r\n\t\t\t\tb -= offset;\r\n\t\t\t\tt += offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case height is set in pixels\r\n\t\t\tif (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n\t\t\t\tlet offset: number = ((b - t) - maxHeight) / 2;\r\n\t\t\t\tb -= offset;\r\n\t\t\t\tt += offset;\r\n\t\t\t}\r\n\r\n\t\t\tlet rightLocation = dataItem.locations[xField];\r\n\t\t\tlet leftLocation = dataItem.locations[xOpenField];\r\n\r\n\t\t\t// otherwise gantt chart will start items in the middle of a cell\r\n\t\t\tif (this.xAxis instanceof ValueAxis) {\r\n\t\t\t\tif ((<any>this.dataFields)[this.xField] != (<any>this.dataFields)[this.xOpenField]) {\r\n\t\t\t\t\trightLocation = 0;\r\n\t\t\t\t\tleftLocation = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, rightLocation);\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n\t\t\t// used to save location for bullets, but it's not a good approach\r\n\t\t\t// dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n\r\n\t\t\tlet axisLenght = Math.ceil(this.xAxis.axisLength);\r\n\r\n\t\t\tif ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\r\n\t\t\tr = this.fixHorizontalCoordinate(r);\r\n\t\t\tl = this.fixHorizontalCoordinate(l);\r\n\r\n\t\t\tif (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet w: number = Math.abs(r - l);\r\n\t\tlet h: number = Math.abs(b - t);\r\n\r\n\t\tlet x: number = Math.min(l, r);\r\n\t\tlet y: number = Math.min(t, b);\r\n\r\n\t\tif (!outOfBounds) {\r\n\t\t\tlet column: this[\"_column\"];\r\n\t\t\tif (!dataItem.column) {\r\n\t\t\t\tcolumn = this.columns.create();\r\n\t\t\t\t//$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n\t\t\t\t$object.copyProperties(this, column, visualProperties); // need this because 3d columns are not in the same container\r\n\t\t\t\t$object.copyProperties(this.columns.template, column, visualProperties); // second time, no force, so that columns.template would override series properties\r\n\t\t\t\tdataItem.addSprite(column);\r\n\r\n\t\t\t\tdataItem.column = column;\r\n\t\t\t\tcolumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\r\n\t\t\t\t// accessibility\r\n\t\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\t\tif (!$type.hasValue(this.role)) {\r\n\t\t\t\t\t\tthis.role = \"menu\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.hasValue(column.role)) {\r\n\t\t\t\t\t\tcolumn.role = \"menuitem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumn.focusable = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!$type.hasValue(this.role)) {\r\n\t\t\t\t\t\tthis.role = \"list\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.hasValue(column.role)) {\r\n\t\t\t\t\t\tcolumn.role = \"listitem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumn.focusable = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (column.focusable) {\r\n\t\t\t\t\tcolumn.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tcolumn.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\t\t\t\tif (column.hoverable) {\r\n\t\t\t\t\tcolumn.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tcolumn.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\t\t\t\tcolumn.parent = this.columnsContainer;\r\n\t\t\t\tcolumn.virtualParent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn = dataItem.column;\r\n\t\t\t\tif (this._propertiesChanged) {\r\n\t\t\t\t\t$object.copyProperties(this, column, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\t\t\t\t\t$array.each(visualProperties, (property) => {\r\n\t\t\t\t\t\t(<any>column)[property] = column[property];\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.width = w;\r\n\t\t\tcolumn.height = h;\r\n\r\n\t\t\tcolumn.x = x;\r\n\t\t\tcolumn.y = y;\r\n\r\n\t\t\tcolumn.realX = l;\r\n\t\t\tcolumn.realY = t;\r\n\r\n\t\t\tcolumn.realWidth = r - l;\r\n\t\t\tcolumn.realHeight = b - t;\r\n\r\n\t\t\tthis.setColumnStates(column);\r\n\r\n\t\t\tif (column.invalid) {\r\n\t\t\t\tcolumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.__disabled = false;\r\n\t\t\t//column.returnAfterTemp();\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: this[\"_column\"] = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (!rangeColumn) {\r\n\t\t\t\t\trangeColumn = this.columns.create();\r\n\r\n\t\t\t\t\t//$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n\r\n\t\t\t\t\tdataItem.addSprite(rangeColumn);\r\n\t\t\t\t\tdataItem.rangesColumns.setKey(axisRange.uid, <Column>rangeColumn);\r\n\t\t\t\t\trangeColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.parent = axisRange.contents;\r\n\r\n\t\t\t\trangeColumn.width = w;\r\n\t\t\t\trangeColumn.height = h;\r\n\t\t\t\trangeColumn.x = x;\r\n\t\t\t\trangeColumn.y = y;\r\n\r\n\t\t\t\tthis.setColumnStates(rangeColumn);\r\n\r\n\t\t\t\tif (rangeColumn.invalid) {\r\n\t\t\t\t\trangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.__disabled = false;\r\n\t\t\t\t//rangeColumn.returnAfterTemp();\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tdataItem.itemWidth = w;\r\n\t\tdataItem.itemHeight = h;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tif (dataItem) {\r\n\t\t\tif (dataItem.column) {\r\n\t\t\t\t// otherwise might flicker when enabling\r\n\t\t\t\tdataItem.column.width = 0;\r\n\t\t\t\tdataItem.column.height = 0;\r\n\t\t\t\tdataItem.column.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: Sprite = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\t// otherwise might flicker when enabling\r\n\t\t\t\t\trangeColumn.width = 0;\r\n\t\t\t\t\trangeColumn.height = 0;\r\n\t\t\t\t\trangeColumn.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Apply different state/coloring to columns based on the change value.\r\n\t *\r\n\t * @param sprite  Sprite to apply state to\r\n\t * @todo Do not apply accessibility to wicks of the candlesticks\r\n\t */\r\n\tprotected setColumnStates(sprite: Sprite): void {\r\n\t\tif (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>sprite.dataItem;\r\n\r\n\t\t\tif (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\r\n\t\t\t\tlet open: number;\r\n\t\t\t\tlet value: number;\r\n\t\t\t\tlet change: number;\r\n\r\n\t\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\t\tif (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\r\n\t\t\t\t\t\topen = dataItem.getValue(this.xOpenField);\r\n\t\t\t\t\t\tvalue = dataItem.getValue(this.xField);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchange = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\r\n\t\t\t\t\t\topen = dataItem.getValue(this.yOpenField);\r\n\t\t\t\t\t\tvalue = dataItem.getValue(this.yField);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchange = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < open) {\r\n\t\t\t\t\tdataItem.droppedFromOpen = true;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._dropFromOpenState)\r\n\t\t\t\t\tsprite.setState(this._dropFromOpenState, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem.droppedFromOpen = false;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._riseFromOpenState)\r\n\t\t\t\t\tsprite.setState(this._riseFromOpenState, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (change < 0) {\r\n\t\t\t\t\tdataItem.droppedFromPrevious = true;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._dropFromPreviousState)\r\n\t\t\t\t\tsprite.setState((this._dropFromPreviousState), 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem.droppedFromPrevious = false;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._riseFromPreviousState)\r\n\t\t\t\t\tsprite.setState((this._riseFromPreviousState), 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of column elements in the series.\r\n\t *\r\n\t * @return Columns\r\n\t */\r\n\tpublic get columns(): ListTemplate<this[\"_column\"]> {\r\n\t\tif (!this._columns) {\r\n\t\t\tthis._columns = new ListTemplate<this[\"_column\"]>(this.createColumnTemplate());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._columns));\r\n\t\t\tthis._disposers.push(this._columns.template);\r\n\t\t}\r\n\t\treturn this._columns;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a column element to use as a template.\r\n\t *\r\n\t * @return Column template\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Column();\r\n\t}\r\n\r\n\t/**\r\n\t * Cluster this series columns?\r\n\t *\r\n\t * Setting to `false` will make columns overlap with other series.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Clustered?\r\n\t */\r\n\tpublic set clustered(value: boolean) {\r\n\t\tthis.setPropertyValue(\"clustered\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Clustered?\r\n\t */\r\n\tpublic get clustered(): boolean {\r\n\t\treturn this.getPropertyValue(\"clustered\");\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is lower than open value.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set dropFromOpenState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._dropFromOpenState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get dropFromOpenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._dropFromOpenState) {\r\n\t\t\tthis._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n\t\t}\r\n\t\treturn this._dropFromOpenState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is lower value of a previous\r\n\t * column.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set dropFromPreviousState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._dropFromPreviousState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get dropFromPreviousState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._dropFromPreviousState) {\r\n\t\t\tthis._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n\t\t}\r\n\t\treturn this._dropFromPreviousState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is same or higher than open\r\n\t * value.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set riseFromOpenState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._riseFromOpenState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get riseFromOpenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._riseFromOpenState) {\r\n\t\t\tthis._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n\t\t}\r\n\t\treturn this._riseFromOpenState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is same or higher than value\r\n\t * of a previous column.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set riseFromPreviousState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._riseFromPreviousState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get riseFromPreviousState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._riseFromPreviousState) {\r\n\t\t\tthis._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n\t\t}\r\n\t\treturn this._riseFromPreviousState;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates value of the related legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\tsuper.updateLegendValue(dataItem, notRange);\r\n\r\n\t\tif (this.legendDataItem) {\r\n\t\t\tlet marker: Container = this.legendDataItem.marker;\r\n\t\t\tlet fromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\t\t\tlet fromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (dataItem.droppedFromOpen) {\r\n\t\t\t\t\tfromOpenState = this._dropFromOpenState;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfromOpenState = this._riseFromOpenState;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataItem.droppedFromPrevious) {\r\n\t\t\t\t\tfromPreviousState = this._dropFromPreviousState;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfromPreviousState = this._riseFromPreviousState;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(marker.children.iterator(), (child) => {\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tchild.setState(fromPreviousState);\r\n\t\t\t\t\tchild.setState(fromOpenState);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// todo: think what to do here, maybe apply above states based on totals?\r\n\t\t\t\t\tchild.setState(this._riseFromPreviousState);\r\n\t\t\t\t\tchild.setState(this._riseFromOpenState);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = this.fill;\r\n\t\tlegendDataItem.colorOrig = this.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[ColumnSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.columns.template.copyFrom(source.columns.template);\r\n\t}\r\n\r\n\t/**\r\n\t* returns bullet x location\r\n\t* @ignore\r\n\t*/\r\n\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tlet bulletLocationX = bullet.locationX;\r\n\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\tbulletLocationX = 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tlet endLocation = this.getEndLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\t\t\tlet startLocation = this.getStartLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\r\n\t\t\treturn endLocation - (endLocation - startLocation) * bulletLocationX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getBulletLocationX(bullet, field);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* returns bullet y location\r\n\t* @ignore\r\n\t*/\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tlet bulletLocationY = bullet.locationY;\r\n\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\tbulletLocationY = 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tlet endLocation = this.getEndLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\t\t\tlet startLocation = this.getStartLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\r\n\t\t\treturn endLocation - (endLocation - startLocation) * bulletLocationY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getBulletLocationY(bullet, field);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\t//if (this.baseAxis == this.xAxis) {\r\n\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tbulletLocationX = dataItem.locations[field];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbulletLocationX = 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\treturn super.getAdjustedXLocation(dataItem, field);\r\n\t\t//}\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\t//if (this.baseAxis == this.yAxis) {\r\n\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tbulletLocationY = dataItem.locations[field];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbulletLocationY = 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\treturn super.getAdjustedYLocation(dataItem, field);\r\n\t\t//}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected fixVerticalCoordinate(coordinate: number): number {\r\n\t\tlet paddingBottom = this.columns.template.pixelPaddingBottom;\r\n\t\tlet paddingTop = this.columns.template.pixelPaddingTop;\r\n\r\n\t\tlet minY: number = -paddingTop;\r\n\t\tlet maxY: number = this.yAxis.axisLength + paddingBottom;\r\n\r\n\t\treturn $math.fitToRange(coordinate, minY, maxY);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected fixHorizontalCoordinate(coordinate: number): number {\r\n\t\tlet paddingLeft = this.columns.template.pixelPaddingLeft;\r\n\t\tlet paddingRight = this.columns.template.pixelPaddingRight;\r\n\r\n\t\tlet minX: number = -paddingLeft;\r\n\t\tlet maxX: number = this.xAxis.axisLength + paddingRight;\r\n\r\n\t\treturn $math.fitToRange(coordinate, minX, maxX);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.columns.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n","/**\r\n * TreeMap series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { TreeMap, TreeMapDataItem } from \"../types/TreeMap\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../../core/Container\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class TreeMapSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: TreeMapSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMapSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Data for the this particular item.\r\n\t *\r\n\t * @param value  Item's data\r\n\t */\r\n\t//public set dataContext(value: Object) {\r\n\t//\tthis._dataContext = value;\r\n\t//}\r\n\r\n\r\n\r\n\t/**\r\n\t * @return Item's data\r\n\t */\r\n\t/*\r\n   public get dataContext(): Object {\r\n\t   // It's because data of tree series is TreeMapDataItems.\r\n\t   if (this._dataContext) {\r\n\t\t   return (<any>this._dataContext).dataContext;\r\n\t   }\r\n   }*/\r\n\r\n\t/**\r\n\t * The name of the item's parent item.\r\n\t *\r\n\t * @return Parent name\r\n\t */\r\n\tpublic get parentName(): string {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem && treeMapDataItem.parent) {\r\n\t\t\treturn treeMapDataItem.parent.name;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value.\r\n\t *\r\n\t * @readonly\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\treturn treeMapDataItem.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A corresponding data item from the tree map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Data item\r\n\t */\r\n\tpublic get treeMapDataItem(): TreeMapDataItem {\r\n\t\treturn <TreeMapDataItem>this._dataContext;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\ttreeMapDataItem.hide(duration);\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, toValue, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\ttreeMapDataItem.show(duration, delay, fields);\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TreeMapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITreeMapSeriesAdapters extends IColumnSeriesAdapters, ITreeMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapSeriesEvents} for a list of available Events\r\n * @see {@link ITreeMapSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class TreeMapSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ITreeMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITreeMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITreeMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITreeMapSeriesEvents;\r\n\r\n\t/**\r\n\t * The level in treemap hierarchy series is at.\r\n\t */\r\n\tpublic level: number;\r\n\r\n\t/**\r\n\t * Type of the data item used by series.\r\n\t */\r\n\tpublic _dataItem: TreeMapSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: TreeMap;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"TreeMapSeries\";\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.fillOpacity = 1;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.minBulletDistance = 0;\r\n\t\tthis.columns.template.tooltipText = \"{parentName} {name}: {value}\"; //@todo add format number?\r\n\t\tthis.columns.template.configField = \"config\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"background\");\r\n\t\tthis.dataFields.openValueX = \"x0\";\r\n\t\tthis.dataFields.valueX = \"x1\";\r\n\t\tthis.dataFields.openValueY = \"y0\";\r\n\t\tthis.dataFields.valueY = \"y1\";\r\n\r\n\t\tthis.sequencedInterpolation = false;\r\n\r\n\t\tthis.showOnInit = false;\r\n\r\n\t\t// otherwise nodes don't stack nicely to each other\r\n\t\tthis.columns.template.pixelPerfect = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\t(<TreeMapDataItem>dataContext).seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes\r\n\t\tsuper.processDataItem(dataItem, dataContext);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new TreeMapSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Shows series.\r\n\t *\r\n\t * @param duration  Duration of fade in (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\t\tif(this.preventShow){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t//dataItem.treeMapDataItem.setWorkingValue(\"value\", dataItem.treeMapDataItem.values.value.value);\r\n\t\t\tdataItem.show(duration);\r\n\t\t})\r\n\r\n\t\treturn super.showReal(interpolationDuration);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of fade out (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tlet animation = super.hideReal(interpolationDuration);\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t//dataItem.treeMapDataItem.setWorkingValue(\"value\", 0);\r\n\t\t\tdataItem.hide(duration);\r\n\t\t})\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Process values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processValues() {\r\n\r\n\t\t// Just overriding so that inherited method does not kick in.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative start location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getStartLocation(dataItem: this[\"_dataItem\"]): number {\t\t\r\n\t\treturn 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Returns relative end location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getEndLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\treturn 1;\r\n\t}\t\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Add empty data fields if the they are not set, so that XYSeries\r\n\t\t\t// dataField check does not result in error.\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tconfig.dataFields = {};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\r\n\t\t//column.copyFrom(<any>this.columns.template);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tsuper.disableUnusedColumns(dataItem);\r\n\t\tif(dataItem.column){\r\n\t\t\tdataItem.column.__disabled = false;\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMapSeries\"] = TreeMapSeries;\r\nregistry.registeredClasses[\"TreeMapSeriesDataItem\"] = TreeMapSeriesDataItem;\r\n","/**\r\n * TreeMap chart module.\r\n *\r\n * Parts of the functionality used in this module are taken from D3.js library\r\n * (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { TreeMapSeries } from \"../series/TreeMapSeries\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { TreeMapSeriesDataItem } from \"../series/TreeMapSeries\";\r\nimport { NavigationBar } from \"../elements/NavigationBar\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { Export } from \"../../core/export/Export\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMap]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class TreeMapDataItem extends XYChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: TreeMap;\r\n\r\n\t/**\r\n\t * A treemap level this data item is displayed at.\r\n\t */\r\n\tprotected _level: number;\r\n\r\n\t/**\r\n\t * Series of children data items.\r\n\t */\r\n\tprotected _series: TreeMapSeries;\r\n\r\n\t/**\r\n\t * Related series data item.\r\n\t */\r\n\tpublic seriesDataItem: TreeMapSeriesDataItem;\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rows: TreeMapDataItem[] = [];\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rowsRatio: number;\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic dice: boolean;\r\n\r\n\t/**\r\n\t * A reference to a corresponding legend data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMapDataItem\";\r\n\r\n\t\tthis.values.value = {workingValue:0};\r\n\r\n\t\tthis.values.x0 = {};\r\n\r\n\t\tthis.values.y0 = {};\r\n\r\n\t\tthis.values.x1 = {};\r\n\r\n\t\tthis.values.y1 = {};\r\n\r\n\t\tthis.hasChildren.children = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a duration (ms) the Data Item should take to animate from one\r\n\t * value to another.\r\n\t *\r\n\t * If the duration is not specified via parameter, this method will try to\r\n\t * request a default duration from the related `Component`.\r\n\t *\r\n\t * @param duration  Default duration (ms)\r\n\t * @return Duration (ms)\r\n\t */\r\n\tpublic getDuration(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the item.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = 0;\r\n\t\tif (!this.children || this.children.length == 0) {\r\n\t\t\tvalue = this.values[\"value\"].workingValue;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tlet childValue = child.value;\r\n\t\t\t\tif ($type.isNumber(childValue)) {\r\n\t\t\t\t\tvalue += childValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t\t/*\r\n\t\tlet value = this.values[\"value\"].workingValue;\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t\tif (this.children) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tif ($type.isNumber(child.value)) {\r\n\t\t\t\t\t\tvalue += child.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;*/\r\n\t}\r\n\r\n\t/**\r\n\t * Percent value of a node\r\n\t */\r\n\tpublic get percent(): number {\r\n\t\tif (this.parent) {\r\n\t\t\treturn this.value / this.parent.value * 100;\r\n\t\t}\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's X position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  X\r\n\t */\r\n\tpublic set x0(value: number) {\r\n\t\tthis.setValue(\"x0\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x0(): number {\r\n\t\treturn this.values.x0.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's X position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  X\r\n\t */\r\n\tpublic set x1(value: number) {\r\n\t\tthis.setValue(\"x1\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x1(): number {\r\n\t\treturn this.values.x1.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's Y position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  Y\r\n\t */\r\n\tpublic set y0(value: number) {\r\n\t\tthis.setValue(\"y0\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y0(): number {\r\n\t\treturn this.values.y0.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's Y position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  Y\r\n\t */\r\n\tpublic set y1(value: number) {\r\n\t\tthis.setValue(\"y1\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y1(): number {\r\n\t\treturn this.values.y1.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's name.\r\n\t *\r\n\t * @param name  Name\r\n\t */\r\n\tpublic set name(name: string) {\r\n\t\tthis.setProperty(\"name\", name);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.properties.name;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of item's sub-children.\r\n\t *\r\n\t * Having children means that the TreeMap chat will automatically be\r\n\t * \"drillable\". Clicking on an item with children will zoom to the item, then\r\n\t * display its children.\r\n\t *\r\n\t * Treemap can have any level of nesting.\r\n\t *\r\n\t * @param children  Item's children\r\n\t */\r\n\tpublic set children(children: OrderedListTemplate<TreeMapDataItem>) {\r\n\t\tthis.setProperty(\"children\", children);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Item's children\r\n\t */\r\n\tpublic get children(): OrderedListTemplate<TreeMapDataItem> {\r\n\t\treturn this.properties.children;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth level in the treemap hierarchy.\r\n\t *\r\n\t * The top-level item will have level set at 0. Its children will have\r\n\t * level 1, and so on.\r\n\t *\r\n\t * @readonly\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.parent.level + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's color.\r\n\t *\r\n\t * If not set, will use parent's color, or, if that is not set either,\r\n\t * automatically assigned color from chart's color set. (`chart.colors`)\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * For the legend to work properly\r\n\t */\r\n\tpublic get fill(): Color {\r\n\t\treturn this.color;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\tlet color = this.properties.color;\r\n\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcolor = this.parent.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tcolor = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\t/**\r\n\t * Series of children data items\r\n\t * @todo: proper descrition\r\n\t */\r\n\tpublic set series(series: TreeMapSeries) {\r\n\t\tif (series != this._series) {\r\n\t\t\tif (this._series) {\r\n\t\t\t\tthis.component.series.removeValue(this._series);\r\n\t\t\t\tthis._series.dispose();\r\n\t\t\t}\r\n\t\t\tthis._series = series;\r\n\t\t\tthis._disposers.push(series);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get series(): TreeMapSeries {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.setWorkingValue(\"value\", 0);\r\n\r\n\t\tif (this.children) {\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.hide(duration, delay, toValue, fields);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet seriesDataItem = this.seriesDataItem;\r\n\t\tif (seriesDataItem) {\r\n\t\t\tseriesDataItem.bullets.each((key, value) => {\r\n\t\t\t\tvalue.hide();\r\n\t\t\t\tvalue.preventShow = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn super.hide(duration, delay, toValue, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.setWorkingValue(\"value\", this.values.value.value);\r\n\t\tif (this.children) {\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.show(duration, delay, fields);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet seriesDataItem = this.seriesDataItem;\r\n\t\tif (seriesDataItem) {\r\n\t\t\tseriesDataItem.bullets.each((key, value) => {\r\n\t\t\t\tvalue.preventShow = false;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[TreeMap]].\r\n */\r\nexport interface ITreeMapDataFields extends IXYChartDataFields {\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's sub-items.\r\n\t */\r\n\tchildren?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's name.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's color.\r\n\t *\r\n\t * If not set, a new color will be automatically assigned to each item as\r\n\t * defined by theme.\r\n\t */\r\n\tcolor?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[TreeMap]].\r\n */\r\nexport interface ITreeMapProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Maximum number of levels the chart will display initially.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tmaxLevels?: number;\r\n\r\n\t/**\r\n\t * Current drill-down level the treemap is at.\r\n\t */\r\n\tcurrentLevel?: number;\r\n\r\n\t/**\r\n\t * Sorting direction of treemap items.\r\n\t *\r\n\t * @default \"descending\"\r\n\t */\r\n\tsorting?: \"none\" | \"ascending\" | \"descending\";\r\n\r\n\t/**\r\n\t * If set to `true`, columns of parent nodes will be hidden when user\r\n\t * drills-down into deeper levels.\r\n\t * \r\n\t * @sice 4.7.4\r\n\t * @default false\r\n\t */\r\n\thideParentColumns?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[TreeMap]].\r\n */\r\nexport interface ITreeMapEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TreeMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITreeMapAdapters extends IXYChartAdapters, ITreeMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapEvents} for a list of available Events\r\n * @see {@link ITreeMapAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/} for documentation\r\n */\r\nexport class TreeMap extends XYChart {\r\n\r\n\t/**\r\n\t * Defines a type of the data item used for this chart.\r\n\t */\r\n\tpublic _dataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ITreeMapDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITreeMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITreeMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITreeMapEvents;\r\n\r\n\t/**\r\n\t * A horizontal value axis.\r\n\t *\r\n\t * TreeMap chart is basically an XY chart, which means it has vertical and\r\n\t * horizontal value axes.\r\n\t *\r\n\t * As with any XY-based chart, it can be zoomed.\r\n\t */\r\n\tpublic xAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * A vertical value axis.\r\n\t *\r\n\t * TreeMap chart is basically an XY chart, which means it has vertical and\r\n\t * horizontal value axes.\r\n\t *\r\n\t * As with any XY-based chart, it can be zoomed.\r\n\t */\r\n\tpublic yAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * An algorithm used to divide area into squares based on their value.\r\n\t *\r\n\t * Available options: squarify (default), binaryTree, slice, dice, sliceDice.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.layoutAlgorithm = chart.sliceDice;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.layoutAlgorithm = chart.sliceDice;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"layoutAlgorithm\": \"sliceDice\",\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/#Area_division_methods} For more info and examples.\r\n\t * @default squarify\r\n\t */\r\n\tpublic layoutAlgorithm: (parent: TreeMapDataItem) => void = this.squarify;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: TreeMapSeries;\r\n\r\n\t/**\r\n\t * [_homeDataItem description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _homeDataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * [_tempSeries description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tempSeries: TreeMapSeries[];\r\n\r\n\t/**\r\n\t * A text dispalyed on the home button in breadcurmb nav control.\r\n\t */\r\n\tprotected _homeText: string;\r\n\r\n\t/**\r\n\t * A set of colors to be applied automatically to each new chart item, if\r\n\t * not explicitly set.\r\n\t */\r\n\tpublic colors: ColorSet;\r\n\r\n\t/**\r\n\t * Holds series object for each TreeMap level.\r\n\t *\r\n\t * \"0\" is the top-level series.\r\n\t * \"1\" is the second level.\r\n\t * Etc.\r\n\t *\r\n\t * @todo Description\r\n\t * @param Templates for each level\r\n\t */\r\n\tpublic seriesTemplates: DictionaryTemplate<string, this[\"_seriesType\"]>;\r\n\r\n\t/**\r\n\t * Is the chart zoomable?\r\n\t *\r\n\t * If the chart is `zoomable`, and items have sub-items, the chart will\r\n\t * drill-down to sub-items when click on their parent item.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic zoomable: boolean = true;\r\n\r\n\r\n\t/**\r\n\t * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n\t * drill-down path.\r\n\t */\r\n\tprotected _navigationBar: NavigationBar;\r\n\r\n\t/**\r\n\t * Currently selected data item.\r\n\t * @readonly\r\n\t */\r\n\tpublic currentlyZoomed: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMap\";\r\n\r\n\t\tthis._usesData = true;\r\n\r\n\t\tthis.maxLevels = 2;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.hideParentColumns = false;\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.sorting = \"descending\";\r\n\r\n\t\t// create two value axes for the chart\r\n\t\tlet xAxis = this.xAxes.push(new ValueAxis<any>());\r\n\t\txAxis.title.disabled = true;\r\n\t\txAxis.strictMinMax = true;\r\n\r\n\t\tlet xRenderer = xAxis.renderer;\r\n\t\txRenderer.inside = true;\r\n\t\txRenderer.labels.template.disabled = true;\r\n\t\txRenderer.ticks.template.disabled = true;\r\n\t\txRenderer.grid.template.disabled = true;\r\n\t\txRenderer.axisFills.template.disabled = true;\r\n\t\txRenderer.minGridDistance = 100;\r\n\t\txRenderer.line.disabled = true;\r\n\t\txRenderer.baseGrid.disabled = true;\r\n\t\t//xRenderer.inversed = true;\r\n\r\n\t\tlet yAxis = this.yAxes.push(new ValueAxis<any>());\r\n\t\tyAxis.title.disabled = true;\r\n\t\tyAxis.strictMinMax = true;\r\n\r\n\t\tlet yRenderer = yAxis.renderer;\r\n\t\tyRenderer.inside = true;\r\n\t\tyRenderer.labels.template.disabled = true;\r\n\t\tyRenderer.ticks.template.disabled = true;\r\n\t\tyRenderer.grid.template.disabled = true;\r\n\t\tyRenderer.axisFills.template.disabled = true;\r\n\t\tyRenderer.minGridDistance = 100;\r\n\t\tyRenderer.line.disabled = true;\r\n\t\tyRenderer.baseGrid.disabled = true;\r\n\t\tyRenderer.inversed = true;\r\n\r\n\t\t// shortcuts\r\n\t\tthis.xAxis = xAxis;\r\n\t\tthis.yAxis = yAxis;\r\n\r\n\t\tconst template = new TreeMapSeries();\r\n\t\tthis.seriesTemplates = new DictionaryTemplate<string, this[\"_seriesType\"]>(template);\r\n\t\ttemplate.virtualParent = this;\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.seriesTemplates));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\tthis.zoomOutButton.events.on(\"hit\", () => {\r\n\t\t\tthis.zoomToChartDataItem(this._homeDataItem);\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis.seriesTemplates.events.on(\"insertKey\", (event) => {\r\n\t\t\tevent.newValue.isTemplate = true;\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n\t * drill-down path.\r\n\t */\r\n\tpublic set navigationBar(navigationBar: NavigationBar) {\r\n\t\tif (this._navigationBar != navigationBar) {\r\n\t\t\tthis._navigationBar = navigationBar;\r\n\t\t\tnavigationBar.parent = this;\r\n\t\t\tnavigationBar.toBack();\r\n\t\t\tnavigationBar.links.template.events.on(\"hit\", (event) => {\r\n\t\t\t\tlet dataItem = <TreeMapDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tif (!dataItem.isDisposed()) {\r\n\t\t\t\t\tthis.zoomToChartDataItem(dataItem);\r\n\t\t\t\t\tthis.createTreeSeries(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}, undefined, true);\r\n\r\n\t\t\tthis._disposers.push(navigationBar);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns navigationBar if it is added to a chart\r\n\t */\r\n\tpublic get navigationBar(): NavigationBar {\r\n\t\treturn this._navigationBar;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates chart's data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\r\n\t\tthis.series.clear();\r\n\t\tthis._tempSeries = [];\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tif (this._homeDataItem) {\r\n\t\t\tthis._homeDataItem.dispose();\r\n\t\t}\r\n\r\n\t\tlet homeDataItem = this.dataItems.template.clone(); // cant' use createDataItem here!\r\n\r\n\t\tthis._homeDataItem = homeDataItem;\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tdataItem.parent = homeDataItem;\r\n\t\t});\r\n\r\n\t\thomeDataItem.children = this.dataItems;\r\n\r\n\t\thomeDataItem.x0 = 0;\r\n\t\thomeDataItem.y0 = 0;\r\n\t\thomeDataItem.name = this._homeText;\r\n\r\n\t\tlet maxX = 1000;\r\n\t\tlet maxY = Math.round((maxX * this.pixelHeight / this.pixelWidth) / 10) * 10 || 1000;\r\n\r\n\t\thomeDataItem.x1 = maxX;\r\n\t\thomeDataItem.y1 = maxY;\r\n\r\n\t\tthis.xAxis.min = 0;\r\n\t\tthis.xAxis.max = maxX;\r\n\t\tthis.xAxis.getMinMax();\r\n\r\n\t\tthis.yAxis.min = 0;\r\n\t\tthis.yAxis.max = maxY;\r\n\t\tthis.yAxis.getMinMax();\r\n\r\n\t\tthis.layoutItems(homeDataItem);\r\n\r\n\t\tthis.createTreeSeries(homeDataItem);\r\n\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Layouts and sizes all items according to their value and\r\n\t * `layoutAlgorithm`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Parent data item\r\n\t */\r\n\tpublic layoutItems(parent: TreeMapDataItem, sorting?: \"none\" | \"ascending\" | \"descending\"): void {\r\n\t\tif (parent) {\r\n\t\t\tlet children = parent.children;\r\n\r\n\t\t\tif (!sorting) {\r\n\t\t\t\tsorting = this.sorting;\r\n\t\t\t}\r\n\r\n\t\t\tif (sorting == \"ascending\") {\r\n\t\t\t\tchildren.values.sort((a, b) => {\r\n\t\t\t\t\treturn a.value - b.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (sorting == \"descending\") {\r\n\t\t\t\tchildren.values.sort((a, b) => {\r\n\t\t\t\t\treturn b.value - a.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._updateDataItemIndexes(0);\r\n\r\n\t\t\tthis.layoutAlgorithm(parent);\r\n\r\n\t\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\r\n\t\t\t\tlet node = children.getIndex(i);\r\n\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tthis.layoutItems(node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns a new treemap series.\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  Data item to create series out of\r\n\t */\r\n\tprotected createTreeSeries(dataItem: TreeMapDataItem) {\r\n\t\tthis._tempSeries = [];\r\n\r\n\t\tlet navigationData = [dataItem];\r\n\r\n\t\t// create parent series and navigation data\r\n\t\tlet parentDataItem = dataItem.parent;\r\n\t\twhile (parentDataItem != undefined) {\r\n\t\t\tthis.initSeries(parentDataItem);\r\n\t\t\tnavigationData.push(parentDataItem);\r\n\t\t\tparentDataItem = parentDataItem.parent;\r\n\t\t}\r\n\r\n\t\tnavigationData.reverse();\r\n\r\n\t\tif (this.navigationBar) {\r\n\t\t\tthis.navigationBar.data = navigationData;\r\n\t\t}\r\n\r\n\t\t// create series and children series\r\n\t\tthis.createTreeSeriesReal(dataItem);\r\n\r\n\t\t// add those which are not in the list\r\n\t\t$array.each(this._tempSeries, (series) => {\r\n\t\t\tif (this.series.indexOf(series) == -1) {\r\n\t\t\t\tthis.series.push(series);\r\n\t\t\t}\r\n\t\t\tseries.zIndex = series.level;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * [createTreeSeriesReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected createTreeSeriesReal(dataItem: TreeMapDataItem) {\r\n\t\tif (dataItem.children) {\r\n\t\t\tlet level = dataItem.level;\r\n\r\n\t\t\tif (level < this.currentLevel + this.maxLevels) {\r\n\r\n\t\t\t\tthis.initSeries(dataItem);\r\n\r\n\t\t\t\tfor (let i = 0; i < dataItem.children.length; i++) {\r\n\t\t\t\t\tlet child = dataItem.children.getIndex(i);\r\n\t\t\t\t\tif (child.children) {\r\n\t\t\t\t\t\tthis.createTreeSeriesReal(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.currentlyZoomed = undefined;\r\n\t\tthis.xAxis.start = 0;\r\n\t\tthis.xAxis.end = 1;\r\n\t\tthis.yAxis.start = 0;\r\n\t\tthis.yAxis.end = 1;\r\n\t\tsuper.setData(value);\r\n\t}\r\n\t/**\r\n\t * @ignore\r\n\t * Overriding, as tree map series are created on the fly all the time\r\n\t */\r\n\tprotected seriesAppeared(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initializes the treemap series.\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  Chart data item\r\n\t */\r\n\tprotected initSeries(dataItem: TreeMapDataItem) {\r\n\t\tif (!dataItem.series) {\r\n\t\t\tlet series: TreeMapSeries;\r\n\r\n\t\t\tlet template = this.seriesTemplates.getKey(dataItem.level.toString());\r\n\t\t\tif (template) {\r\n\t\t\t\tseries = template.clone();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tseries = this.series.create();\r\n\t\t\t}\r\n\t\t\t// for the legend to get {value}\r\n\t\t\tseries.dataItem.dataContext = dataItem;\r\n\r\n\t\t\tseries.name = dataItem.name;\r\n\t\t\tseries.parentDataItem = dataItem;\r\n\t\t\tdataItem.series = series;\r\n\r\n\t\t\tlet level = dataItem.level;\r\n\t\t\tseries.level = level;\r\n\r\n\t\t\tlet dataContext: any = dataItem.dataContext;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tseries.config = dataContext.config;\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataUsers.removeValue(series); // series do not use data directly, that's why we remove it\r\n\t\t\tseries.data = dataItem.children.values;\r\n\t\t\tseries.fill = dataItem.color;\r\n\r\n\t\t\tseries.columnsContainer.hide(0);\r\n\t\t\tseries.bulletsContainer.hide(0);\r\n\r\n\t\t\tseries.columns.template.adapter.add(\"fill\", (fill, target) => {\r\n\t\t\t\tlet dataItem = <TreeMapSeriesDataItem>target.dataItem;\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tlet treeMapDataItem = dataItem.treeMapDataItem;\r\n\t\t\t\t\tif (treeMapDataItem) {\r\n\t\t\t\t\t\ttarget.fill = treeMapDataItem.color;\r\n\t\t\t\t\t\ttarget.adapter.remove(\"fill\"); //@todo: make it possible adapters applied once?\r\n\t\t\t\t\t\treturn treeMapDataItem.color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.zoomable && (dataItem.level > this.currentLevel || (dataItem.children && dataItem.children.length > 0))) {\r\n\t\t\t\tseries.columns.template.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t\t\tif (this.zoomable) {\r\n\t\t\t\t\tseries.columns.template.events.on(\"hit\", (event) => {\r\n\t\t\t\t\t\tlet seriesDataItem = <TreeMapSeriesDataItem>event.target.dataItem;\r\n\r\n\t\t\t\t\t\tif (dataItem.level > this.currentLevel) {\r\n\t\t\t\t\t\t\tthis.zoomToChartDataItem(seriesDataItem.treeMapDataItem.parent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.zoomToSeriesDataItem(seriesDataItem);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}, this, undefined);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._tempSeries.push(dataItem.series);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles bullets so that labels that belong to current drill level are\r\n\t * shown.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t */\r\n\tprotected toggleBullets(duration?: number): void {\r\n\t\t// hide all series which are not in tempSeries\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (this._tempSeries.indexOf(series) == - 1) {\r\n\t\t\t\t//series.hideReal(duration);\r\n\t\t\t\tseries.columnsContainer.hide();\r\n\t\t\t\tseries.bulletsContainer.hide(duration);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//series.showReal(duration);\r\n\t\t\t\tseries.columnsContainer.show();\r\n\t\t\t\tseries.bulletsContainer.show(duration);\r\n\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\tbullet.show();\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (series.level < this.currentLevel) {\r\n\t\t\t\t\tif (this.hideParentColumns) {\r\n\t\t\t\t\t\tseries.columnsContainer.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tseries.bulletsContainer.hide(duration);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.level == this.currentLevel) {\r\n\t\t\t\t\tif (this.maxLevels > 1) {\r\n\t\t\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\t\tif (dataItem.treeMapDataItem.children) {\r\n\t\t\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\t\t\tbullet.hide();\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to particular item in series.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic zoomToSeriesDataItem(dataItem: TreeMapSeriesDataItem): void {\r\n\t\tthis.zoomToChartDataItem(dataItem.treeMapDataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to particular item. If dataItem is not specified, the chart will zoom-out.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic zoomToChartDataItem(dataItem?: TreeMapDataItem): void {\r\n\t\tif (!dataItem) {\r\n\t\t\tdataItem = this._homeDataItem;\r\n\t\t}\r\n\r\n\t\tlet zoomOutButton = this.zoomOutButton;\r\n\t\t// this is needed because if there is only one fist level, it won't be shown\r\n\t\tif (zoomOutButton) {\r\n\t\t\tif (dataItem != this._homeDataItem) {\r\n\t\t\t\tzoomOutButton.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tzoomOutButton.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem && dataItem.children) {\r\n\t\t\tthis.xAxis.zoomToValues(dataItem.x0, dataItem.x1);\r\n\t\t\tthis.yAxis.zoomToValues(dataItem.y0, dataItem.y1);\r\n\r\n\t\t\tthis.currentLevel = dataItem.level;\r\n\t\t\tthis.currentlyZoomed = dataItem;\r\n\r\n\t\t\tthis.createTreeSeries(dataItem);\r\n\r\n\t\t\tlet rangeChangeAnimation = this.xAxis.rangeChangeAnimation || this.yAxis.rangeChangeAnimation;\r\n\r\n\t\t\tif (rangeChangeAnimation && !rangeChangeAnimation.isDisposed() && !rangeChangeAnimation.isFinished()) {\r\n\t\t\t\tthis._dataDisposers.push(rangeChangeAnimation);\r\n\r\n\t\t\t\trangeChangeAnimation.events.once(\"animationended\", () => {\r\n\t\t\t\t\tthis.toggleBullets();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.toggleBullets();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"TreeMap chart\");\r\n\t\t}\r\n\t\t//this.homeText = this.language.translate(\"Home\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new TreeMapDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of levels the chart will display initially.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Maximum drill-down level\r\n\t */\r\n\tpublic set maxLevels(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLevels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum drill-down level\r\n\t */\r\n\tpublic get maxLevels(): number {\r\n\t\treturn this.getPropertyValue(\"maxLevels\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current drill-down level the chart is at.\r\n\t *\r\n\t * @param value  Current level\r\n\t */\r\n\tpublic set currentLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"currentLevel\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Current level\r\n\t */\r\n\tpublic get currentLevel(): number {\r\n\t\treturn this.getPropertyValue(\"currentLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, columns of parent nodes will be hidden when user\r\n\t * drills-down into deeper levels.\r\n\t * \r\n\t * @sice 4.7.4\r\n\t * @default false\r\n\t * @param  value  Hide?\r\n\t */\r\n\tpublic set hideParentColumns(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideParentColumns\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide?\r\n\t */\r\n\tpublic get hideParentColumns(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideParentColumns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sorting direction of treemap items.\r\n\t *\r\n\t * Available options: \"none\", \"ascending\", and \"descending\" (default).\r\n\t *\r\n\t * @default \"descending\"\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set sorting(value: \"none\" | \"ascending\" | \"descending\") {\r\n\t\tthis.setPropertyValue(\"sorting\", value, true);\r\n\t}\r\n\r\n\tpublic get sorting(): \"none\" | \"ascending\" | \"descending\" {\r\n\t\treturn this.getPropertyValue(\"sorting\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new series of the suitable type.\r\n\t *\r\n\t * @return new series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new TreeMapSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * A text displayed on the \"home\" button which is used to go back to level 0\r\n\t * after drill into sub-items.\r\n\t *\r\n\t * @param value  Home text\r\n\t */\r\n\tpublic set homeText(value: string) {\r\n\t\tthis._homeText = value;\r\n\t\tif (this._homeDataItem) {\r\n\t\t\tthis._homeDataItem.name = this._homeText;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home text\r\n\t */\r\n\tpublic get homeText(): string {\r\n\t\treturn this._homeText;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Instantiate layout algorithm\r\n\t\t\tif ($type.hasValue(config[\"layoutAlgorithm\"]) && $type.isString(config[\"layoutAlgorithm\"])) {\r\n\t\t\t\tswitch (config[\"layoutAlgorithm\"]) {\r\n\t\t\t\t\tcase \"squarify\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.squarify;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"binaryTree\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.binaryTree;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"slice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.slice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"dice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.dice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"sliceDice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.sliceDice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tdelete config[\"layoutAlgorithm\"];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Set type for navigation bar\r\n\t\t\tif ($type.hasValue(config.navigationBar) && !$type.hasValue(config.navigationBar.type)) {\r\n\t\t\t\tconfig.navigationBar.type = \"NavigationBar\";\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig(config);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the size of container and informs its children of how much size\r\n\t * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n\t * properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout() {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.layoutItems(this.currentlyZoomed);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.layoutItems(this._homeDataItem);\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.validateRawData();\r\n\t\t});\r\n\r\n\t\tthis.zoomToChartDataItem(this._homeDataItem);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * TREEMAP LAYOUT FUNCTIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * The functions below are from D3.js library (https://d3js.org/)\r\n\t *\r\n\t * --------------------------------------------------------------------------\r\n\t * Copyright 2017 Mike Bostock\r\n\t *\r\n\t * Redistribution and use in source and binary forms, with or without\r\n\t * modification, are permitted provided that the following conditions are met:\r\n\t *\r\n\t * 1. Redistributions of source code must retain the above copyright notice,\r\n\t *    this list of conditions and the following disclaimer.\r\n\t *\r\n\t * 2. Redistributions in binary form must reproduce the above copyright\r\n\t *    notice,this list of conditions and the following disclaimer in the\r\n\t *    documentation and/or other materials provided with the distribution.\r\n\t *\r\n\t * 3. Neither the name of the copyright holder nor the names of its\r\n\t *    contributors may be used to endorse or promote products derived from\r\n\t *    this software without specific prior written permission.\r\n\t *\r\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n\t * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n\t * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n\t * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n\t * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n\t * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n\t * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n\t * POSSIBILITY OF SUCH DAMAGE.\r\n\t * --------------------------------------------------------------------------\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: binaryTree.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic binaryTree(parent: TreeMapDataItem): void {\r\n\t\tlet nodes = parent.children,\r\n\t\t\ti, n = nodes.length,\r\n\t\t\tsum, sums = new Array(n + 1);\r\n\r\n\t\tfor (sums[0] = sum = i = 0; i < n; ++i) {\r\n\t\t\tsums[i + 1] = sum += nodes.getIndex(i).value;\r\n\t\t}\r\n\r\n\t\tif(n > 0){\r\n\t\t\tpartition(0, n, parent.value, parent.x0, parent.y0, parent.x1, parent.y1);\r\n\t\t}\r\n\r\n\t\tfunction partition(i: number, j: number, value: number, x0: number, y0: number, x1: number, y1: number) {\r\n\r\n\t\t\tif (i >= j - 1) {\r\n\t\t\t\tlet node = nodes.getIndex(i);\r\n\t\t\t\tnode.x0 = x0;\r\n\t\t\t\tnode.y0 = y0;\r\n\t\t\t\tnode.x1 = x1;\r\n\t\t\t\tnode.y1 = y1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet valueOffset = sums[i],\r\n\t\t\t\tvalueTarget = (value / 2) + valueOffset,\r\n\t\t\t\tk = i + 1,\r\n\t\t\t\thi = j - 1;\r\n\r\n\t\t\twhile (k < hi) {\r\n\t\t\t\tlet mid = k + hi >>> 1;\r\n\t\t\t\tif (sums[mid] < valueTarget) {\r\n\t\t\t\t\tk = mid + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thi = mid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) {\r\n\t\t\t\t--k;\r\n\t\t\t}\r\n\r\n\t\t\tlet valueLeft = sums[k] - valueOffset,\r\n\t\t\t\tvalueRight = value - valueLeft;\r\n\r\n\t\t\tif(value == 0){\r\n\t\t\t\tlet node = nodes.getIndex(i);\r\n\t\t\t\tnode.x0 = x0;\r\n\t\t\t\tnode.y0 = y0;\r\n\t\t\t\tnode.x1 = x1;\r\n\t\t\t\tnode.y1 = y1;\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\t\t\r\n\r\n\t\t\tif ((x1 - x0) > (y1 - y0)) {\r\n\t\t\t\tlet xk = (x0 * valueRight + x1 * valueLeft) / value;\r\n\t\t\t\tpartition(i, k, valueLeft, x0, y0, xk, y1);\r\n\t\t\t\tpartition(k, j, valueRight, xk, y0, x1, y1);\r\n\t\t\t} else {\r\n\t\t\t\tlet yk = (y0 * valueRight + y1 * valueLeft) / value;\r\n\t\t\t\tpartition(i, k, valueLeft, x0, y0, x1, yk);\r\n\t\t\t\tpartition(k, j, valueRight, x0, yk, x1, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic slice(parent: TreeMapDataItem): void {\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children;\r\n\t\tlet node;\r\n\t\tlet i = -1;\r\n\t\tlet n = nodes.length;\r\n\t\tlet k = parent.value && (y1 - y0) / parent.value;\r\n\r\n\t\twhile (++i < n) {\r\n\t\t\tnode = nodes.getIndex(i);\r\n\t\t\tnode.x0 = x0;\r\n\t\t\tnode.x1 = x1;\r\n\t\t\tnode.y0 = y0;\r\n\t\t\ty0 += node.value * k;\r\n\t\t\tnode.y1 = y0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: dice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic dice(parent: TreeMapDataItem): void {\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children,\r\n\t\t\tnode,\r\n\t\t\ti = -1,\r\n\t\t\tn = nodes.length,\r\n\t\t\tk = parent.value && (x1 - x0) / parent.value;\r\n\r\n\t\twhile (++i < n) {\r\n\t\t\tnode = nodes.getIndex(i);\r\n\t\t\tnode.y0 = y0;\r\n\t\t\tnode.y1 = y1;\r\n\t\t\tnode.x0 = x0;\r\n\t\t\tx0 += node.value * k;\r\n\t\t\tnode.x1 = x0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: slideDice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic sliceDice(parent: TreeMapDataItem): void {\r\n\t\tif (parent.level & 1) {\r\n\t\t\tthis.slice(parent);\r\n\t\t} else {\r\n\t\t\tthis.dice(parent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: squarify.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic squarify(parent: TreeMapDataItem): void {\r\n\t\tlet ratio = (1 + Math.sqrt(5)) / 2;\r\n\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children;\r\n\t\tlet nodeValue;\r\n\t\tlet i0 = 0;\r\n\t\tlet i1 = 0;\r\n\t\tlet n = nodes.length;\r\n\t\tlet dx;\r\n\t\tlet dy;\r\n\t\tlet value = parent.value;\r\n\t\tlet sumValue;\r\n\t\tlet minValue;\r\n\t\tlet maxValue;\r\n\t\tlet newRatio;\r\n\t\tlet minRatio;\r\n\t\tlet alpha;\r\n\t\tlet beta;\r\n\r\n\t\twhile (i0 < n) {\r\n\t\t\tdx = x1 - x0;\r\n\t\t\tdy = y1 - y0;\r\n\r\n\t\t\t// Find the next non-empty node.\r\n\t\t\tdo {\r\n\t\t\t\tsumValue = nodes.getIndex(i1++).value;\r\n\t\t\t} while (!sumValue && i1 < n);\r\n\r\n\t\t\tminValue = maxValue = sumValue;\r\n\t\t\talpha = Math.max(dy / dx, dx / dy) / (value * ratio);\r\n\t\t\tbeta = sumValue * sumValue * alpha;\r\n\t\t\tminRatio = Math.max(maxValue / beta, beta / minValue);\r\n\r\n\t\t\t// Keep adding nodes while the aspect ratio maintains or improves.\r\n\t\t\tfor (; i1 < n; ++i1) {\r\n\t\t\t\tsumValue += nodeValue = nodes.getIndex(i1).value;\r\n\t\t\t\tif (nodeValue < minValue) {\r\n\t\t\t\t\tminValue = nodeValue;\r\n\t\t\t\t}\r\n\t\t\t\tif (nodeValue > maxValue) {\r\n\t\t\t\t\tmaxValue = nodeValue;\r\n\t\t\t\t}\r\n\t\t\t\tbeta = sumValue * sumValue * alpha;\r\n\t\t\t\tnewRatio = Math.max(maxValue / beta, beta / minValue);\r\n\t\t\t\tif (newRatio > minRatio) {\r\n\t\t\t\t\tsumValue -= nodeValue; break;\r\n\t\t\t\t}\r\n\t\t\t\tminRatio = newRatio;\r\n\t\t\t}\r\n\r\n\t\t\t// Position and record the row orientation.\r\n\t\t\tlet row = this.dataItems.template.clone();\r\n\t\t\trow.value = sumValue;\r\n\t\t\trow.dice = dx < dy;\r\n\t\t\trow.children = nodes.slice(i0, i1);\r\n\t\t\trow.x0 = x0;\r\n\t\t\trow.y0 = y0;\r\n\t\t\trow.x1 = x1;\r\n\t\t\trow.y1 = y1;\r\n\r\n\t\t\tif (row.dice) {\r\n\t\t\t\trow.y1 = value ? (y0 += (dy * sumValue) / value) : y1;\r\n\t\t\t\tthis.dice(row);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow.x1 = value ? (x0 += (dx * sumValue) / value) : x1;\r\n\t\t\t\tthis.slice(row);\r\n\t\t\t}\r\n\t\t\tvalue -= sumValue;\r\n\t\t\ti0 = i1;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2() {\r\n\t\t// void\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic handleDataItemValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (name == \"value\") {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (name == \"value\") {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLegendLevel(dataItem: TreeMapDataItem): TreeMapDataItem {\r\n\t\tif (!dataItem) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!dataItem.children) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (dataItem.children.length > 1) {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t\telse if (dataItem.children.length == 1) {\r\n\t\t\tlet child = dataItem.children.getIndex(0);\r\n\t\t\tif (child.children) {\r\n\t\t\t\treturn this.getLegendLevel(child);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:TreeMapSeries){\r\n\t\t// void\r\n\t}\t\r\n\r\n\t/**\r\n\t * A data item associated with top node.\r\n\t * \r\n\t * @since 4.8.2\r\n\t */\r\n\tpublic get homeDataItem(): TreeMapDataItem {\r\n\t\treturn this._homeDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlet legendParent = this.getLegendLevel(this._homeDataItem);\r\n\r\n\t\t\tif (legendParent) {\r\n\t\t\t\tlet legendData: Array<this[\"_dataItem\"]> = [];\r\n\r\n\t\t\t\tlegendParent.children.each((dataItem) => {\r\n\t\t\t\t\t//if (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(dataItem);\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlegend.data = legendData;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\r\n\t\tsuper.disposeData();\r\n\r\n\t\tthis._homeDataItem = undefined;\r\n\r\n\t\tthis.series.clear();\r\n\r\n\t\tif (this.navigationBar) {\r\n\t\t\tthis.navigationBar.disposeData();\r\n\t\t}\r\n\r\n\t\tthis.xAxis.disposeData();\r\n\t\tthis.yAxis.disposeData();\r\n\t}\r\n\r\n\t/**\r\n\t * Since this chart uses hierarchical data, we need to remove childrent\r\n\t * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n\t *\r\n\t * @return Export\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tconst exporting = super.getExporting();\r\n\t\texporting.adapter.add(\"formatDataFields\", (info) => {\r\n\t\t\tif (info.format == \"csv\" || info.format == \"xlsx\") {\r\n\t\t\t\tif ($type.hasValue(this.dataFields.children)) {\r\n\t\t\t\t\tdelete info.dataFields[this.dataFields.children];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn info;\r\n\t\t})\r\n\t\treturn exporting;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMap\"] = TreeMap;\r\n","/**\r\n * Module, defining Axis Renderer for horizontal 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererX, IAxisRendererXProperties, IAxisRendererXAdapters, IAxisRendererXEvents } from \"../axes/AxisRendererX\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Grid } from \"../axes/Grid\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX3D]].\r\n */\r\nexport interface IAxisRendererX3DProperties extends IAxisRendererXProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX3D]].\r\n */\r\nexport interface IAxisRendererX3DEvents extends IAxisRendererXEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererX3DAdapters extends IAxisRendererXAdapters, IAxisRendererX3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Renderer for horizontal 3D axis.\r\n *\r\n * @see {@link IAxisRendererX3DEvents} for a list of available events\r\n * @see {@link IAxisRendererX3DAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX3D extends AxisRendererX {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisRendererX3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisRendererX3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererX3DEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart3D>();\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererX3D\";\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (grid.element) {\r\n\r\n\t\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\t\tlet h: number = this.getHeight();\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: dx, y: h + dy }) + $path.lineTo({ x: 0, y: h });\r\n\t\t}\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement() {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet h = this.getHeight();\r\n\t\tlet dx = this.chart.dx3D || 0;\r\n\t\tlet dy = this.chart.dy3D || 0;\r\n\t\tthis.baseGrid.path =  $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t}\r\n\r\n\t/**\r\n\t * Chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart3D) {\r\n\t\tif (chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart3D {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when 3D-related settings change, like depth or angle.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handle3DChanged(event: AMEvent<Sprite, ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (event.property == \"depth\" || event.property == \"angle\") {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX3D\"] = AxisRendererX3D;\r\n","/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY, IAxisRendererYProperties, IAxisRendererYAdapters, IAxisRendererYEvents } from \"../axes/AxisRendererY\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Grid } from \"../axes/Grid\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY3D]].\r\n */\r\nexport interface IAxisRendererY3DProperties extends IAxisRendererYProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY3D]].\r\n */\r\nexport interface IAxisRendererY3DEvents extends IAxisRendererYEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererY3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererY3DAdapters extends IAxisRendererYAdapters, IAxisRendererY3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY3D extends AxisRendererY {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererY3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererY3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererY3DEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart3D>();\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY3D\";\r\n\t\tthis._disposers.push(this._chart);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tif (grid.element) {\r\n\r\n\t\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\t\tlet w: number = this.getWidth();\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy });\r\n\t\t}\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tthis.baseGrid.path = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t+ $path.lineTo({ x: w, y: 0 })\r\n\t\t\t+ $path.lineTo({ x: w + dx, y: dy });\r\n\t}\r\n\r\n\t/**\r\n\t * Chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart3D) {\r\n\t\tif (chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart3D {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when 3D-related settings change, like depth or angle.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handle3DChanged(event: AMEvent<Sprite, ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (event.property == \"depth\" || event.property == \"angle\") {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column3D]].\r\n */\r\nexport interface IColumn3DProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Column3D]].\r\n */\r\nexport interface IColumn3DEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumn3DAdapters extends IColumnAdapters, IColumn3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column3D extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumn3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumn3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumn3DEvents;\r\n\r\n\r\n\t/**\r\n\t * column3D element\r\n\t */\r\n\tpublic column3D: Rectangle3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column3D\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column3D = this.createChild(Rectangle3D);\r\n\t\tthis.column3D.shouldClone = false;\r\n\t\tthis.column3D.strokeOpacity = 0;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.column3D;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.width = this.pixelWidth;\r\n\t\t\tthis.column3D.height = this.pixelHeight;\r\n\t\t\tif(this.column3D.invalid){\r\n\t\t\t\tthis.column3D.validate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Column3D]].\r\n\t *\r\n\t * @param source Source Column3D\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.copyFrom(source.column3D);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\t\tthis.column.fill = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n","/**\r\n * 3D column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Column3D } from \"../elements/Column3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nexport class ColumnSeries3DDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Column3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeries3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DProperties extends IColumnSeriesProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the slices in the series in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of view for the slices in series. (0-360)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ColumnSeries3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeries3DAdapters extends IColumnSeriesAdapters, IColumnSeries3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ColumnSeries3D extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of data item.\r\n\t */\r\n\tpublic _dataItem: ColumnSeries3DDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: Column3D;\r\n\r\n\t/**\r\n\t * Defines the type for data fields.\r\n\t */\r\n\tpublic _dataFields: IColumnSeries3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnSeries3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeries3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnSeries3DEvents;\r\n\r\n\t/**\r\n\t * Specifies how deep in 3d space columns should be drawn.\r\n\t *\r\n\t * Internal use only.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic depthIndex: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ColumnSeries3D\";\r\n\r\n\t\tthis.columns.template.column3D.applyOnClones = true;\r\n\t\tthis.columns.template.hiddenState.properties.visible = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get columnsContainer(): Container {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n\t\t\treturn chart.columnsContainer;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._columnsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tif (dataItem.column) {\r\n\t\t\tdataItem.column.dx = this.dx;\r\n\t\t\tdataItem.column.dy = this.dy;\r\n\r\n\t\t\tdataItem.column.visible = this.visible;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\t\tsuper.validateDataElements();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for 3D bar.\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Column3D();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Depth (height) of the slices in the series in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t\tlet template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n\t\ttemplate.column3D.depth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of view for the slices in series. (0-360)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Angle (0-360)\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t\tlet template = this.columns.template;\r\n\t\ttemplate.column3D.angle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Angle (0-360)\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n","/**\r\n * Module for building 3D serial charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisRendererX3D } from \"../axes/AxisRendererX3D\";\r\nimport { AxisRendererY3D } from \"../axes/AxisRendererY3D\";\r\nimport { ColumnSeries3D } from \"../series/ColumnSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYChart3DDataItem extends XYChartDataItem {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChart3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DDataFields extends IXYChartDataFields { }\r\n\r\n/**\r\n * Defines available properties for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Depths of the chart in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle the chart is viewed at.\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChart3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChart3DAdapters extends IXYChartAdapters, IXYChart3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a 3D XY chart.\r\n *\r\n * @see {@link IXYChart3DEvents} for a list of available Events\r\n * @see {@link IXYChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nexport class XYChart3D extends XYChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IXYChart3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChart3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChart3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChart3DEvents;\r\n\r\n\t/**\r\n\t * Type of the axis renderer to use for X axes.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererX3D = AxisRendererX3D;\r\n\r\n\t/**\r\n\t * Type of the axis renderer to use for Y axes.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererY3D = AxisRendererY3D;\r\n\r\n\t/**\r\n\t * A container to add 3D column elements to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic columnsContainer: Container;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChart3D\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.depth = 30;\r\n\t\tthis.angle = 30;\r\n\r\n\t\t// Creeate container for columns\r\n\t\tlet columnsContainer = this.seriesContainer.createChild(Container);\r\n\t\tcolumnsContainer.shouldClone = false;\r\n\t\tcolumnsContainer.isMeasured = false;\r\n\t\tcolumnsContainer.layout = \"none\";\r\n\t\tthis.columnsContainer = columnsContainer;\r\n\r\n\t\tthis.columnsContainer.mask = this.createChild(Sprite);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is done because for some reason IE doesn't change mask if path of a\r\n\t * mask changes.\r\n\t */\r\n\tprotected updateSeriesMasks(): void {\r\n\t\tsuper.updateSeriesMasks();\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tlet columnsContainer = this.columnsContainer;\r\n\t\t\tlet mask = columnsContainer.mask;\r\n\t\t\tcolumnsContainer.mask = undefined;\r\n\t\t\tcolumnsContainer.mask = mask;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the 3D chart / columns in pixels.\r\n\t *\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value);\r\n\t\tthis.fixLayout();\r\n\t\tthis.invalidateDataUsers();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle the chart is viewed at.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t\tthis.fixLayout();\r\n\t\tthis.invalidateDataUsers();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated horizontal 3D offset (px).\r\n\t *\r\n\t * @readonly\r\n\t * @return Offset (px)\r\n\t */\r\n\tpublic get dx3D(): number {\r\n\t\treturn $math.cos(this.angle) * this.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated vertical 3D offset (px).\r\n\t *\r\n\t * @readonly\r\n\t * @return Offset (px)\r\n\t */\r\n\tpublic get dy3D(): number {\r\n\t\treturn -$math.sin(this.angle) * this.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates layout\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout() {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.fixColumns();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the layout (padding and scrollbar positions) to accommodate for\r\n\t * 3D depth and angle.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\r\n\t\tthis.chartContainer.paddingTop = -this.dy3D;\r\n\t\tthis.chartContainer.paddingRight = this.dx3D;\r\n\r\n\t\tif (this.scrollbarX) {\r\n\t\t\tthis.scrollbarX.dy = this.dy3D;\r\n\t\t\tthis.scrollbarX.dx = this.dx3D;\r\n\t\t}\r\n\r\n\t\tif (this.scrollbarY) {\r\n\t\t\tthis.scrollbarY.dy = this.dy3D;\r\n\t\t\tthis.scrollbarY.dx = this.dx3D;\r\n\t\t}\r\n\r\n\t\tthis.fixColumns();\r\n\r\n\t\tsuper.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates column positions, offset and dimensions based on chart's angle\r\n\t * and depth.\r\n\t */\r\n\tprotected fixColumns(): void {\r\n\t\tlet count: number = 1;\r\n\t\tlet i = 0;\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series instanceof ColumnSeries3D) {\r\n\r\n\t\t\t\tif (!series.clustered && i > 0) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseries.depthIndex = count - 1;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet s: number = 0;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series instanceof ColumnSeries3D) {\r\n\r\n\t\t\t\tseries.depth = this.depth / (count);\r\n\t\t\t\tseries.angle = this.angle;\r\n\t\t\t\tif (series.columnsContainer == this.columnsContainer) {\r\n\t\t\t\t\tseries.dx = this.depth / (count) * $math.cos(this.angle) * (series.depthIndex);\r\n\t\t\t\t\tseries.dy = -this.depth / (count) * $math.sin(this.angle) * (series.depthIndex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet inversed = false;\r\n\t\t\t\tif ((series.baseAxis == series.xAxis && series.xAxis.renderer.inversed) || (series.baseAxis == series.yAxis && series.yAxis.renderer.inversed)) {\r\n\t\t\t\t\tinversed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet i: number = 1;\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tlet column = dataItem.column;\r\n\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\tif (inversed) {\r\n\t\t\t\t\t\t\tcolumn.zIndex = 1000 * (1000 - i) + s - series.depthIndex * 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcolumn.zIndex = 1000 * i + s - series.depthIndex * 100;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\tif (inversed) {\r\n\t\t\t\t\ts--;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ts++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.maskColumns();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"ColumnSeries3D\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\tprotected maskColumns() {\r\n\t\tlet w: number = this.plotContainer.pixelWidth;\r\n\t\tlet h: number = this.plotContainer.pixelHeight;\r\n\r\n\t\tlet dx: number = this.dx3D;\r\n\t\tlet dy: number = this.dy3D;\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy }) + $path.lineTo({ x: w + dx, y: h + dy }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: 0, y: h }) + $path.closePath();\r\n\r\n\t\tlet columnsContainer = this.columnsContainer;\r\n\t\tif (columnsContainer && columnsContainer.mask) {\r\n\t\t\tcolumnsContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart3D\"] = XYChart3D;\r\n","/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Candlestick]].\r\n */\r\nexport interface ICandlestickProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Candlestick]].\r\n */\r\nexport interface ICandlestickEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Candlestick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickAdapters extends IColumnAdapters, ICandlestickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Candlestick extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickEvents;\r\n\r\n\t/**\r\n\t * Low line element\r\n\t */\r\n\tpublic lowLine: Line;\r\n\r\n\t/**\r\n\t * High line element\r\n\t */\r\n\tpublic highLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Candlestick\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tsuper.createAssets();\r\n\r\n\t\tthis.lowLine = this.createChild(Line);\r\n\t\tthis.lowLine.shouldClone = false;\r\n\r\n\t\tthis.highLine = this.createChild(Line);\r\n\t\tthis.highLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Candlestick]].\r\n\t *\r\n\t * @param source Source Candlestick\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.lowLine) {\r\n\t\t\tthis.lowLine.copyFrom(source.lowLine);\r\n\t\t}\r\n\t\tif (this.highLine) {\r\n\t\t\tthis.highLine.copyFrom(source.highLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n","/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents } from \"./ColumnSeries\";\r\nimport { GroupField, IXYSeriesGroupFields } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Candlestick } from \"../elements/Candlestick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CandlestickSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: CandlestickSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.values.lowValueX = {};\r\n\t\tthis.values.lowValueY = {};\r\n\t\tthis.values.highValueX = {};\r\n\t\tthis.values.highValueY = {};\r\n\r\n\t\tthis.className = \"CandlestickSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueX(value: number) {\r\n\t\tthis.setValue(\"lowValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueX(): number {\r\n\t\treturn this.values.lowValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueY(value: number) {\r\n\t\tthis.setValue(\"lowValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueY(): number {\r\n\t\treturn this.values.lowValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueX(value: number) {\r\n\t\tthis.setValue(\"highValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueX(): number {\r\n\t\treturn this.values.highValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueY(value: number) {\r\n\t\tthis.setValue(\"highValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueY(): number {\r\n\t\treturn this.values.highValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for horizontal axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for vertical axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for horizontal axis.\r\n\t */\r\n\tlowValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\tlowValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high numeric value for horizontal axis.\r\n\t */\r\n\thighValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\thighValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for horizontal axis.\r\n\t */\r\n\tlowDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for vertical axis.\r\n\t */\r\n\tlowDateY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for horizontal axis.\r\n\t */\r\n\thighDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for vertical axis.\r\n\t */\r\n\thighDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueYShow?: CalculatedValue;\r\n\r\n}\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface ICandlestickSeriesGroupFields extends IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueX` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueY` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueX` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueY` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueY?: GroupField;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CandlestickSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickSeriesAdapters extends IColumnSeriesAdapters, ICandlestickSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class CandlestickSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: ICandlestickSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: CandlestickSeriesDataItem;\r\n\r\n\t/**\r\n\t * Sets type of the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ICandlestickSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickSeriesEvents;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t */\r\n\tprotected _xLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t */\r\n\tprotected _yLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t */\r\n\tprotected _xHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t */\r\n\tprotected _yHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CandlestickSeries\";\r\n\r\n\t\tthis.groupFields.lowValueX = \"low\";\r\n\t\tthis.groupFields.lowValueY = \"low\";\r\n\r\n\t\tthis.groupFields.highValueX = \"high\";\r\n\t\tthis.groupFields.highValueY = \"high\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tlet positiveColor = interfaceColors.getFor(\"positive\");\r\n\t\tlet negativeColor = interfaceColors.getFor(\"negative\");\r\n\r\n\t\tthis.dropFromOpenState.properties.fill = negativeColor;\r\n\t\tthis.dropFromOpenState.properties.stroke = negativeColor;\r\n\r\n\t\tthis.riseFromOpenState.properties.fill = positiveColor;\r\n\t\tthis.riseFromOpenState.properties.stroke = positiveColor;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Candlestick Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CandlestickSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tthis.validateCandlestick(dataItem);\r\n\t}\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"dataItem\"]) {\r\n\t\tlet column: Candlestick = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet lowLine = column.lowLine;\r\n\t\t\tlet highLine = column.highLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\r\n\t\t\t\tlowLine.x = x;\r\n\t\t\t\thighLine.x = x;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\tlowLine.y1 = yLow - pixelY;\r\n\t\t\t\thighLine.y1 = yHigh - pixelY;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.y2 = yOpen - pixelY;\r\n\t\t\t\t\thighLine.y2 = yClose - pixelY;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.y2 = yClose - pixelY;\r\n\t\t\t\t\thighLine.y2 = yOpen - pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\tlowLine.y = y;\r\n\t\t\t\thighLine.y = y;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\tlowLine.x1 = xLow - pixelX;\r\n\t\t\t\thighLine.x1 = xHigh - pixelX;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.x2 = xOpen - pixelX;\r\n\t\t\t\t\thighLine.x2 = xClose - pixelX;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.x2 = xClose - pixelX;\r\n\t\t\t\t\thighLine.x2 = xOpen - pixelX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\t// LOW LINE\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeLowLine = rangeColumn.lowLine;\r\n\t\t\t\t\trangeLowLine.x = lowLine.x;\r\n\t\t\t\t\trangeLowLine.y = lowLine.y;\r\n\t\t\t\t\trangeLowLine.x1 = lowLine.x1;\r\n\t\t\t\t\trangeLowLine.x2 = lowLine.x2;\r\n\t\t\t\t\trangeLowLine.y1 = lowLine.y1;\r\n\t\t\t\t\trangeLowLine.y2 = lowLine.y2;\r\n\r\n\t\t\t\t\t// HIGH LINE\r\n\t\t\t\t\tlet rangehighLine = rangeColumn.highLine;\r\n\t\t\t\t\trangehighLine.x = highLine.x;\r\n\t\t\t\t\trangehighLine.y = highLine.y;\r\n\t\t\t\t\trangehighLine.x1 = highLine.x1;\r\n\t\t\t\t\trangehighLine.x2 = highLine.x2;\r\n\t\t\t\t\trangehighLine.y1 = highLine.y1;\r\n\t\t\t\t\trangehighLine.y2 = highLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xLowField(): string {\r\n\t\treturn this._xLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yLowField(): string {\r\n\t\treturn this._yLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xHighField(): string {\r\n\t\treturn this._xHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yHighField(): string {\r\n\t\treturn this._yHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tsuper.defineFields();\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tlet yAxisFieldName: string = $utils.capitalize(yAxis.axisFieldName);\r\n\t\t\t\tthis._yLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + yAxisFieldName + \"Y\");\r\n\t\t\t\tthis._yHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + yAxisFieldName + \"Y\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tlet xAxisFieldName: string = $utils.capitalize(xAxis.axisFieldName);\r\n\t\t\t\tthis._xLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + xAxisFieldName + \"X\");\r\n\t\t\t\tthis._xHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + xAxisFieldName + \"X\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xLowField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xHighField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yLowField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yHighField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: Candlestick = marker.createChild(Candlestick);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet highLine: Line = column.lowLine;\r\n\t\tlet lowLine: Line = column.highLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLine.y = h / 2;\r\n\t\t\tlowLine.y = h / 2;\r\n\r\n\t\t\thighLine.x2 = w / 3;\r\n\t\t\tlowLine.x2 = w / 3;\r\n\t\t\tlowLine.x = w / 3 * 2;\r\n\t\t\tcolumn.column.x = w / 3;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\t\t\thighLine.x = w / 2;\r\n\t\t\tlowLine.x = w / 2;\r\n\r\n\t\t\thighLine.y2 = h / 3;\r\n\t\t\tlowLine.y2 = h / 3;\r\n\t\t\tlowLine.y = h / 3 * 2;\r\n\t\t\tcolumn.column.y = h / 3;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\t\tcolumn.fill = column.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Candlestick();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building OHLCs.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Candlestick, ICandlestickProperties, ICandlestickAdapters, ICandlestickEvents } from \"./Candlestick\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[OHLC]].\r\n */\r\nexport interface IOHLCProperties extends ICandlestickProperties { }\r\n\r\n/**\r\n * Defines events for [[OHLC]].\r\n */\r\nexport interface IOHLCEvents extends ICandlestickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[OHLC]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IOHLCAdapters extends ICandlestickAdapters, IOHLCProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class OHLC extends Candlestick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IOHLCProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IOHLCAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IOHLCEvents;\r\n\r\n\r\n\t/**\r\n\t * Open line element\r\n\t */\r\n\tpublic openLine: Line;\r\n\r\n\t/**\r\n\t * Close line element\r\n\t */\r\n\tpublic closeLine: Line;\r\n\r\n\t/**\r\n\t * High-low line element\r\n\t */\r\n\tpublic highLowLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"OHLC\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\t//super.createAssets();\r\n\r\n\t\tthis.openLine = this.createChild(Line);\r\n\t\tthis.openLine.shouldClone = false;\r\n\r\n\t\tthis.highLowLine = this.createChild(Line);\r\n\t\tthis.highLowLine.shouldClone = false;\r\n\r\n\t\tthis.closeLine = this.createChild(Line);\r\n\t\tthis.closeLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[OHLC]].\r\n\t *\r\n\t * @param source Source OHLC\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.openLine) {\r\n\t\t\tthis.openLine.copyFrom(source.openLine);\r\n\t\t}\r\n\t\tif (this.highLowLine) {\r\n\t\t\tthis.highLowLine.copyFrom(source.highLowLine);\r\n\t\t}\r\n\t\tif (this.closeLine) {\r\n\t\t\tthis.closeLine.copyFrom(source.closeLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLC\"] = OHLC;\r\n","/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { CandlestickSeries, CandlestickSeriesDataItem, ICandlestickSeriesDataFields, ICandlestickSeriesProperties, ICandlestickSeriesAdapters, ICandlestickSeriesEvents } from \"./CandlestickSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { OHLC } from \"../elements/OHLC\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[OHLCSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class OHLCSeriesDataItem extends CandlestickSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the OHLC elements.\r\n\t */\r\n\tpublic _column: OHLC;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: OHLCSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"OHLCSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesDataFields extends ICandlestickSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesProperties extends ICandlestickSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesEvents extends ICandlestickSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[OHLCSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IOHLCSeriesAdapters extends ICandlestickSeriesAdapters, IOHLCSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link IOHLCSeriesEvents} for a list of available Events\r\n * @see {@link IOHLCSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class OHLCSeries extends CandlestickSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: OHLCSeriesDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: OHLC;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IOHLCSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IOHLCSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IOHLCSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IOHLCSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"OHLCSeries\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"OHLC Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new OHLCSeriesDataItem();\r\n\t}\r\n\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet column: OHLC = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet openLine = column.openLine;\r\n\t\t\tlet highLowLine = column.highLowLine;\r\n\t\t\tlet closeLine = column.closeLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\t\t\t\thighLowLine.x = x;\r\n\r\n\t\t\t\t// TODO can these be removed ?\r\n\t\t\t\tdataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tdataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\topenLine.y1 = yOpen - pixelY;\r\n\t\t\t\topenLine.y2 = yOpen - pixelY;\r\n\t\t\t\topenLine.x1 = 0;\r\n\t\t\t\topenLine.x2 = x;\r\n\r\n\t\t\t\tcloseLine.y1 = yClose - pixelY;\r\n\t\t\t\tcloseLine.y2 = yClose - pixelY;\r\n\t\t\t\tcloseLine.x1 = x;\r\n\t\t\t\tcloseLine.x2 = 2 * x;\r\n\r\n\t\t\t\thighLowLine.y1 = yHigh - pixelY;\r\n\t\t\t\thighLowLine.y2 = yLow - pixelY;\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\thighLowLine.y = y;\r\n\r\n\t\t\t\t// TODO can these be removed ?\r\n\t\t\t\tdataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tdataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\topenLine.x1 = xOpen - pixelX;\r\n\t\t\t\topenLine.x2 = xOpen - pixelX;\r\n\t\t\t\topenLine.y1 = y;\r\n\t\t\t\topenLine.y2 = 2 * y;\r\n\r\n\t\t\t\tcloseLine.x1 = xClose - pixelX;\r\n\t\t\t\tcloseLine.x2 = xClose - pixelX;\r\n\t\t\t\tcloseLine.y1 = 0;\r\n\t\t\t\tcloseLine.y2 = y;\r\n\r\n\t\t\t\thighLowLine.x1 = xHigh - pixelX;\r\n\t\t\t\thighLowLine.x2 = xLow - pixelX;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeOpenLine = rangeColumn.openLine;\r\n\t\t\t\t\trangeOpenLine.x = openLine.x;\r\n\t\t\t\t\trangeOpenLine.y = openLine.y;\r\n\t\t\t\t\trangeOpenLine.x1 = openLine.x1;\r\n\t\t\t\t\trangeOpenLine.x2 = openLine.x2;\r\n\t\t\t\t\trangeOpenLine.y1 = openLine.y1;\r\n\t\t\t\t\trangeOpenLine.y2 = openLine.y2;\r\n\r\n\t\t\t\t\tlet rangeCloseLine = rangeColumn.closeLine;\r\n\t\t\t\t\trangeCloseLine.x = closeLine.x;\r\n\t\t\t\t\trangeCloseLine.y = closeLine.y;\r\n\t\t\t\t\trangeCloseLine.x1 = closeLine.x1;\r\n\t\t\t\t\trangeCloseLine.x2 = closeLine.x2;\r\n\t\t\t\t\trangeCloseLine.y1 = closeLine.y1;\r\n\t\t\t\t\trangeCloseLine.y2 = closeLine.y2;\r\n\r\n\t\t\t\t\tlet rangeHighLowLine = rangeColumn.highLowLine;\r\n\t\t\t\t\trangeHighLowLine.x = highLowLine.x;\r\n\t\t\t\t\trangeHighLowLine.y = highLowLine.y;\r\n\t\t\t\t\trangeHighLowLine.x1 = highLowLine.x1;\r\n\t\t\t\t\trangeHighLowLine.x2 = highLowLine.x2;\r\n\t\t\t\t\trangeHighLowLine.y1 = highLowLine.y1;\r\n\t\t\t\t\trangeHighLowLine.y2 = highLowLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: OHLC = marker.createChild(OHLC);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet openLine: Line = column.openLine;\r\n\t\tlet closeLine: Line = column.closeLine;\r\n\t\tlet highLowLine: Line = column.highLowLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLowLine.y = h / 2;\r\n\t\t\thighLowLine.x2 = w;\r\n\r\n\t\t\topenLine.x = w / 3 * 2;\r\n\t\t\topenLine.y2 = h / 2;\r\n\r\n\t\t\tcloseLine.x = w / 3;\r\n\t\t\tcloseLine.y2 = h;\r\n\t\t\tcloseLine.y1 = h / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\r\n\t\t\thighLowLine.x = w / 2;\r\n\t\t\thighLowLine.y2 = h;\r\n\r\n\t\t\topenLine.y = h / 3 * 2;\r\n\t\t\topenLine.x2 = w / 2;\r\n\r\n\t\t\tcloseLine.y = h / 3;\r\n\t\t\tcloseLine.x2 = w;\r\n\t\t\tcloseLine.x1 = w / 2;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.stroke;\r\n\t\tlegendDataItem.colorOrig = column.stroke;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new OHLC();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLCSeries\"] = OHLCSeries;\r\nregistry.registeredClasses[\"OHLCSeriesDataItem\"] = OHLCSeriesDataItem;\r\n","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ILineSeriesSegmentAdapters, ILineSeriesSegmentEvents, ILineSeriesSegmentProperties, LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[StepLineSeriesSegment]].\r\n */\r\nexport interface IStepLineSeriesSegmentProperties extends ILineSeriesSegmentProperties { }\r\n\r\n/**\r\n * Defines events for [[StepLineSeriesSegment]].\r\n */\r\nexport interface IStepLineSeriesSegmentEvents extends ILineSeriesSegmentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StepLineSeriesSegment]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStepLineSeriesSegmentAdapters extends ILineSeriesSegmentAdapters, IStepLineSeriesSegmentProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link IStepLineSeriesSegmentEvents} for a list of available events\r\n * @see {@link IStepLineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nexport class StepLineSeriesSegment extends LineSeriesSegment {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStepLineSeriesSegmentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStepLineSeriesSegmentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStepLineSeriesSegmentEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeriesSegment\";\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the series segment.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param points       Points to connect\r\n\t * @param closePoints  ?\r\n\t * @param smoothnessX  Horizontal bezier setting (?)\r\n\t * @param smoothnessY  Vertical bezier setting (?)\r\n\t */\r\n\tpublic drawSegment(points: IPoint[], closePoints: IPoint[], smoothnessX: number, smoothnessY: number, noRisers?: boolean, vertical?: boolean): void {\r\n\t\tif (points.length > 0 && closePoints.length > 0) {\r\n\r\n\t\t\tif (noRisers) {\r\n\t\t\t\tlet path: string = $path.moveTo(points[0]);\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tfor (let i = 1; i < points.length; i++) {\r\n\t\t\t\t\t\tlet point = points[i];\r\n\t\t\t\t\t\tif (i / 2 == Math.round(i / 2)) {\r\n\t\t\t\t\t\t\tpath += $path.moveTo(point);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.strokeSprite.path = path;\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tpath = $path.moveTo(points[0]) + $path.polyline(points);\r\n\t\t\t\t\tpath += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet path: string = $path.moveTo(points[0]) + $path.polyline(points);\r\n\r\n\t\t\t\tthis.strokeSprite.path = path;\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tpath += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.strokeSprite.path = \"\";\r\n\t\t\tthis.fillSprite.path = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeriesSegment\"] = StepLineSeriesSegment;\r\n","/**\r\n * Step line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem, ILineSeriesDataFields, ILineSeriesProperties, ILineSeriesAdapters, ILineSeriesEvents } from \"./LineSeries\";\r\nimport { StepLineSeriesSegment } from \"./StepLineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[StepLineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class StepLineSeriesDataItem extends LineSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: StepLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesDataFields extends ILineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesProperties extends ILineSeriesProperties {\r\n\tnoRisers?: boolean;\r\n\r\n\tstartLocation?: number;\r\n\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesEvents extends ILineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StepLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStepLineSeriesAdapters extends ILineSeriesAdapters, IStepLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a step line graph.\r\n *\r\n * @see {@link IStepLineSeriesEvents} for a list of available Events\r\n * @see {@link IStepLineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class StepLineSeries extends LineSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IStepLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStepLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStepLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStepLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: StepLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines type for segement.\r\n\t */\r\n\tpublic _segment: StepLineSeriesSegment;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeries\";\r\n\t\tthis.applyTheme();\r\n\t\tthis.startLocation = 0;\r\n\t\tthis.endLocation = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new StepLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points     [description]\r\n\t * @param dataItem   [description]\r\n\t * @param xField     [description]\r\n\t * @param yField     [description]\r\n\t * @param backwards  [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean): void {\r\n\r\n\t\tlet startLocationX:number;\r\n\t\tlet endLocationX:number;\r\n\r\n\t\tlet startLocationY:number;\r\n\t\tlet endLocationY:number;\t\t\r\n\r\n\t\tif(this.baseAxis == this.xAxis){\r\n\t\t\tstartLocationX = this.startLocation;\r\n\t\t\tendLocationX = this.endLocation;\r\n\r\n\t\t\tstartLocationY = this.getAdjustedXLocation(dataItem, this.yOpenField);\r\n\t\t\tendLocationY = this.getAdjustedXLocation(dataItem, this.yField);\r\n\t\t}\r\n\r\n\t\tif(this.baseAxis == this.yAxis){\r\n\t\t\tstartLocationY = this.startLocation;\r\n\t\t\tendLocationY = this.endLocation;\r\n\r\n\t\t\tstartLocationX = this.getAdjustedXLocation(dataItem, this.xOpenField);\r\n\t\t\tendLocationX = this.getAdjustedXLocation(dataItem, this.xField);\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\tlet x0: number = this.xAxis.getX(dataItem, xField, startLocationX);\r\n\t\tlet y0: number = this.yAxis.getY(dataItem, yField, startLocationY);\r\n\r\n\t\tlet x1: number = this.xAxis.getX(dataItem, xField, endLocationX);\r\n\t\tlet y1: number = this.yAxis.getY(dataItem, yField, endLocationY);\r\n\r\n\t\tx0 = $math.fitToRange(x0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\ty0 = $math.fitToRange(y0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\tx1 = $math.fitToRange(x1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\ty1 = $math.fitToRange(y1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t// this might make an impression that points are duplicated, and they indeed are, but this is needed to handle gaps in data\r\n\t\tif (!this.noRisers) {\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tlet prevPoint: IPoint = points[points.length - 1];\r\n\t\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tpoints.push({ x: prevPoint.x, y: y1 });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpoints.push({ x: x0, y: prevPoint.y });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tpoints.push({ x: x1, y: prevPoint.y });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpoints.push({ x: prevPoint.x, y: y0 });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet point0: IPoint = { x: x0, y: y0 };\r\n\t\tlet point1: IPoint = { x: x1, y: y1 };\r\n\r\n\t\tif (backwards) {\r\n\t\t\tpoints.push(point1, point0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpoints.push(point0, point1);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Draws the line segment.\r\n\t *\r\n\t * @param segment     Segment\r\n\t * @param points      Segment points\r\n\t * @param closePoints Segment close points\r\n\t */\r\n\tprotected drawSegment(segment: StepLineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tlet vertical = false;\r\n\t\tif (this.yAxis == this.baseAxis) {\r\n\t\t\tvertical = true;\r\n\t\t}\r\n\t\tsegment.drawSegment(points, closePoints, this.tensionX, this.tensionY, this.noRisers, vertical);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createSegment(): this[\"_segment\"] {\r\n\t\treturn new StepLineSeriesSegment();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if step line series should draw only horizontal (or only\r\n\t * vertical, depending on base axis) lines, instead of connecting them with\r\n\t * vertical (or horizontal) lines.\r\n\t *\r\n\t * @default false\r\n\t * @param value  No risers\r\n\t */\r\n\tpublic set noRisers(value: boolean) {\r\n\t\tthis.setPropertyValue(\"noRisers\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return No risers\r\n\t */\r\n\tpublic get noRisers(): boolean {\r\n\t\treturn this.getPropertyValue(\"noRisers\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * start location of the step\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t * @default 0\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Step end location.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t * #default 1\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeries\"] = StepLineSeries;\r\nregistry.registeredClasses[\"StepLineSeriesDataItem\"] = StepLineSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarColumnAdapters extends IColumnAdapters, IRadarColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class RadarColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarColumnEvents;\r\n\r\n\r\n\t/**\r\n\t * Radar column element\r\n\t */\r\n\tpublic radarColumn: Slice;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.radarColumn = this.createChild(Slice);\r\n\t\tthis.radarColumn.shouldClone = false;\r\n\t\tthis.radarColumn.strokeOpacity = undefined;\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.radarColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[RadarColumn]].\r\n\t *\r\n\t * @param source Source RadarColumn\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.radarColumn) {\r\n\t\t\tthis.radarColumn.copyFrom(source.radarColumn);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @return X\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipX();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @return Y\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipY();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n","/**\r\n * Radar column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { RadarColumn } from \"../elements/RadarColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: RadarColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarColumnSeriesAdapters extends IColumnSeriesAdapters, IRadarColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IRadarColumnSeriesEvents} for a list of available Events\r\n * @see {@link IRadarColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class RadarColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of data item.\r\n\t */\r\n\tpublic _dataItem: RadarColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: RadarColumn;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IRadarColumnSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a RadarColumn element to use as column in radar chart.\r\n\t *\r\n\t * @return RadarColumn.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new RadarColumn();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tif (dataItem) {\r\n\t\t\tif (dataItem.column) {\r\n\t\t\t\tdataItem.column.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: Sprite = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\trangeColumn.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet startAngle = this.chart.startAngle;\r\n\t\tlet endAngle = this.chart.endAngle;\r\n\r\n\t\tlet yField: string = this.yField;\r\n\t\tlet yOpenField: string = this.yOpenField;\r\n\t\tlet xField: string = this.xField;\r\n\t\tlet xOpenField: string = this.xOpenField;\r\n\r\n\t\tlet lAngle: number;\r\n\t\tlet rAngle: number;\r\n\r\n\t\tlet tRadius: number;\r\n\t\tlet bRadius: number;\r\n\r\n\t\tlet startLocation = this.getStartLocation(dataItem);\r\n\t\tlet endLocation = this.getEndLocation(dataItem);\r\n\r\n\t\tlet cellAngle = (endAngle - startAngle) / (this.dataItems.length * (this.end - this.start));\r\n\r\n\t\tlet radarColumn = dataItem.column;\r\n\t\tif (!radarColumn) {\r\n\t\t\tradarColumn = this.columns.create();\r\n\t\t\tdataItem.column = radarColumn;\r\n\t\t\t$object.copyProperties(this, radarColumn, visualProperties); // need this \r\n\t\t\t$object.copyProperties(this.columns.template, radarColumn, visualProperties); // second time, no force, so that columns.template would override series properties\t\t\t\r\n\t\t\tdataItem.addSprite(radarColumn);\r\n\t\t\tradarColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\t\t\tthis.setColumnStates(radarColumn);\r\n\t\t}\r\n\r\n\t\tlet width = radarColumn.width;\r\n\t\tlet percentWidth = 100;\r\n\r\n\t\tif (width instanceof Percent) {\r\n\t\t\tpercentWidth = width.percent;\r\n\t\t}\r\n\r\n\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\tstartLocation += offset;\r\n\t\tendLocation -= offset;\r\n\t\t// two category axes\r\n\t\tif ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, 0, \"valueY\"), y: this.yAxis.getY(dataItem, yField, 0, \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, 1, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, 1, \"valueY\") });\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xOpenField, 0, \"valueX\");\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xField, 1, \"valueX\");\r\n\r\n\t\t\tstartAngle = startAngle + startLocation * cellAngle;\r\n\t\t\tendAngle = endAngle - (1 - endLocation) * cellAngle;\r\n\t\t}\r\n\t\telse if (this.baseAxis == this.xAxis) {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, dataItem.locations[yField], \"valueY\"), y: this.yAxis.getY(dataItem, yField, dataItem.locations[yField], \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\") });\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xOpenField, startLocation, \"valueX\");\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xField, endLocation, \"valueX\");\r\n\r\n\t\t\tstartAngle = startAngle + startLocation * cellAngle;\r\n\t\t\tendAngle = endAngle - (1 - endLocation) * cellAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, startLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yField, startLocation, \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, endLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, endLocation, \"valueY\") });\r\n\r\n\t\t\tif ($type.isNumber(width)) {\t\t\t\t\r\n\t\t\t\tlet abs = Math.abs(tRadius - bRadius);\r\n\t\t\t\tif (abs > width) {\r\n\t\t\t\t\tlet d = (abs - width) / 2;\r\n\t\t\t\t\ttRadius += d;\r\n\t\t\t\t\tbRadius -= d;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xField, dataItem.locations[xField], \"valueX\");\r\n\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xOpenField, dataItem.locations[xOpenField], \"valueX\");\r\n\t\t}\r\n\r\n\t\tif (rAngle < lAngle) {\r\n\t\t\tlet temp = rAngle;\r\n\t\t\trAngle = lAngle;\r\n\t\t\tlAngle = temp;\r\n\t\t}\r\n\r\n\t\tlAngle = $math.fitToRange(lAngle, startAngle, endAngle);\r\n\t\trAngle = $math.fitToRange(rAngle, startAngle, endAngle);\r\n\r\n\t\tlet slice = radarColumn.radarColumn;\r\n\r\n\t\tslice.startAngle = lAngle;\r\n\r\n\t\tlet arc = rAngle - lAngle;\r\n\r\n\t\tif (arc > 0) {\r\n\t\t\tslice.arc = arc;\r\n\t\t\tslice.radius = tRadius;\r\n\t\t\tslice.innerRadius = bRadius;\r\n\t\t\tradarColumn.__disabled = false;\r\n\r\n\t\t\tradarColumn.parent = this.columnsContainer;\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (!rangeColumn) {\r\n\t\t\t\t\trangeColumn = this.columns.create();\r\n\r\n\t\t\t\t\t$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n\r\n\t\t\t\t\tif (rangeColumn.dataItem) {\r\n\t\t\t\t\t\t$array.remove(rangeColumn.dataItem.sprites, rangeColumn);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.addSprite(rangeColumn);\r\n\t\t\t\t\trangeColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\t\t\t\t\t\r\n\t\t\t\t\tthis.setColumnStates(rangeColumn);\r\n\t\t\t\t\tdataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet slice = rangeColumn.radarColumn;\r\n\t\t\t\tslice.startAngle = lAngle;\r\n\t\t\t\tslice.arc = arc;\r\n\t\t\t\tslice.radius = tRadius;\r\n\t\t\t\tslice.innerRadius = bRadius;\r\n\r\n\t\t\t\tif (slice.invalid) {\r\n\t\t\t\t\tslice.paper = this.paper;\r\n\t\t\t\t\tslice.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.__disabled = false;\r\n\t\t\t\trangeColumn.parent = axisRange.contents;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: RadarColumnSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string) {\r\n\r\n\t\tif (!stackKeyX) {\r\n\t\t\tstackKeyX = \"valueX\";\r\n\t\t}\r\n\t\tif (!stackKeyY) {\r\n\t\t\tstackKeyY = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet x: number = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n\r\n\t\tlet radius: number = $math.getDistance({ x: x, y: y });\r\n\t\t// hack to be able to determine angle later\r\n\t\tif (radius == 0) {\r\n\t\t\tradius = 0.00001;\r\n\t\t}\r\n\r\n\t\tlet angle: number = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n\r\n\t\treturn { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns an SVG path to be used as a mask for the series.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>this.yAxis.renderer;\r\n\t\treturn $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\r\n\t\tbullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tsuper.setXAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tsuper.setYAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected updateRendererRefs() {\r\n\t\tlet rendererX = <AxisRendererCircular>this.xAxis.renderer;\r\n\t\tlet rendererY = <AxisRendererRadial>this.yAxis.renderer;\r\n\r\n\t\trendererX.axisRendererY = rendererY;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumnSeries\"] = RadarColumnSeries;\r\nregistry.registeredClasses[\"RadarColumnSeriesDataItem\"] = RadarColumnSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Funnel slices.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Width of the top edge of the slice.\r\n\t */\r\n\ttopWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Width of the bottom edge of the slice.\r\n\t */\r\n\tbottomWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\texpandDistance?: number;\r\n\r\n\t/**\r\n\t * Orientation of the slice.\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSlice]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSliceAdapters extends IContainerAdapters, IFunnelSliceProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to create [[FunnelSlice]] elements.\r\n *\r\n * @see {@link IFunnelSliceEvents} for a list of available events\r\n * @see {@link IFunnelSliceAdapters} for a list of available adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSlice extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSliceProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSliceAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSliceEvents;\r\n\r\n\t/**\r\n\t * Main slice element.\r\n\t */\r\n\tpublic slice: Sprite;\r\n\r\n\t/**\r\n\t * Am anchor point the slice tick line is pointing to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @readonly\r\n\t */\r\n\tpublic tickPoint: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.slice = this.createChild(Sprite);\r\n\t\tthis.slice.shouldClone = false;\r\n\t\tthis.slice.setElement(this.paper.add(\"path\"));\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tthis.orientation = \"vertical\";\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.topWidth = percent(100);\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tthis.expandDistance = 0;\r\n\r\n\t\tthis.className = \"FunnelSlice\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tlet ed = this.expandDistance;\r\n\r\n\t\tlet path = \"\";\r\n\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };\r\n\t\t\tlet cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };\r\n\r\n\t\t\tlet qp1 = $path.lineTo(br);\r\n\t\t\tlet qp2 = $path.lineTo(tl);\r\n\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(br, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tl, cpl);\r\n\t\t\t}\r\n\r\n\t\t\tpath = $path.moveTo(tl) + $path.lineTo(tr) + qp1 + $path.lineTo(bl) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };\r\n\t\t\tlet cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };\r\n\r\n\t\t\tlet qp1 = $path.lineTo(bt);\r\n\t\t\tlet qp2 = $path.lineTo(tb);\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(bt, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tb, cpl);\r\n\t\t\t}\r\n\r\n\t\t\tpath = $path.moveTo(tb) + $path.lineTo(tt) + qp1 + $path.lineTo(bb) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };\r\n\t\t}\r\n\r\n\t\tthis.slice.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\r\n\tgetPoint(locationX:number, locationY:number):IPoint{\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet mlx = tl.x + (bl.x - tl.x) * locationY;\r\n\t\t\tlet mrx = tr.x + (br.x - tr.x) * locationY;\r\n\r\n\t\t\treturn { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet mty = tt.y + (bt.y - tt.y) * locationX;\r\n\t\t\tlet mby = tb.y + (bb.y - tb.y) * locationX;\r\n\r\n\t\t\treturn { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bottom width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Bottom width\r\n\t */\r\n\tpublic set bottomWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"bottomWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return bottom width\r\n\t */\r\n\tpublic get bottomWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Top width\r\n\t */\r\n\tpublic set topWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"topWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top width\r\n\t */\r\n\tpublic get topWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slice: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set orintation if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to. It's relative to the\r\n\t * height of the slice.\r\n\t *\r\n\t * Zero (default) will mean the sides will be perfectly straight.\r\n\t *\r\n\t * Positive value will make them bend outwards, resulting in \"puffed\" slices.\r\n\t *\r\n\t * Negative values will make them bend inwards.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set expandDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"expandDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return expandDistance\r\n\t */\r\n\tpublic get expandDistance(): number {\r\n\t\treturn this.getPropertyValue(\"expandDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source :this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.slice) {\r\n\t\t\tthis.slice.copyFrom(source.slice);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSlice\"] = FunnelSlice;\r\n","/**\r\n * Funnel tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickProperties extends ITickProperties {\r\n\tlocationX?: number;\r\n\r\n\tlocationY?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelTickAdapters extends ITickAdapters, IFunnelTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nexport class FunnelTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<Label>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<FunnelSlice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelTick\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\r\n\t\tthis.setPropertyValue(\"locationX\", 0);\r\n\t\tthis.setPropertyValue(\"locationY\", 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: FunnelSlice = this.slice;\r\n\t\tlet point = slice.getPoint(this.locationX, this.locationY);\r\n\r\n\t\tif (point) {\r\n\t\t\tlet label = this.label;\r\n\r\n\t\t\tlet series = <FunnelSeries>slice.dataItem.component;\r\n\t\t\tlet p0:IPoint;\r\n\t\t\tlet p1:IPoint;\r\n\t\t\tlet p2:IPoint;\r\n\r\n\t\t\tif (series.orientation == \"vertical\") {\r\n\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tx1 += label.maxRight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp0 = $utils.spritePointToSprite(point, slice, this.parent);\t\t\t\t\r\n\t\t\t\tp2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\t\t\t\tp1 = { x: label.parent.pixelX - this.length, y: p2.y };\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tp1.x = label.parent.measuredWidth + this.length; \r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\ty1 += label.maxBottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tp2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\t\t\t\tp1 = { x: p2.x, y: label.parent.pixelY - this.length };\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tp1.y = label.parent.measuredHeight + this.length; \r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1) + $path.lineTo(p2);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [[FunnelSlice]] element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: FunnelSlice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this, false),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return FunnelSlice\r\n\t */\r\n\tpublic get slice(): FunnelSlice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tthis.setPropertyValue(\"locationX\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tthis.setPropertyValue(\"locationY\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n","/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SlicedChart } from \"../types/SlicedChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { Align } from \"../../core/defs/Align\";\r\nimport { VerticalAlign } from \"../../core/defs/VerticalAlign\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * A reference to a label element.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a tick element.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FunnelSeries;\r\n\r\n\t/**\r\n\t * Defines a type of elements linking slices.\r\n\t */\r\n\tpublic _sliceLink: FunnelSlice;\r\n\r\n\t/**\r\n\t * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get sliceLink(): this[\"_sliceLink\"] {\r\n\t\tif (!this._sliceLink) {\r\n\t\t\tlet sliceLink = this.component.sliceLinks.create();\r\n\t\t\tthis._sliceLink = sliceLink;\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\t\t\tsliceLink.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.sliceLinks.removeValue(sliceLink);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(sliceLink);\r\n\t\t\tsliceLink.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._sliceLink;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelSeriesDataItem\";\r\n\t\t// this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n\t\tthis.events.on(\"visibilitychanged\", () => {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesDataFields extends IPercentSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative width of the slice bottom. See description of `bottomRatio`\r\n\t * property for full description.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tbottomRatio?: number;\r\n\r\n\t/**\r\n\t * Orientation of series\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tlabelsOpposite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSeriesAdapters extends IPercentSeriesAdapters, IFunnelSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: SlicedChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IFunnelSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: FunnelSeriesDataItem;\r\n\r\n\r\n\tprotected _nextY: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _sliceLinks: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * Holds sum of values for all slices\r\n\t */\r\n\tprotected _total: number;\r\n\r\n\t/**\r\n\t * Holds number of slices.\r\n\t */\r\n\tprotected _count: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FunnelSeries\";\r\n\t\tthis.orientation = \"vertical\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.slicesContainer.width = percent(100);\r\n\t\tthis.slicesContainer.height = percent(100);\r\n\r\n\t\tthis._disposers.push(this.slicesContainer.events.on(\"maxsizechanged\", this.invalidateDataItems, this, false));\r\n\r\n\t\tthis.labelsOpposite = true;\r\n\r\n\t\tthis.labelsContainer.layout = \"absolute\";\r\n\r\n\t\tthis.bottomRatio = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelSlice]] element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new FunnelSlice();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelTick]] element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new FunnelTick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FunnelSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.expandDistance = 0.2;\r\n\t}\r\n\r\n\t/**\r\n\t * [initLabel description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param label [description]\r\n\t */\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tsuper.initLabel(label);\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.isMeasured = true;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\r\n\t\tlet slicesContainer = this.slicesContainer;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlabelTemplate.interactionsEnabled = true;\r\n\t\t\tslicesContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelTemplate.interactionsEnabled = false;\r\n\t\t\tslicesContainer.isMeasured = false;\r\n\t\t\tlabelsContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet total = 0;\r\n\t\tlet count = 0;\r\n\t\tthis.dataItems.each((dItem) => {\r\n\t\t\tif ($type.hasValue(dItem.value)) {\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (dItem.value > 0) {\r\n\t\t\t\t\ttotal += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.ignoreZeroValues) {\r\n\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._total = 1 / count * total;\r\n\t\tthis._count = count;\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tthis.arrangeLabels();\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\r\n\t\t\tif (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n\t\t\t\treturn this.getNextValue(nextItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [formDataElement description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected formDataElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//if ($type.hasValue(dataItem.value)) {\r\n\t\t// FunnelSlice\r\n\t\tlet slice = dataItem.slice;\r\n\t\tslice.orientation = this.orientation;\r\n\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tsliceLink.orientation = this.orientation;\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tlet label = dataItem.label;\r\n\r\n\t\ttick.slice = slice;\r\n\t\ttick.label = label;\r\n\r\n\t\tif ($type.hasValue(dataItem.value)) {\r\n\t\t\tthis.decorateSlice(dataItem);\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tif (dataItem.value == 0 && this.ignoreZeroValues) {\r\n\t\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.index == this.dataItems.length - 1) {\r\n\t\t\tsliceLink.disabled = true;\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tsliceLink.fill = slice.fill;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet nextValue = this.getNextValue(dataItem);\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\t\tlet bottomRatio = this.bottomRatio;\r\n\r\n\t\tlet d = 1;\r\n\t\tif (dataItem.value != 0) {\r\n\t\t\td = workingValue / Math.abs(dataItem.value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n\t\t\t\td = 0.000001;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.ignoreZeroValues && dataItem.value == 0) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this._nextY == Infinity) {\r\n\t\t\tthis._nextY = 0;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\r\n\t\t\tlet linkHeight = sliceLink.pixelHeight * d;\r\n\r\n\t\t\tmaxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\tslice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n\r\n\t\t\tslice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = slice.x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = undefined;\r\n\t\t\t}\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight;\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = slice.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linkWidth = sliceLink.pixelWidth * d;\r\n\r\n\t\t\tmaxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\t\t\tslice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n\t\t\tslice.y = maxHeight / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = slice.y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth;\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\r\n\t\t\tsliceLink.y = slice.y;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLastLabel(index: number): Label {\r\n\t\tif (index > 0) {\r\n\t\t\tlet lastLabel = this.labels.getIndex(index);\r\n\t\t\tif (lastLabel.__disabled || !lastLabel.visible) {\r\n\t\t\t\treturn this.getLastLabel(index - 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn lastLabel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrangeLabels description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected arrangeLabels(): void {\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlet count = this.labels.length;\r\n\t\t\tif (count > 1) {\r\n\r\n\t\t\t\tlet lastLabel = this.getLastLabel(count - 1);\r\n\t\t\t\tif (lastLabel) {\r\n\r\n\t\t\t\t\tlet lastY = lastLabel.pixelY;\r\n\t\t\t\t\tlet lastX = lastLabel.pixelX;\r\n\r\n\t\t\t\t\tif (count > 1) {\r\n\t\t\t\t\t\tfor (let i = count - 2; i >= 0; i--) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY + label.measuredHeight > lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY - label.measuredHeight);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX + label.measuredWidth > lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX - label.measuredWidth);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlastY = label.pixelY;\r\n\t\t\t\t\t\t\t\tlastX = label.pixelX;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastY = 0;\r\n\t\t\t\t\t\tlastX = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY < lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX < lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlastY += label.measuredHeight;\r\n\t\t\t\t\t\t\t\tlastX += label.measuredWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: FunnelSlice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tbullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n\t\tbullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\t\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t\t\tthis.invalidate();\r\n\t\t\tif (value == \"vertical\") {\r\n\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\tthis.ticks.template.locationY = 0.5;\r\n\t\t\t\tthis.labels.template.rotation = 0;\r\n\t\t\t\tthis.layout = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.ticks.template.locationX = 0.5;\r\n\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\tthis.labels.template.rotation = -90;\r\n\t\t\t\tthis.layout = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's bottom will change in relation to slices top AND\r\n\t * next slices top.\r\n\t *\r\n\t * Basically it's a relative value (0-1) that indicates bottom width\r\n\t * position between current slice's top width and the top withd of the next\r\n\t * one.\r\n\t *\r\n\t * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n\t * slice with).\r\n\t *\r\n\t * `0` (default) will mean that bottom will be the same as top, resulting in\r\n\t * a prefectly square slice.\r\n\t *\r\n\t * From the data-viz standpoint `0` is a correct setting, since area of the\r\n\t * slices will depict their value correctly.\r\n\t *\r\n\t * `1` will mean that slice will become trapezoid with its bottom matching\r\n\t * width of the next slice.\r\n\t *\r\n\t * `0.5` will make bottom width be in the middle of width of current slice\r\n\t * and the next slice.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set bottomRatio(value: number) {\r\n\t\tif (this.setPropertyValue(\"bottomRatio\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get bottomRatio(): number {\r\n\t\treturn this.getPropertyValue(\"bottomRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of elements linking each actual slice.\r\n\t *\r\n\t * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n\t * so they have all the same configuration options.\r\n\t *\r\n\t * You can use `template` of this link, to specify how links will look.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"FunnelSeries\",\r\n\t *      // ...\r\n\t *      \"sliceLinks\": {\r\n\t *        \"fillOpacity\": 0.5\r\n\t *      }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Funnel links\r\n\t */\r\n\tpublic get sliceLinks(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._sliceLinks) {\r\n\t\t\tlet sliceLink = new FunnelSlice();\r\n\t\t\tsliceLink.applyOnClones = true;\r\n\t\t\tsliceLink.fillOpacity = 0.5;\r\n\t\t\tsliceLink.expandDistance = - 0.3;\r\n\t\t\tsliceLink.hiddenState.properties.opacity = 0;\r\n\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\r\n\t\t\tthis._sliceLinks = new ListTemplate(sliceLink);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._sliceLinks));\r\n\t\t}\r\n\t\treturn this._sliceLinks;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\r\n\r\n\t\tlet delay: number = 0;\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.show(interpolationDuration, delay, [\"value\"]);\r\n\t\t});\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[] = [\"value\"];\r\n\t\tlet value: number = 0;\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\t\t\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.hide(interpolationDuration, delay, value, fields);\r\n\t\t});\r\n\r\n\t\tlet animation: Animation = super.hide(duration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tsuper.setAlignLabels(value);\r\n\t\tthis.ticks.template.disabled = !value;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tif (labelsContainer) {\r\n\t\t\t// do not align\r\n\t\t\tif (!value) {\r\n\t\t\t\tlabelsContainer.width = percent(100);\r\n\t\t\t\tlabelsContainer.height = percent(100);\r\n\t\t\t}\r\n\t\t\t//align\r\n\t\t\telse {\r\n\t\t\t\tlabelsContainer.height = undefined;\r\n\t\t\t\tlabelsContainer.width = undefined;\r\n\t\t\t\tlabelsContainer.margin(10, 10, 10, 10);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t}\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * This setting is only used if `alignLabels = true`.\r\n\t *\r\n\t * If set to `true` (default) labels will be drawn to the right (on vertical\r\n\t * series), or to the bottom (on horizontal series).\r\n\t *\r\n\t * If set to `false`, labels will be positioned to the left or top\r\n\t * respectively.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.1.13\r\n\t * @param  value  Labels on opposite side?\r\n\t */\r\n\tpublic set labelsOpposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"labelsOpposite\", value)\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tlet labelAlign: Align = \"none\";\r\n\t\tlet labelValign: VerticalAlign = \"none\";\r\n\r\n\t\tif (!this.alignLabels) {\r\n\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\tlabelAlign = \"center\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabelValign = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// opposite (left/bottom)\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.labelsContainer.toFront();\r\n\t\t\t\t// left\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"left\";\r\n\t\t\t\t\tlabelAlign = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\t// bottom\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"right\";\r\n\t\t\t\t\tlabelValign = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// non oposite (right/top)\r\n\t\t\telse {\r\n\t\t\t\tthis.labelsContainer.toBack();\r\n\t\t\t\t// right\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 0;\r\n\t\t\t\t\tlabelAlign = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\t// top\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelValign = \"top\";\r\n\t\t\t\t\tthis.ticks.template.locationY = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlabelTemplate.align = labelAlign;\r\n\t\tlabelTemplate.valign = labelValign;\r\n\r\n\t\tthis.validateLayout();\r\n\t\tthis.ticks.each((tick) => {\r\n\t\t\ttick.invalidate();\r\n\t\t})\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels on opposite side?\r\n\t */\r\n\tpublic get labelsOpposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"labelsOpposite\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n","/**\r\n * Defines Pyramid Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IFunnelSeriesAdapters, IFunnelSeriesDataFields, IFunnelSeriesEvents, IFunnelSeriesProperties, FunnelSeries, FunnelSeriesDataItem } from \"./FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PyramidSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PyramidSeriesDataItem extends FunnelSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PyramidSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PyramidSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesDataFields extends IFunnelSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesProperties extends IFunnelSeriesProperties {\r\n\r\n\t/**\r\n\t * Bottom width in pixels or percent\r\n\t */\r\n\tbottomWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Top width in pixels or percent\r\n\t */\r\n\ttopWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of pyramid\r\n\t */\r\n\tpyramidHeight?: number | Percent;\r\n\r\n\t/**\r\n\t * Indicates whether slice value should sould influence its height or area\r\n\t * size.\r\n\t *\r\n\t * @default \"area\"\r\n\t */\r\n\tvalueIs?: \"height\" | \"area\";\r\n}\r\n\r\n/**\r\n * Defines events for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesEvents extends IFunnelSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PyramidSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPyramidSeriesAdapters extends IFunnelSeriesAdapters, IPyramidSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPyramidSeriesEvents} for a list of available Events\r\n * @see {@link IPyramidSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class PyramidSeries extends FunnelSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPyramidSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPyramidSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPyramidSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPyramidSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PyramidSeriesDataItem;\r\n\r\n\t/**\r\n\t * [_nextWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _nextWidth: number;\r\n\r\n\tprotected _pyramidHeight: number;\r\n\r\n\tprotected _pyramidWidth: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PyramidSeries\";\r\n\t\tthis.topWidth = percent(0);\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.pyramidHeight = percent(100);\r\n\t\tthis.valueIs = \"area\";\r\n\r\n\t\tthis.sliceLinks.template.width = 0;\r\n\t\tthis.sliceLinks.template.height = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pyramid Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PyramidSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextWidth = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\t\t}\r\n\t\tif (nextValue == 0) {\r\n\t\t\tnextValue = 0.000001;\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.value > 0) {\r\n\t\t\t\tlet relValue = dataItem.getWorkingValue(\"value\") / dataItem.value;\r\n\t\t\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tmaxHeight -= (sliceLink.pixelHeight * relValue);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmaxWidth -= (sliceLink.pixelWidth * relValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._pyramidHeight = $utils.relativeToValue(this.pyramidHeight, maxHeight);\r\n\t\tthis._pyramidWidth = $utils.relativeToValue(this.pyramidHeight, maxWidth);\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet y = (maxHeight - this._pyramidHeight) / 2;\r\n\t\t\tthis.slicesContainer.y = y\r\n\t\t\tthis.labelsContainer.y = y;\r\n\t\t\tthis.ticksContainer.y = y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = (maxWidth - this._pyramidWidth) / 2;\r\n\t\t\tthis.slicesContainer.x = x;\r\n\t\t\tthis.labelsContainer.x = x;\r\n\t\t\tthis.ticksContainer.x = x;\r\n\t\t}\r\n\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]) {\r\n\r\n\t\tlet sum = this.dataItem.values.value.absoluteSum;\r\n\r\n\t\tif (sum == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tthis.getNextValue(dataItem);\r\n\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\r\n\t\tlet pyramidWidth = this._pyramidWidth;\r\n\t\tlet pyramidHeight = this._pyramidHeight;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet linkWidth = sliceLink.pixelWidth;\r\n\t\tlet linkHeight = sliceLink.pixelHeight;\r\n\r\n\t\tif ((dataItem.value == 0 || dataItem.value == null) && this.ignoreZeroValues) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet topWidth = $utils.relativeToValue(this.topWidth, maxWidth);\r\n\r\n\t\t\tif (!$type.isNumber(this._nextWidth)) {\r\n\t\t\t\tthis._nextWidth = topWidth;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomWidth = $utils.relativeToValue(this.bottomWidth, maxWidth);\r\n\t\t\tlet sliceTopWidth = this._nextWidth;\r\n\r\n\t\t\tlet angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n\t\t\tlet c = Math.tan(Math.PI / 2 - angle);\r\n\t\t\tif (c == 0) {\r\n\t\t\t\tc = 0.00000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet sliceHeight: number;\r\n\t\t\tlet sliceBottomWidth: number;\r\n\r\n\t\t\tif (this.valueIs == \"area\") {\r\n\t\t\t\tlet totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n\t\t\t\tlet square = totalSquare * workingValue / sum;\r\n\r\n\t\t\t\tlet s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n\r\n\t\t\t\tsliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n\t\t\t\tif (sliceHeight > 0) {\r\n\t\t\t\t\tsliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsliceBottomWidth = sliceTopWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsliceHeight = pyramidHeight * workingValue / sum;\r\n\t\t\t\tsliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n\t\t\t}\r\n\r\n\t\t\tslice.height = sliceHeight;\r\n\t\t\tslice.width = maxWidth;\r\n\t\t\tslice.bottomWidth = sliceBottomWidth;\r\n\t\t\tslice.topWidth = sliceTopWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = slice.bottomWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\t//slice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = maxWidth / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY + slice.dy;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = maxWidth / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet topWidth = $utils.relativeToValue(this.topWidth, maxHeight);\r\n\r\n\t\t\tif (!$type.isNumber(this._nextWidth)) {\r\n\t\t\t\tthis._nextWidth = topWidth;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomWidth = $utils.relativeToValue(this.bottomWidth, maxHeight);\r\n\t\t\tlet sliceTopWidth = this._nextWidth;\r\n\r\n\t\t\tlet angle = Math.atan2(pyramidWidth, topWidth - bottomWidth);\r\n\t\t\tlet c = Math.tan(Math.PI / 2 - angle);\r\n\t\t\tif (c == 0) {\r\n\t\t\t\tc = 0.00000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet sliceWidth: number;\r\n\t\t\tlet sliceBottomWidth: number;\r\n\r\n\t\t\tif (this.valueIs == \"area\") {\r\n\t\t\t\tlet totalSquare = (topWidth + bottomWidth) / 2 * pyramidWidth;\r\n\t\t\t\tlet square = totalSquare * workingValue / sum;\r\n\t\t\t\tsliceWidth = (sliceTopWidth - Math.sqrt(sliceTopWidth * sliceTopWidth - 2 * square * c)) / c;\r\n\t\t\t\tsliceBottomWidth = (2 * square - sliceWidth * sliceTopWidth) / sliceWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsliceWidth = pyramidWidth * workingValue / sum;\r\n\t\t\t\tsliceBottomWidth = sliceTopWidth - sliceWidth * c;\r\n\t\t\t}\r\n\r\n\t\t\tslice.width = sliceWidth;\r\n\t\t\tslice.height = maxHeight;\r\n\t\t\tslice.bottomWidth = sliceBottomWidth;\r\n\t\t\tslice.topWidth = sliceTopWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = slice.bottomWidth;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = maxHeight / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX + slice.dx;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\t\t\tsliceLink.y = maxHeight / 2;\r\n\t\t}\r\n\r\n\t\tthis._nextWidth = slice.bottomWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the pyramid's tip in pixels or relative (`Percent`).\r\n\t *\r\n\t * `0%` (default) means the pyramid will be perfectly pointy.\r\n\t * `50%` will have a cut off / blunt top that is half the width of the chart.\r\n\t * `100%` will take the whole width of the chart.\r\n\t *\r\n\t * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n\t * `100%` and `bottomWidth` to `0%`.\r\n\t *\r\n\t * @default 0%\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set topWidth(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"topWidth\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get topWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topWidth\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Height of pyramid\r\n\t *\r\n\t *\r\n\t * @default 100%\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set pyramidHeight(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"pyramidHeight\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get pyramidHeight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"pyramidHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the pyramid's bottom (bsae) in pixels or relative (`Percent`).\r\n\t *\r\n\t * `0%` means the pyramid's botto will be pointy.\r\n\t * `50%` will have a cut off / blunt bottom that is half the width of the chart.\r\n\t * `100%` (default) will take the whole width of the chart.\r\n\t *\r\n\t * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n\t * `100%` and `bottomWidth` to `0%`.\r\n\t *\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set bottomWidth(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"bottomWidth\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get bottomWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's value will influence its size.\r\n\t *\r\n\t * `\"area\"` (default) means that the whole area of the pyramid (counting in\r\n\t * modifications by `topWidth` and `bottomWidth`) will be divvied up between\r\n\t * slices based on their value.\r\n\t *\r\n\t * With this setting at `\"area\"` the area of the trapezoids of each slice\r\n\t * will represent their value relatively to values of the other slices.\r\n\t *\r\n\t * This is a correct way to depict \"weight\" of each slice based on their\r\n\t * values.\r\n\t *\r\n\t * `\"height\"` means whole height (as opposed to area) of the pyramid will be\r\n\t * divvied up between slices. Actual slice width or area is not counted in.\r\n\t *\r\n\t * From the data-viz standpoint this does not make a lot of sense, since\r\n\t * slices with lesser values might appear more prominent if they are placed\r\n\t * towards thick end of the pyramid since their areas will be bigger.\r\n\t *\r\n\t * @default \"area\"\r\n\t * @param {\"area\" | \"height\"}\r\n\t */\r\n\tpublic set valueIs(value: \"area\" | \"height\") {\r\n\t\tif (this.setPropertyValue(\"valueIs\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {\"area\" | \"height\"}\r\n\t */\r\n\tpublic get valueIs(): \"area\" | \"height\" {\r\n\t\treturn this.getPropertyValue(\"valueIs\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PyramidSeries\"] = PyramidSeries;\r\nregistry.registeredClasses[\"PyramidSeriesDataItem\"] = PyramidSeriesDataItem;\r\n","/**\r\n * Defines Pictorial Stacked Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPyramidSeriesAdapters, IPyramidSeriesDataFields, IPyramidSeriesEvents, IPyramidSeriesProperties, PyramidSeries, PyramidSeriesDataItem } from \"./PyramidSeries\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PictorialStackedSeriesDataItem extends PyramidSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PictorialStackedSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PictorialStackedSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesDataFields extends IPyramidSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesProperties extends IPyramidSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative location to start series from.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Relative location to end series at.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tendLocation?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesEvents extends IPyramidSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPictorialStackedSeriesAdapters extends IPyramidSeriesAdapters, IPictorialStackedSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a PictorialStacked series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPictorialStackedSeriesEvents} for a list of available Events\r\n * @see {@link IPictorialStackedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class PictorialStackedSeries extends PyramidSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPictorialStackedSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPictorialStackedSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPictorialStackedSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPictorialStackedSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PictorialStackedSeriesDataItem;\r\n\r\n\t/**\r\n\t * Holds a Sprite that acts as an intelligent mask for the serries.\r\n\t */\r\n\tprotected _maskSprite: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PictorialStackedSeries\";\r\n\t\tthis.topWidth = percent(100);\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.valueIs = \"height\";\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.startLocation = 0;\r\n\t\tthis.endLocation = 1;\r\n\t\tthis.align = \"center\";\r\n\t\tthis.valign = \"middle\";\r\n\r\n\t\tthis._maskSprite = this.slicesContainer.createChild(Sprite);\r\n\t\tthis._maskSprite.visible = false;\r\n\t\tthis._maskSprite.zIndex = 100;\r\n\t\tthis._maskSprite.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Sizes the mask to fit the series.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\r\n\t\tlet maxWidth = this.slicesContainer.maxWidth;\r\n\t\tlet maxHeight = this.slicesContainer.maxHeight;\r\n\r\n\t\tlet maskSprite = this._maskSprite;\r\n\t\t//maskSprite.validatePosition(); // for some reason size of the maskSprite is 0x0 after we removed validatePosition in afterdraw\r\n\r\n\t\tlet pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n\t\tlet pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n\r\n\t\tlet scale = $math.min(maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n\r\n\t\tif (scale == Infinity) {\r\n\t\t\tscale = 1; // can't return here, won't draw legend properly\r\n\t\t}\r\n\r\n\t\tscale = $math.max(0.001, scale);\r\n\r\n\t\tlet startLocation = this.startLocation;\r\n\t\tlet endLocation = this.endLocation;\r\n\r\n\t\tlet newWidth = $math.min(maxWidth, pictureWidth * scale);\r\n\t\tlet newHeight = $math.min(maxHeight, pictureHeight * scale);\r\n\r\n\t\tmaskSprite.scale = scale;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tthis.topWidth = newWidth + 4;\r\n\t\t\tthis.bottomWidth = newWidth + 4;\r\n\t\t\tthis.pyramidHeight = newHeight * (endLocation - startLocation);\r\n\t\t\tmaskSprite.x = maxWidth / 2;\r\n\t\t\tmaskSprite.y = newHeight / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.topWidth = newHeight + 4;\r\n\t\t\tthis.bottomWidth = newHeight + 4;\r\n\t\t\tthis.pyramidHeight = newWidth * (endLocation - startLocation);\r\n\t\t\tmaskSprite.valign = \"middle\";\r\n\t\t\tmaskSprite.x = newWidth / 2;\r\n\t\t\tmaskSprite.y = maxHeight / 2;\r\n\t\t}\r\n\r\n\t\tmaskSprite.verticalCenter = \"middle\";\r\n\t\tmaskSprite.horizontalCenter = \"middle\";\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tlet y: number;\r\n\t\tlet x: number;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tif (this.valign == \"bottom\") {\r\n\t\t\t\ty = (maxHeight - newHeight);\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"middle\") {\r\n\t\t\t\ty = (maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"top\") {\r\n\t\t\t\ty = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.align == \"left\") {\r\n\t\t\t\tx = -(maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"center\") {\r\n\t\t\t\tx = 0;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"right\") {\r\n\t\t\t\tx = (maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\r\n\t\t\tthis.slices.template.dy = startLocation * newHeight;\r\n\t\t\tif (this.alignLabels) {\r\n\t\t\t\tthis.slicesContainer.dx = x;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.valign == \"bottom\") {\r\n\t\t\t\ty = (maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"middle\") {\r\n\t\t\t\ty = 0;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"top\") {\r\n\t\t\t\ty = -(maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.align == \"left\") {\r\n\t\t\t\tx = 0;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"center\") {\r\n\t\t\t\tx = (maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"right\") {\r\n\t\t\t\tx = (maxWidth - newWidth);\r\n\t\t\t}\r\n\r\n\t\t\tthis.slices.template.dx = startLocation * newWidth;\r\n\t\t\tif (this.alignLabels) {\r\n\t\t\t\tthis.slicesContainer.dy = y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.slicesContainer.x = x;\r\n\t\tthis.labelsContainer.x = x;\r\n\t\tthis.ticksContainer.x = x;\r\n\r\n\t\tthis.slicesContainer.y = y;\r\n\t\tthis.labelsContainer.y = y;\r\n\t\tthis.ticksContainer.y = y;\r\n\r\n\t\tif (newWidth > 0 && newHeight > 0) {\r\n\t\t\tthis.slicesContainer.mask = maskSprite;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pyramid Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PictorialStackedSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] element that is used as a series mask.\r\n\t *\r\n\t * If set, this element's shape will be used to apply shape to the whole\r\n\t * stacked pictorial series.\r\n\t *\r\n\t * You can use this element's `path` property to set an SVG path for the\r\n\t * shape:\r\n\t *\r\n\t * ```TypeScript\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * series.maskSprite.path = iconPath;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * series.maskSprite.path = iconPath;\r\n\t * ```\r\n\t * ```JSON\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"PictorialStackedSeries\",\r\n\t *     // ...\r\n\t *     \"maskSprite\": {\r\n\t *       \"path\": iconPath\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Mask sprite\r\n\t */\r\n\tpublic get maskSprite(): Sprite {\r\n\t\treturn this._maskSprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tsuper.initSlice(slice);\r\n\r\n\t\tlet hs = slice.states.getKey(\"hover\");\r\n\t\tif (hs) {\r\n\t\t\ths.properties.expandDistance = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location to start series from.\r\n\t *\r\n\t * Range of values: 0 to 1.\r\n\t *\r\n\t * This setting indicates where actual slices will start relatively to the\r\n\t * whole height/width of the series.\r\n\t *\r\n\t * For example, if we want slices to start at 30% from the top/left of the\r\n\t * series, we can set `startLocation = 0.3`.\r\n\t *\r\n\t * To fill shape outside of the location range, use background of the\r\n\t * property `slicesContainer`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"startLocation\": 0.2,\r\n\t *     \"endLocation\": 0.8,\r\n\t *     \"slicesContainer\": {\r\n\t *       \"background\": {\r\n\t *         \"fill\": \"#eee\"\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.1.13\r\n\t * @param  value  Start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location to end series at.\r\n\t *\r\n\t * Range of values: 0 to 1.\r\n\t *\r\n\t * This setting indicates where actual slices will end relatively to the\r\n\t * whole height/width of the series.\r\n\t *\r\n\t * For example, if we want slices to end at 70% from the top/left of the\r\n\t * series, we can set `endLocation = 0.7`.\r\n\t *\r\n\t * To fill shape outside of the location range, use background of the\r\n\t * property `slicesContainer`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"startLocation\": 0.2,\r\n\t *     \"endLocation\": 0.8,\r\n\t *     \"slicesContainer\": {\r\n\t *       \"background\": {\r\n\t *         \"fill\": \"#eee\"\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.1.13\r\n\t * @param  value  End location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PictorialStackedSeries\"] = PictorialStackedSeries;\r\nregistry.registeredClasses[\"PictorialStackedSeriesDataItem\"] = PictorialStackedSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Cone Columns.\r\n * It is a container which has coneColumn element which is a Cone.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Cone } from \"../../core/elements/3d/Cone\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ConeColumn]].\r\n */\r\nexport interface IConeColumnProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[ConeColumn]].\r\n */\r\nexport interface IConeColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ConeColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeColumnAdapters extends IColumnAdapters, IConeColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates ConeColumns.\r\n *\r\n * @see {@link IConeColumnEvents} for a list of available events\r\n * @see {@link IConeColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class ConeColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IConeColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IConeColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IConeColumnEvents;\r\n\r\n\r\n\t/**\r\n\t * Cone column element\r\n\t */\r\n\tpublic coneColumn: Cone;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ConeColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tcreateAssets() {\r\n\t\tthis.coneColumn = this.createChild(Cone);\r\n\t\tthis.coneColumn.shouldClone = false;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.coneColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[ConeColumn]].\r\n\t *\r\n\t * @param source Source ConeColumn\r\n\t */\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.coneColumn) {\r\n\t\t\tthis.coneColumn.copyFrom(source.coneColumn);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeColumn\"] = ConeColumn;\r\n","/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { ConeColumn } from \"../elements/ConeColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ConeSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: ConeColumn;\r\n\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ConeSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ConeSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ConeSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeSeriesAdapters extends IColumnSeriesAdapters, IConeSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ConeSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: ConeColumn;\r\n\r\n\t/**\r\n\t */\r\n\tpublic _dataItem: ConeSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IConeSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IConeSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IConeSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IConeSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ConeSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new ConeColumn();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\t\t\r\n\t\tlet dx = 0;\r\n\t\tlet dy = 0;\r\n\t\tlet column = this.columns.getIndex(0);\r\n\r\n\t\tif(column){\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tdy = column.coneColumn.innerWidth / 2 + 1\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdx = column.coneColumn.innerHeight / 2 + 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: -dx,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength + dx,\r\n\t\t\t\theight: this.yAxis.axisLength + dy\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tlet column = dataItem.column;\r\n\t\tif(column){\r\n\t\t\tlet coneColumn = dataItem.column.coneColumn;\r\n\r\n\t\t\tconeColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tconeColumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconeColumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Curved Columns.\r\n * It is a container which has CurvedColumn element which is a Sprite.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CurvedColumn]].\r\n */\r\nexport interface ICurvedColumnProperties extends IColumnProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionX?: number;\r\n\r\n\t/**\r\n\t * Tension\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * Orientation of the column\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[CurvedColumn]].\r\n */\r\nexport interface ICurvedColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnAdapters extends IColumnAdapters, ICurvedColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates CurvedColumns.\r\n *\r\n * @see {@link ICurvedColumnEvents} for a list of available events\r\n * @see {@link ICurvedColumnAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnEvents;\r\n\r\n\t/**\r\n\t * The element that holds curved column shape.\r\n\t */\r\n\tpublic curvedColumn: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * [createAssets description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected createAssets(): void {\r\n\t\tthis.curvedColumn = this.createChild(Sprite);\r\n\t\tthis.curvedColumn.shouldClone = false;\r\n\r\n\t\tthis.setPropertyValue(\"tension\", 0.7);\r\n\r\n\t\tthis.width = percent(120);\r\n\t\tthis.height = percent(120);\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.curvedColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w = this.realWidth;\r\n\t\tlet h = this.realHeight;\r\n\t\tlet x = this.realX - this.pixelX;\r\n\t\tlet y = this.realY - this.pixelY;\r\n\r\n\t\tlet points: IPoint[];\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\t$utils.used(this.width);\r\n\r\n\t\tlet tensionX = 1;\r\n\t\tlet tensionY = 1;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\ttensionX = this.tension;\r\n\t\t\tpoints = [{ x: 0, y: h + y }, { x: w / 2, y: y }, { x: w, y: h + y }];\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttensionY = this.tension;\r\n\t\t\th = Math.abs(h);\r\n\t\t\tpoints = [{ x: x, y: h }, { x: x + w, y: h / 2 }, { x: x, y: 0 }];\r\n\t\t}\r\n\r\n\t\tlet path = $path.moveTo(points[0]) + new $smoothing.Tension(tensionX, tensionY).smooth(points);\r\n\t\tthis.column.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[CurvedColumn]].\r\n\t *\r\n\t * @param source  Source CurvedColumn\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.curvedColumn) {\r\n\t\t\tthis.curvedColumn.copyFrom(source.curvedColumn);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension of the curve.\r\n\t *\r\n\t * Tension defines how \"lose\" the line will be.\r\n\t *\r\n\t * 1 is the maximum tension which would result in pointy columns with\r\n\t * straight edges.\r\n\t *\r\n\t * The smaller the tension th wider the column will be.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value tension (0-1)\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension (0-1)\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the column.\r\n\t *\r\n\t * Available options: \"vertical\" (default) and \"horizontal\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumn\"] = CurvedColumn;\r\n","/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CurvedColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CurvedColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnSeriesAdapters extends IColumnSeriesAdapters, ICurvedColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines type of the data item.\r\n\t */\r\n\tpublic _dataItem: CurvedColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ICurvedColumnSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CurvedColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for the curved column.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new CurvedColumn();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\r\n\t\tlet column = dataItem.column;\r\n\t\tcolumn = dataItem.column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet curvedColumn = dataItem.column.curvedColumn;\r\n\r\n\t\t\tcurvedColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tcolumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ICircleBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ICircleBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleBulletAdapters extends IBulletAdapters, ICircleBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class CircleBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICircleBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICircleBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICircleBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CircleBullet\";\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.radius = 5;\r\n\t\tcircle.isMeasured = false;\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[CircleBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.circle.copyFrom(source.circle);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface IErrorBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface IErrorBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IErrorBulletAdapters extends IBulletAdapters, IErrorBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class ErrorBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IErrorBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IErrorBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IErrorBulletEvents;\r\n\r\n\tpublic errorLine:Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ErrorBullet\";\r\n\t\tthis.errorLine = this.createChild(Sprite);\r\n\t\tthis.errorLine.shouldClone = false;\r\n\t\tthis.width = 20;\r\n\t\tthis.height = 20;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.isDynamic = true;\r\n\t}\r\n\r\n\r\n\tvalidatePosition(){\r\n\t\tsuper.validatePosition();\r\n\t\tlet w = this.pixelWidth / 2;\r\n\t\tlet h = this.pixelHeight / 2;\r\n\r\n\t\tthis.errorLine.path = $path.moveTo({x:-w, y:-h}) + $path.lineTo({x:w, y:-h}) + $path.moveTo({x:0, y:-h}) + $path.lineTo({x:0, y:h}) + $path.moveTo({x:-w, y:h}) + $path.lineTo({x:w, y:h});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[ErrorBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.errorLine.copyFrom(source.errorLine);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n","/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentAdapters, IComponentEvents, IComponentDataFields } from \"../../core/Component\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { TextLink } from \"../../core/elements/TextLink\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class NavigationBarDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: NavigationBar;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"NavigationBarDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Name of the navigation bar item.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setProperty(\"name\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.properties[\"name\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * Name of nav var item.\r\n\t */\r\n\tname?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarProperties extends IComponentProperties {\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[NavigationBar]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface INavigationBarAdapters extends IComponentAdapters, INavigationBarProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nexport class NavigationBar extends Component {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: INavigationBarDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: INavigationBarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: INavigationBarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: INavigationBarEvents;\r\n\r\n\t/**\r\n\t * A list of breadcrumbs (links) in the nav bar.\r\n\t */\r\n\tpublic links: ListTemplate<TextLink>;\r\n\r\n\t/**\r\n\t * [_linksIterator description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _linksIterator: $iter.ListIterator<TextLink>;\r\n\r\n\t/**\r\n\t * [_separatorsIterator description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _separatorsIterator: $iter.ListIterator<Sprite>;\r\n\r\n\t/**\r\n\t * A reference to the link which is currently active.\r\n\t */\r\n\tpublic activeLink: TextLink;\r\n\r\n\t/**\r\n\t * A list of elements used as nav bar item separators.\r\n\t */\r\n\tpublic separators: ListTemplate<Triangle>;\r\n\r\n\t/**\r\n\t * Identifies the type of the [[DataItem]] used in this element.\r\n\t */\r\n\tpublic _dataItem!: NavigationBarDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"NavigationBar\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet textLink = new TextLink();\r\n\t\ttextLink.valign = \"middle\";\r\n\t\ttextLink.paddingTop = 8;\r\n\t\ttextLink.paddingBottom = 8;\r\n\r\n\t\tthis.paddingBottom = 2;\r\n\r\n\t\tthis.links = new ListTemplate<TextLink>(textLink);\r\n\t\tthis._disposers.push(new ListDisposer(this.links));\r\n\t\tthis._disposers.push(textLink);\r\n\r\n\t\tthis._linksIterator = new $iter.ListIterator<TextLink>(this.links, () => this.links.create());\r\n\t\tthis._linksIterator.createNewItems = true;\r\n\r\n\t\tlet triangle = new Triangle();\r\n\t\ttriangle.direction = \"right\";\r\n\t\ttriangle.width = 8;\r\n\t\ttriangle.height = 12;\r\n\t\ttriangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\ttriangle.fillOpacity = 0.5;\r\n\t\ttriangle.valign = \"middle\";\r\n\t\ttriangle.marginLeft = 10;\r\n\t\ttriangle.marginRight = 10;\r\n\r\n\t\tthis.separators = new ListTemplate<Triangle>(triangle);\r\n\t\tthis._disposers.push(new ListDisposer(this.separators));\r\n\t\tthis._disposers.push(triangle);\r\n\r\n\t\tlet activeLink = new TextLink();\r\n\t\tthis.activeLink = activeLink;\r\n\t\tactiveLink.copyFrom(textLink);\r\n\t\tactiveLink.valign = \"middle\";\r\n\t\tactiveLink.fontWeight = \"bold\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.dataFields.name = \"name\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Completely redraws the navigation bar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\t\tthis.removeChildren();\r\n\t\tthis._linksIterator.reset();\r\n\t\tsuper.validateDataElements();\r\n\t\t//@todo: dispose\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a visual element for a data item (nav item).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tlet textLink: TextLink;\r\n\t\tif (dataItem.index < this.dataItems.length - 1) {\r\n\t\t\ttextLink = this._linksIterator.getLast();\r\n\t\t\ttextLink.parent = this;\r\n\t\t\tlet separator = this.separators.create();\r\n\t\t\tseparator.parent = this;\r\n\t\t\tseparator.valign = \"middle\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttextLink = this.activeLink;\r\n\t\t\ttextLink.events.copyFrom(this.links.template.events);\r\n\t\t\ttextLink.hide(0);\r\n\t\t\ttextLink.show();\r\n\t\t\ttextLink.parent = this;\r\n\t\t}\r\n\t\ttextLink.dataItem = dataItem;\r\n\t\ttextLink.text = dataItem.name;\r\n\t\ttextLink.validate();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\r\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n","/**\r\n * Cursor module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { IInteractionObjectEvents } from \"../../core/interaction/InteractionObjectEvents\";\r\nimport { IPoint, } from \"../../core/defs/IPoint\";\r\nimport { Chart } from \"../Chart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $dom from \"../../core/utils/DOM\";\r\nimport { system } from \"../../core/System\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Cursor]].\r\n */\r\nexport interface ICursorProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Cursor]].\r\n */\r\nexport interface ICursorEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when position of cursor changes.\r\n\t */\r\n\tcursorpositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts selecting a range with a cursor, e.g. presses\r\n\t * down mouse button and drags the cursor.\r\n\t */\r\n\tselectstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when selection has ended, e.g. user releases mouse button.\r\n\t */\r\n\tselectended: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts zooming using cursor.\r\n\t */\r\n\tzoomstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when user clicked to start zooming/panning/selecting but haven't\r\n\t * finished the operation.\r\n\t */\r\n\tbehaviorcanceled: {};\r\n\r\n\t/**\r\n\t * Invoked when user is done zooming using cursor.\r\n\t */\r\n\tzoomended: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts panning using cursor.\r\n\t */\r\n\tpanstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when user is done panning using cursor.\r\n\t */\r\n\tpanended: {};\r\n\r\n\t/**\r\n\t * Invoked when user is panning using cursor.\r\n\t */\r\n\tpanning: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Cursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICursorAdapters extends IContainerAdapters, ICursorProperties {\r\n\r\n\t/**\r\n\t * Can be used to modify cursor position point dynamically using custom code.\r\n\t *\r\n\t * @since 4.9.35\r\n\t */\r\n\tcursorPoint: IPoint;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Main Cursor class with common cursor functionality.\r\n *\r\n * Chart-specific cursors must extend this class.\r\n *\r\n * @see {@link ICursorEvents} for a list of available events\r\n * @see {@link ICursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n * @todo Should we allow changing `_generalBehavior`?\r\n */\r\nexport class Cursor extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICursorEvents;\r\n\r\n\t/**\r\n\t * Point coordinates of where selection started.\r\n\t */\r\n\tpublic downPoint: IPoint;\r\n\r\n\t/**\r\n\t * Point coordinates of where selection ended.\r\n\t */\r\n\tpublic upPoint: IPoint;\r\n\r\n\t/**\r\n\t * Current cursor position during selection.\r\n\t *\r\n\t * @todo Better description\r\n\t */\r\n\tpublic point: IPoint = { x: 0, y: 0 };\r\n\r\n\t/**\r\n\t * Relative horizontal position.\r\n\t *\r\n\t * @todo: maybe we should make getter only? it is used from outside by axes or series to show tooltips at some position\r\n\t */\r\n\tpublic xPosition: number;\r\n\r\n\t/**\r\n\t * Relative vertical position.\r\n\t *\r\n\t * @todo: maybe we should make getter only? it is used from outside by axes or series to show tooltips at some position\r\n\t */\r\n\tpublic yPosition: number;\r\n\r\n\t/**\r\n\t * [_usesSelection description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _usesSelection: boolean;\r\n\r\n\t/**\r\n\t * What to do when user pressed down and drags cursor: zoom or select.\r\n\t */\r\n\tprotected _generalBehavior: \"zoom\" | \"select\" | \"pan\"; // todo: draw\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: Chart;\r\n\r\n\t/**\r\n\t * Specifies the rules when cursor needs to be moved or hidden.\r\n\t */\r\n\tprotected _stick: \"hard\" | \"soft\" | \"none\" = \"none\";\r\n\r\n\t/**\r\n\t * A screen point that cursor is \"stuck\" to.\r\n\t */\r\n\tprotected _stickPoint: IPoint;\r\n\r\n\t/**\r\n\t * non-modified down point\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * non-modified up point\r\n\t * @ignore\r\n\t */\r\n\tprotected _upPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Cursor\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tthis.hide(0);\r\n\r\n\t\tthis.trackable = true;\r\n\t\tthis.clickable = true;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\t// Add events on body to trigger down and up events (to start zooming or\r\n\t\t// selection)\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handleCursorDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handleCursorUp, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"track\", this.handleCursorMove, this));\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle pointer movement in document and update cursor position as needed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic handleCursorMove(event: IInteractionObjectEvents[\"track\"]): IPoint {\r\n\r\n\r\n\t\tif (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (((this._generalBehavior != \"zoom\" && this._generalBehavior != \"pan\") || !this.downPoint) && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\t// We want to let zoom/pan continue even if cursor is outside chart area\r\n\t\t\tif (!this.isHidden || !this.isHiding) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tif (this._stick == \"soft\" && this._stickPoint) {\r\n\t\t\tif (!this.fitsToBounds(local)) {\r\n\t\t\t\tlocal = this._stickPoint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tthis.triggerMove(local);\r\n\t\treturn local;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Hides actual SVG elements and handles hiding animations.\r\n\t *\r\n\t * @param duration  Fade out duration (ms)\r\n\t * @return Fade out duration (ms)\r\n\t * @ignore\r\n\t */\r\n\tprotected hideReal(duration?: number): $type.Optional<Animation> {\r\n\t\tif ((this._stick == \"hard\" || this._stick == \"soft\") && this._stickPoint) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn super.hideReal(duration);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * The second parameter has following options:\r\n\t *\r\n\t * `\"none\"` - placed cursor will only be there until mouse/touch moves, then\r\n\t * it either moves to a new place (if pointer over plot area) or is hidden.\r\n\t *\r\n\t * `\"soft\"` - cursor will stay in the place if mouse/touch is happening\r\n\t * outside chart, but will move to a new place whe plot area is hovered or\r\n\t * touched.\r\n\t *\r\n\t * `\"hard\"` - cursor will stay in place no matter what, until it is moved by\r\n\t * another `triggerMove()` call.\r\n\t *\r\n\t * The third parameter - `force` (since `4.9.5`) - if set to `true` will\r\n\t * make cursor execute all of the actions associated with cursor move,\r\n\t * including line redraws, tooltip updates, etc. Useful when underlying\r\n\t * chart data is dynamically being updated.\r\n\t *\r\n\t * @param point  Point to place cursor at\r\n\t * @param stick  Level of cursor stickiness to the place\r\n\t * @param force  Force cursor move\r\n\t */\r\n\tpublic triggerMove(point: IPoint, stick?: \"hard\" | \"soft\" | \"none\", force?: boolean): void {\r\n\r\n\t\tpoint.x = $math.round(point.x, 1);\r\n\t\tpoint.y = $math.round(point.y, 1);\r\n\r\n\t\tif (stick) {\r\n\t\t\tthis._stick = stick;\r\n\t\t}\r\n\r\n\t\tif (stick == \"hard\" || stick == \"soft\") {\r\n\t\t\tthis._stickPoint = point;\r\n\t\t}\r\n\r\n\t\tthis.triggerMoveReal(point, force);\r\n\t}\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * @param point Point to place cursor at\r\n\t */\r\n\tprotected triggerMoveReal(point: IPoint, force?: boolean): void {\r\n\t\tif (this.point.x != point.x || this.point.y != point.y || force) {\r\n\t\t\tthis.point = point;\r\n\t\t\tthis.invalidatePosition();\r\n\t\t\t// hide cursor if it's out of bounds\r\n\t\t\tif (this.fitsToBounds(point)) {\r\n\t\t\t\tthis.show(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// unless we are selecting (mouse is down)\r\n\t\t\t\tif (!this.downPoint) {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.visible) {\r\n\t\t\t\tthis.getPositions();\r\n\t\t\t\tthis.dispatch(\"cursorpositionchanged\"); // not good to dispatch later (check step count example)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates pressing down (click/touch) action by a cursor.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tpublic triggerDown(point: IPoint) {\r\n\t\tthis.triggerDownReal(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates pressing down (click/touch) action by a cursor.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tprotected triggerDownReal(point: IPoint) {\r\n\t\tswitch (this._generalBehavior) {\r\n\t\t\tcase \"zoom\":\r\n\t\t\t\tthis.dispatchImmediately(\"zoomstarted\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"select\":\r\n\t\t\t\tthis.dispatchImmediately(\"selectstarted\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tthis.dispatchImmediately(\"panstarted\");\r\n\t\t\t\tgetInteraction().setGlobalStyle(MouseCursorStyle.grabbing);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates the action of release of the mouse down / touch.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tpublic triggerUp(point: IPoint) {\r\n\t\tthis.triggerUpReal(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates the action of release of the mouse down / touch.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tprotected triggerUpReal(point: IPoint) {\r\n\t\tsystem.requestFrame();\r\n\t\tthis.updatePoint(this.upPoint);\r\n\t\tlet interaction = getInteraction();\r\n\r\n\t\tif ($math.getDistance(this._upPointOrig, this._downPointOrig) > interaction.getHitOption(this.interactions, \"hitTolerance\")) {\r\n\t\t\tswitch (this._generalBehavior) {\r\n\t\t\t\tcase \"zoom\":\r\n\t\t\t\t\tthis.dispatch(\"zoomended\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"select\":\r\n\t\t\t\t\tthis.dispatch(\"selectended\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pan\":\r\n\t\t\t\t\tthis.dispatch(\"panended\");\r\n\t\t\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t\tthis.updateSelection();\r\n\t\t}\r\n\t\t/*\r\n\t\telse {\r\n\t\t\t\r\n\t\t\tif(this._generalBehavior == \"select\"){\r\n\t\t\t\tthis.dispatchImmediately(\"selectended\");\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"behaviorcanceled\");\r\n\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t}*/\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursors current positions.\r\n\t */\r\n\tprotected getPositions(): void {\r\n\t\t// positions are used by axes or series\r\n\t\tthis.xPosition = this.point.x / this.innerWidth;\r\n\t\tthis.yPosition = 1 - this.point.y / this.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer down event so we can start zoom or selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original event\r\n\t */\r\n\tpublic handleCursorDown(event: IInteractionEvents[\"down\"]): void {\r\n\r\n\t\tif (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch) || !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initiate blur so that whatever focused element on the page is unselected\r\n\t\t$dom.blur();\r\n\r\n\t\t// Get local point\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tif (!this.fitsToBounds(local)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tthis._downPointOrig = { x: local.x, y: local.y };\r\n\r\n\t\t// We need to cancel the event to prevent gestures on touch devices\r\n\t\tif (event.event.cancelable && this.shouldPreventGestures(event.touch) && this.fitsToBounds(local)) {\r\n\t\t\tevent.event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// Make this happen\r\n\t\tthis.triggerMove(local);\r\n\t\tthis.triggerDown(local);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether Cursor should prevent default action on move.\r\n\t *\r\n\t * Child classes should override this as necessary.\r\n\t * \r\n\t * @return Prevent default?\r\n\t */\r\n\tprotected shouldPreventGestures(touch: boolean): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the coordinates of where pointer down event occurred\r\n\t * (was pressed).\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer up event - finishes zoom or selection action.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original event\r\n\t */\r\n\tpublic handleCursorUp(event: IInteractionEvents[\"up\"]): void {\r\n\t\tif (!this.interactionsEnabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.downPoint && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tif (!this.downPoint || !this.fitsToBounds(this.downPoint)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tthis._upPointOrig = { x: local.x, y: local.y };\r\n\r\n\t\tthis.triggerMove(local);\r\n\t\tthis.triggerUp(local);\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Chart]] the cursor belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t\tif ($type.hasValue((<any>this._chart).plotContainer)) {\r\n\t\t\tgetInteraction().lockElement((<any>this._chart).plotContainer.interactions);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Cursor\"] = Cursor;\r\n","/**\r\n * Cursor for XY chart\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Cursor, ICursorProperties, ICursorAdapters, ICursorEvents } from \"./Cursor\";\r\nimport { Sprite, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { MutableValueDisposer, MultiDisposer, IDisposer } from \"../../core/utils/Disposer\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[XYCursor]].\r\n */\r\nexport interface IXYCursorProperties extends ICursorProperties {\r\n\r\n\t/**\r\n\t * Cursor's behavior when moved with pointer down:\r\n\t *\r\n\t * * \"zoomX\" - zooms horizontally; (default)\r\n\t * * \"zoomY\" - zooms vertically;\r\n\t * * \"zoomXY\" - zooms both horizontally and vertically;\r\n\t * * \"selectX\" - selects a range horizontally;\r\n\t * * \"selectY\" - selects a range vertically;\r\n\t * * \"selectXY\" - selects a range both horizontally and vertically;\r\n\t * * \"panX\" - moves (pans) current selection horizontally;\r\n\t * * \"panY\" - moves (pans) current selection vertically;\r\n\t * * \"panXY\" - moves (pans) current selection both horizontally and vertically;\r\n\t * * \"none\" - does nothing with pointer down.\r\n\t *\r\n\t * @default \"zoomX\"\r\n\t */\r\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Cursor's horizontal line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t */\r\n\tfullWidthLineX?: boolean;\r\n\r\n\t/**\r\n\t * Cursor's vertical line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t */\r\n\tfullWidthLineY?: boolean;\r\n\r\n\t/**\r\n\t * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n\t * This setting specifies relative value by how much we can pan out the plot\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * Specifies to which series cursor lines should be snapped.\r\n\t * \r\n\t * Can be a single series instance or an array of series.\r\n\t */\r\n\tsnapToSeries?: XYSeries | XYSeries[];\r\n\r\n\t/**\r\n\t * If set to `true` this will hide series tooltips when selecting with cursor.\r\n\t *\r\n\t * @since 4.5.15\r\n\t */\r\n\thideSeriesTooltipsOnSelection?: boolean;\r\n\r\n\t/**\r\n\t * If set to a numeric value, cursor will display closest series' tooltips\r\n\t * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n\t * it.\r\n\t *\r\n\t * Set it to `-1` to always force one tooltip, even if there are multiple\r\n\t * data items in exactly same place.\r\n\t *\r\n\t * @since 4.7.18\r\n\t */\r\n\tmaxTooltipDistance?: number;\r\n\r\n\t/**\r\n\t * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n\t * the chart? (when `behavior == \"panX\"`)\r\n\t *\r\n\t * @default true\r\n\t * @since 4.10.17\r\n\t */\r\n\tsnapOnPan?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYCursor]].\r\n */\r\nexport interface IXYCursorEvents extends ICursorEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYCursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYCursorAdapters extends ICursorAdapters, IXYCursorProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\r\nexport class XYCursor extends Cursor {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYCursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IXYCursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYCursorEvents;\r\n\r\n\t/**\r\n\t * Vertical cursor line element.\r\n\t */\r\n\tprotected _lineX = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * Horizontal cursor line element.\r\n\t */\r\n\tprotected _lineY = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * Element which highlights selected area.\r\n\t */\r\n\tprotected _selection: Sprite;\r\n\r\n\t/**\r\n\t * A range of current horizontal selection.\r\n\t */\r\n\tpublic xRange: IRange;\r\n\r\n\t/**\r\n\t * A range of current vertical selection.\r\n\t */\r\n\tpublic yRange: IRange;\r\n\r\n\t/**\r\n\t * Horizontal [[Axis]].\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Vertical [[Axis]].\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\tprotected _snapToDisposers: IDisposer[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"XYCursor\";\r\n\r\n\t\t// Defaults\r\n\t\tthis.behavior = \"zoomX\";\r\n\r\n\t\tthis.maxPanOut = 0.1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.snapOnPan = true;\r\n\r\n\t\t// Create selection element\r\n\t\tlet selection: Sprite = this.createChild(Sprite);\r\n\t\tselection.shouldClone = false;\r\n\t\tselection.fillOpacity = 0.2;\r\n\t\tselection.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tselection.isMeasured = false;\r\n\t\tselection.visible = false;\r\n\t\tselection.interactionsEnabled = false;\r\n\t\tthis.selection = selection;\r\n\t\tthis._disposers.push(this.selection);\r\n\r\n\t\t// Create cursor's vertical line\r\n\t\tlet lineX: Sprite = this.createChild(Sprite);\r\n\t\tlineX.shouldClone = false;\r\n\t\tlineX.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tlineX.fill = color();\r\n\t\tlineX.strokeDasharray = \"3,3\";\r\n\t\tlineX.isMeasured = false;\r\n\t\tlineX.strokeOpacity = 0.4;\r\n\t\tlineX.interactionsEnabled = false;\r\n\t\tlineX.y = 0;// important\r\n\t\tthis.lineX = lineX;\r\n\t\tthis._disposers.push(this.lineX);\r\n\r\n\t\t// Create cursor's horizontal line\r\n\t\tlet lineY: Sprite = this.createChild(Sprite);\r\n\t\tlineY.shouldClone = false;\r\n\t\tlineY.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tlineY.fill = color();\r\n\t\tlineY.strokeDasharray = \"3,3\";\r\n\t\tlineY.isMeasured = false;\r\n\t\tlineY.strokeOpacity = 0.4;\r\n\t\tlineY.interactionsEnabled = false;\r\n\t\tlineY.x = 0; // important\r\n\t\tthis.lineY = lineY;\r\n\t\tthis._disposers.push(this.lineY);\r\n\r\n\t\t// Add handler for size changes\r\n\t\tthis.events.on(\"sizechanged\", this.updateSize, this, false);\r\n\r\n\t\tthis._disposers.push(this._lineX);\r\n\t\tthis._disposers.push(this._lineY);\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.mask = this;\r\n\r\n\t\tthis.hideSeriesTooltipsOnSelection = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursor element dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSize(): void {\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.lineX.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.innerHeight });\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.lineY.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.innerWidth, y: 0 });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t\tif (this._usesSelection) {\r\n\t\t\tlet downPoint: IPoint = this.downPoint;\r\n\t\t\tlet behavior = this.behavior;\r\n\r\n\t\t\tif (downPoint) {\r\n\r\n\t\t\t\tlet point: IPoint = this.point;\r\n\r\n\t\t\t\tif (this.lineX) {\r\n\t\t\t\t\tpoint.x = this.lineX.pixelX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.lineY) {\r\n\t\t\t\t\tpoint.y = this.lineY.pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet selection: Sprite = this.selection;\r\n\r\n\t\t\t\tlet x: number = Math.min(point.x, downPoint.x);\r\n\t\t\t\tlet y: number = Math.min(point.y, downPoint.y);\r\n\r\n\t\t\t\tlet w: number = $math.round(Math.abs(downPoint.x - point.x), this._positionPrecision);\r\n\t\t\t\tlet h: number = $math.round(Math.abs(downPoint.y - point.y), this._positionPrecision);\r\n\r\n\t\t\t\tswitch (behavior) {\r\n\t\t\t\t\tcase \"zoomX\":\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\th = this.pixelHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"zoomY\":\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\tw = this.pixelWidth;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"selectX\":\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\th = this.pixelHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"selectY\":\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\tw = this.pixelWidth;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselection.x = x;\r\n\t\t\t\tselection.y = y;\r\n\r\n\t\t\t\tselection.path = $path.rectangle(w, h);\r\n\r\n\t\t\t\tselection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected fixPoint(point: IPoint): IPoint {\r\n\t\tpoint.x = Math.max(0, point.x);\r\n\t\tpoint.y = Math.max(0, point.y);\r\n\t\tpoint.x = Math.min(this.pixelWidth, point.x);\r\n\t\tpoint.y = Math.min(this.pixelHeight, point.y);\r\n\r\n\t\treturn point;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * @param point Point to place cursor at\r\n\t */\r\n\tprotected triggerMoveReal(point: IPoint, force?: boolean): void {\r\n\r\n\t\tsuper.triggerMoveReal(point, force);\r\n\t\tlet snapToSeries = this.snapToSeries;\r\n\t\tif ((snapToSeries && !this.downPoint)) {\r\n\t\t\tif (snapToSeries instanceof XYSeries) {\r\n\t\t\t\tif (snapToSeries.isHidden) {\r\n\t\t\t\t\tthis.updateLinePositions(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet allHidden = true;\r\n\t\t\t\t$array.each(snapToSeries, (s) => {\r\n\t\t\t\t\tif (!s.isHidden) {\r\n\t\t\t\t\t\tallHidden = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allHidden) {\r\n\t\t\t\t\tthis.updateLinePositions(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLinePositions(point);\r\n\t\t}\r\n\r\n\t\tif (this.downPoint && $math.getDistance(this.downPoint, point) > 3) {\r\n\t\t\tif (this._generalBehavior == \"pan\") {\r\n\t\t\t\tthis.getPanningRanges();\r\n\t\t\t\tthis.dispatch(\"panning\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateLinePositions(point: IPoint) {\r\n\t\tpoint = this.fixPoint(this.point);\r\n\r\n\t\tif (this.lineX && this.lineX.visible && !this.xAxis) {\r\n\t\t\tthis.lineX.x = point.x;\r\n\t\t}\r\n\t\tif (this.lineY && this.lineY.visible && !this.yAxis) {\r\n\t\t\tthis.lineY.y = point.y;\r\n\t\t}\r\n\t\tthis.updateSelection();\r\n\t}\r\n\r\n\r\n\tprotected triggerDownReal(point: IPoint) {\r\n\r\n\t\tif (this.visible && !this.isHiding) {\r\n\r\n\t\t\tif (this._generalBehavior == \"select\") {\r\n\t\t\t\tthis.selection.parent = this.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.fitsToBounds(point)) {\r\n\t\t\t\tthis.downPoint = { x: point.x, y: point.y };\r\n\r\n\t\t\t\tthis.updatePoint(point);\r\n\r\n\t\t\t\t//this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\r\n\r\n\t\t\t\tthis.point.x = this.downPoint.x;\r\n\t\t\t\tthis.point.y = this.downPoint.y;\r\n\r\n\t\t\t\tlet selection: Sprite = this.selection;\r\n\t\t\t\tlet selectionX: number = this.downPoint.x;\r\n\t\t\t\tlet selectionY: number = this.downPoint.y;\r\n\r\n\t\t\t\tif (this._usesSelection) {\r\n\t\t\t\t\tselection.x = selectionX;\r\n\t\t\t\t\tselection.y = selectionY;\r\n\t\t\t\t\tselection.path = \"\";\r\n\t\t\t\t\tselection.show();\r\n\t\t\t\t}\r\n\t\t\t\tsuper.triggerDownReal(point);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.downPoint = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the coordinates of where pointer down event occurred\r\n\t * (was pressed).\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\t\tif (this.lineX) {\r\n\t\t\tpoint.x = this.lineX.pixelX;\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tpoint.y = this.lineY.pixelY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handle action when cursor is released, which should perform an operation\r\n\t * based on its `behavior`, like zoom.\r\n\t * \r\n\t * @param  point  Release point\r\n\t */\r\n\tprotected triggerUpReal(point: IPoint): void {\r\n\t\tif (this.hasMoved()) {\r\n\t\t\tif (this.downPoint) {\r\n\t\t\t\tthis.upPoint = point;\r\n\r\n\t\t\t\tthis.updatePoint(this.upPoint);\r\n\r\n\t\t\t\tif (this._generalBehavior != \"pan\") {\r\n\t\t\t\t\tthis.getRanges();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t\tsuper.triggerUpReal(point);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\tthis.selection.hide(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.xRange = undefined;\r\n\t\t\t\tthis.yRange = undefined;\r\n\t\t\t\tthis.dispatchImmediately(\"selectended\");\r\n\t\t\t}\r\n\r\n\t\t\t// reset cursor style, just in case\r\n\t\t\tif (this._generalBehavior == \"pan\") {\r\n\t\t\t\tlet interaction = getInteraction();\r\n\t\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"behaviorcanceled\");\r\n\t\t}\r\n\t\tthis.downPoint = undefined;\r\n\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates if the cursor has moved enough based on its `behavior`.\r\n\t * \r\n\t * @return Moved?\r\n\t */\r\n\tprivate hasMoved(): boolean {\r\n\t\tlet distance: number;\r\n\t\tif (this.behavior == \"zoomX\" || this.behavior == \"panX\") {\r\n\t\t\tdistance = $math.getHorizontalDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\telse if (this.behavior == \"zoomY\" || this.behavior == \"panY\") {\r\n\t\t\tdistance = $math.getVerticalDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdistance = $math.getDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\treturn distance > getInteraction().getHitOption(this.interactions, \"hitTolerance\");\r\n\t}\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getPanningRanges() {\r\n\r\n\t\tlet startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n\t\tlet startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n\r\n\t\tlet currentX = $math.round(this.point.x / this.innerWidth, 5);\r\n\t\tlet currentY = 1 - $math.round(this.point.y / this.innerHeight, 5);\r\n\r\n\t\tlet deltaX = startX - currentX;\r\n\t\tlet deltaY = startY - currentY;\r\n\r\n\t\tthis.xRange = { start: deltaX, end: 1 + deltaX };\r\n\t\tthis.yRange = { start: deltaY, end: 1 + deltaY };\r\n\r\n\t\tif (this.behavior == \"panX\") {\r\n\t\t\tthis.yRange.start = 0;\r\n\t\t\tthis.yRange.end = 1;\r\n\t\t}\r\n\t\tif (this.behavior == \"panY\") {\r\n\t\t\tthis.xRange.start = 0;\r\n\t\t\tthis.xRange.end = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getRanges() {\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.upPoint.x = this.lineX.pixelX;\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.upPoint.y = this.lineY.pixelY;\r\n\t\t}\r\n\r\n\t\t// @todo Is this needed?\r\n\t\t$utils.used(this.selection);\r\n\r\n\t\tlet startX: number = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n\t\tlet endX: number = $math.round((this.upPoint.x) / this.innerWidth, 5);\r\n\r\n\t\tlet startY: number = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n\t\tlet endY: number = 1 - $math.round((this.upPoint.y) / this.innerHeight, 5);\r\n\r\n\t\tthis.xRange = { start: $math.min(startX, endX), end: $math.max(startX, endX) };\r\n\t\tthis.yRange = { start: $math.min(startY, endY), end: $math.max(startY, endY) };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's behavior when it's moved with pointer down:\r\n\t *\r\n\t * * `\"zoomX\"` - zooms horizontally.\r\n\t * * `\"zoomY\"` - zooms vertically.\r\n\t * * `\"zoomXY\"` - zooms both horizontally and vertically.\r\n\t * * `\"selectX\"` - selects a range horizontally.\r\n\t * * `\"selectY\"` - selects a range vertically.\r\n\t * * `\"selectXY\"` - selects a range both horizontally and vertically.\r\n\t * * `\"panX\"` - moves (pans) current selection horizontally.\r\n\t * * `\"panY\"` - moves (pans) current selection vertically.\r\n\t * * `\"panXY\"` - moves (pans) current selection both horizontally and vertically.\r\n\t * * `\"none\"` - does nothing with pointer down.\r\n\t *\r\n\t * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n\t * and dragging it will start zooming the chart.\r\n\t *\r\n\t * NOTE: `\"zoomXY\"` acts differently when used on a `DateAxis`.\r\n\t * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).\r\n\t *\r\n\t * @param value Bheavior\r\n\t */\r\n\tpublic set behavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\t\tthis.setPropertyValue(\"behavior\", value, true);\r\n\r\n\t\tthis._usesSelection = false;\r\n\r\n\t\tif (value.indexOf(\"zoom\") != -1) {\r\n\t\t\tthis._generalBehavior = \"zoom\";\r\n\t\t\tthis._usesSelection = true;\r\n\t\t}\r\n\t\tif (value.indexOf(\"select\") != -1) {\r\n\t\t\tthis._generalBehavior = \"select\";\r\n\t\t\tthis._usesSelection = true;\r\n\t\t}\r\n\t\tif (value.indexOf(\"pan\") != -1) {\r\n\t\t\tthis._generalBehavior = \"pan\";\r\n\t\t\tthis._usesSelection = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Behavior\r\n\t */\r\n\tpublic get behavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"behavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether Cursor should prevent default action on move.\r\n\t *\r\n\t * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n\t *\r\n\t * @return Prevent default?\r\n\t */\r\n\tprotected shouldPreventGestures(touch: boolean): boolean {\r\n\t\treturn (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's horizontal line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t *\r\n\t * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n\t * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * @param value Full width?\r\n\t */\r\n\tpublic set fullWidthLineX(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthLineX\", value);\r\n\t\tif (!value) {\r\n\t\t\tthis.updateSize();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get fullWidthLineX(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthLineX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's vertical line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t *\r\n\t * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n\t * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * @param value Full width?\r\n\t */\r\n\tpublic set fullWidthLineY(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthLineY\", value);\r\n\t\tif (!value) {\r\n\t\t\tthis.updateSize();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get fullWidthLineY(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthLineY\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` this will hide series tooltips when selecting with cursor.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param  value  hide tooltips?\r\n\t */\r\n\tpublic set hideSeriesTooltipsOnSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return hide tooltip?\r\n\t */\r\n\tpublic get hideSeriesTooltipsOnSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to a numeric value, cursor will display closest series' tooltips\r\n\t * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n\t * it.\r\n\t *\r\n\t * Set it to `-1` to always force one tooltip, even if there are multiple\r\n\t * data items in exactly same place.\r\n\t *\r\n\t * @since 4.7.18\r\n\t * @param  value  Distance\r\n\t */\r\n\tpublic set maxTooltipDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"maxTooltipDistance\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance\r\n\t */\r\n\tpublic get maxTooltipDistance(): number {\r\n\t\treturn this.getPropertyValue(\"maxTooltipDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n\t * This setting specifies relative value by how much we can pan out the plot\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to X [[Axis]].\r\n\t *\r\n\t * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n\t * you have axis tooltip enabled and you want cursor line to be at the same\r\n\t * position as tooltip.\r\n\t *\r\n\t * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n\t * [[ValueAxis]].\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param axis X axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tif (this._xAxis.get() != axis) {\r\n\t\t\tthis._xAxis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false),\r\n\r\n\t\t\t\taxis.events.on(\"rangechangestarted\", (event) => {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.preventShow = true;\r\n\t\t\t\t}, undefined, false),\r\n\t\t\t\taxis.events.on(\"rangechangeended\", (event) => {\r\n\t\t\t\t\tthis.preventShow = false;\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return X axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\treturn this._xAxis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to Y [[Axis]].\r\n\t *\r\n\t * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n\t * you have axis tooltip enabled and you want cursor line to be at the same\r\n\t * position as tooltip.\r\n\t *\r\n\t * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n\t * [[ValueAxis]].\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param axis Y axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tif (this._yAxis.get() != axis) {\r\n\t\t\tthis._yAxis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false),\r\n\r\n\t\t\t\taxis.events.on(\"rangechangestarted\", (event) => {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}, undefined, false),\r\n\t\t\t\taxis.events.on(\"rangechangeended\", (event) => {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\treturn this._yAxis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original Axis event\r\n\t */\r\n\tprotected handleXTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tlet tooltip: Tooltip = this.xAxis.tooltip;\r\n\t\tlet point: IPoint = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n\t\tlet x: number = point.x;\r\n\t\tpoint.y = 1;\r\n\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.lineX.x = x;\r\n\t\t\tif (!this.fitsToBounds(point)) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis && this.fullWidthLineX) {\r\n\t\t\tlet startPoint: IPoint = this.xAxis.currentItemStartPoint;\r\n\t\t\tlet endPoint: IPoint = this.xAxis.currentItemEndPoint;\r\n\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\tthis.lineX.x = x;\r\n\t\t\t\tlet width: number = endPoint.x - startPoint.x;\r\n\t\t\t\tthis.lineX.path = $path.rectangle(width, this.innerHeight, -width / 2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when Y axis changes position or scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original Axis event\r\n\t */\r\n\tprotected handleYTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tlet tooltip: Tooltip = this.yAxis.tooltip;\r\n\t\tlet point: IPoint = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n\t\tlet y: number = point.y;\r\n\t\tpoint.x = 1;\r\n\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.lineY.y = y;\r\n\r\n\t\t\tif (!this.fitsToBounds(point)) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.yAxis && this.fullWidthLineY) {\r\n\t\t\tlet startPoint: IPoint = this.yAxis.currentItemStartPoint;\r\n\t\t\tlet endPoint: IPoint = this.yAxis.currentItemEndPoint;\r\n\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\tthis.lineY.y = y;\r\n\t\t\t\tlet height: number = endPoint.y - startPoint.y;\r\n\t\t\t\tthis.lineY.path = $path.rectangle(this.innerWidth, height, 0, -height / 2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Line element to use for X axis.\r\n\t *\r\n\t * @param lineX Line\r\n\t */\r\n\tpublic set lineX(lineX: Sprite) {\r\n\t\tif (lineX) {\r\n\t\t\tlineX.setElement(this.paper.add(\"path\"));\r\n\t\t\tthis._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n\t\t\tlineX.interactionsEnabled = false;\r\n\t\t\tlineX.parent = this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._lineX.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Line element\r\n\t */\r\n\tpublic get lineX(): Sprite {\r\n\t\treturn this._lineX.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A Line element to use Y axis.\r\n\t *\r\n\t * @param lineY Line\r\n\t */\r\n\tpublic set lineY(lineY: Sprite) {\r\n\t\tif (lineY) {\r\n\t\t\tlineY.setElement(this.paper.add(\"path\"));\r\n\t\t\tthis._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n\t\t\tlineY.parent = this;\r\n\t\t\tlineY.interactionsEnabled = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._lineY.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Line element\r\n\t */\r\n\tpublic get lineY(): Sprite {\r\n\t\treturn this._lineY.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A selection element ([[Sprite]]).\r\n\t *\r\n\t * @param selection Selection rectangle\r\n\t */\r\n\tpublic set selection(selection: Sprite) {\r\n\t\tthis._selection = selection;\r\n\t\tif (selection) {\r\n\t\t\tselection.element = this.paper.add(\"path\");\r\n\t\t\tselection.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Selection rectangle\r\n\t */\r\n\tpublic get selection(): Sprite {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n\t * with real references.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.snapToSeries)) {\r\n\t\t\t\tlet snapTo = $type.isArray(config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];\r\n\t\t\t\tlet snapError = false;\r\n\t\t\t\t$array.each(snapTo, (snap, index) => {\r\n\t\t\t\t\tif ($type.isString(snap)) {\r\n\t\t\t\t\t\tif (this.map.hasKey(snap)) {\r\n\t\t\t\t\t\t\tsnapTo[index] = this.map.getKey(snap);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No series with id \\\"\" + snap + \"\\\" found for `series`\");\r\n\t\t\t\t\t\t\tsnapError = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (snapError) {\r\n\t\t\t\t\tdelete config.snapToSeries;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconfig.snapToSeries = snapTo;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies to which series cursor lines should be snapped.\r\n\t * \r\n\t * Can be a single series instance or an array of series.\r\n\t *\r\n\t * @param {XYSeries | XYSeries[]}\r\n\t */\r\n\tpublic set snapToSeries(series: XYSeries | XYSeries[]) {\r\n\t\tif (this.setPropertyValue(\"snapToSeries\", series)) {\r\n\r\n\t\t\tif (series instanceof XYSeries) {\r\n\t\t\t\tseries = [series];\r\n\t\t\t}\r\n\t\t\tif (this._snapToDisposers) {\r\n\t\t\t\t$array.each(this._snapToDisposers, (disposer) => {\r\n\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis._snapToDisposers = [];\r\n\r\n\t\t\tif (series) {\r\n\t\t\t\t$array.each(series, (s) => {\r\n\t\t\t\t\tthis._snapToDisposers.push(s.events.on(\"tooltipshownat\", () => { this.handleSnap(s) }, undefined, false));\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {XYSeries | XYSeries[]}\r\n\t */\r\n\tpublic get snapToSeries(): XYSeries | XYSeries[] {\r\n\t\treturn this.getPropertyValue(\"snapToSeries\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n\t * the chart? (when `behavior == \"panX\"`)\r\n\t *\r\n\t * @default true\r\n\t * @since 4.10.17\r\n\t * @return Snap on pan?\r\n\t */\r\n\tpublic get snapOnPan(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapOnPan\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param value Snap on pan?\r\n\t */\r\n\tpublic set snapOnPan(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapOnPan\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * Snaps the zoom selection after chart is panned.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic handleSnap(series: XYSeries) {\r\n\t\tif (!this.downPoint) {\r\n\t\t\tlet x = series.getTooltipX() + series.xAxis.pixelX;\r\n\t\t\tlet y = series.getTooltipY() + series.yAxis.pixelY;\r\n\r\n\t\t\tlet xAxis = series.xAxis;\r\n\t\t\tlet yAxis = series.yAxis;\r\n\r\n\t\t\tif (xAxis) {\r\n\t\t\t\tif (xAxis.renderer.opposite) {\r\n\t\t\t\t\ty -= this.pixelHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.point = { x: x, y: y };\r\n\t\t\tthis.getPositions();\r\n\r\n\t\t\tlet xx = x;\r\n\t\t\tlet yy = y;\r\n\r\n\t\t\tx -= this.pixelWidth;\r\n\r\n\t\t\tif (yAxis) {\r\n\t\t\t\tif (yAxis.renderer.opposite) {\r\n\t\t\t\t\tx += this.pixelWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltip = series.tooltip;\r\n\t\t\tlet duration = tooltip.animationDuration;\r\n\t\t\tlet easing = tooltip.animationEasing;\r\n\r\n\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\tseries.yAxis.showTooltipAtPosition(this.yPosition);\r\n\t\t\t\tseries.xAxis.showTooltipAtPosition(this.xPosition);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.baseAxis == series.xAxis) {\r\n\t\t\t\t\tseries.yAxis.showTooltipAtPosition(this.yPosition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.baseAxis == series.yAxis) {\r\n\t\t\t\t\tseries.xAxis.showTooltipAtPosition(this.xPosition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t//\tthis.lineX.animate([{ property: \"y\", to: y }], duration, easing);\r\n\t\t//\tthis.lineY.animate([{ property: \"x\", to: x }], duration, easing);\r\n\r\n\t\t\tthis.lineY.x = x;\r\n\t\t\tthis.lineX.y = y;\r\n\r\n\t\t\tif (!this.xAxis) {\r\n\t\t\t\tthis.lineX.animate([{ property: \"x\", to: xx }], duration, easing);\r\n\t\t\t}\r\n\t\t\tif (!this.yAxis) {\r\n\t\t\t\tthis.lineY.animate([{ property: \"y\", to: yy }], duration, easing);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.hide(0);\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYCursor\"] = XYCursor;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { XYCursor, IXYCursorAdapters, IXYCursorEvents, IXYCursorProperties } from \"./XYCursor\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RadarCursor]].\r\n */\r\nexport interface IRadarCursorProperties extends IXYCursorProperties {\r\n\r\n\t/**\r\n\t * Inner radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n\t/**\r\n\t * Starting angle of the cursor's radial line.\r\n\t */\r\n\tstartAngle: number;\r\n\r\n\t/**\r\n\t * Ending angle of the cursor's radial line.\r\n\t */\r\n\tendAngle: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarCursor]].\r\n */\r\nexport interface IRadarCursorEvents extends IXYCursorEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarCursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarCursorAdapters extends IXYCursorAdapters, IRadarCursorProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Cursor for [[RadarChart]].\r\n *\r\n * @see {@link IRadarCursorEvents} for a list of available events\r\n * @see {@link IRadarCursorAdapters} for a list of available Adapters\r\n */\r\nexport class RadarCursor extends XYCursor {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IRadarCursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IRadarCursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarCursorEvents;\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\r\n\tprotected _prevAngle: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarCursor\";\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.innerRadius = percent(0);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.mask = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point to check\r\n\t * @return Fits within container?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\tlet radius = $math.getDistance(point);\r\n\r\n\t\t//if(!$math.isAngleInRange(angle, this.startAngle, this.endAngle)){\r\n\t\t\t//return false;\r\n\t\t//}\r\n\t\tif (radius < this.truePixelRadius + 1 && radius > this.pixelInnerRadius - 1) { // ok to add/remove some\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the cursor's radial line.\r\n\t *\r\n\t * @param value Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the cursor's radial line.\r\n\t *\r\n\t * @param value End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\tprotected triggerMoveReal(point:IPoint, force?:boolean) {\r\n\r\n\t\tif (!this.xAxis || (this.xAxis && (!this.xAxis.cursorTooltipEnabled || this.xAxis.tooltip.disabled))) {\r\n\t\t\tthis.updateLineX(this.point);\r\n\t\t}\r\n\t\tif (!this.yAxis || (this.yAxis && (!this.yAxis.cursorTooltipEnabled || this.yAxis.tooltip.disabled))) {\r\n\t\t\tthis.updateLineY(this.point);\r\n\t\t}\r\n\r\n\t\tthis.updateSelection();\r\n\t\tsuper.triggerMoveReal(point, force);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the horizontal (circular) cursor's line.\r\n\t *\r\n\t * @param point New target point\r\n\t */\r\n\tprotected updateLineX(point: IPoint) {\r\n\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\r\n\t\tif (radius > 0 && $type.isNumber(startAngle) && $type.isNumber(endAngle) && $type.isNumber(innerRadius)) {\r\n\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n\t\t\tlet path: string;\r\n\r\n\t\t\tif (this.lineX && this.lineX.visible) {\r\n\r\n\t\t\t\tthis.lineX.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\t// fill\r\n\t\t\t\tif (this.xAxis && this.fullWidthLineX) {\r\n\r\n\t\t\t\t\tlet startPoint: IPoint = this.xAxis.currentItemStartPoint;\r\n\t\t\t\t\tlet endPoint: IPoint = this.xAxis.currentItemEndPoint;\r\n\r\n\t\t\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\t\t\tlet fillStartAngle: number = $math.fitAngleToRange($math.getAngle(startPoint), startAngle, endAngle);\r\n\t\t\t\t\t\tlet fillEndAngle: number = $math.fitAngleToRange($math.getAngle(endPoint), startAngle, endAngle);\r\n\r\n\t\t\t\t\t\tlet arc: number = fillEndAngle - fillStartAngle;\r\n\r\n\t\t\t\t\t\t// clockwise\r\n\t\t\t\t\t\t// this is needed, normalizeAngle doesn't solve it\r\n\t\t\t\t\t\tif (startAngle < endAngle) {\r\n\t\t\t\t\t\t\tif (arc < 0) {\r\n\t\t\t\t\t\t\t\tarc += 360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ccw\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (arc > 0) {\r\n\t\t\t\t\t\t\t\tarc -= 360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tangle -= arc / 2;\r\n\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) })\r\n\t\t\t\t\t\t\t+ $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) })\r\n\t\t\t\t\t\t\t+ $path.arcTo(angle, arc, radius)\r\n\t\t\t\t\t\t\t+ $path.lineTo({ x: innerRadius * $math.cos(angle + arc), y: innerRadius * $math.sin(angle + arc) })\r\n\t\t\t\t\t\t\t+ $path.arcTo(angle + arc, -arc, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// line\r\n\t\t\t\tif (!path) {\r\n\t\t\t\t\tpath = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.lineX.path = path;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the vertical (radial) cursor's line.\r\n\t *\r\n\t * @param point New target point\r\n\t */\r\n\tprotected updateLineY(point: IPoint) {\r\n\t\tif (this.lineY && this.lineY.visible) {\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\t\t\tlet truePixelRadius = this.truePixelRadius;\r\n\t\t\tlet radius = $math.fitToRange($math.getDistance(point), 0, this.truePixelRadius);\r\n\t\t\tif ($type.isNumber(radius) && $type.isNumber(startAngle)) {\r\n\t\t\t\tthis.lineY.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\tlet path: string;\r\n\t\t\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\t\t\tif (this.yAxis && this.fullWidthLineY) {\r\n\t\t\t\t\t// fill\r\n\t\t\t\t\tlet startPoint: IPoint = this.yAxis.currentItemStartPoint;\r\n\t\t\t\t\tlet endPoint: IPoint = this.yAxis.currentItemEndPoint;\r\n\r\n\t\t\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\t\t\tlet innerRadius: number = $math.fitToRange($math.getDistance(startPoint), 0, truePixelRadius);\r\n\t\t\t\t\t\tradius = $math.fitToRange($math.getDistance(endPoint), 0, truePixelRadius);\r\n\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius);\r\n\t\t\t\t\t\tpath += $path.moveTo({ x: innerRadius * $math.cos(endAngle), y: innerRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, -arc, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!path) {\r\n\t\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.lineY.path = path;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t\tif (this._usesSelection) {\r\n\t\t\tlet downPoint: IPoint = this.downPoint;\r\n\r\n\t\t\tif (downPoint) {\r\n\r\n\t\t\t\tlet point: IPoint = this.point;\r\n\r\n\t\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\t\tlet truePixelRadius: number = this.truePixelRadius;\r\n\t\t\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\r\n\t\t\t\tlet startAngle: number = Math.min(this.startAngle, this.endAngle);\r\n\t\t\t\tlet endAngle: number = Math.max(this.startAngle, this.endAngle);\r\n\r\n\t\t\t\tlet downAngle: number = $math.fitAngleToRange($math.getAngle(downPoint), startAngle, endAngle);\r\n\t\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n\r\n\t\t\t\tlet downRadius: number = $math.getDistance(downPoint);\r\n\t\t\t\tif (downRadius < truePixelRadius) {\r\n\r\n\t\t\t\t\tlet currentRadius = $math.fitToRange($math.getDistance(point), 0, truePixelRadius);\r\n\r\n\t\t\t\t\tthis._prevAngle = angle;\r\n\r\n\t\t\t\t\tlet path: string = $path.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\t\tlet downSin: number = $math.sin(downAngle);\r\n\t\t\t\t\tlet downCos: number = $math.cos(downAngle);\r\n\r\n\t\t\t\t\tlet sin: number = $math.sin(angle);\r\n\t\t\t\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\t\t\t\tlet behavior = this.behavior;\r\n\t\t\t\t\tif (behavior == \"zoomX\" || behavior == \"selectX\") {\r\n\t\t\t\t\t\tpath += $path.lineTo({ x: radius * downCos, y: radius * downSin }) + $path.arcTo(downAngle, angle - downAngle, radius) + $path.lineTo({ x: innerRadius * cos, y: innerRadius * sin }) + $path.arcTo(angle, downAngle - angle, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (behavior == \"zoomY\" || behavior == \"selectY\") {\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: currentRadius * $math.cos(startAngle), y: currentRadius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(endAngle), y: downRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, startAngle - endAngle, downRadius) + $path.closePath();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (behavior == \"zoomXY\") {\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: currentRadius * $math.cos(downAngle), y: currentRadius * $math.sin(downAngle) }) + $path.arcTo(downAngle, angle - downAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(angle), y: downRadius * $math.sin(angle) }) + $path.arcTo(angle, downAngle - angle, downRadius) + $path.closePath();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.selection.path = path;\r\n\t\t\t\t}\r\n\t\t\t\tthis.selection.moveTo({ x: 0, y: 0 });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursors current positions.\r\n\t */\r\n\tprotected getPositions() {\r\n\t\t// positions are used by axes or series\r\n\t\tlet chart: RadarChart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet innerRadius = this.pixelInnerRadius;\r\n\t\t\tlet radius: number = this.truePixelRadius - innerRadius;\r\n\r\n\t\t\tlet startAngle: number = this.startAngle;\r\n\t\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(this.point), startAngle, endAngle);\r\n\t\t\tlet xPosition = ((angle - startAngle) / (endAngle - startAngle));\r\n\t\t\tthis.xPosition = xPosition;\r\n\r\n\t\t\tthis.yPosition = $math.fitToRange(($math.getDistance(this.point) - innerRadius) / radius, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overriding inherited method, so that nothing happens when it's triggered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes horizontal position.\r\n\t *\r\n\t * @param event Axis event\r\n\t */\r\n\tprotected handleXTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tif (this.xAxis.cursorTooltipEnabled) {\r\n\t\t\tlet tooltip: Tooltip = this.xAxis.tooltip;\r\n\t\t\tthis.updateLineX($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes vertical position.\r\n\t *\r\n\t * @todo Description\r\n\t * @param event Axis event\r\n\t */\r\n\tprotected handleYTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tif (this.yAxis.cursorTooltipEnabled) {\r\n\t\t\tlet tooltip: Tooltip = this.yAxis.tooltip;\r\n\t\t\tthis.updateLineY($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * needs to be overriden\r\n\t * @ignore\r\n\t */\r\n\tprotected updateLinePositions(point: IPoint) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getRanges(): void {\r\n\t\tlet downPoint = this.downPoint;\r\n\t\tif (downPoint) {\r\n\t\t\tlet upPoint: IPoint = this.upPoint;\r\n\r\n\t\t\tlet chart: RadarChart = this.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\t\tlet startAngle: number = this.startAngle;\r\n\t\t\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\t\t\tlet downAngle: number = $math.fitAngleToRange($math.getAngle(downPoint), this.startAngle, this.endAngle);\r\n\t\t\t\tlet upAngle: number = $math.fitAngleToRange($math.getAngle(upPoint), this.startAngle, this.endAngle);\r\n\r\n\t\t\t\tlet downRadius = $math.fitToRange($math.getDistance(downPoint), 0, radius);\r\n\t\t\t\tlet upRadius = $math.fitToRange($math.getDistance(upPoint), 0, radius);\r\n\r\n\t\t\t\tlet startX: number = 0;\r\n\t\t\t\tlet endX: number = 1;\r\n\r\n\t\t\t\tlet startY: number = 0;\r\n\t\t\t\tlet endY: number = 1;\r\n\r\n\t\t\t\tlet behavior = this.behavior;\r\n\t\t\t\tif (behavior == \"zoomX\" || behavior == \"selectX\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n\t\t\t\t\tlet arc: number = endAngle - startAngle;\r\n\t\t\t\t\tstartX = $math.round((downAngle - startAngle) / arc, 5);\r\n\t\t\t\t\tendX = $math.round((upAngle - startAngle) / arc, 5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (behavior == \"zoomY\" || behavior == \"selectY\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n\t\t\t\t\tstartY = $math.round(downRadius / radius, 5);\r\n\t\t\t\t\tendY = $math.round(upRadius / radius, 5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xRange = { start: Math.min(startX, endX), end: Math.max(startX, endX) };\r\n\t\t\t\tthis.yRange = { start: Math.min(startY, endY), end: Math.max(startY, endY) };\r\n\r\n\t\t\t\tif (this.behavior == \"selectX\" || this.behavior == \"selectY\" || this.behavior == \"selectXY\") {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overriding inherited method, so that nothing happens when `updateSize`\r\n\t * is triggered.\r\n\t *\r\n\t * RadarCursor is quite complicated and needs own sizing logic.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSize(): void { }\r\n\r\n\t/**\r\n\t * Outer radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the circular line in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.truePixelRadius);\r\n\t}\r\n\r\n\t/**\r\n\t * [truePixelRadius description]\r\n\t *\r\n\t * @todo Description\r\n\t * @return Outer radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get truePixelRadius(): number {\r\n\t\treturn $utils.relativeToValue(percent(100), $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circular line in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tinnerRadius = percent(100 * innerRadius.value * this.chart.innerRadiusModifyer);\r\n\t\t}\r\n\r\n\t\treturn $utils.relativeRadiusToValue(innerRadius, this.truePixelRadius) || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected fixPoint(point: IPoint): IPoint {\r\n\t\t// overriding xy method\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarCursor\"] = RadarCursor;\r\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","/**\r\n * Map series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../series/Series\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapObject } from \"./MapObject\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ListTemplate } from \"../../core/utils/List\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * South-most latitude.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * North-most latitude.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * East-most longitude.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * West-most longitude.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapSeries;\r\n\r\n\t/**\r\n\t * Shortcut to either [[MapLine]], [[MapImage]], or [[MapPolygon]].\r\n\t */\r\n\tpublic mapObject: MapObject;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeriesDataItem\";\r\n\t\tthis.values.value = {};\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the data item.\r\n\t *\r\n\t * Value may be used in heat-map calculations.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * zoom level itself or use object's `zoomLevel` if set.\r\n\t *\r\n\t * @param value  Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.setProperty(\"zoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.properties[\"zoomLevel\"];\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * center position itself or use object's `zoomGeoPoint` if set.\r\n\t *\r\n\t * @param value  Zoom geo point\r\n\t */\r\n\tpublic set zoomGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setProperty(\"zoomGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom geo point\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\treturn this.properties[\"zoomGeoPoint\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet geometry = this.getFeature().geometry;\r\n\t\tif (geometry) {\r\n\r\n\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\tlet west = bounds[0][0];\r\n\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\tlet north = bounds[1][1];\r\n\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\tlet changed = false;\r\n\t\t\tif (north != this.north) {\r\n\t\t\t\tthis._north = $math.round(north, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (south != this.south) {\r\n\t\t\t\tthis._south = $math.round(south, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (east != this.east) {\r\n\t\t\t\tthis._east = $math.round(east, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (west != this.west) {\r\n\t\t\t\tthis._west = $math.round(west, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\t// solves single russia prob\r\n\t\t\tif (this._east < this._west) {\r\n\t\t\t\tthis._east = 180;\r\n\t\t\t\tthis._west = -180;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [GEOJSONGeometry description]\r\n *\r\n * @todo Description\r\n */\r\nexport type GEOJSONGeometry = \"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\";\r\n\r\n/**\r\n * Defines data fields for [[MapSeries]].\r\n *\r\n * @todo Alllow any number of values?\r\n */\r\nexport interface IMapSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * A field name in data for a numeric value of the map object.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomLevel` of the map object.\r\n\t */\r\n\tzoomLevel?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomGeoPoint` of the map object.\r\n\t */\r\n\tzoomGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A flag telling if the series should get data from `geodata` or not\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseGeodata?: boolean;\r\n\r\n\t/**\r\n\t * A list of object ids to include from the series.\r\n\t */\r\n\tinclude?: string[];\r\n\r\n\t/**\r\n\t * A list of object ids to exclude from the series.\r\n\t */\r\n\texclude?: string[];\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t */\r\n\tignoreBounds?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesEvents extends ISeriesEvents {\r\n\tgeoBoundsChanged: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSeriesAdapters extends ISeriesAdapters, IMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for series of map objects.\r\n *\r\n * @see {@link IMapSeriesEvents} for a list of available Events\r\n * @see {@link IMapSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\t/**\r\n\t * The longitude of the East-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * The longitude of the West-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * The latitude of the South-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * The latitude of the North-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\tprotected _eastDefined: number;\r\n\r\n\tprotected _westDefined: number;\r\n\r\n\tprotected _southDefined: number;\r\n\r\n\tprotected _northDefined: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: MapChart;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\r\n\tprotected _mapObjects: ListTemplate<MapObject>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeries\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.showInViewport = true;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSeriesDataItem();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks whether object should be included in series.\r\n\t *\r\n\t * @param includes  A list of explicitly included ids\r\n\t * @param excludes  A list of explicitly excluded ids\r\n\t * @param id        Id of the object\r\n\t * @return Include?\r\n\t */\r\n\tprotected checkInclude(includes: string[], excludes: string[], id: string): boolean {\r\n\t\tif (includes) {\r\n\t\t\tif (includes.length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (includes.indexOf(id) == -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (excludes && excludes.length > 0) {\r\n\t\t\tif (excludes.indexOf(id) != -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Should the map extract all the data about element from the GeoJSON?\r\n\t *\r\n\t * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`\r\n\t * polygon series will need to contain geographical data in itself in order\r\n\t * to be drawn.\r\n\t *\r\n\t * If this is set to `true`, series will try to extract data for its objects\r\n\t * from either chart-level `geodata` or from series' `geodata` which holds\r\n\t * map infor in GeoJSON format.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use GeoJSON data?\r\n\t */\r\n\tpublic set useGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"useGeodata\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use GeoJSON data?\r\n\t */\r\n\tpublic get useGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"useGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be explictly included in the series.\r\n\t *\r\n\t * If this is not set, the series will automatically include all of the\r\n\t * objects, available in the GeoJSON map. (minus the ones listed in\r\n\t * `exclude`)\r\n\t *\r\n\t * If you need to display only specific objects, use `include`. E.g.:\r\n\t *\r\n\t * `include = [\"FR\", \"ES\", \"DE\"];`\r\n\t *\r\n\t * The above will show only France, Spain, and Germany out of the whole map.\r\n\t *\r\n\t * @param value  Included objects\r\n\t */\r\n\tpublic set include(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"include\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\t//this.data = [];\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Included objects\r\n\t */\r\n\tpublic get include(): string[] {\r\n\t\treturn this.getPropertyValue(\"include\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Ignore bounds?\r\n\t */\r\n\tpublic set ignoreBounds(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"ignoreBounds\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore bounds?\r\n\t */\r\n\tpublic get ignoreBounds(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreBounds\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be excluded from the series.\r\n\t *\r\n\t * E.g. you want to include all of the areas from a GeoJSON map, except\r\n\t * Antarctica.\r\n\t *\r\n\t * You'd leave `include` empty, and set `exclude = [\"AQ\"]`.\r\n\t *\r\n\t * @param value  Excluded ids\r\n\t */\r\n\tpublic set exclude(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"exclude\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Excluded ids\r\n\t */\r\n\tpublic get exclude(): string[] {\r\n\t\treturn this.getPropertyValue(\"exclude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a newly added object.\r\n\t *\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleObjectAdded(event: IListEvents<MapObject>[\"inserted\"]) {\r\n\t\tlet mapObject: MapObject = event.newValue;\r\n\t\tmapObject.parent = this;\r\n\t\tmapObject.series = this;\r\n\t\tmapObject.strokeWidth = mapObject.strokeWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The series supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tfor (let i = this.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (this.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\tthis.data.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.disposeData();\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.chart.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, undefined, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"Point\" | \"MultiLineString\" | \"MultiPolygon\", coordinates: [number, number] | Array<Array<[number, number]>> | Array<Array<Array<[number, number]>>> } }[] {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tlet north: number;\r\n\t\tlet south: number;\r\n\t\tlet east: number;\r\n\t\tlet west: number;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.north > north || !$type.isNumber(north)) {\r\n\t\t\t\tnorth = dataItem.north;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.south < south || !$type.isNumber(south)) {\r\n\t\t\t\tsouth = dataItem.south;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.west < west || !$type.isNumber(west)) {\r\n\t\t\t\twest = dataItem.west;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.east > east || !$type.isNumber(east)) {\r\n\t\t\t\teast = dataItem.east;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this._mapObjects) {\r\n\t\t\tthis._mapObjects.each((mapObject) => {\r\n\t\t\t\tif (mapObject.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = mapObject.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = mapObject.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = mapObject.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = mapObject.east;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (this.north != north || this.east != east || this.south != south || this.west != west) {\r\n\t\t\tthis._north = north;\r\n\t\t\tthis._east = east;\r\n\t\t\tthis._west = west;\r\n\t\t\tthis._south = south;\r\n\r\n\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\tif (!this.ignoreBounds) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * North-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set north(value: number) {\r\n\t\tthis._northDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._northDefined)) {\r\n\t\t\treturn this._northDefined;\r\n\t\t}\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * South-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set south(value: number) {\r\n\t\tthis._southDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._southDefined)) {\r\n\t\t\treturn this._southDefined;\r\n\t\t}\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * West-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set west(value: number) {\r\n\t\tthis._westDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._westDefined)) {\r\n\t\t\treturn this._westDefined;\r\n\t\t}\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * East-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set east(value: number) {\r\n\t\tthis._eastDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._eastDefined)) {\r\n\t\t\treturn this._eastDefined;\r\n\t\t}\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthrow Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.tooltip && this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 10, y: 10, width: this.topParent.maxWidth - 20, height: this.topParent.maxHeight - 20 });\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSeries\"] = MapSeries;\r\nregistry.registeredClasses[\"MapSeriesDataItem\"] = MapSeriesDataItem;\r\n","/**\r\n * Map object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapSeries, MapSeriesDataItem } from \"./MapSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines propeties for [[MapObject]].\r\n */\r\nexport interface IMapObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A custom zoom level to use when `zoomToMapObject()` is called on this\r\n\t * map object.\r\n\t */\r\n\tzoomLevel?: number;\r\n\r\n\t/**\r\n\t * A custom point to use when `zoomToMapObject()` is called on this map\r\n\t * object.\r\n\t */\r\n\tzoomGeoPoint?: IGeoPoint;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapObject]].\r\n */\r\nexport interface IMapObjectEvents extends IContainerEvents {\r\n\tgeoBoundsChanged: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapObjectAdapters extends IContainerAdapters, IMapObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all map objects: lines, images, etc.\r\n *\r\n * @see {@link IMapObjectEvents} for a list of available events\r\n * @see {@link IMapObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapObjectEvents;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSeries;\r\n\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapObject\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.clickable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates this object, forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series && this.series.itemReaderText) {\r\n\t\t\tthis.readerTitle = this.series.itemReaderText;\r\n\t\t}\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet feature = this.getFeature();\r\n\t\tif (feature) {\r\n\t\t\tlet geometry = feature.geometry;\r\n\r\n\t\t\tif (geometry) {\t\t\t\t\r\n\t\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\t\tlet west = bounds[0][0];\r\n\t\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\t\tlet north = bounds[1][1];\r\n\t\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tif (north != this.north) {\r\n\t\t\t\t\tthis._north = $math.round(north, 8);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (south != this.south) {\r\n\t\t\t\t\tthis._south = $math.round(south);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (east != this.east) {\r\n\t\t\t\t\tthis._east = $math.round(east);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (west != this.west) {\r\n\t\t\t\t\tthis._west = $math.round(west);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\t\t\tif(this.series){\r\n\t\t\t\t\t\tthis.series.invalidateDataItems();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._east)) {\r\n\t\t\treturn this._east;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.east;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._west)) {\r\n\t\t\treturn this._west;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.west;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._south)) {\r\n\t\t\treturn this._south;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.south;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._north)) {\r\n\t\t\treturn this._north;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.north;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param optional point (sprite-related) to which tooltip must point.\r\n\t * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\t\tconst res = super.showTooltip(point);\r\n\t\tif (res && this.showTooltipOn == \"always\" && !this.series.chart.events.has(\"mappositionchanged\", this.handleTooltipMove, this)) {\r\n\t\t\tthis.addDisposer(this.series.chart.events.on(\"mappositionchanged\", this.handleTooltipMove, this));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprotected handleTooltipMove(ev: any): void {\r\n\t\tif(!this.tooltip.isHidden){\r\n\t\t\tthis.showTooltip();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]].\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: MapSeriesDataItem) {\r\n\t\tsuper.setDataItem(dataItem);\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapObject\"] = MapObject;\r\n","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapImageSeriesDataItem, MapImageSeries } from \"./MapImageSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapImage]].\r\n */\r\nexport interface IMapImageProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Latitude of the image location.\r\n\t */\r\n\tlatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the mage location.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapImage]].\r\n */\r\nexport interface IMapImageEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImage]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageAdapters extends IMapObjectAdapters, IMapImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to place an image on the map.\r\n *\r\n * @see {@link IMapImageEvents} for a list of available events\r\n * @see {@link IMapImageAdapters} for a list of available Adapters\r\n */\r\nexport class MapImage extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageEvents;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapImage\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude image is placed at.\r\n\t *\r\n\t * @param value  Latitude\r\n\t */\r\n\tpublic set latitude(value: number) {\r\n\t\tthis.setPropertyValue(\"latitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"latitude\");\r\n\t\t\r\n\t\tif(!$type.isNumber(latitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlatitude = this.dataItem.geoPoint.latitude;\r\n\t\t}\t\t\r\n\t\treturn latitude;\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude image is placed on.\r\n\t *\r\n\t * @param value  Longitude\r\n\t */\r\n\tpublic set longitude(value: number) {\r\n\t\tthis.setPropertyValue(\"longitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"longitude\");\r\n\t\tif(!$type.isNumber(longitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlongitude = this.dataItem.geoPoint.longitude;\r\n\t\t}\t\t\r\n\t\treturn longitude;\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions the image to it's current position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\t\tif ($type.isNumber(this.latitude) && $type.isNumber(this.longitude)) {\r\n\t\t\t//this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));\r\n\t\t\tlet p = this.series.chart.projection.d3Projection([this.longitude, this.latitude]);\r\n\r\n\t\t\tlet visible: any = this.series.chart.projection.d3Path({ type: 'Point', coordinates: [this.longitude, this.latitude] });\r\n\r\n\t\t\tif (!visible) {\r\n\t\t\t\tthis.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.moveTo({ x: p[0], y: p[1] });\r\n\t\t}\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [this.longitude, this.latitude] } };\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImage\"] = MapImage;\r\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","/**\r\n * A collection of Map-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in\r\n * geo-points (lat/long).\r\n *\r\n * @param multiPolygon  Source multi-polygon\r\n * @return Geo-multipolygon\r\n */\r\n\r\nexport function multiPolygonToGeo(multiPolygon: Array<[Array<[number, number]>, Array<[number, number]>]>): Array<Array<Array<IGeoPoint>>> {\r\n\treturn $array.map(multiPolygon, (polygon) => {\r\n\t\tlet surface: Array<[number, number]> = polygon[0];\r\n\t\tlet hole: Array<[number, number]> = polygon[1];\r\n\r\n\t\t//let holePoints: Array<IGeoPoint> = [];\r\n\r\n\t\tconst geoArea = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tgeoArea.push(multiPointToGeo(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tgeoArea.push(multiPointToGeo(hole));\r\n\t\t}\r\n\r\n\t\treturn geoArea;\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points\r\n * (lat/long).\r\n *\r\n * @param multiLine  Source multiline\r\n * @return Geo-multiline\r\n */\r\nexport function multiLineToGeo(multiLine: Array<Array<[number, number]>>): Array<Array<IGeoPoint>> {\r\n\treturn $array.map(multiLine, (multiLine) => {\r\n\t\treturn multiPointToGeo(multiLine);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiPointToGeo(points: Array<[number, number]>): Array<IGeoPoint> {\r\n\treturn $array.map(points, (point) => {\r\n\t\treturn pointToGeo(point);\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiGeoToPoint(geoPoints: Array<IGeoPoint>): Array<[number, number]> {\r\n\treturn $array.map(geoPoints, geoToPoint);\r\n}\r\n\r\n\r\n/**\r\n * Converts X/Y point into a lat/long geo-point.\r\n *\r\n * @param point  Source point\r\n * @return Geo-point\r\n */\r\nexport function pointToGeo(point: [number, number]): IGeoPoint {\r\n\treturn { longitude: point[0], latitude: point[1] }\r\n}\r\n\r\n/**\r\n * Converts lat/long geo-point into a X/Y point.\r\n *\r\n * @param point  Source geo-point\r\n * @return X/Y point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): [number, number] {\r\n\treturn [geoPoint.longitude, geoPoint.latitude];\r\n}\r\n\r\n\r\n/**\r\n * Converts geo line (collection of lat/long coordinates) to screen line (x/y).\r\n *\r\n * @param   multiGeoLine  Source geo line\r\n * @return                Screen line\r\n */\r\nexport function multiGeoLineToMultiLine(multiGeoLine: Array<Array<IGeoPoint>>): Array<Array<[number, number]>> {\r\n\treturn $array.map(multiGeoLine, (segment) => {\r\n\t\treturn $array.map(segment, geoToPoint);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a geo polygon (collection of lat/long coordinates) to screen\r\n * polygon (x/y).\r\n *\r\n * @param   multiGeoPolygon  Source polygon\r\n * @return                   Screen polygon\r\n */\r\nexport function multiGeoPolygonToMultipolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>): Array<Array<Array<[number, number]>>> {\r\n\treturn $array.map(multiGeoPolygon, (geoPolygon) => {\r\n\t\tlet surface = geoPolygon[0];\r\n\t\tlet hole = geoPolygon[1];\r\n\r\n\t\tconst multiPolygon = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(hole));\r\n\t\t}\r\n\r\n\t\treturn multiPolygon;\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a set of geographical coordinates for the circle with a center\r\n * at specific lat/long coordinates and radius (in degrees).\r\n *\r\n * @since 4.3.0\r\n * @param   longitude  Center longitude\r\n * @param   latitude   Center latitude\r\n * @param   radius     Radius (degrees)\r\n * @return             Circle coordinates\r\n */\r\nexport function getCircle(longitude: number, latitude: number, radius: number): Array<Array<Array<[number, number]>>> {\r\n\treturn [d3geo.geoCircle().center([longitude, latitude]).radius(radius)().coordinates as Array<Array<[number, number]>>];\r\n}\r\n\r\n/**\r\n * Returns a set of screen coordinates that represents a \"background\" area\r\n * between provided extremities.\r\n *\r\n * @since 4.3.0\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         Polygon\r\n */\r\nexport function getBackground(north: number, east: number, south: number, west: number): Array<Array<Array<[number, number]>>> {\r\n\r\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\r\n\r\n\tif(west == -180){\r\n\t\twest = -179.9999;\r\n\t}\r\n\tif(south == -90){\r\n\t\tsouth = -89.9999;\r\n\t}\r\n\tif(north == 90){\r\n\t\tnorth = 89.9999;\r\n\t}\r\n\tif(east == 180){\r\n\t\teast = 179.9999;\r\n\t}\r\n\r\n\r\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n\r\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\r\n\t\tlet surface: Array<[number, number]> = [];\r\n\t\tmultiPolygon.push([surface]);\r\n\r\n\t\tif(ln + stepLong > east){\r\n\t\t\tstepLong = east - ln;\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n\t\t\tsurface.push([ll, north]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\r\n\t\t\tsurface.push([ln + stepLong, lt]);\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n\t\t\tsurface.push([ll, south]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\r\n\t\t\tsurface.push([ln, lt]);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn multiPolygon;\r\n}\r\n","/**\r\n * Map polygon module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Polygon } from \"../../core/elements/Polygon\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport $polylabel from \"polylabel\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Set of geographical coordinates for the polygon.\r\n\t */\r\n\tmultiGeoPolygon?: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Set of screen coordinates for the polygon.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLongitude?: number;\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection, to depict the shortest distance how it would go on the actual\r\n\t * land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t */\r\n\tprecision?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonAdapters extends IMapObjectAdapters, IMapPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a polygon on the map.\r\n *\r\n * @see {@link IMapPolygonEvents} for a list of available events\r\n * @see {@link IMapPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class MapPolygon extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonEvents;\r\n\r\n\t/**\r\n\t * A visual polygon element.\r\n\t */\r\n\tpublic polygon: Polygon;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapPolygonSeries;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLatitude: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLongitude: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygon\";\r\n\r\n\t\tthis.polygon = this.createChild(Polygon);\r\n\t\tthis.polygon.shouldClone = false;\r\n\t\tthis.polygon.applyOnClones = true;\r\n\t\tthis.setPropertyValue(\"precision\", 0.5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set of coordinates for the polygon.\r\n\t *\r\n\t * @param multiGeoPolygon  Polygon coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis.setPropertyValue(\"multiGeoPolygon\", multiGeoPolygon, true);\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\tlet multiGeoPolygon = this.getPropertyValue(\"multiGeoPolygon\");\r\n\t\tif (!multiGeoPolygon && this.dataItem) {\r\n\t\t\tmultiGeoPolygon = this.dataItem.multiGeoPolygon;\r\n\t\t}\r\n\t\treturn multiGeoPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tif (this.setPropertyValue(\"multiPolygon\", multiPolygon)) {\r\n\t\t\tthis.updateExtremes();\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\tlet multiPolygon = this.getPropertyValue(\"multiPolygon\");\r\n\t\tif (!multiPolygon && this.dataItem) {\r\n\t\t\tmultiPolygon = this.dataItem.multiPolygon;\r\n\t\t}\r\n\t\treturn multiPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the polygon, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series) {\r\n\t\t\tlet projection = this.series.chart.projection;\r\n\r\n\t\t\tlet pathGenerator = projection.d3Path;\r\n\r\n\t\t\tif (this.multiPolygon) {\r\n\r\n\t\t\t\tif (this.series) {\r\n\t\t\t\t\tlet feature = { type: \"MultiPolygon\", coordinates: this.multiPolygon };\r\n\r\n\t\t\t\t\tprojection.d3Projection.precision(this.precision);\r\n\t\t\t\t\tthis.polygon.path = pathGenerator(<any>feature);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.series.calculateVisualCenter) {\r\n\t\t\t\t\tlet biggestArea = 0;\r\n\t\t\t\t\tlet biggestPolygon = this.multiPolygon[0];\r\n\r\n\t\t\t\t\tif (this.multiPolygon.length > 1) {\r\n\t\t\t\t\t\tfor (let i = 0; i < this.multiPolygon.length; i++) {\r\n\t\t\t\t\t\t\tlet polygon = this.multiPolygon[i];\r\n\t\t\t\t\t\t\tlet area = d3geo.geoArea({ type: \"Polygon\", coordinates: polygon });\r\n\r\n\t\t\t\t\t\t\tif (area > biggestArea) {\r\n\t\t\t\t\t\t\t\tbiggestPolygon = polygon;\r\n\t\t\t\t\t\t\t\tbiggestArea = area;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet center = $polylabel(biggestPolygon);\r\n\r\n\t\t\t\t\tthis._visualLongitude = center[0];\r\n\t\t\t\t\tthis._visualLatitude = center[1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._visualLongitude = this.longitude;\r\n\t\t\t\t\tthis._visualLatitude = this.latitude;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set visualLatitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLatitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Latitude\r\n\t */\r\n\tpublic get visualLatitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"visualLatitude\");\r\n\t\tif ($type.isNumber(latitude)) {\r\n\t\t\treturn (latitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLatitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLatitude\",\r\n\t\t\t\tthis._visualLatitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set visualLongitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLongitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Longitude\r\n\t */\r\n\tpublic get visualLongitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"visualLongitude\");\r\n\t\tif ($type.isNumber(longitude)) {\r\n\t\t\treturn (longitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLongitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLongitude\",\r\n\t\t\t\tthis._visualLongitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Not 100% sure about this, as if we add something to MapPolygon this\r\n\t * won't be true, but otherwise we will get all 0 and the tooltip won't\r\n\t * be positioned properly\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's width in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\treturn this.polygon.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's height in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\treturn this.polygon.pixelHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[MapPolygon]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.polygon.copyFrom(source.polygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tsuper.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * used to sorth polygons from big to small\r\n\t */\r\n\tpublic get boxArea() {\r\n\t\treturn (this.north - this.south) * (this.east - this.west);\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).y\r\n\t}\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygon\"] = MapPolygon;\r\n","/**\r\n * Map polygon series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapPolygon } from \"./MapPolygon\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapPolygonDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapPolygonSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapPolygonSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t */\r\n\tprotected _mapPolygon: MapPolygon;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon.\r\n\t */\r\n\tprotected _polygon: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiPolygon: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon.\r\n\t */\r\n\tprotected _geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>];\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapPolygonSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapPolygon(): MapPolygon {\r\n\t\tif (!this._mapPolygon) {\r\n\t\t\tlet mapPolygon = this.component.mapPolygons.create();\r\n\t\t\tthis._mapPolygon = mapPolygon;\r\n\t\t\tthis.addSprite(mapPolygon);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapPolygons.removeValue(mapPolygon);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapPolygon;\r\n\t\t}\r\n\t\treturn this._mapPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 200 ],\r\n\t *     [ 170, 240 ],\r\n\t *     [ 100, 150 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param polygon  Coordinates\r\n\t */\r\n\tpublic set polygon(polygon: Array<Array<[number, number]>>) {\r\n\t\tthis._polygon = polygon;\r\n\t\tthis.multiPolygon = [polygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get polygon(): Array<Array<[number, number]>> {\r\n\t\treturn this._polygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tthis._multiPolygon = multiPolygon;\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\treturn this._multiPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     { latitude: -10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: 10.0 },\r\n\t *     { latitude: -10.0, longitude: -10.0 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference\r\n\t * @param geoPolygon  Coordinates\r\n\t */\r\n\tpublic set geoPolygon(geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>]) {\r\n\t\tthis._geoPolygon = geoPolygon;\r\n\t\tthis.multiGeoPolygon = [geoPolygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoPolygon(): [Array<IGeoPoint>, Array<IGeoPoint>] {\r\n\t\treturn this._geoPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: 180.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ],\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: -170.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference\r\n\t * @param multiGeoPolygon  Coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis._multiGeoPolygon = multiGeoPolygon;\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\treturn this._multiGeoPolygon;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds polygon pixels.\r\n\t */\r\n\tpolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-polygon pixels.\r\n\t */\r\n\tmultiPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds polygon data in Geo coordinates.\r\n\t */\r\n\tgeoPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds poly-polygon data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesProperties extends IMapSeriesProperties {\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsBy: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\";\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsReversed: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygonSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonSeriesAdapters extends IMapSeriesAdapters, IMapPolygonSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map polygon elements.\r\n *\r\n * @see {@link IMapPolygonSeriesEvents} for a list of available Events\r\n * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapPolygonSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapPolygonSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map polygons in the series.\r\n\t */\r\n\tprotected _mapPolygons: ListTemplate<MapPolygon>;\r\n\r\n\t/**\r\n\t * Indicates if series should automatically calculate visual center of the\r\n\t * polygons (accessible via `visualLongitude` and `visualLatitude` properties\r\n\t * of the [[MapPolygon]]).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic calculateVisualCenter: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygonSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPolygon = \"multiPolygon\";\r\n\t\tthis.dataFields.polygon = \"polygon\";\r\n\r\n\t\tthis.dataFields.geoPolygon = \"geoPolygon\";\r\n\t\tthis.dataFields.multiGeoPolygon = \"multiGeoPolygon\";\r\n\r\n\t\tthis.setPropertyValue(\"sortPolygonsBy\", \"area\");\r\n\t\tthis.setPropertyValue(\"sortPolygonsReversed\", false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapPolygonSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\tthis.mapPolygons.clear();\r\n\t\tsuper.processIncExc();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = !this._dataSources[\"geodata\"] ? this.chart.geodata : undefined;\r\n\r\n\t\t\tif (this.geodata) {\r\n\t\t\t\tgeoJSON = this.geodata;\r\n\t\t\t}\r\n\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\r\n\t\t\t\t\t\t\tif (this.chart.geodataNames && this.chart.geodataNames[id]) {\r\n\t\t\t\t\t\t\t\tfeature.properties.name = this.chart.geodataNames[id];\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (type == \"Polygon\" || type == \"MultiPolygon\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\tif (coordinates) {\r\n\t\t\t\t\t\t\t\t\t// make the same as MultiPolygon\r\n\t\t\t\t\t\t\t\t\tif (type == \"Polygon\") {\r\n\t\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// find data object in user-provided data\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapPolygonDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\t\t\t// create one if not found\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPolygon: coordinates, id: id, madeFromGeoData: true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// in case found\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPolygon) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPolygon = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapPolygon);\r\n\t\t});\r\n\r\n\t\tif (this.sortPolygonsBy != \"none\") {\r\n\r\n\t\t\tconst sortBy = this.sortPolygonsBy;\r\n\t\t\tconst reversed = this.sortPolygonsReversed;\r\n\t\t\tthis.mapPolygons.sort((a, b) => {\r\n\t\t\t\tlet valA: number | string = \"\";\r\n\t\t\t\tlet valB: number | string = \"\";\r\n\t\t\t\tlet dirA: Ordering = -1;\r\n\t\t\t\tlet dirB: Ordering = 1;\r\n\r\n\t\t\t\tswitch (sortBy) {\r\n\t\t\t\t\tcase \"area\":\r\n\t\t\t\t\t\tvalA = a.boxArea;\r\n\t\t\t\t\t\tvalB = b.boxArea;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"name\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"id\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"latitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.south : a.north;\r\n\t\t\t\t\t\tvalB = reversed ? b.south : b.north;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"longitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.east : a.west;\r\n\t\t\t\t\t\tvalB = reversed ? b.east : b.west;\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valA < valB) {\r\n\t\t\t\t\treturn reversed ? dirB : dirA;\r\n\t\t\t\t}\r\n\t\t\t\tif (valA > valB) {\r\n\t\t\t\t\treturn reversed ? dirA : dirB;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.mapPolygons.each((mapPolygon, index) => {\r\n\t\t\t\tmapPolygon.validate();\r\n\t\t\t\t// makes small go first to avoid hover problems with IE\r\n\t\t\t\tif (!mapPolygon.zIndex && !mapPolygon.propertyFields.zIndex) {\r\n\t\t\t\t\tmapPolygon.zIndex = 1000000 - index;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * List of polygon elements in the series.\r\n\t *\r\n\t * @return Polygon list\r\n\t */\r\n\tpublic get mapPolygons(): ListTemplate<MapPolygon> {\r\n\r\n\t\tif (!this._mapPolygons) {\r\n\t\t\tlet polygonTemplate: MapPolygon = new MapPolygon();\r\n\r\n\t\t\tlet mapPolygons: ListTemplate<MapPolygon> = new ListTemplate<MapPolygon>(polygonTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapPolygons));\r\n\t\t\tthis._disposers.push(mapPolygons.template);\r\n\t\t\tmapPolygons.template.focusable = true;\r\n\t\t\tmapPolygons.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapPolygons = mapPolygons;\r\n\t\t\tthis._mapObjects = mapPolygons;\r\n\t\t}\r\n\r\n\t\treturn this._mapPolygons;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapPolygon by id in geoJSON file\r\n\t * @param polygon id\r\n\t * @return {MapPolygon}\r\n\t */\r\n\tpublic getPolygonById(id: string): MapPolygon {\r\n\t\treturn $iter.find(this.mapPolygons.iterator(), (mapPolygon) => {\r\n\t\t\tlet dataContext: any = mapPolygon.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapPolygons.template.copyFrom(source.mapPolygons.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] {\r\n\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapPolygons.each((mapPolygon) => {\r\n\t\t\tif (this.dataItems.indexOf(mapPolygon._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapPolygon.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * Available options: `\"area\"` (default), `\"name\"`, `\"longitude\"`,\r\n\t * `\"latitude\"`, `\"id\"`, and `\"none\"`.\r\n\t *\r\n\t * @default area\r\n\t * @since 4.9.36\r\n\t * @param value  How to sort map polygons\r\n\t */\r\n\tpublic set sortPolygonsBy(value: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\") {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsBy\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return How to sort map polygons\r\n\t */\r\n\tpublic get sortPolygonsBy(): \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.9.36\r\n\t * @param value  Reverse polygon sort direction\r\n\t */\r\n\tpublic set sortPolygonsReversed(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsReversed\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reverse polygon sort direction\r\n\t */\r\n\tpublic get sortPolygonsReversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsReversed\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygonSeries\"] = MapPolygonSeries;\r\nregistry.registeredClasses[\"MapPolygonSeriesDataItem\"] = MapPolygonSeriesDataItem;\r\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","/**\r\n * This module contains funcitonality related to geographical projections\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../../core/defs/IGeoPoint\";\r\n//import { IGeoRectangle } from \"../../../core/defs/IGeoRectangle\";\r\nimport { IPoint, IOrientationPoint } from \"../../../core/defs/IPoint\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as $math from \"../../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport { MapChart } from \"../../types/MapChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for a geographical projection.\r\n */\r\nexport class Projection {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Projection: d3geo.GeoProjection;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Path: d3geo.GeoPath;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis.d3Projection = d3geo.geoEquirectangular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic set d3Projection(projection: d3geo.GeoProjection) {\r\n\t\tthis._d3Projection = projection;\r\n\t\tprojection.precision(0.1);\r\n\t\tthis._d3Path = d3geo.geoPath().projection(projection);\r\n\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateProjection();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic get d3Projection(): d3geo.GeoProjection {\r\n\t\treturn this._d3Projection;\r\n\t}\r\n\r\n\t/**\r\n\t * d3 path generator method\r\n\t * @ignore\r\n\t */\r\n\tpublic get d3Path(): d3geo.GeoPath {\r\n\t\treturn this._d3Path;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.d3Projection.scale() / 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a geographical point (lat/long) to a screen point (x/y)\r\n\t * @param geoPoint Geo point (lat/long)\r\n\t * @return Screen point (x/y)\r\n\t */\r\n\tpublic convert(geoPoint: IGeoPoint): IPoint {\r\n\t\t/*\r\n\t\tgeoPoint = $geo.normalizePoint(geoPoint);\r\n\t\tgeoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\tlet pointInRadians: IPoint = this.project(geoPoint.longitude * $math.RADIANS, geoPoint.latitude * $math.RADIANS);\r\n\t\treturn {\r\n\t\t\tx: $math.round(pointInRadians.x * $math.DEGREES - this.centerPoint.x, 4) * this.scale,\r\n\t\t\ty: $math.round(-pointInRadians.y * $math.DEGREES - this.centerPoint.y, 4) * this.scale\r\n\t\t};*/\r\n\r\n\t\tlet p = this.d3Projection([geoPoint.longitude, geoPoint.latitude]);\r\n\t\tif (p) {\r\n\t\t\treturn { x: p[0], y: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a screen point (x/y) to a geographical point (lat/long)\r\n\t * @param point Screen point (x/y)\r\n\t * @return Geo point (lat/long)\r\n\t */\r\n\tpublic invert(point: IPoint): IGeoPoint {\r\n\t\t/*\r\n\t\tlet pointInRadians: IGeoPoint = this.unproject((point.x / this.scale + this.centerPoint.x) * $math.RADIANS, (-point.y / this.scale - this.centerPoint.y) * $math.RADIANS);\r\n\r\n\t\tlet geoPoint = { longitude: pointInRadians.longitude * $math.DEGREES, latitude: pointInRadians.latitude * $math.DEGREES };\r\n\r\n\t\tgeoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\t*/\r\n\t\tlet p = this.d3Projection.invert([point.x, point.y]);\r\n\t\tif (p) {\r\n\t\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns X/Y coordinates.\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param lambda [description]\r\n\t * @param phi    [description]\r\n\t * @return X/Y coordinates\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic project(lambda: number, phi: number): IPoint {\r\n\t\treturn this.convert({ longitude: lambda * $math.DEGREES, latitude: phi * $math.DEGREES });\r\n\t}\r\n\r\n\t/**\r\n\t * Returns geographical coordinates (lat/long).\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param x X coordinate\r\n\t * @param y Y coordinate\r\n\t * @return Geographical point\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic unproject(x: number, y: number): IGeoPoint {\r\n\t\treturn this.invert({ x: x, y: y });\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic rotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS + deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic unrotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS - deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };\r\n\t}\r\n\r\n\r\n\t//@todo: move to some utils?\r\n\t//@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html\r\n\tpublic intermediatePoint(pointA: IGeoPoint, pointB: IGeoPoint, position: number): IGeoPoint {\r\n\t\tlet p = d3geo.geoInterpolate([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude])(position);\r\n\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t};\r\n\r\n\t// returns radians\r\n\tpublic multiDistance(multiGeoLine: Array<Array<IGeoPoint>>): number {\r\n\t\tlet distance = 0;\r\n\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\tlet pointA = points[p - 1];\r\n\t\t\t\t\tlet pointB = points[p];\r\n\t\t\t\t\tdistance += this.distance(pointA, pointB);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t// returns radians\r\n\tpublic distance(pointA: IGeoPoint, pointB: IGeoPoint): number {\r\n\t\treturn d3geo.geoDistance([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude]);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IOrientationPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet intermediatePoint = this.positionToGeoPoint(multiGeoLine, position);\r\n\t\t\tlet intermediatePointA = this.positionToGeoPoint(multiGeoLine, position - 0.01);\r\n\t\t\tlet intermediatePointB = this.positionToGeoPoint(multiGeoLine, position + 0.01);\r\n\r\n\t\t\tif (intermediatePointA && intermediatePointB) {\r\n\r\n\t\t\t\tlet point = this.convert(intermediatePoint);\r\n\r\n\t\t\t\tlet pa = this.convert(intermediatePointA);\r\n\t\t\t\tlet pb = this.convert(intermediatePointB);\r\n\r\n\t\t\t\treturn { x: point.x, y: point.y, angle: $math.getAngle(pa, pb) };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToGeoPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IGeoPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet totalDistance: number = this.multiDistance(multiGeoLine);\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IGeoPoint;\r\n\t\t\tlet pointB: IGeoPoint;\r\n\r\n\t\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = this.distance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = multiGeoLine.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\treturn this.intermediatePoint(pointA, pointB, positionAB);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { longitude: 0, latitude: 0 };\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Projection\"] = Projection;\r\n","/**\r\n * A module for the mini-map control.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapSeries } from \"./MapSeries\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SmallMap]].\r\n */\r\nexport interface ISmallMapProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[SmallMap]].\r\n */\r\nexport interface ISmallMapEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SmallMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISmallMapAdapters extends IContainerAdapters, ISmallMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SmallMap extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISmallMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISmallMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISmallMapEvents;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A container that holds the visual elements for the mini-map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic seriesContainer: Container;\r\n\r\n\t/**\r\n\t * The rectangle element which highlights current viewport.\r\n\t */\r\n\tpublic rectangle: Rectangle;\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t */\r\n\tprotected _series: List<MapSeries>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SmallMap\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.align = \"left\";\r\n\t\tthis.valign = \"bottom\";\r\n\t\tthis.percentHeight = 20;\r\n\t\tthis.percentWidth = 20;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Set background defailts\r\n\t\tthis.background.fillOpacity = 0.9;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\t// Set up events\r\n\t\tthis.events.on(\"hit\", this.moveToPosition, this, false);\r\n\t\tthis.events.on(\"maxsizechanged\", this.updateMapSize, this, false);\r\n\r\n\t\t// Create a container\r\n\t\tthis.seriesContainer = this.createChild(Container);\r\n\t\tthis.seriesContainer.shouldClone = false;\r\n\r\n\t\t// Create an outline rectangle\r\n\t\tlet rectangle: Rectangle = this.createChild(Rectangle);\r\n\t\trectangle.shouldClone = false;\r\n\t\trectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\trectangle.strokeWidth = 1;\r\n\t\trectangle.strokeOpacity = 0.5;\r\n\t\trectangle.fill = color(); //\"none\";\r\n\t\trectangle.verticalCenter = \"middle\";\r\n\t\trectangle.horizontalCenter = \"middle\";\r\n\t\trectangle.isMeasured = false;\r\n\t\trectangle.visible = false;\t\t\r\n\r\n\t\tthis.rectangle = rectangle;\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<MapSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<MapSeries>();\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]) {\r\n\t\tlet series: MapSeries = event.newValue;\r\n\t\tif (this.chart.series.contains(series)) {\r\n\t\t\tlet newSeries = series.clone();\r\n\t\t\tthis._series.removeValue(series);\r\n\t\t\tthis._series.push(newSeries);\r\n\t\t\tseries = newSeries;\r\n\r\n\t\t\tthis.chart.dataUsers.push(newSeries);\r\n\t\t}\r\n\t\tseries.chart = this.chart;\r\n\t\tseries.parent = this.seriesContainer;\r\n\t\tseries.interactionsEnabled = false;\r\n\t\tseries.events.on(\"inited\", this.updateMapSize, this, false);\r\n\t\tseries.hidden = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<MapSeries>[\"removed\"]) {\r\n\t\t//let sourceSeries: MapSeries = event.oldValue;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves main map pan position after click on the small map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic moveToPosition(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tlet rectPoint: IPoint = $utils.spritePointToSprite(event.spritePoint, this, this.seriesContainer);\r\n\t\tlet geoPoint: IGeoPoint = this.chart.seriesPointToGeo(rectPoint);\r\n\t\tthis.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart/map that this control is meant for.\r\n\t *\r\n\t * @param chart  Chart/map\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tif (this.chart != chart) {\r\n\t\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\t\t//chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"mappositionchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"scaleratiochanged\", this.updateMapSize, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart/map\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the viewport recangle as per current map zoom/pan position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRectangle(): void {\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet zoomLevel: number = chart.zoomLevel;\r\n\t\tlet rectangle: Rectangle = this.rectangle;\r\n\r\n\t\trectangle.width = this.pixelWidth / zoomLevel;\r\n\t\trectangle.height = this.pixelHeight / zoomLevel;\r\n\r\n\t\tlet scale: number = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\r\n\t\tlet seriesContainer: Container = chart.seriesContainer;\r\n\r\n\t\trectangle.x = Math.ceil(( - seriesContainer.pixelX) * scale / zoomLevel) + this.seriesContainer.pixelX;\r\n\t\trectangle.y = Math.ceil(( - seriesContainer.pixelY) * scale / zoomLevel) + this.seriesContainer.pixelY;\r\n\r\n\t\trectangle.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Update map size so that internal elements can redraw themselves after\r\n\t * the size of the small map changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateMapSize(): void {\r\n\t\tif (this.chart) {\r\n\t\t\tlet scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\t\t\tthis.seriesContainer.scale = scale;\r\n\r\n\t\t\tlet bbox: IRectangle = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t\ttry { // Add exception catching to tame FF\r\n\t\t\t\tbbox = this.seriesContainer.group.node.getBBox();\r\n\t\t\t} catch (err) { }\r\n\r\n\t\t\tif(bbox.width > 0){\r\n\t\t\t\tthis.rectangle.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.seriesContainer.x = this.pixelWidth / 2 - bbox.x * scale - bbox.width / 2 * scale;\r\n\t\t\tthis.seriesContainer.y = this.pixelHeight / 2 - bbox.y * scale - bbox.height / 2 * scale;\r\n\r\n\t\t\tthis.updateRectangle();\r\n\t\t\tthis.afterDraw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update elements after drawing the small map.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\t//this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n\t\tthis.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n","/**\r\n * A collection of GeoJSON format-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * Normalizes a geo-point.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo-point\r\n * @return Normalized geo-point\r\n */\r\nexport function normalizePoint(geoPoint: IGeoPoint): IGeoPoint {\r\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\r\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\r\n\r\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n\r\n\tif (Math.abs(latitude180) > 90) {\r\n\t\tlongitude = wrapAngleTo180(longitude + 180);\r\n\t}\r\n\r\n\tgeoPoint.longitude = longitude;\r\n\tgeoPoint.latitude = latitude;\r\n\r\n\treturn geoPoint;\r\n}\r\n\r\n/**\r\n * Normalizes all points of a geo-line.\r\n *\r\n * @ignore Exclude from docs\r\n * @param multiline  Source geo-line\r\n * @return Normalized geo-line\r\n */\r\nexport function normalizeMultiline(multiline: Array<Array<IGeoPoint>>): Array<Array<IGeoPoint>> {\r\n\t$array.each(multiline, (segment) => {\r\n\t\t$array.each(segment, (point) => {\r\n\t\t\tnormalizePoint(point);\r\n\t\t});\r\n\t});\r\n\treturn multiline;\r\n}\r\n\r\n/**\r\n * [wrapAngleTo180 description]\r\n *\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n * @param angle  Angle\r\n * @return Angle\r\n */\r\nexport function wrapAngleTo180(angle: number): number {\r\n\tangle = angle % 360;\r\n\r\n\tif (angle > 180) {\r\n\t\tangle -= 360;\r\n\t}\r\n\tif (angle < -180) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\treturn angle;\r\n}\r\n\r\n/**\r\n * Converts a geo point to a regular point object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo point\r\n * @return Point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): IPoint {\r\n\treturn { x: geoPoint.longitude, y: geoPoint.latitude };\r\n}\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t */\r\n\tposition?: number;\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tadjustRotation?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineObjectAdapters extends IContainerAdapters, IMapLineObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line on the map.\r\n *\r\n * @see {@link IMapLineObjectEvents} for a list of available events\r\n * @see {@link IMapLineObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapLineObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineObjectEvents;\r\n\r\n\t/**\r\n\t * A reference to the [[MapLine]] object this object is attached to.\r\n\t *\r\n\t * @todo Review if necessary (same as parent)\r\n\t */\r\n\tpublic mapLine: MapLine;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.adjustRotation = true;\r\n\t\tthis.className = \"MapLineObject\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition() {\r\n\r\n\t\tlet mapLine = this.mapLine;\r\n\r\n\t\tif (mapLine) {\r\n\r\n\t\t\tlet point: IOrientationPoint = mapLine.positionToPoint(this.position);\r\n\r\n\t\t\tthis.x = point.x;\r\n\t\t\tthis.y = point.y;\r\n\r\n\t\t\tif (this.adjustRotation) {\r\n\t\t\t\tthis.rotation = point.angle;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.mapLine.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet series = this.mapLine.dataItem.component;\r\n\t\t\t\tthis.scale = 1 / series.scale;\r\n\t\t\t}\r\n\r\n\t\t\t// hide out of bounds\r\n\t\t\tif (mapLine.shortestDistance) {\r\n\r\n\t\t\t\tlet projection = this.mapLine.series.chart.projection;\r\n\r\n\t\t\t\tlet geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);\r\n\r\n\t\t\t\tlet visible: any = projection.d3Path({ type: 'Point', coordinates: [geoPoint.longitude, geoPoint.latitude] });\r\n\r\n\t\t\t\tif (!visible) {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t *\r\n\t * @param value  Position within the line (0-1)\r\n\t */\r\n\tpublic set position(value: number) {\r\n\t\tthis.setPropertyValue(\"position\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position within the line\r\n\t */\r\n\tpublic get position(): number {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Auto-rotate\r\n\t */\r\n\tpublic set adjustRotation(value: boolean) {\r\n\t\tthis.setPropertyValue(\"adjustRotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Auto-rotate\r\n\t */\r\n\tpublic get adjustRotation(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustRotation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineObject\"] = MapLineObject;\r\n","/**\r\n * Map image series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapImageDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapImageSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapImageSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t */\r\n\tprotected _mapImage: MapImage;\r\n\r\n\t/**\r\n\t * [_point description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _point: [number, number];\r\n\r\n\t/**\r\n\t * Geographical coordinates image is placed at.\r\n\t */\r\n\tprotected _geoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: this.point } };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t *\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapImage(): MapImage {\r\n\t\tif (!this._mapImage) {\r\n\t\t\tlet mapImage = this.component.mapImages.create();\r\n\t\t\tthis.addSprite(mapImage);\r\n\t\t\tthis._mapImage = mapImage;\r\n\t\t\tthis._disposers.push(mapImage);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapImages.removeValue(mapImage);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis.mapObject = mapImage;\r\n\t\t}\r\n\t\treturn this._mapImage;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set point(point: [number, number]) {\r\n\t\tthis._point = point;\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get point(): [number, number] {\r\n\t\treturn this._point;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set multiPoint(multiPoint: [[number, number]]) {\r\n\t\tthis._point = multiPoint[0];\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(this._point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get multiPoint(): [[number, number]] {\r\n\t\treturn [this._point];\r\n\t}\t\r\n\r\n\t/**\r\n\t * Geographical coordinates (lat/long) image is placed at.\r\n\t *\r\n\t * @param geoPoint Image coordinates\r\n\t */\r\n\tpublic set geoPoint(geoPoint: IGeoPoint) {\r\n\t\tthis._geoPoint = geoPoint;\r\n\t\tthis.point = [geoPoint.longitude, geoPoint.latitude];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image coordinates\r\n\t */\r\n\tpublic get geoPoint(): IGeoPoint {\r\n\t\treturn this._geoPoint;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds image point data in pixels.\r\n\t */\r\n\tpoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in pixels.\r\n\t */\r\n\tmultiPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds image point data in Geo coordinates.\r\n\t */\r\n\tgeoPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImageSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageSeriesAdapters extends IMapSeriesAdapters, IMapImageSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map image (marker) elements.\r\n *\r\n * @see {@link IMapImageSeriesEvents} for a list of available Events\r\n * @see {@link IMapImageSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapImageSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapImageSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this image is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t */\r\n\tprotected _mapImages: ListTemplate<MapImage>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPoint = \"multiPoint\";\r\n\t\tthis.dataFields.point = \"point\";\r\n\r\n\t\tthis.dataFields.geoPoint = \"geoPoint\";\r\n\t\tthis.dataFields.multiGeoPoint = \"multiGeoPoint\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapImageSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the data of the sries, effectively forcing it to redraw\r\n\t * all of its elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this.data.length > 0 && this._parseDataFrom == 0) {\r\n\t\t\tthis.mapImages.clear();\r\n\t\t}\r\n\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata) {\r\n\t\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"Point\" || type == \"MultiPoint\") {  // todo: we don't support multipoints at the moment actually\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\t// make the same as MultiPoint\r\n\t\t\t\t\t\t\t\tif (type == \"Point\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapImageDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPoint: coordinates, id: id, madeFromGeoData:true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPoint) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPoint = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\t// important! this should go after super.validateData\r\n\t\t// if data is parsed in chunks, images list is corrupted, fix it here\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet mapImage = dataItem.mapImage;\r\n\t\t\tif (!mapImage.isDisposed()) {\r\n\t\t\t\tthis.mapImages.moveValue(mapImage);\r\n\t\t\t\tif ($type.isNumber(mapImage.latitude) && $type.isNumber(mapImage.latitude)) {\r\n\t\t\t\t\tdataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t *\r\n\t * @return Map images\r\n\t */\r\n\tpublic get mapImages(): ListTemplate<MapImage> {\r\n\r\n\t\tif (!this._mapImages) {\r\n\t\t\tlet template: MapImage = new MapImage();\r\n\t\t\tlet mapImages = new ListTemplate<MapImage>(template);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapImages));\r\n\t\t\tthis._disposers.push(mapImages.template);\r\n\t\t\tmapImages.template.focusable = true;\r\n\t\t\tmapImages.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapImages = mapImages;\r\n\t\t\tthis._mapObjects = mapImages;\r\n\t\t}\r\n\r\n\t\treturn this._mapImages;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates data element, effectively triggering its redrawal.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]) {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\tdataItem.mapImage.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\t$iter.each(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tmapImage.validatePosition();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapImages.template.copyFrom(source.mapImages.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> {\r\n\t\tlet features: Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapImages.each((mapImage)=>{\r\n\t\t\tif (this.dataItems.indexOf(mapImage._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapImage.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapImage by id\r\n\t * @param image id\r\n\t * @return {MapImage}\r\n\t */\r\n\tpublic getImageById(id: string): MapImage {\r\n\t\treturn $iter.find(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tlet dataContext: any = mapImage.dataItem.dataContext;\r\n\t\t\tif(mapImage.id == id || (dataContext && dataContext.id == id)){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImageSeries\"] = MapImageSeries;\r\nregistry.registeredClasses[\"MapImageSeriesDataItem\"] = MapImageSeriesDataItem;\r\n","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapLineObject } from \"./MapLineObject\";\r\nimport { MapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { MapImageSeries } from \"./MapImageSeries\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $geo from \"./Geo\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLine]].\r\n */\r\nexport interface IMapLineProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * If `true` it line will be arched in the way to simulate shortest path\r\n\t * over curvature of Earth's surface, based on currently used on projection.\r\n\t */\r\n\tshortestDistance?: boolean;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images which will be connected by the line\r\n\t */\r\n\timagesToConnect?: MapImage[];\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t */\r\n\tprecision?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLine]].\r\n */\r\nexport interface IMapLineEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineAdapters extends IMapObjectAdapters, IMapLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a line on the map.\r\n *\r\n * @see {@link IMapLineEvents} for a list of available events\r\n * @see {@link IMapLineAdapters} for a list of available Adapters\r\n */\r\nexport class MapLine extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineEvents;\r\n\r\n\t/**\r\n\t * A line visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A list of actual line objects.\r\n\t */\r\n\tprotected _lineObjects: ListTemplate<MapLineObject>;\r\n\r\n\t/**\r\n\t * A reference to arrow object.\r\n\t */\r\n\tprotected _arrow: MapLineObject;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapLineSeries;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t */\r\n\tprotected _imagesToConnect: MapImage[];\r\n\r\n\t/**\r\n\t * A list of event disposers for images.\r\n\t */\r\n\tprotected _imageListeners: { [index: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLine\";\r\n\r\n\t\tthis.createLine();\r\n\t\tthis.line.stroke = color();\r\n\t\tthis.line.parent = this;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"precision\", 0.1);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.shortestDistance = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine() {\r\n\t\tthis.line = new Polyline();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position within the line (0-1) to a physical point\r\n\t * coordinates.\r\n\t *\r\n\t * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tif (this.shortestDistance) {\r\n\t\t\treturn this.series.chart.projection.positionToPoint(this.multiGeoLine, position);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.line) {\r\n\t\t\t\treturn this.line.positionToPoint(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tif (multiGeoLine && multiGeoLine.length > 0) {\r\n\t\t\tthis.setPropertyValue(\"multiGeoLine\", $geo.normalizeMultiline(multiGeoLine), true);\r\n\r\n\t\t\tlet multiLine: Array<Array<[number, number]>> = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\r\n\t\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\r\n\t\t\tthis.updateExtremes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\tlet multiGeoLine = this.getPropertyValue(\"multiGeoLine\");\r\n\t\tif (!multiGeoLine && this.dataItem && this.dataItem.multiGeoLine) {\r\n\t\t\tmultiGeoLine = this.dataItem.multiGeoLine;\r\n\t\t}\r\n\r\n\t\treturn multiGeoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\t\tthis.multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\r\n\t\tlet multiLine = this.getPropertyValue(\"multiLine\");\r\n\t\tif (!multiLine && this.dataItem && this.dataItem.multiLine) {\r\n\t\t\tmultiLine = this.dataItem.multiLine;\r\n\t\t}\r\n\r\n\t\treturn multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t *\r\n\t * Parameter is an array that can hold string `id`'s to of the images, or\r\n\t * references to actual [[MapImage]] objects.\r\n\t *\r\n\t * @param images  Images\r\n\t */\r\n\tpublic set imagesToConnect(images: MapImage[] | string[]) {\r\n\t\tthis.setPropertyValue(\"imagesToConnect\", images, true);\r\n\t\tthis.handleImagesToConnect();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet chart = this.series.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\tif (!series.isReady()) {\r\n\t\t\t\t\t\t\tthis._disposers.push(series.events.on(\"ready\", this.handleImagesToConnect, this, false));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {MapImages[]}\r\n\t */\r\n\tpublic get imagesToConnect(): MapImage[] | string[] {\r\n\t\treturn this.getPropertyValue(\"imagesToConnect\");\r\n\t}\r\n\r\n\tprotected handleImagesToConnect() {\r\n\t\tif (this.imagesToConnect) {\r\n\t\t\tlet segment: Array<IGeoPoint> = [];\r\n\t\t\tlet multiGeoLine = [segment];\r\n\r\n\t\t\tfor (let image of this.imagesToConnect) {\r\n\t\t\t\tif ($type.isString(image)) {\r\n\t\t\t\t\tlet chart = this.series.chart;\r\n\t\t\t\t\tif (chart) {\r\n\t\t\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\t\t\tlet img = series.getImageById(<string>image)\r\n\t\t\t\t\t\t\t\tif (img) {\r\n\t\t\t\t\t\t\t\t\timage = img;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (image instanceof MapImage) {\r\n\r\n\t\t\t\t\tsegment.push({ longitude: (<MapImage>image).longitude, latitude: (<MapImage>image).latitude });\r\n\r\n\t\t\t\t\tif (!this._imageListeners[image.uid]) {\r\n\t\t\t\t\t\tlet disposer = image.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == \"longitude\" || event.property == \"latitude\") {\r\n\t\t\t\t\t\t\t\tthis.handleImagesToConnect();\r\n\t\t\t\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this, false);\r\n\t\t\t\t\t\tthis._imageListeners[image.uid] = disposer;\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.multiGeoLine = multiGeoLine;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the line, effectively forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chart: MapChart = this.series.chart;\r\n\r\n\t\tif (this.multiLine) {\r\n\r\n\t\t\tif (!this.shortestDistance) {\r\n\r\n\t\t\t\tlet convertedPoints: Array<Array<IPoint>> = [];\r\n\r\n\t\t\t\tfor (let i = 0, len = this.multiLine.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet segment: Array<[number, number]> = this.multiLine[i];\r\n\r\n\t\t\t\t\tlet convertedSegmentPoints: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tfor (let s = 0, slen = segment.length; s < slen; s++) {\r\n\t\t\t\t\t\tlet geoPoint: [number, number] = segment[s];\r\n\t\t\t\t\t\tlet point: IPoint = this.series.chart.projection.convert({ longitude: geoPoint[0], latitude: geoPoint[1] });\r\n\t\t\t\t\t\tconvertedSegmentPoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconvertedPoints.push(convertedSegmentPoints);\r\n\t\t\t\t}\r\n\t\t\t\tthis.line.segments = convertedPoints;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchart.projection.d3Projection.precision(this.precision);\r\n\t\t\t\tthis.line.path = chart.projection.d3Path(<any>this.getFeature());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._arrow) {\r\n\t\t\t\tthis._arrow.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.lineObjects.iterator(), (x) => {\r\n\t\t\t\tx.validatePosition();\r\n\t\t\t});\r\n\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t\telse if (this.imagesToConnect) {\r\n\t\t\tthis.handleImagesToConnect();\r\n\t\t}\r\n\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0 && this.multiLine[0] && this.multiLine[0].length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * The line should take the shortest path over the globe.\r\n\t *\r\n\t * Enabling this will make the line look differently in different\r\n\t * projections. Only `MapLine` supports this setting, `MapArc` and\r\n\t * `MapSplice` don't.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Real path?\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\t\tthis.setPropertyValue(\"shortestDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Real path?\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn this.getPropertyValue(\"shortestDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * List of separate line objects the line consists of.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of line objects\r\n\t */\r\n\tpublic get lineObjects(): ListTemplate<MapLineObject> {\r\n\t\tif (!this._lineObjects) {\r\n\t\t\tthis._lineObjects = new ListTemplate<MapLineObject>(new MapLineObject());\r\n\t\t\tthis._lineObjects.events.on(\"inserted\", this.handleLineObjectAdded, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._lineObjects));\r\n\t\t\tthis._disposers.push(this._lineObjects.template);\r\n\t\t}\r\n\r\n\t\treturn this._lineObjects;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorate a [[LineObject]] when it is added to the line.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleLineObjectAdded(event: IListEvents<MapLineObject>[\"inserted\"]) {\r\n\t\tlet mapLineObject: MapLineObject = event.newValue;\r\n\t\tmapLineObject.mapLine = this;\r\n\t\tmapLineObject.shouldClone = false;\r\n\t\tmapLineObject.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLineObject]] to use as an option arrowhead on the line.\r\n\t *\r\n\t * Just accessing this property will create a default arrowhead on the line\r\n\t * automatically.\r\n\t *\r\n\t * @param arrow  Arrow element\r\n\t */\r\n\tpublic set arrow(arrow: MapLineObject) {\r\n\t\tthis._arrow = arrow;\r\n\t\tarrow.mapLine = this;\r\n\t\tarrow.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrow element\r\n\t */\r\n\tpublic get arrow(): MapLineObject {\r\n\t\tif (!this._arrow) {\r\n\t\t\tlet arrow: MapLineObject = this.createChild(MapLineObject);\r\n\t\t\tarrow.shouldClone = false;\r\n\t\t\tarrow.width = 8;\r\n\t\t\tarrow.height = 10;\r\n\t\t\tarrow.mapLine = this;\r\n\t\t\tarrow.position = 0.5;\r\n\r\n\t\t\tlet triangle = arrow.createChild(Triangle);\r\n\t\t\t//triangle.shouldClone = false;\r\n\t\t\ttriangle.fillOpacity = 1;\r\n\t\t\ttriangle.width = percent(100);\r\n\t\t\ttriangle.height = percent(100);\r\n\t\t\ttriangle.rotation = 90;\r\n\t\t\ttriangle.horizontalCenter = \"middle\";\r\n\t\t\ttriangle.verticalCenter = \"middle\";\r\n\t\t\tthis._arrow = arrow;\r\n\t\t}\r\n\t\treturn this._arrow;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies line properties and other attributes, like arrow, from another\r\n\t * instance of [[MapLine]].\r\n\t *\r\n\t * @param source  Source map line\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.lineObjects.copyFrom(source.lineObjects);\r\n\t\tif (source._arrow) {\r\n\t\t\tthis.arrow = <MapLineObject>source.arrow.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!(x instanceof Percent)) {\r\n\t\t\tx = percent(50);\r\n\t\t}\r\n\t\tif (x instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(x.value).x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!(y instanceof Percent)) {\r\n\t\t\ty = percent(50);\r\n\t\t}\r\n\t\tif (y instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(y.value).y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Precision\r\n\t */\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLine\"] = MapLine;\r\n","/**\r\n * Map line series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapLineDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapLineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapLineSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line.\r\n\t */\r\n\tprotected _line: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiLine: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line.\r\n\t */\r\n\tprotected _geoLine: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiGeoLine: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapLine(): this[\"_mapLine\"] {\r\n\t\tif (!this._mapLine) {\r\n\t\t\tlet mapLine = this.component.mapLines.create();\r\n\r\n\t\t\tthis._mapLine = mapLine;\r\n\t\t\tthis.addSprite(mapLine);\r\n\r\n\t\t\tthis._disposers.push(mapLine);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapLines.removeValue(mapLine);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapLine;\r\n\t\t}\r\n\t\treturn this._mapLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [ 100, 150 ],\r\n\t *   [ 120, 200 ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param line  Coordinates\r\n\t */\r\n\tpublic set line(line: Array<[number, number]>) {\r\n\t\tthis._line = line;\r\n\t\tthis.multiLine = [line];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get line(): Array<[number, number]> {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis._multiLine = multiLine;\r\n\t\tthis._multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\t\treturn this._multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { longitude: 3.121, latitude: 0.58 },\r\n\t *   { longitude: -5.199, latitude: 21.223 }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference\r\n\t * @param geoLine  Coordinates\r\n\t */\r\n\tpublic set geoLine(geoLine: Array<IGeoPoint>) {\r\n\t\tthis._geoLine = geoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine([geoLine]);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoLine(): Array<IGeoPoint> {\r\n\t\treturn this._geoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tthis._multiGeoLine = multiGeoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\treturn this._multiGeoLine;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds line data in pixels.\r\n\t */\r\n\tline?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in pixels.\r\n\t */\r\n\tmultiLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds line data in Geo coordinates.\r\n\t */\r\n\tgeoLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in Geo coordinates.\r\n\t */\r\n\tmultiGeoLine?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineSeriesAdapters extends IMapSeriesAdapters, IMapLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map line series.\r\n *\r\n * @see {@link IMapLineSeriesEvents} for a list of available Events\r\n * @see {@link IMapLineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapLineSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A list of map lins in the series.\r\n\t */\r\n\tprotected _mapLines: ListTemplate<this[\"_mapLine\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiLine = \"multiLine\";\r\n\t\tthis.dataFields.line = \"line\";\r\n\r\n\t\tthis.dataFields.geoLine = \"geoLine\";\r\n\t\tthis.dataFields.multiGeoLine = \"multiGeoLine\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"LineString\" || type == \"MultiLineString\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapLineDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (type == \"LineString\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiLine: coordinates, id: id, madeFromGeoData:true};\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiLine) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiLine = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of lines in the series.\r\n\t *\r\n\t * @return Lines\r\n\t */\r\n\tpublic get mapLines(): ListTemplate<this[\"_mapLine\"]> {\r\n\r\n\t\tif (!this._mapLines) {\r\n\t\t\tlet lineTemplate: MapLine = this.createLine();\r\n\t\t\tlet mapLines = new ListTemplate<MapLine>(lineTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapLines));\r\n\t\t\tthis._disposers.push(mapLines.template);\r\n\t\t\tmapLines.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapLines = mapLines;\r\n\t\t\tthis._mapObjects = mapLines;\r\n\t\t}\r\n\r\n\t\treturn this._mapLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapLine();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapLine);\r\n\t\t})\r\n\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tmapLine.validate();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapLines.template.copyFrom(source.mapLines.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] {\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] = [];\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tif (this.dataItems.indexOf(mapLine._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapLine.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * returns MapLine by id\r\n\t * @param line id\r\n\t * @return {MapLine}\r\n\t */\r\n\tpublic getLineById(id: string): MapLine {\r\n\t\treturn $iter.find(this.mapLines.iterator(), (mapLine) => {\r\n\t\t\tlet dataContext: any = mapLine.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineSeries\"] = MapLineSeries;\r\nregistry.registeredClasses[\"MapLineSeriesDataItem\"] = MapLineSeriesDataItem;\r\n","/**\r\n * Graticule (map grid line).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GraticuleSeries } from \"./GraticuleSeries\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Graticule]].\r\n */\r\nexport interface IGraticuleProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[Graticule]].\r\n */\r\nexport interface IGraticuleEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Graticule]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleAdapters extends IMapLineAdapters, IGraticuleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Graticule is a map line spanning from the poles or around the globe.\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleEvents} for a list of available events\r\n * @see {@link IGraticuleAdapters} for a list of available Adapters\r\n */\r\nexport class Graticule extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Graticule\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.shortestDistance = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Graticule\"] = Graticule;\r\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","/**\r\n * Graticule (map grid) series functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { Graticule } from \"./Graticule\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GraticuleSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GraticuleSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[Graticule]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesProperties extends IMapLineSeriesProperties {\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t */\r\n\t// majorLatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t */\r\n\t// majorLongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfitExtent?: boolean;\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsingleSprite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GraticuleSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleSeriesAdapters extends IMapLineSeriesAdapters, IGraticuleSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class is used to create a set of graticules (map grid).\r\n *\r\n * To enable, create like you would create any regular map series:\r\n *\r\n * ```TypeScript\r\n * let graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JavaScript\r\n * var graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     \"type\": \"GraticuleSeries\",\r\n *     \"mapLines\": {\r\n *       \"line\": {\r\n *         \"stroke\": \"#000000\",\r\n *         \"strokeOpacity\": 0.1\r\n *       }\r\n *     }\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleSeriesEvents} for a list of available Events\r\n * @see {@link IGraticuleSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class GraticuleSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGraticuleSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: GraticuleSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeries\";\r\n\r\n\t\tthis.longitudeStep = 10;\r\n\r\n\t\tthis.latitudeStep = 10;\r\n\r\n\t\tthis.north = 90;\r\n\t\tthis.south = -90;\r\n\t\tthis.east = -180;\r\n\t\tthis.west = 180;\r\n\r\n\t\t//this.majorLatitudeStep = 90;\r\n\t\t//this.majorLongitudeStep = 360;\r\n\r\n\t\tthis.fitExtent = true;\r\n\r\n\t\tthis.singleSprite = true;\r\n\r\n\t\tthis.events.disableType(\"geoBoundsChanged\");\r\n\r\n\t\tthis.mapLines.template.line.strokeOpacity = 0.08;\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tthis.hiddenInLegend = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new GraticuleSeriesDataItem();\r\n\t}\r\n\r\n\tpublic validateData() {\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.mapLines.clear();\r\n\r\n\t\tlet graticule = d3geo.geoGraticule();\r\n\r\n\t\tif (graticule) {\r\n\t\t\tgraticule.stepMinor([this.longitudeStep, this.latitudeStep]);\r\n\t\t\tgraticule.stepMajor([360, 360]);\r\n\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (this.fitExtent) {\r\n\t\t\t\tgraticule.extent([[chart.east, chart.north], [chart.west, chart.south]]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgraticule.extent([[this.east, this.north], [this.west, this.south]]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.singleSprite) {\r\n\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\tmapLine.multiLine = graticule().coordinates as Array<Array<[number, number]>>;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet lineStrings = graticule.lines();\r\n\r\n\t\t\t\t$array.each(lineStrings, (lineString) => {\r\n\t\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\t\tmapLine.multiLine = [lineString.coordinates as Array<[number, number]>];\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new Graticule();\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set latitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"latitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get latitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"latitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Step\r\n\t */\r\n\tpublic set longitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"longitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get longitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"longitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLatitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLatitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLatitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLatitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLongitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLongitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLongitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLongitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Fit?\r\n\t */\r\n\tpublic set fitExtent(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"fitExtent\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fit?\r\n\t */\r\n\tpublic get fitExtent(): boolean {\r\n\t\treturn this.getPropertyValue(\"fitExtent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Use single sprite?\r\n\t */\r\n\tpublic set singleSprite(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"singleSprite\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use single sprite?\r\n\t */\r\n\tpublic get singleSprite(): boolean {\r\n\t\treturn this.getPropertyValue(\"singleSprite\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GraticuleSeries\"] = GraticuleSeries;\r\nregistry.registeredClasses[\"GraticuleSeriesDataItem\"] = GraticuleSeriesDataItem;\r\n","/**\r\n * Map module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { MapSeries } from \"../map/MapSeries\";\r\nimport { MapObject } from \"../map/MapObject\";\r\nimport { MapImage } from \"../map/MapImage\";\r\nimport { MapPolygon } from \"../map/MapPolygon\";\r\nimport { MapPolygonSeries } from \"../map/MapPolygonSeries\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { Projection } from \"../map/projections/Projection\";\r\nimport { ZoomControl } from \"../map/ZoomControl\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { SmallMap } from \"../map/SmallMap\";\r\nimport * as $mapUtils from \"../map/MapUtils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { options } from \"../../core/Options\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $geo from \"../map/Geo\";\r\nimport { Paper } from \"../../core/rendering/Paper\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { GraticuleSeries } from \"../map/GraticuleSeries\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { Legend } from \"../Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines interface for a map polygon object.\r\n */\r\nexport interface IMapPolygonDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single polygon information in X/Y coordinates.\r\n\t */\r\n\tpolygon?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in X/Y coordinates.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Single polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPolygon?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: Array<Array<Array<IGeoPoint>>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines types of map line.\r\n */\r\nexport type MapLineType = \"line\" | \"arc\" | \"spline\" | \"realTrajectory\";\r\n\r\n/**\r\n * Defines interface for the map line object.\r\n */\r\nexport interface IMapLineDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single line information in X/Y coordinates.\r\n\t */\r\n\tline?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Multi-part line information in X/Y coordinates.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Single line information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoLine?: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * Multi-part line information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines interface for a map image (market) object.\r\n */\r\nexport interface IMapImageDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Image position information in X/Y coordinates.\r\n\t */\r\n\tpoint?: [number, number];\r\n\r\n\t/**\r\n\t * Multi-image position information in X/Y coordinates.\r\n\t */\r\n\tmultiPoint?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Image position information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * Multi-image position information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPoint?: Array<IGeoPoint>;\r\n\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines type suitable for all map objects.\r\n */\r\nexport type IMapDataObject = IMapPolygonDataObject | IMapLineDataObject;\r\n\r\n/**\r\n * Defines data fields for [[MapChart]].\r\n */\r\nexport interface IMapChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapChart]].\r\n */\r\nexport interface IMapChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * Projection to be used when drawing the map.\r\n\t */\r\n\tprojection?: Projection;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t */\r\n\tdeltaLongitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to -90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaLatitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal \"Z\" - an axis that goes from\r\n\t * the center of the globe directly to the viewer.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaGamma?: number;\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * A map will start centered on this geographical point.\r\n\t */\r\n\thomeGeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * A map will start zoomed to this level.\r\n\t */\r\n\thomeZoomLevel?: number;\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t */\r\n\tmouseWheelBehavior?: \"zoom\" | \"none\";\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t */\r\n\tpanBehavior?: \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\";\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tcenterMapOnZoomOut?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t */\r\n\treverseGeodata?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapChart]].\r\n */\r\nexport interface IMapChartEvents extends ISerialChartEvents {\r\n\r\n\t/**\r\n\t * Invoked when map is zoomed in or out.\r\n\t */\r\n\tzoomlevelchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when map is panned. (moved)\r\n\t */\r\n\tmappositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when scale ratio is changed, e.g when the whole map area is\r\n\t * resized and the map needs to be resized to fit it, without changing\r\n\t * zoom level.\r\n\t */\r\n\tscaleratiochanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapChartAdapters extends ISerialChartAdapters, IMapChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a map.\r\n *\r\n * @see {@link IMapChartEvents} for a list of available Events\r\n * @see {@link IMapChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation\r\n */\r\nexport class MapChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapChartEvents;\r\n\r\n\t/**\r\n\t * The East-most longitude point of the map.\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * The West-most longitude point of the map.\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * The South-most latitude point of the map.\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * The North-most latitude point of the map.\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * A ratio to be used when scaling the map shapes.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * A screen point of the map's center.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic centerPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's left.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic westPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's right.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic eastPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's top.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic northPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's bottom.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic southPoint: IPoint;\r\n\r\n\t/**\r\n\t * Width of the actual map objects (px).\r\n\t */\r\n\tpublic seriesWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxLeft: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxRight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxTop: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxBottom: number;\r\n\r\n\t/**\r\n\t * Height of the actual map objects (px).\r\n\t */\r\n\tpublic seriesHeight: number;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\t/**\r\n\t * Names of geodata items, such as countries, to replace by from loaded\r\n\t * geodata.\r\n\t *\r\n\t * Can be used to override built-in English names for countries.\r\n\t *\r\n\t * ```TypeScript\r\n\t * import am4geodata_lang_ES from '@amcharts4-geodata/lang/es';\r\n\t * // ...\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"geodataNames\": am4geodata_lang_ES\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.7.4\r\n\t */\r\n\tpublic geodataNames: { [index: string]: string };\r\n\r\n\t/**\r\n\t * A reference to a [[ZoomControl]] instance.\r\n\t */\r\n\tprotected _zoomControl: ZoomControl;\r\n\r\n\t/**\r\n\t * A reference to a [[SmallMap]] control instance.\r\n\t */\r\n\tprotected _smallMap: SmallMap;\r\n\r\n\t/**\r\n\t * [_zoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _zoomGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Default duration of zoom animations (ms).\r\n\t */\r\n\tpublic zoomDuration: number = 1000;\r\n\r\n\t/**\r\n\t * Default zooming animation easing function.\r\n\t */\r\n\tpublic zoomEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Smallest available zoom level. The map will not allow to zoom out past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tpublic minZoomLevel: number = 1;\r\n\r\n\t/**\r\n\t * Biggest available zoom level. The map will not allow to zoom in past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 32\r\n\t */\r\n\tpublic maxZoomLevel: number = 32;\r\n\r\n\t/**\r\n\t * [_prevZoomLevel description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomLevel: number;\r\n\r\n\t/**\r\n\t * [_prevZoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomGeoPoint: IGeoPoint = { latitude: 0, longitude: 0 };\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: MapSeries;\r\n\r\n\t/**\r\n\t * A reference to currently playing animation, e.g. zooming.\r\n\t */\r\n\tprotected _mapAnimation: Animation;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _zoomGeoPointReal: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _centerGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\r\n\tpublic panSprite: Circle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLongitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLatitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _backgroundSeries: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChart\";\r\n\r\n\t\t// Set default projection\r\n\t\tthis.projection = new Projection();\r\n\r\n\t\tthis.setPropertyValue(\"deltaLatitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaLongitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaGamma\", 0);\r\n\t\tthis.maxPanOut = 0.7;\r\n\t\tthis.homeZoomLevel = 1;\r\n\t\tthis.zoomStep = 2;\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.centerMapOnZoomOut = true;\r\n\r\n\t\t// Set padding\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\t$utils.used(this.backgroundSeries);\r\n\r\n\t\t// so that the map would render in a hidden div too\r\n\t\tthis.minWidth = 10;\r\n\t\tthis.minHeight = 10;\r\n\r\n\t\tthis.events.once(\"inited\", this.handleAllInited, this, false);\r\n\r\n\t\t// Create a container for map series\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.visible = false;\r\n\t\tseriesContainer.inert = true;\r\n\t\tseriesContainer.resizable = true;\r\n\t\tseriesContainer.events.on(\"transformed\", this.handleMapTransform, this, false);\r\n\t\tseriesContainer.events.on(\"doublehit\", this.handleDoubleHit, this, false);\r\n\t\tseriesContainer.events.on(\"dragged\", this.handleDrag, this, false);\r\n\t\tseriesContainer.zIndex = 0;\r\n\t\tseriesContainer.dragWhileResize = true;\r\n\t\t//seriesContainer.background.fillOpacity = 0;\r\n\r\n\t\tseriesContainer.adapter.add(\"scale\", (scale, target) => {\r\n\t\t\treturn $math.fitToRange(scale, this.minZoomLevel, this.maxZoomLevel);\r\n\t\t});\r\n\r\n\t\t// Set up events\r\n\t\t//this.events.on(\"validated\", this.updateExtremes, this);\r\n\t\t//this.events.on(\"datavalidated\", this.handleAllValidated, this, false);\r\n\t\t//this.events.on(\"datavalidated\", this.updateExtremes, this, false);\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t}\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Set up main chart container, e.g. set backgrounds and events to monitor\r\n\t\t// size changes, etc.\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.parent = this;\r\n\t\tchartContainer.zIndex = -1;\r\n\r\n\t\tthis._disposers.push(this.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tif (this._mapAnimation) {\r\n\t\t\t\t\tthis._mapAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet allInited = true;\r\n\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\t\t\tallInited = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allInited) {\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t}\r\n\t\t\t\tthis.zoomToGeoPoint(this._zoomGeoPointReal, this.zoomLevel, true, 0);\r\n\t\t\t}\r\n\r\n\t\t}, undefined, false));\r\n\r\n\t\tlet chartContainerBg = chartContainer.background;\r\n\t\tchartContainerBg.fillOpacity = 0;\r\n\t\tchartContainerBg.events.on(\"down\", (e) => { this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, this);\r\n\t\tchartContainerBg.events.on(\"up\", (e) => { this.seriesContainer.dragStop() }, this);\r\n\t\tchartContainerBg.events.on(\"doublehit\", this.handleDoubleHit, this);\r\n\t\tchartContainerBg.focusable = true;\r\n\r\n\t\tchartContainer.events.on(\"down\", this.handleMapDown, this, false);\r\n\r\n\t\tthis.addDisposer(seriesContainer.events.on(\"down\", () => {\r\n\t\t\t// Cancel any move inertia if there is one\r\n\t\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\t\tif (inertia) {\r\n\t\t\t\tinertia.done();\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\t// Add description to background\r\n\t\tthis.background.fillOpacity = 0;\r\n\r\n\t\t// Add keyboard events for panning\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\tconst key = keyboard.getEventKey(ev.event);\r\n\t\t\t\tif (!this._zoomControl || !this._zoomControl.thumb.isFocused) {\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: 0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: -0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\tthis.pan({ x: -0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tthis.mouseWheelBehavior = \"zoom\";\r\n\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handlePanDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handlePanUp, this));\r\n\t\t//this._disposers.push(interaction.body.events.on(\"track\", this.handlePanMove, this));\r\n\r\n\t\tlet panSprite = this.seriesContainer.createChild(Circle);\r\n\t\tpanSprite.radius = 10;\r\n\t\tpanSprite.inert = true;\r\n\t\tpanSprite.isMeasured = false;\r\n\t\tpanSprite.events.on(\"transformed\", this.handlePanMove, this, false);\r\n\t\tpanSprite.interactionsEnabled = false;\r\n\t\tpanSprite.opacity = 0;\r\n\t\tpanSprite.x = 0;\r\n\t\tpanSprite.y = 0;\r\n\t\tthis.panSprite = panSprite;\r\n\t\tthis.panBehavior = \"move\";\r\n\t\t/*\r\n\t\t\t\tthis.panSprite.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\t\t\"time\": 100,\r\n\t\t\t\t\t\"duration\": 1000,\r\n\t\t\t\t\t\"factor\": 3,\r\n\t\t\t\t\t\"easing\": $ease.sinOut\r\n\t\t\t\t});*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanDown(event: IInteractionEvents[\"down\"]): void {\r\n\t\tlet svgPoint = $utils.documentPointToSvg(event.pointer.point, this.htmlContainer);\r\n\t\tif (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < this.svgContainer.width && svgPoint.y < this.svgContainer.height) {\r\n\t\t\t// Get local point\r\n\t\t\tthis._downPointOrig = $utils.documentPointToSprite(event.pointer.point, this.seriesContainer);\r\n\r\n\t\t\tthis.panSprite.moveTo(this._downPointOrig);\r\n\t\t\tthis.panSprite.dragStart(event.pointer);\r\n\t\t\tthis._downDeltaLongitude = this.deltaLongitude;\r\n\t\t\tthis._downDeltaLatitude = this.deltaLatitude;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanUp(event: IInteractionEvents[\"down\"]): void {\r\n\t\tif (this._downPointOrig) {\r\n\t\t\tthis.panSprite.dragStop(event.pointer, true);\r\n\t\t}\r\n\t\tthis._downPointOrig = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanMove(): void {\r\n\r\n\t\tif (!this.seriesContainer.isResized) {\r\n\r\n\t\t\tif (getInteraction().areTransformed([this.panSprite.interactions, this.seriesContainer.interactions])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\t\tlet panBehavior = this.panBehavior;\r\n\r\n\t\t\tif (panBehavior != \"move\" && panBehavior != \"none\" && this._downPointOrig && d3Projection.rotate) {\r\n\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\r\n\t\t\t\tlet dln = rotation[0];\r\n\t\t\t\tlet dlt = rotation[1];\r\n\t\t\t\tlet dlg = rotation[2];\r\n\r\n\t\t\t\td3Projection.rotate([0, 0, 0]);\r\n\r\n\t\t\t\tlet downGeoLocal = this.projection.invert(this._downPointOrig);\r\n\r\n\t\t\t\tlet local: IPoint = { x: this.panSprite.pixelX, y: this.panSprite.pixelY };\r\n\t\t\t\tlet geoLocal: IGeoPoint;\r\n\t\t\t\tif (local) {\r\n\t\t\t\t\tgeoLocal = this.projection.invert(local);\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3Projection.rotate([dln, dlt, dlg]);\r\n\r\n\t\t\t\tif (geoLocal) {\r\n\t\t\t\t\tif (panBehavior == \"rotateLat\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLatitude = this._downDeltaLatitude + geoLocal.latitude - downGeoLocal.latitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panBehavior == \"rotateLong\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLongitude = this._downDeltaLongitude + geoLocal.longitude - downGeoLocal.longitude;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAllInited() {\r\n\t\tlet inited = true;\r\n\t\tthis.seriesContainer.visible = true;\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\tinited = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (inited) {\r\n\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\tthis.updateScaleRatio();\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// TODO verify that this is correct\r\n\t\t\tconst disposer = registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tthis.removeDispose(disposer);\r\n\t\t\t\tthis.handleAllInited();\r\n\t\t\t}, this, false);\r\n\r\n\t\t\tthis.addDisposer(disposer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateZoomGeoPoint() {\r\n\t\tlet seriesPoint = $utils.svgPointToSprite({ x: this.innerWidth / 2 + this.pixelPaddingLeft, y: this.innerHeight / 2 + this.pixelPaddingTop }, this.series.getIndex(0));\r\n\t\tlet geoPoint = this.projection.invert(seriesPoint);\r\n\t\tthis._zoomGeoPointReal = geoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateCenterGeoPoint() {\r\n\t\tlet maxLeft: number;\r\n\t\tlet maxRight: number;\r\n\t\tlet maxTop: number;\r\n\t\tlet maxBottom: number;\r\n\r\n\r\n\t\tif (this.backgroundSeries) {\r\n\t\t\tlet features = this.backgroundSeries.getFeatures();\r\n\t\t\tif (features.length > 0) {\r\n\t\t\t\tlet bounds = this.projection.d3Path.bounds(<any>features[0].geometry);\r\n\t\t\t\tmaxLeft = bounds[0][0];\r\n\t\t\t\tmaxTop = bounds[0][1];\r\n\t\t\t\tmaxRight = bounds[1][0];\r\n\t\t\t\tmaxBottom = bounds[1][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet bbox = series.group.node.getBBox();\r\n\r\n\t\t\t\tif (maxLeft > bbox.x || !$type.isNumber(maxLeft)) {\r\n\t\t\t\t\tmaxLeft = bbox.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxRight < bbox.x + bbox.width || !$type.isNumber(maxRight)) {\r\n\t\t\t\t\tmaxRight = bbox.x + bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxTop > bbox.y || !$type.isNumber(maxTop)) {\r\n\t\t\t\t\tmaxTop = bbox.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxBottom < bbox.y + bbox.height || !$type.isNumber(maxBottom)) {\r\n\t\t\t\t\tmaxBottom = bbox.y + bbox.height;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.seriesMaxLeft = maxLeft;\r\n\t\tthis.seriesMaxRight = maxRight;\r\n\t\tthis.seriesMaxTop = maxTop;\r\n\t\tthis.seriesMaxBottom = maxBottom;\r\n\r\n\t\tthis.seriesWidth = maxRight - maxLeft;\r\n\t\tthis.seriesHeight = maxBottom - maxTop;\r\n\r\n\t\tif (this.seriesWidth > 0 && this.seriesHeight > 0) {\r\n\t\t\tthis.chartContainer.visible = true;\r\n\t\t\tthis._centerGeoPoint = this.projection.invert({ x: maxLeft + (maxRight - maxLeft) / 2, y: maxTop + (maxBottom - maxTop) / 2 });\r\n\r\n\t\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\t\tthis._zoomGeoPointReal = this._centerGeoPoint;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chartContainer.visible = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents map to be dragged out of the container area\r\n\t * @ignore\r\n\t */\r\n\tprotected handleDrag() {\r\n\r\n\t\tlet d = this.zoomLevel * this.scaleRatio;\r\n\r\n\t\tlet ww = this.seriesWidth * d;\r\n\t\tlet hh = this.seriesHeight * d;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tlet maxLeft = this.seriesMaxLeft * d;\r\n\t\tlet maxRight = this.seriesMaxRight * d;\r\n\t\tlet maxTop = this.seriesMaxTop * d;\r\n\t\tlet maxBottom = this.seriesMaxBottom * d;\r\n\r\n\t\tlet x = seriesContainer.pixelX;\r\n\t\tlet y = seriesContainer.pixelY;\r\n\r\n\t\tlet maxPanOut = this.maxPanOut;\r\n\r\n\t\tlet minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww - maxLeft, -maxLeft);\r\n\t\tif (x < minX) {\r\n\t\t\tx = minX;\r\n\t\t}\r\n\r\n\t\tlet maxX = Math.max(this.maxWidth * maxPanOut - maxLeft, this.maxWidth - maxRight);\r\n\t\tif (x > maxX) {\r\n\t\t\tx = maxX;\r\n\t\t}\r\n\r\n\t\tlet minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh - maxTop, -maxTop)\r\n\t\tif (y < minY) {\r\n\t\t\ty = minY;\r\n\t\t}\r\n\r\n\t\tlet maxY = Math.max(this.maxHeight * maxPanOut - maxTop, this.maxHeight - maxBottom);\r\n\t\tif (y > maxY) {\r\n\t\t\ty = maxY;\r\n\t\t}\r\n\r\n\t\tseriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);\r\n\r\n\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Map\");\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(this.background.readerTitle)) {\r\n\t\t\tthis.background.readerTitle = this.language.translate(\"Use plus and minus keys on your keyboard to zoom in and out\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when a pointer presses down on the map, e.g. user presses\r\n\t * down mouse or touches the map on a screen.\r\n\t *\r\n\t * Stops all animations currently going on.\r\n\t */\r\n\tprotected handleMapDown(): void {\r\n\t\tif (this._mapAnimation) {\r\n\t\t\tthis._mapAnimation.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the event when user doubleclicks or dooubletaps the map: zooms\r\n\t * in on the reference point.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleDoubleHit(event: AMEvent<Sprite, ISpriteEvents>[\"doublehit\"]) {\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\t\tthis.zoomIn(geoPoint);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n\t * map: zooms in or out depending on the direction of the wheel turn.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\r\n\t\t// Cancel any move inertia if there is one\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\r\n\t\tif (event.shift.y < 0) {\r\n\t\t\tthis.zoomIn(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.zoomOut(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t * @default zoomX\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoom\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.chartContainer.wheelable = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoom\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t * @param  value  Behavior\r\n\t */\r\n\tpublic set panBehavior(value: \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\") {\r\n\t\tif (this.setPropertyValue(\"panBehavior\", value)) {\r\n\t\t\tlet seriesContainer = this.seriesContainer;\r\n\t\t\tthis.panSprite.draggable = false;\r\n\t\t\tseriesContainer.draggable = false;\r\n\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase \"move\":\r\n\t\t\t\t\tseriesContainer.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.panSprite.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns If the map should be centered when zooming out.\r\n\t */\r\n\tpublic get centerMapOnZoomOut(): boolean {\r\n\t\treturn this.getPropertyValue(\"centerMapOnZoomOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tpublic set centerMapOnZoomOut(value: boolean) {\r\n\t\tthis.setPropertyValue(\"centerMapOnZoomOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Behavior\r\n\t */\r\n\tpublic get panBehavior(): \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\" {\r\n\t\treturn this.getPropertyValue(\"panBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Projection to use for the map.\r\n\t *\r\n\t * Available projections:\r\n\t * * Albers\r\n\t * * AlbersUSA\r\n\t * * AzimuthalEqualArea\r\n\t * * Eckert6\r\n\t * * EqualEarth\r\n\t * * Mercator\r\n\t * * Miller\r\n\t * * NaturalEarth\r\n\t * * Orthographic\r\n\t * * Stereographic\r\n\t *\r\n\t * ```TypeScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"projection\": \"Mercator\"\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Setting_projection} More about projections\r\n\t * @param projection  Projection\r\n\t */\r\n\tpublic set projection(projection: Projection) {\r\n\t\tif (this.setPropertyValue(\"projection\", projection)) {\r\n\t\t\tthis.invalidateProjection();\r\n\r\n\t\t\tprojection.chart = this;\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tthis._backgroundSeries.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.events.once(\"validated\", () => {\r\n\t\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Projection\r\n\t */\r\n\tpublic get projection(): Projection {\r\n\t\treturn this.getPropertyValue(\"projection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates the longitudes and latitudes of the most distant points from\r\n\t * the center in all four directions: West, East, North, and South.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\r\n\t\tlet east: number;\r\n\t\tlet north: number;\r\n\t\tlet west: number;\r\n\t\tlet south: number;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = series.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = series.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = series.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = series.east;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet features: any[] = [];\r\n\t\tlet foundGraticule = false;\r\n\t\t// if we gave graticule, get features of these series only for faster fitSize\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series instanceof GraticuleSeries && !series.fitExtent) {\r\n\t\t\t\tfeatures = series.getFeatures();\r\n\t\t\t\tfoundGraticule = true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!foundGraticule) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeatures = features.concat(series.getFeatures());\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet w = $math.max(50, this.innerWidth);\r\n\t\tlet h = $math.max(50, this.innerHeight);\r\n\r\n\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\tif (features.length > 0 && d3Projection && (this.east != east || this.west != west || this.north != north || this.south != south)) {\r\n\t\t\tthis.east = east;\r\n\t\t\tthis.west = west;\r\n\t\t\tthis.north = north;\r\n\t\t\tthis.south = south;\r\n\t\t\tif (d3Projection.rotate) {\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\t\t\t\tlet deltaLong = rotation[0];\r\n\t\t\t\tlet deltaLat = rotation[1];\r\n\t\t\t\tlet deltaGamma = rotation[2];\r\n\r\n\t\t\t\tthis.deltaLongitude = deltaLong;\r\n\t\t\t\tthis.deltaLatitude = deltaLat;\r\n\t\t\t\tthis.deltaGamma = deltaGamma;\r\n\t\t\t}\r\n\r\n\t\t\tlet geoJSON = { \"type\": \"FeatureCollection\", features: features };\r\n\r\n\t\t\tlet initialScale = d3Projection.scale();\r\n\r\n\t\t\td3Projection.fitSize([w, h], <any>geoJSON);\r\n\r\n\t\t\tif (d3Projection.scale() != initialScale) {\r\n\t\t\t\tthis.invalidateDataUsers();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series instanceof GraticuleSeries) {\r\n\t\t\t\t\tseries.invalidateData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tlet polygon = this._backgroundSeries.mapPolygons.getIndex(0);\r\n\t\t\t\tif (polygon) {\r\n\t\t\t\t\tpolygon.multiPolygon = $mapUtils.getBackground(this.north, this.east, this.south, this.west);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._fitWidth = w;\r\n\t\t\tthis._fitHeight = h;\r\n\t\t}\r\n\r\n\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)calculates a ratio which should be used to scale the actual map so\r\n\t * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes\r\n\t * @ignore\r\n\t */\r\n\tprotected updateScaleRatio(): void {\r\n\t\tlet scaleRatio: number;\r\n\r\n\t\tthis.updateCenterGeoPoint();\r\n\r\n\t\tlet hScale: number = this.innerWidth / this.seriesWidth;\r\n\t\tlet vScale: number = this.innerHeight / this.seriesHeight;\r\n\r\n\t\tscaleRatio = $math.min(hScale, vScale);\r\n\r\n\t\tif ($type.isNaN(scaleRatio) || scaleRatio == Infinity) {\r\n\t\t\tscaleRatio = 1;\r\n\t\t}\r\n\r\n\t\tif (scaleRatio != this.scaleRatio) {\r\n\t\t\tthis.scaleRatio = scaleRatio;\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.scale = scaleRatio;\r\n\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t});\r\n\r\n\t\t\tthis.backgroundSeries.scale = scaleRatio;\r\n\r\n\t\t\tthis.dispatch(\"scaleratiochanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point within map container to geographical (lat/long)\r\n\t * coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic svgPointToGeo(point: IPoint): IGeoPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = $utils.svgPointToSprite(point, series);\r\n\t\t\treturn this.seriesPointToGeo(seriesPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within map's\r\n\t * container.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSVG(point: IGeoPoint): IPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = this.geoPointToSeries(point);\r\n\t\t\treturn $utils.spritePointToSvg(seriesPoint, series);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point (X/Y) within actual objects of the map to geographical\r\n\t * (lat/long) coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic seriesPointToGeo(point: IPoint): IGeoPoint {\r\n\t\treturn this.projection.invert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within\r\n\t * actual elements/objects of the maps.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSeries(point: IGeoPoint): IPoint {\r\n\t\treturn this.projection.convert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The Map supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\r\n\t\t\tif (this.reverseGeodata) {\r\n\t\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t\t}\r\n\t\t\tthis.invalidateData();\r\n\r\n\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\tfor (let i = dataUser.data.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (dataUser.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\t\tdataUser.data.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdataUser.disposeData();\r\n\t\t\t\tdataUser.invalidateData();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether GeoJSON geodata supplied to the chart uses\r\n\t * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon\r\n\t * coordinates.\r\n\t *\r\n\t * `MapChart` supports only ESRI standard, so if your custom maps appears\r\n\t * garbled, try setting `reverseGeodata = true`.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.10.11\r\n\t * @param  value  Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic set reverseGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"reverseGeodata\", value) && this._geodata) {\r\n\t\t\tthis.processReverseGeodata(this._geodata);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Reverse the order of geodata coordinates?\r\n\t */\r\n\tpublic get reverseGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"reverseGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Reverses the order of polygons on a GeoJSON data.\r\n\t *\r\n\t * @since 4.10.11\r\n\t * @param  geodata  Source geodata\r\n\t */\r\n\tpublic processReverseGeodata(geodata: any): void {\r\n\t\tfor (let i = 0; i < geodata.features.length; i++) {\r\n\t\t\tlet feature = geodata.features[i];\r\n\t\t\tfor (let x = 0; x < feature.geometry.coordinates.length; x++) {\r\n\t\t\t\tif (feature.geometry.type == \"MultiPolygon\") {\r\n\t\t\t\t\tfor (let y = 0; y < feature.geometry.coordinates[x].length; y++) {\r\n\t\t\t\t\t\tfeature.geometry.coordinates[x][y].reverse()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeature.geometry.coordinates[x].reverse()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to particular zoom level and centers on a latitude/longitude\r\n\t * coordinate.\r\n\t *\r\n\t * @param point      Center coordinate\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToGeoPoint(point: IGeoPoint, zoomLevel: number, center?: boolean, duration?: number, mapObject?: boolean): Animation {\r\n\r\n\t\tif (!point) {\r\n\t\t\tlet hasData = false;\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.dataItems.length > 0) {\r\n\t\t\t\t\thasData = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (hasData) {\r\n\t\t\t\tpoint = this.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!point || !$type.isNumber(point.longitude) || !$type.isNumber(point.latitude)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._zoomGeoPointReal = point;\r\n\r\n\t\tzoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n\r\n\t\tlet seriesPoint: IPoint = this.projection.convert(point);\r\n\t\tif (seriesPoint) {\r\n\r\n\t\t\tlet svgPoint: IPoint = this.geoPointToSVG(point);\r\n\r\n\t\t\tlet mapPoint = $utils.svgPointToSprite(svgPoint, this);\r\n\r\n\t\t\tif (center) {\r\n\t\t\t\tmapPoint = {\r\n\t\t\t\t\tx: this.innerWidth / 2,\r\n\t\t\t\t\ty: this.innerHeight / 2\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.zoomDuration;\r\n\t\t\t}\r\n\r\n\t\t\tlet x = mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio;\r\n\t\t\tlet y = mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio;\r\n\r\n\r\n\t\t\tif (!mapObject && zoomLevel < this.zoomLevel && this.centerMapOnZoomOut && zoomLevel < 1.5) {\r\n\t\t\t\tx = this.innerWidth / 2 - (this.seriesMaxLeft + (this.seriesMaxRight - this.seriesMaxLeft) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t\ty = this.innerHeight / 2 - (this.seriesMaxTop + (this.seriesMaxBottom - this.seriesMaxTop) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t}\r\n\r\n\t\t\tthis._mapAnimation = this.seriesContainer.animate(\r\n\t\t\t\t[{\r\n\t\t\t\t\tproperty: \"scale\",\r\n\t\t\t\t\tto: zoomLevel\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"x\", from: this.seriesContainer.pixelX,\r\n\t\t\t\t\tto: x\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"y\", from: this.seriesContainer.pixelY,\r\n\t\t\t\t\tto: y\r\n\t\t\t\t}], duration, this.zoomEasing);\r\n\r\n\t\t\tthis._disposers.push(this._mapAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t\t\t}))\r\n\r\n\r\n\t\t\tthis.seriesContainer.validatePosition();\r\n\r\n\t\t\treturn this._mapAnimation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular map object.\r\n\t *\r\n\t * @param mapObject  Target map object\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToMapObject(mapObject: MapObject, zoomLevel?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif (center == undefined) {\r\n\t\t\tcenter = true;\r\n\t\t}\r\n\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tif (mapObject instanceof MapImage) {\r\n\t\t\tif ($type.isNaN(zoomLevel)) {\r\n\t\t\t\tzoomLevel = 5;\r\n\t\t\t}\r\n\t\t\treturn this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration, true);\r\n\t\t}\r\n\r\n\t\tlet dataItem = mapObject.dataItem;\r\n\r\n\t\tif (dataItem && $type.isNumber(dataItem.zoomLevel)) {\r\n\t\t\tzoomLevel = dataItem.zoomLevel;\r\n\t\t}\r\n\r\n\r\n\t\tif (mapObject instanceof MapPolygon) {\r\n\t\t\tlet dataItem = mapObject.dataItem;\r\n\t\t\tlet bbox = mapObject.polygon.bbox;\r\n\t\t\tif (bbox.width == 0 || bbox.height == 0) {\r\n\t\t\t\tbbox = mapObject.polygon.group.getBBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(zoomLevel)) {\r\n\t\t\t\tzoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet geoPoint: IGeoPoint;\r\n\r\n\t\t\tif (dataItem && $type.hasValue(dataItem.zoomGeoPoint)) {\r\n\t\t\t\tgeoPoint = dataItem.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is more accurate\r\n\t\t\t\tlet polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\r\n\t\t\t\tlet seriesPoint = $utils.spritePointToSprite(polygonPoint, mapObject.polygon, mapObject.series);\r\n\r\n\t\t\t\tgeoPoint = this.seriesPointToGeo(seriesPoint);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular viewport.\r\n\t *\r\n\t * The `north`, `east`, `south`, and `west` define boundaries of the\r\n\t * imaginary viewort we want to zoom the map to.\r\n\t *\r\n\t * `level` is not actual zoom level. The map will determine the zoom level\r\n\t * required to accommodated such zoom, and will adjust it by `level` if set.\r\n\t *\r\n\t * @param north     Latitude of the North-most boundary\r\n\t * @param east      Longitude of the East-most boundary\r\n\t * @param south     Latitude of the South-most boundary\r\n\t * @param west      Longitude of the West-most boundary\r\n\t * @param level     Adjust zoom level\r\n\t * @param center    Center on the given coordinate?\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToRectangle(north: number, east: number, south: number, west: number, level?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif ($type.isNaN(level)) {\r\n\t\t\tlevel = 1;\r\n\t\t}\r\n\r\n\t\tlet w = $math.min(west, east);\r\n\t\tlet e = $math.max(west, east);\r\n\r\n\t\twest = w;\r\n\t\teast = e;\r\n\r\n\t\tlet splitLongitude = $math.normalizeAngle(180 - this.deltaLongitude);\r\n\t\tif (splitLongitude > 180) {\r\n\t\t\tsplitLongitude -= 360;\r\n\t\t}\r\n\r\n\t\tlet newLong = west + (east - west) / 2;\r\n\t\tlet d = (west - east);\r\n\r\n\t\tif (west < splitLongitude && east > splitLongitude) {\r\n\t\t\tnewLong += 180;\r\n\t\t\td = $math.normalizeAngle(east - west - 360);\r\n\t\t}\r\n\r\n\t\tlet zoomLevel = level * Math.min((this.south - this.north) / (south - north), Math.abs((this.west - this.east) / d));\r\n\r\n\t\treturn this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: newLong }, zoomLevel, center, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms in the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomIn(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel * step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomOut(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel / step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Pans the maps using relative coordinates. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   x: 0.1,\r\n\t *   y: -0.1\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will move the map by 10% to the right, and by 10% upwards.\r\n\t *\r\n\t * @param shift     Vertical and horizontal shift\r\n\t * @param duration  Pan animation duration (ms)\r\n\t */\r\n\tpublic pan(shift: IPoint, duration?: number): void {\r\n\t\tlet point = this.geoPointToSVG(this.zoomGeoPoint);\r\n\t\tpoint.x += this.pixelWidth * shift.x;\r\n\t\tpoint.y += this.pixelHeight * shift.y;\r\n\t\tthis.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Current lat/long coordinates for the center of the viewport. (default\r\n\t * zoom reference point)\r\n\t *\r\n\t * @readonly\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\tconst point = $utils.spritePointToSvg({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);\r\n\t\treturn this.svgPointToGeo(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Current zoom level.\r\n\t *\r\n\t * @readonly\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.seriesContainer.scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.seriesContainer.scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches events after some map transformation, like pan or zoom.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMapTransform(): void {\r\n\t\tif (this.zoomLevel != this._prevZoomLevel) {\r\n\t\t\tthis.dispatch(\"zoomlevelchanged\");\r\n\t\t\tthis._prevZoomLevel = this.zoomLevel;\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"Zoom level changed to %1\", this.language.locale, $type.castString(this.zoomLevel)));\r\n\t\t}\r\n\r\n\t\tif (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {\r\n\t\t\tthis.dispatch(\"mappositionchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[SmallMap]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a small map\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"smallMap\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param smallMap  Small map\r\n\t */\r\n\tpublic set smallMap(smallMap: SmallMap) {\r\n\t\tif (this._smallMap) {\r\n\t\t\tthis.removeDispose(this._smallMap);\r\n\t\t}\r\n\t\tthis._smallMap = smallMap;\r\n\t\tthis._smallMap.chart = this;\r\n\t\tsmallMap.parent = this.chartContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Small map\r\n\t */\r\n\tpublic get smallMap(): SmallMap {\r\n\t\tif (!this._smallMap) {\r\n\t\t\tlet smallMap: SmallMap = new SmallMap();\r\n\t\t\tthis.smallMap = smallMap;\r\n\t\t}\r\n\t\treturn this._smallMap;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[ZoomControl]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a zoom control\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"zoomControl\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param zoomControl  Zoom control\r\n\t */\r\n\tpublic set zoomControl(zoomControl: ZoomControl) {\r\n\t\tif (this._zoomControl) {\r\n\t\t\tthis.removeDispose(this._zoomControl);\r\n\t\t}\r\n\t\tthis._zoomControl = zoomControl;\r\n\t\tzoomControl.chart = this;\r\n\t\tzoomControl.parent = this.chartContainer;\r\n\t\tzoomControl.plusButton.exportable = false;\r\n\t\tzoomControl.minusButton.exportable = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom control\r\n\t */\r\n\tpublic get zoomControl(): ZoomControl {\r\n\t\treturn this._zoomControl;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a map series of appropriate type.\r\n\t *\r\n\t * @return Map series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new MapSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLongitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLongitude\", $geo.wrapAngleTo180(value))) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLongitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLongitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to 90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLatitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLatitude\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLatitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLatitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around \"Z\" axis. This is the axis that pierces\r\n\t * the globe directly from the viewer's point of view.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaGamma(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaGamma\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaGamma(): number {\r\n\t\treturn this.getPropertyValue(\"deltaGamma\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected rotateMap() {\r\n\t\tif (this.projection.d3Projection) {\r\n\t\t\tif (this.projection.d3Projection.rotate) {\r\n\t\t\t\tthis.projection.d3Projection.rotate([this.deltaLongitude, this.deltaLatitude, this.deltaGamma]);\r\n\t\t\t\tthis.invalidateProjection();\r\n\t\t\t\t//this.updateExtremes(); // removal fixes #3292\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value  Max pan out\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max pan out\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * The geographical point to center map on when it is first loaded.\r\n\t *\r\n\t * The map will also be centered to this point when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home geo point\r\n\t */\r\n\tpublic set homeGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setPropertyValue(\"homeGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home geo point\r\n\t */\r\n\tpublic get homeGeoPoint(): IGeoPoint {\r\n\t\treturn this.getPropertyValue(\"homeGeoPoint\");\r\n\t}\r\n\r\n\t/**\r\n\t * The zoom level to put the map in when it is first loaded.\r\n\t *\r\n\t * The map will also be set to this zoom level when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home zoom level\r\n\t */\r\n\tpublic set homeZoomLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"homeZoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home zoom level\r\n\t */\r\n\tpublic get homeZoomLevel(): number {\r\n\t\treturn this.getPropertyValue(\"homeZoomLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Zoom factor\r\n\t */\r\n\tpublic set zoomStep(value: number) {\r\n\t\tthis.setPropertyValue(\"zoomStep\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom factor\r\n\t */\r\n\tpublic get zoomStep(): number {\r\n\t\treturn this.getPropertyValue(\"zoomStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates projection, causing all series to be redrawn.\r\n\t *\r\n\t * Call this after changing projection or its settings.\r\n\t */\r\n\tpublic invalidateProjection() {\r\n\t\tthis.east = undefined;\r\n\t\tthis.invalidateDataUsers();\r\n\t\tthis.updateCenterGeoPoint();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\");\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tlet dataSource = this.getDataSource(\"geodata\");\r\n\t\t\tdataSource.events.on(\"parseended\", () => {\r\n\t\t\t\tthis.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthis.raiseCriticalError(Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\"), true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Instantiate projection\r\n\t\tif ($type.hasValue(config[\"projection\"]) && $type.isString(config[\"projection\"])) {\r\n\t\t\tconfig[\"projection\"] = this.createClassInstance(config[\"projection\"]);\r\n\t\t}\r\n\r\n\t\t// Set up small map\r\n\t\tif ($type.hasValue(config.smallMap) && !$type.hasValue(config.smallMap.type)) {\r\n\t\t\tconfig.smallMap.type = \"SmallMap\";\r\n\t\t}\r\n\r\n\t\t// Set up zoom control\r\n\t\tif ($type.hasValue(config.zoomControl) && !$type.hasValue(config.zoomControl.type)) {\r\n\t\t\tconfig.zoomControl.type = \"ZoomControl\";\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tlet series = event.newValue;\r\n\t\tseries.scale = this.scaleRatio;\r\n\t\tseries.events.on(\"validated\", this.updateCenterGeoPoint, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t   * This function is used to sort element's JSON config properties, so that\r\n\t   * some properties that absolutely need to be processed last, can be put at\r\n\t   * the end.\r\n\t   *\r\n\t   * @ignore Exclude from docs\r\n\t   * @param a  Element 1\r\n\t   * @param b  Element 2\r\n\t   * @return Sorting number\r\n\t   */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"smallMap\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"smallMap\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"projection\" || field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Geo point of map center\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic get centerGeoPoint(): IGeoPoint {\r\n\t\treturn this._centerGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the map to its original position and zoom level.\r\n\t *\r\n\t * Use the only parameter to set number of milliseconds for the zoom\r\n\t * animation to play.\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t */\r\n\tpublic goHome(duration?: number) {\r\n\t\tlet homeGeoPoint = this.homeGeoPoint;\r\n\t\tif (!homeGeoPoint) {\r\n\t\t\thomeGeoPoint = this.centerGeoPoint;\r\n\t\t}\r\n\t\tif (homeGeoPoint) {\r\n\t\t\tthis.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t *\r\n\t * @ignore\r\n\t * @param   paper  Paper\r\n\t * @return         true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tif (this.svgContainer) {\r\n\t\t\tthis.svgContainer.hideOverflow = true;\r\n\t\t}\r\n\r\n\t\treturn super.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Background series will create polygons that will fill all the map area\r\n\t * with some color (or other fill).\r\n\t *\r\n\t * This might be useful with non-rectangular projections, like Orthographic,\r\n\t * Albers, etc.\r\n\t *\r\n\t * To change background color/opacity access polygon template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"backgroundSeries\": {\r\n\t *     \"mapPolygons\": {\r\n\t *       \"polygon\": {\r\n\t *         \"fill\": \"#fff\",\r\n\t *         \"fillOpacity\": 0.1\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic get backgroundSeries(): MapPolygonSeries {\r\n\t\tif (!this._backgroundSeries) {\r\n\t\t\tlet backgroundSeries = new MapPolygonSeries();\r\n\t\t\tbackgroundSeries.parent = this.seriesContainer;\r\n\t\t\tbackgroundSeries.chart = this;\r\n\r\n\t\t\tbackgroundSeries.hiddenInLegend = true;\r\n\t\t\tbackgroundSeries.mapPolygons.template.focusable = false;\r\n\t\t\tbackgroundSeries.addDisposer(new Disposer(() => {\r\n\t\t\t\tthis._backgroundSeries = undefined;\r\n\t\t\t}))\r\n\t\t\tthis._disposers.push(backgroundSeries);\r\n\r\n\t\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\t\tlet color = interfaceColors.getFor(\"background\");\r\n\r\n\t\t\tlet polygonTemplate = backgroundSeries.mapPolygons.template.polygon;\r\n\t\t\tpolygonTemplate.stroke = color;\r\n\t\t\tpolygonTemplate.fill = color;\r\n\t\t\tpolygonTemplate.fillOpacity = 0;\r\n\t\t\tpolygonTemplate.strokeOpacity = 0;\r\n\t\t\t//polygonTemplate.focusable = false;\r\n\r\n\t\t\tbackgroundSeries.mapPolygons.create();\r\n\r\n\t\t\tthis._backgroundSeries = backgroundSeries;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundSeries;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\t// setup other containers\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = false;\r\n\t\tthis.panSprite.interactions.isTouchProtected = false;\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"zoomEasing\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Has license?\r\n\t */\r\n\tpublic hasLicense(): boolean {\r\n\t\tif (options.commercialLicense) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!super.hasLicense()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0; i < options.licenses.length; i++) {\r\n\t\t\tif (options.licenses[i].match(/^MP.{5,}/i)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapChart\"] = MapChart;\r\n","/**\r\n * Map spline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { MapSplineSeriesDataItem, MapSplineSeries } from \"./MapSplineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapSpline]].\r\n */\r\nexport interface IMapSplineProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSpline]].\r\n */\r\nexport interface IMapSplineEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSpline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineAdapters extends IMapLineAdapters, IMapSplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a spline on the map.\r\n *\r\n * @see {@link IMapSplineEvents} for a list of available events\r\n * @see {@link IMapSplineAdapters} for a list of available Adapters\r\n */\r\nexport class MapSpline extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineEvents;\r\n\r\n\t/**\r\n\t * A visual element for the spline.\r\n\t */\r\n\tpublic line: Polyspline;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSpline\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyspline();\r\n\t\tthis.line.tensionX = 0.8;\r\n\t\tthis.line.tensionY = 0.8;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ShortestDistance = true is not supported by MapSpline, only MapLine does support it\r\n\t * @default false\r\n\t * @param value\r\n\t * @todo: review description\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSpline\"] = MapSpline;\r\n","/**\r\n * Map arched line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyarc } from \"../../core/elements/Polyarc\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { MapArcSeries } from \"./MapArcSeries\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapArc]].\r\n */\r\nexport interface IMapArcProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArc]].\r\n */\r\nexport interface IMapArcEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcAdapters extends IMapLineAdapters, IMapArcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw an arched line on the map.\r\n *\r\n * @see {@link IMapArcEvents} for a list of available events\r\n * @see {@link IMapArcAdapters} for a list of available Adapters\r\n */\r\nexport class MapArc extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyarc;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArc\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyarc();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * `shortestDistance = true` is not supported by `MapArc`.\r\n\t *\r\n\t * Only [[MapLine]] supports it.\r\n\t *\r\n\t * @default false\r\n\t * @param value\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArc\"] = MapArc;\r\n","/**\r\n * Map spline series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapSpline } from \"./MapSpline\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSplineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSplineSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapSpline]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSplineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineSeriesAdapters extends IMapLineSeriesAdapters, IMapSplineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map spline elements.\r\n *\r\n * @see {@link IMapSplineSeriesEvents} for a list of available Events\r\n * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSplineSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSplineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSplineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapSpline();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSplineSeries\"] = MapSplineSeries;\r\nregistry.registeredClasses[\"MapSplineSeriesDataItem\"] = MapSplineSeriesDataItem;\r\n","/**\r\n * Map arc series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapArc } from \"./MapArc\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapArcSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapArcSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapArc]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArcSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcSeriesAdapters extends IMapLineSeriesAdapters, IMapArcSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of arc elements. (curved lines)\r\n *\r\n * @see {@link IMapArcSeriesEvents} for a list of available Events\r\n * @see {@link IMapArcSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapArcSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapArcSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapArcSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapArcSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapArc();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArcSeries\"] = MapArcSeries;\r\nregistry.registeredClasses[\"MapArcSeriesDataItem\"] = MapArcSeriesDataItem;\r\n","/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomControl]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomControlAdapters extends IContainerAdapters, IZoomControlProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomControlProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomControlAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomControlEvents;\r\n\r\n\t/**\r\n\t * Zoom in button element.\r\n\t */\r\n\tpublic plusButton: Button;\r\n\r\n\t/**\r\n\t * Zoom out button element.\r\n\t */\r\n\tpublic minusButton: Button;\r\n\r\n\t/**\r\n\t * A zoom slider background element.\r\n\t */\r\n\tpublic slider: Container;\r\n\r\n\t/**\r\n\t * A zoom slider thumb element.\r\n\t */\r\n\tpublic thumb: Button;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A type to use for the background element for zoom control.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ZoomControl\";\r\n\r\n\t\tthis.align = \"right\";\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tthis.layout = \"vertical\";\r\n\t\tthis.padding(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet plusButton: Button = this.createChild(Button);\r\n\t\tplusButton.shouldClone = false;\r\n\t\tplusButton.label.text = \"+\";\r\n\t\t//plusButton.fontFamily = \"Verdana\";\r\n\t\tthis.plusButton = plusButton;\r\n\r\n\t\tlet slider: Container = this.createChild(Container);\r\n\t\tslider.shouldClone = false;\r\n\t\tslider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tslider.background.fillOpacity = 0.05;\r\n\t\tslider.background.events.on(\"hit\", this.handleBackgroundClick, this, false);\r\n\t\tslider.events.on(\"sizechanged\", this.updateThumbSize, this, false);\r\n\t\tthis.slider = slider;\r\n\r\n\t\tlet thumb: Button = slider.createChild(Button);\r\n\t\tthumb.shouldClone = false;\r\n\t\tthumb.padding(0, 0, 0, 0);\r\n\t\tthumb.draggable = true;\r\n\t\tthumb.events.on(\"drag\", this.handleThumbDrag, this, false);\r\n\t\tthis.thumb = thumb;\r\n\r\n\t\tlet minusButton: Button = this.createChild(Button);\r\n\t\tminusButton.shouldClone = false;\r\n\t\tminusButton.label.text = \"-\";\r\n\t\t//minusButton.fontFamily = \"Verdana\";\r\n\t\tthis.minusButton = minusButton;\r\n\r\n\t\t// Set roles\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\r\n\t\t// Set reader text\r\n\t\tthis.thumb.readerTitle = this.language.translate(\"Use arrow keys to zoom in and out\");\r\n\t\tthis.minusButton.readerTitle = this.language.translate(\"Press ENTER to zoom in\");\r\n\t\tthis.plusButton.readerTitle = this.language.translate(\"Press ENTER to zoom out\");\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property == \"layout\") {\r\n\t\t\t\tthis.fixLayout();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected fixLayout() {\r\n\r\n\t\tlet plusButton = this.plusButton;\r\n\t\tlet minusButton = this.minusButton;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tlet slider = this.slider;\r\n\r\n\t\tplusButton.x = undefined;\r\n\t\tplusButton.y = undefined;\r\n\r\n\t\tminusButton.x = undefined;\r\n\t\tminusButton.y = undefined;\r\n\r\n\t\tthumb.x = undefined;\r\n\t\tthumb.y = undefined;\r\n\r\n\t\tslider.x = undefined;\r\n\t\tslider.y = undefined;\r\n\r\n\t\tplusButton.padding(6, 10, 6, 10);\r\n\t\tminusButton.padding(6, 10, 6, 10);\r\n\r\n\t\tminusButton.label.align = \"center\";\r\n\t\tminusButton.label.valign = \"middle\";\r\n\r\n\t\tplusButton.label.align = \"center\";\r\n\t\tplusButton.label.valign = \"middle\";\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tthis.width = 40;\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tminusButton.width = percent(100);\r\n\t\t\tminusButton.height = undefined;\r\n\r\n\t\t\tthumb.width = percent(100);\r\n\t\t\tthumb.height = undefined;\r\n\r\n\t\t\tplusButton.width = percent(100);\r\n\t\t\tplusButton.height = undefined;\r\n\r\n\t\t\tslider.width = percent(100);\r\n\t\t\tminusButton.marginTop = 1;\r\n\t\t\tplusButton.marginBottom = 2;\r\n\r\n\t\t\tslider.height = 0;\r\n\r\n\t\t\tminusButton.toFront();\r\n\t\t\tplusButton.toBack();\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.maxX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\r\n\r\n\t\t}\r\n\t\telse if (this.layout == \"horizontal\") {\r\n\t\t\tthis.height = 40;\r\n\t\t\tthis.width = undefined;\r\n\r\n\t\t\tminusButton.height = percent(100);\r\n\t\t\tminusButton.width = undefined;\r\n\r\n\t\t\tplusButton.height = percent(100);\r\n\t\t\tplusButton.width = undefined;\r\n\r\n\t\t\tthumb.height = percent(100);\r\n\t\t\tthumb.width = undefined;\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\t\t\tthumb.maxY = 0;\r\n\r\n\t\t\tslider.height = percent(100);\r\n\t\t\tslider.width = 0;\r\n\r\n\t\t\tminusButton.toBack();\r\n\t\t\tplusButton.toFront();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles zoom operation after clicking on the slider background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBackgroundClick(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\tlet sprite: Sprite = event.target;\r\n\t\tlet y: number = event.spritePoint.y;\r\n\t\tlet chart: MapChart = this.chart;\r\n\r\n\t\tlet maxPower: number = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n\t\tlet minPower: number = Math.log(chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tlet power: number = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n\t\tlet zoomLevel: number = Math.pow(2, power);\r\n\t\tchart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n\t}\r\n\r\n\t/**\r\n\t * A main chart/map that this zoom control is for.\r\n\t *\r\n\t * @param chart  Map/chart\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\tchart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false),\r\n\t\t\tchart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false),\r\n\r\n\t\t\tthis.minusButton.events.on(\"hit\", () => { chart.zoomOut(chart.zoomGeoPoint) }, chart, false),\r\n\r\n\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\t\t// ENTER is now handled globally\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"plus\")) {\r\n\t\t\t\t\t\tchart.zoomIn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (keyboard.isKey(ev.event, \"minus\")) {\r\n\t\t\t\t\t\tchart.zoomOut();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, chart),\r\n\t\t\tthis.plusButton.events.on(\"hit\", () => { chart.zoomIn(chart.zoomGeoPoint) }, chart, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Map/chart\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slider's thumb size based on the available zoom space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumbSize(): void {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet slider: Container = this.slider;\r\n\t\t\tlet thumb: Button = this.thumb;\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n\r\n\t\t\t\tthumb.height = slider.pixelHeight / this.stepCount;\r\n\t\t\t\tthumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n\r\n\t\t\t\tif (thumb.pixelHeight <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n\t\t\t\tthumb.width = slider.pixelWidth / this.stepCount;\r\n\t\t\t\tthumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n\r\n\t\t\t\tif (thumb.pixelWidth <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates thumb according to current zoom position from map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumb(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\r\n\t\tif (!thumb.isDown) {\r\n\t\t\tlet step: number = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\r\n\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.x = slider.pixelWidth * step / this.stepCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the actual map when slider position changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbDrag(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\t\tlet step: number;\r\n\r\n\t\tlet minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tstep = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstep = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n\t\t}\r\n\t\tstep = minStep + step;\r\n\r\n\t\tlet zoomLevel: number = Math.pow(2, step);\r\n\t\tchart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the step countfor the slider grid according to map's min and max\r\n\t * zoom level settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Step count\r\n\t */\r\n\tpublic get stepCount(): number {\r\n\t\treturn Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for slider control.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Mercator projection.\r\n */\r\nexport class Mercator extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoMercator();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Mercator\"] = Mercator;\r\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math.js\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n","/**\n * Functionality for Miller projection\n *\n * The function(s) below are from D3.js library (https://d3js.org/)\n *\n * ```\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from this\n *    software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ```\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Projection } from \"./Projection\";\nimport { registry } from \"../../../core/Registry\";\n// @ts-ignore\nimport * as d3geoprojection from \"d3-geo-projection\";\n\n\n/**\n * Miller projection.\n */\nexport class Miller extends Projection {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.d3Projection = d3geoprojection.geoMiller();\n\t}\n}\n\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\nregistry.registeredClasses[\"Miller\"] = Miller;\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n","/**\r\n * Functionality for Eckert6 projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\n// @ts-ignore\r\nimport * as d3geoprojection from \"d3-geo-projection\";\r\n\r\n/**\r\n * Eckert6 projection.\r\n */\r\nexport class Eckert6 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geoprojection.geoEckert6();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Eckert6\"] = Eckert6;\r\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Orthographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoOrthographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Orthographic\"] = Orthographic;\r\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Stereographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoStereographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Stereographic\"] = Stereographic;\r\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Albers extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbers();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Albers\"] = Albers;\r\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AlbersUsa extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbersUsa();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AlbersUsa\"] = AlbersUsa;\r\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class NaturalEarth1 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoNaturalEarth1();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NaturalEarth1\"] = NaturalEarth1;\r\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AzimuthalEqualArea extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAzimuthalEqualArea();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AzimuthalEqualArea\"] = AzimuthalEqualArea;\r\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class EqualEarth extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoEqualEarth();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"EqualEarth\"] = EqualEarth;\r\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","/**\r\n * Defines WordCloud series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../../charts/series/Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { WordCloud } from \"./WordCloud\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $dom from \"../../core/utils/DOM\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { AMEvent } from \"../../core/utils/EventDispatcher\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[WordCloudSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class WordCloudSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * A reference to a word label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: WordCloudSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloudSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t * @param  delay     Delay hiding (ms)\r\n\t * @param  toValue   Target value for animation\r\n\t * @param  fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, 0, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tif (!noChangeValues) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setWorkingValue(\"value\", 0, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * The word.\r\n\t *\r\n\t * @param  value  Word\r\n\t */\r\n\tpublic set word(value: string) {\r\n\t\tthis.setProperty(\"word\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Word\r\n\t */\r\n\tpublic get word(): string {\r\n\t\treturn this.properties.word;\r\n\t}\r\n\r\n\t/**\r\n\t * A [Label] element, related to this data item (word).\r\n\t *\r\n\t * @readonly\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): this[\"_label\"] {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.component.labelsContainer;\r\n\t\t\tlabel.isMeasured = false;\r\n\t\t\tlabel.x = percent(50);\r\n\t\t\tlabel.y = percent(50);\r\n\t\t\tlabel.fontSize = 0;\r\n\r\n\t\t\tif (this.component.colors) {\r\n\t\t\t\tlabel.fill = this.component.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tlabel.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds word.\r\n\t */\r\n\tword?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A color set to be used for words.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Source text from which words are extracted.\r\n\t */\r\n\ttext?: string;\r\n\r\n\t/**\r\n\t * Absolute or relative font size for the smallest words.\r\n\t */\r\n\tminFontSize?: number | Percent;\r\n\r\n\t/**\r\n\t * Absolute or relative font size for the biggest words.\r\n\t */\r\n\tmaxFontSize?: number | Percent;\r\n\r\n\t/**\r\n\t * Minimum occurances for a word to be included into cloud.\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum number of words to show.\r\n\t */\r\n\tmaxCount?: number;\r\n\r\n\t/**\r\n\t * Array of words  exclude from cloud.\r\n\t */\r\n\texcludeWords?: string[];\r\n\r\n\t/**\r\n\t * Randomness of word placement (0-1).\r\n\t */\r\n\trandomness?: number;\r\n\r\n\t/**\r\n\t * Minimum number of characters for a word to be included in the cloud.\r\n\t */\r\n\tminWordLength?: number;\r\n\r\n\t/**\r\n\t * An array of possible rotation angles for words.\r\n\t */\r\n\tangles?: number[];\r\n\r\n\t/**\r\n\t * If word's relative height is bigger than this, it won't be rotated.\r\n\t */\r\n\trotationThreshold?: number;\r\n\r\n\t/**\r\n\t * Step for next word placement.\r\n\t */\r\n\tstep?: number;\r\n\r\n\t/**\r\n\t * Accuracy of overlapping check.\r\n\t */\r\n\taccuracy?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesEvents extends ISeriesEvents {\r\n\r\n\t/**\r\n\t * Invokes when word arranging starts.\r\n\t */\r\n\tarrangestarted: {}\r\n\r\n\t/**\r\n\t * Invoked when progress has been made in arranging the words.\r\n\t */\r\n\tarrangeprogress: {\r\n\r\n\t\t/**\r\n\t\t * Progress\r\n\t\t */\r\n\t\tprogress: number\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when word arranging is finished.\r\n\t */\r\n\tarrangeended: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[WordCloudSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWordCloudSeriesAdapters extends ISeriesAdapters, IWordCloudSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[WordCloudSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IWordCloudSeriesEvents} for a list of available Events\r\n * @see {@link IWordCloudSeriesAdapters} for a list of available Adapters\r\n */\r\nexport class WordCloudSeries extends Series {\r\n\t/**\r\n\t * Defines type of the label elements for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: WordCloud;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IWordCloudSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWordCloudSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWordCloudSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWordCloudSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: WordCloudSeriesDataItem;\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_label\"]>;\r\n\r\n\tprotected _ctx: CanvasRenderingContext2D;\r\n\r\n\tprotected _canvas: HTMLCanvasElement;\r\n\r\n\tprotected _spiral: Sprite;\r\n\r\n\tprotected _points: IPoint[];\r\n\r\n\tprotected _adjustedFont: number = 1;\r\n\r\n\tprotected _processTimeout: IDisposer;\r\n\r\n\tprotected _currentIndex: number;\r\n\r\n\t/**\r\n\t * Holds a Sprite that acts as an intelligent mask for the serries.\r\n\t */\r\n\tprotected _maskSprite: Sprite;\r\n\r\n\t/**\r\n\t * Container label elements are put in.\r\n\t */\r\n\tpublic labelsContainer: Container;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"WordCloudSeries\";\r\n\r\n\t\t// Disabled\r\n\t\t// this.colors = new ColorSet();\r\n\t\t// this.colors.step = 1;\r\n\t\t// this.colors.passOptions = {}; // makes it loop\r\n\r\n\t\tthis.accuracy = 5;\r\n\r\n\t\tthis.isMeasured = true;\r\n\r\n\t\tthis.minFontSize = percent(2);\r\n\t\tthis.maxFontSize = percent(20);\r\n\r\n\t\tthis.excludeWords = [];\r\n\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.angles = [0, 0, 90];\r\n\r\n\t\t//this.maxCount = 100;\r\n\t\tthis.rotationThreshold = 0.7;\r\n\t\tthis.minWordLength = 1;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.step = 15;\r\n\r\n\t\tthis.randomness = 0.2;\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\t// Accessibility\r\n\t\tthis.itemReaderText = \"{word}: {value}\";\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"absolute\";\r\n\t\tcanvas.style.top = \"0px\";\r\n\t\tcanvas.style.left = \"0px\";\r\n\t\tcanvas.style.opacity = \"0.5\";\r\n\t\t//document.body.appendChild(canvas);\r\n\t\tthis._canvas = canvas;\r\n\r\n\t\tthis._ctx = canvas.getContext(\"2d\");\r\n\r\n\t\tthis._maskSprite = this.createChild(Sprite);\r\n\r\n\t\tlet labelsContainer = this.createChild(Container);\r\n\t\tlabelsContainer.shouldClone = false;\r\n\t\tlabelsContainer.isMeasured = false;\r\n\t\tlabelsContainer.layout = \"none\";\r\n\t\tthis.labelsContainer = labelsContainer;\r\n\r\n\t\tthis._spiral = labelsContainer.createChild(Sprite);\r\n\t\tthis._spiral.fillOpacity = 0.1;\r\n\t\tthis._spiral.strokeOpacity = 1;\r\n\t\tthis._spiral.stroke = color(\"#000\");\r\n\r\n\r\n\t\t//this._maskSprite.visible = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\t\tsuper.validateDataRange();\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.label);\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis._currentIndex = 0;\r\n\r\n\t\tthis.dataItems.values.sort(function(a, b) {\r\n\t\t\tif (a.value == b.value) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse if (a.value > b.value) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this._processTimeout) {\r\n\t\t\tthis._processTimeout.dispose();\r\n\t\t}\r\n\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\t\tif (w > 0 && h > 0) {\r\n\r\n\t\t\tlet context = this._ctx;\r\n\r\n\t\t\tthis._canvas.width = w;\r\n\t\t\tthis._canvas.height = h;\r\n\r\n\t\t\tcontext.fillStyle = \"white\";\r\n\t\t\tcontext.fillRect(0, 0, w, h);\r\n\r\n\t\t\tthis._points = $path.spiralPoints(0, 0, w, h, 0, this.step, this.step);\r\n\r\n\t\t\tlet angle = this.labelsContainer.rotation;\r\n\r\n\t\t\tfor (let i = this._points.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet point = this._points[i];\r\n\r\n\t\t\t\tif (point.x < -w / 2 || point.x > w / 2 || point.y < -h / 2 || point.y > h / 2) {\r\n\t\t\t\t\tthis._points.splice(i, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (angle != 0) {\r\n\t\t\t\t\tlet point2 = $utils.spritePointToSprite({ x: point.x + w / 2, y: point.y + h / 2 }, this, this.labelsContainer);\r\n\t\t\t\t\tpoint.x = point2.x;\r\n\t\t\t\t\tpoint.y = point2.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//this._spiral.path = $path.pointsToPath(this._points);\r\n\r\n\r\n\t\t\tlet maskSprite = this._maskSprite;\r\n\r\n\t\t\tif (maskSprite.path) {\r\n\t\t\t\tlet maxWidth = this.maxWidth;\r\n\t\t\t\tlet maxHeight = this.maxHeight;\r\n\r\n\t\t\t\tmaskSprite.isMeasured = true;\r\n\t\t\t\tmaskSprite.validate();\r\n\r\n\t\t\t\tlet pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n\t\t\t\tlet pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n\r\n\t\t\t\tlet scale = $math.min(maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n\r\n\t\t\t\tif (scale == Infinity) {\r\n\t\t\t\t\tscale = 1; // can't return here, won't draw legend properly\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaskSprite.horizontalCenter = \"none\";\r\n\t\t\t\tmaskSprite.verticalCenter = \"none\";\r\n\t\t\t\tmaskSprite.x = 0;\r\n\t\t\t\tmaskSprite.y = 0;\r\n\t\t\t\tmaskSprite.scale = 1;\r\n\r\n\t\t\t\tscale = $math.max(0.001, scale);\r\n\r\n\t\t\t\tmaskSprite.horizontalCenter = \"middle\";\r\n\t\t\t\tmaskSprite.verticalCenter = \"middle\";\r\n\t\t\t\tmaskSprite.x = w / 2;\r\n\t\t\t\tmaskSprite.y = h / 2;\r\n\t\t\t\tmaskSprite.validatePosition();\r\n\r\n\t\t\t\tthis.mask = maskSprite;\r\n\t\t\t\t/*\r\n\t\t\t\tcontext.fillStyle = \"blue\";\r\n\t\t\t\tcontext.fillRect(0, 0, w, h);\r\n\t\t\t\tcontext.fillStyle = \"white\";\r\n\t\t\t\tcontext.scale(scale, scale);\r\n\r\n\t\t\t\tcontext.translate(maskSprite.maxLeft - maxLeft + w / 2 / scale, maskSprite.maxTop - maxTop + h / 2 / scale);\r\n\t\t\t\t//let commandList = this.svgPathToCommands(maskSprite.path);\r\n\t\t\t\t//this.drawSvgPath(context, commandList);\r\n\t\t\t\tlet p = new Path2D(maskSprite.path);\r\n\t\t\t\tcontext.stroke(p);\r\n\t\t\t\tcontext.fill(p);\r\n\t\t\t\tcontext.translate(-maskSprite.maxLeft + maxLeft - w / 2 / scale, -maskSprite.maxTop + maxTop - h / 2 / scale);\r\n\t\t\t\tcontext.scale(1 / scale, 1 / scale);\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tmaskSprite.scale = scale;\r\n\t\t\t}\r\n\t\t\tif (this.events.isEnabled(\"arrangestarted\")) {\r\n\t\t\t\tthis.dispatchImmediately(\"arrangestarted\");\r\n\t\t\t}\r\n\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [processItem description]\r\n\t *\r\n\t * @param   dataItem  Data item\r\n\t */\r\n\tprotected processItem(dataItem: this[\"_dataItem\"]) {\r\n\r\n\t\tif(!dataItem){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet context = this._ctx;\r\n\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\r\n\t\tif ($dom.isHidden(this.htmlContainer)) {\r\n\t\t\tthis._processTimeout = this.setTimeout(() => {\r\n\t\t\t\tthis._currentIndex++;\r\n\t\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t\t}, 500);\r\n\t\t\tthis._disposers.push(this._processTimeout);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.labelsContainer.x = w / 2;\r\n\t\tthis.labelsContainer.y = h / 2;\r\n\r\n\t\tlet label = dataItem.label;\r\n\t\tlet fontFace = $dom.findFont(label.element.node);\r\n\r\n\t\tlet smallerSize = $math.min(this.innerHeight, this.innerWidth);\r\n\t\tlet minFontSize = $utils.relativeToValue(this.minFontSize, smallerSize);\r\n\t\tlet maxFontSize = $utils.relativeToValue(this.maxFontSize, smallerSize);\r\n\r\n\t\tlet low = this.dataItem.values.value.low;\r\n\t\tlet high = this.dataItem.values.value.high;\r\n\r\n\t\tlet percent = (dataItem.value - low) / (high - low);\r\n\r\n\t\tif (low == high) {\r\n\t\t\tlet count = this.dataItems.length;\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tpercent = 1 / this.dataItems.length * 1.5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpercent = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fontSize = minFontSize + (maxFontSize - minFontSize) * percent * this._adjustedFont;\r\n\r\n\t\tlet initialFontSize = label.fontSize;\r\n\t\tlabel.fontSize = fontSize;\r\n\r\n\t\tlet angle = 0;\r\n\t\tif ((fontSize - minFontSize) / (maxFontSize - minFontSize) < this.rotationThreshold) {\r\n\t\t\tangle = this.angles[Math.round(Math.random() * (this.angles.length - 1))];\r\n\t\t}\r\n\r\n\t\tlabel.fontSize = fontSize;\r\n\t\tlabel.rotation = angle;\r\n\t\tlabel.show(0);\r\n\t\tlabel.hardInvalidate();\r\n\t\tlabel.validate();\r\n\r\n\t\tif (label.measuredWidth > w * 0.95 || label.measuredHeight > h * 0.95) {\r\n\t\t\tthis._adjustedFont -= 0.1;\r\n\t\t\tthis.invalidateDataItems()\r\n\t\t\tthis.invalidate();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet maxL = label.maxLeft;\r\n\t\tlet maxR = label.maxRight;\r\n\t\tlet maxT = label.maxTop;\r\n\t\tlet maxB = label.maxBottom;\r\n\r\n\t\tlet intersects = true;\r\n\r\n\t\tlet p = Math.round(Math.random() * this._points.length * this.randomness);\r\n\r\n\t\tlet initialX = label.pixelX;\r\n\t\tlet initialY = label.pixelY;\r\n\r\n\t\tlet x = 0;\r\n\t\tlet y = 0;\r\n\r\n\t\t// TODO is this needed ?\r\n\t\t$utils.used(this.labelsContainer.rotation);\r\n\t\tif (this._currentIndex > 0) {\r\n\t\t\twhile (intersects) {\r\n\t\t\t\tif (p > this._points.length - 1) {\r\n\t\t\t\t\tintersects = false;\r\n\t\t\t\t\tthis._adjustedFont -= 0.1;\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects = false;\r\n\r\n\t\t\t\tx = this._points[p].x;\r\n\t\t\t\ty = this._points[p].y;\r\n\r\n\t\t\t\tlet marginLeft = label.pixelMarginLeft;\r\n\t\t\t\tlet marginRight = label.pixelMarginRight;\r\n\t\t\t\tlet marginTop = label.pixelMarginTop;\r\n\t\t\t\tlet marginBottom = label.pixelMarginBottom;\r\n\r\n\t\t\t\tlet rect1 = { x: x + maxL - marginLeft, y: y + maxT - marginTop, width: maxR - maxL + marginLeft + marginRight, height: maxB - maxT + marginTop + marginBottom };\r\n\r\n\t\t\t\tlet pixel = this._ctx.getImageData(rect1.x + w / 2, rect1.y + h / 2, rect1.width, rect1.height).data;\r\n\t\t\t\tfor (let i = 0; i < pixel.length; i += Math.pow(2, this.accuracy)) {\r\n\t\t\t\t\tif (pixel[i] != 255) {\r\n\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\tif (label.currentText.length > 3) {\r\n\t\t\t\t\t\t\tif (angle == 0) {\r\n\t\t\t\t\t\t\t\tif (maxR - maxL < 60) {\r\n\t\t\t\t\t\t\t\t\tthis._points.splice(p, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(angle) == 90) {\r\n\t\t\t\t\t\t\t\tif (maxB - maxT < 50) {\r\n\t\t\t\t\t\t\t\t\tthis._points.splice(p, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp += 5;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (initialFontSize == 0) {\r\n\t\t\tlabel.animate([{ property: \"fontSize\", to: fontSize, from: initialFontSize }], this.interpolationDuration, this.interpolationEasing);\r\n\t\t\tlabel.x = x;\r\n\t\t\tlabel.y = y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel.animate([{ property: \"fontSize\", to: fontSize, from: initialFontSize }, { property: \"x\", to: x, from: initialX }, { property: \"y\", to: y, from: initialY }], this.interpolationDuration, this.interpolationEasing);\r\n\t\t}\r\n\r\n\t\tlet cx = x + w / 2;\r\n\t\tlet cy = y + h / 2;\r\n\r\n\t\tcontext.translate(cx, cy);\r\n\t\tlet radAngle = label.rotation * Math.PI / 180;\r\n\t\tcontext.rotate(radAngle);\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.textBaseline = \"middle\";\r\n\t\tcontext.fillStyle = \"blue\";\r\n\r\n\t\tlet fontWeight = label.fontWeight || this.fontWeight || this.chart.fontWeight || \"normal\";\r\n\t\tlet font = fontWeight + \" \" + fontSize + \"px \" + fontFace;\r\n\r\n\t\tcontext.font = font\r\n\t\tcontext.fillText(label.currentText, 0, 0);\r\n\t\tcontext.rotate(-radAngle);\r\n\t\tcontext.translate(-cx, -cy);\r\n\r\n\t\tif (label.showOnInit) {\r\n\t\t\tlabel.hide(0);\r\n\t\t\tlabel.show();\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"arrangeprogress\")) {\r\n\t\t\tconst event: AMEvent<this, IWordCloudSeriesEvents>[\"arrangeprogress\"] = {\r\n\t\t\t\ttype: \"arrangeprogress\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: (this._currentIndex + 1) / this.dataItems.length\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"arrangeprogress\", event);\r\n\t\t}\r\n\r\n\t\tif (this._currentIndex < this.dataItems.length - 1) {\r\n\t\t\tthis._processTimeout = this.setTimeout(() => {\r\n\t\t\t\tthis._currentIndex++;\r\n\t\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t\t}, 1);\r\n\t\t\tthis._disposers.push(this._processTimeout);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.events.isEnabled(\"arrangeended\")) {\r\n\t\t\t\tthis.dispatchImmediately(\"arrangeended\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sreates label element.\r\n\t *\r\n\t * @return label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new Label();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] elements representing each word.\r\n\t *\r\n\t * @return  Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_label\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tthis._disposers.push(label);\r\n\r\n\t\t\tlabel.text = \"{word}\";\r\n\t\t\tlabel.margin(2, 3, 2, 3);\r\n\t\t\tlabel.padding(0, 0, 0, 0);\r\n\r\n\t\t\tthis._labels = new ListTemplate(label);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new WordCloudSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for each new word.\r\n\t *\r\n\t * By default it's empty, so all words will be colored the same.\r\n\t *\r\n\t * If you want to automatically color each word differently, set this\r\n\t * to a new instance of a [[ColorSet]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.colors = new am4core.ColorSet();\r\n\t * series.colors.step = 1;\r\n\t * series.colors.passOptions = {}; // makes it loop\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.colors = new am4core.ColorSet();\r\n\t * series.colors.step = 1;\r\n\t * series.colors.passOptions = {}; // makes it loop\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"colors\": {\r\n\t *       \"type\": \"ColorSet\",\r\n\t *       \"step\": 1,\r\n\t *       \"passOptions\": {}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param  value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * [updateData description]\r\n\t */\r\n\tprotected updateData(): void {\r\n\t\tthis.data = this.getWords(this.text);\r\n\t}\r\n\r\n\t/**\r\n\t * A source text to build word cloud from.\r\n\t *\r\n\t * @param  value  Source text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tif (this.setPropertyValue(\"text\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Source text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.getPropertyValue(\"text\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of words to show.\r\n\t *\r\n\t * If ther are more words in the cloud than `maxCount`, smallest words will\r\n\t * be discarded.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @param  value  Maximum words to show\r\n\t */\r\n\tpublic set maxCount(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxCount\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum words to show\r\n\t */\r\n\tpublic get maxCount(): number {\r\n\t\treturn this.getPropertyValue(\"maxCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum occurances for a word to be included in the cloud.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Minimum occurences\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"minValue\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Minimum occurences\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An array of words to exclude from the cloud.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.excludeWords = [\"the\", \"a\", \"an\"];\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.excludeWords = [\"the\", \"a\", \"an\"];\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"excludeWords\": [\"the\", \"a\", \"an\"]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @param  value  Words to exclude from the cloud\r\n\t */\r\n\tpublic set excludeWords(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"excludeWords\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Words to exclude from the cloud\r\n\t */\r\n\tpublic get excludeWords(): string[] {\r\n\t\treturn this.getPropertyValue(\"excludeWords\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size for the biggest words.\r\n\t *\r\n\t * This can be set either as a numeric pixel size, or as a relative\r\n\t * as `Percent`.\r\n\t *\r\n\t * When setting as percent it will use series' height or width (the one which is smaller) as a basis for\r\n\t * calculating the font size.\r\n\t *\r\n\t * NOTE: this setting might be automatically adjusted if all words do not fit\r\n\t * in the available space.\r\n\t *\r\n\t * @default 20%\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic set maxFontSize(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"maxFontSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Font size\r\n\t */\r\n\tpublic get maxFontSize(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"maxFontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size for the smallest words.\r\n\t *\r\n\t * This can be set either as a numeric pixel size, or as a relative\r\n\t * as `Percent`.\r\n\t *\r\n\t * When setting as percent it will use series' height or width (the one which is smaller) as a basis for\r\n\t * calculating the font size.\r\n\t *\r\n\t * @default 2%\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic set minFontSize(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"minFontSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font size\r\n\t */\r\n\tpublic get minFontSize(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"minFontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Randomness of word placement.\r\n\t *\r\n\t * Available values are from 0 (no randomization) to 1 (completely random).\r\n\t *\r\n\t * The smaller the value the bigger the chance that biggest words will end up\r\n\t * closer to the center.\r\n\t *\r\n\t * @default 0.2\r\n\t * @param value Randomness\r\n\t */\r\n\tpublic set randomness(value: number) {\r\n\t\tthis.setPropertyValue(\"randomness\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Randomness\r\n\t */\r\n\tpublic get randomness(): number {\r\n\t\treturn this.getPropertyValue(\"randomness\");\r\n\t}\r\n\r\n\t/**\r\n\t * Step by which label is moved if its space is already occupied.\r\n\t *\r\n\t * The smaller the number, the more packed labels will be.\r\n\t *\r\n\t * NOTE: smaller numbers make for more packed clouds, but will consume\r\n\t * considerably more CPU power. Use with caution with bigger clouds.\r\n\t *\r\n\t * @default 15\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set step(value: number) {\r\n\t\tthis.setPropertyValue(\"step\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this.getPropertyValue(\"step\");\r\n\t}\r\n\r\n\t/**\r\n\t * Accuracy setting when checking for overlapping of words.\r\n\t *\r\n\t * The bigger the number, the bigger chance of overlapping, but it's also\r\n\t * better for performance.\r\n\t *\r\n\t * Use smaller numbers if you are using a thin font.\r\n\t *\r\n\t * @default 5\r\n\t * @param  value  Accuracy\r\n\t */\r\n\tpublic set accuracy(value: number) {\r\n\t\tthis.setPropertyValue(\"accuracy\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Accuracy\r\n\t */\r\n\tpublic get accuracy(): number {\r\n\t\treturn this.getPropertyValue(\"accuracy\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Minimum number of characters for a word to be included in the cloud.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @default 1\r\n\t * @param {number} value Minimum word length\r\n\t */\r\n\tpublic set minWordLength(value: number) {\r\n\t\tif (this.setPropertyValue(\"minWordLength\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum word length\r\n\t */\r\n\tpublic get minWordLength(): number {\r\n\t\treturn this.getPropertyValue(\"minWordLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation threshold.\r\n\t *\r\n\t * Big words don't look good good when rotated, hence this setting.\r\n\t *\r\n\t * It works like this: if word's relative height is bigger\r\n\t * than `rotationThreshold`, the word will never be rotated.\r\n\t *\r\n\t * Available values are from 0 (none of the words will be rotated) to 1 (all\r\n\t * words can be rotated).\r\n\t *\r\n\t * @default 0.7\r\n\t * @param  value  Threshold\r\n\t */\r\n\tpublic set rotationThreshold(value: number) {\r\n\t\tthis.setPropertyValue(\"rotationThreshold\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Threshold\r\n\t */\r\n\tpublic get rotationThreshold(): number {\r\n\t\treturn this.getPropertyValue(\"rotationThreshold\");\r\n\t}\r\n\r\n\t/**\r\n\t * An array of available word rotation angles.\r\n\t *\r\n\t * The only supported values are: 0 (horizontal), and 90 (vertical).\r\n\t *\r\n\t * @default [0, 0, 90]\r\n\t * @param  value  Angles\r\n\t */\r\n\tpublic set angles(value: number[]) {\r\n\t\tthis.setPropertyValue(\"angles\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angles\r\n\t */\r\n\tpublic get angles(): number[] {\r\n\t\treturn this.getPropertyValue(\"angles\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * Not finished yet\r\n\t */\r\n\tpublic get maskSprite(): Sprite {\r\n\t\treturn this._maskSprite;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[WordCloudSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts words and number of their appearances from a text.\r\n\t *\r\n\t * @ignore\r\n\t * @param  input  Source text\r\n\t */\r\n\tpublic getWords(input: string): { word: string, value: number }[] {\r\n\t\tif (input) {\r\n\t\t\tthis.dataFields.word = \"word\";\r\n\t\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\t\tconst chars = \"\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58-\\u0C59\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9@+\";\r\n\t\t\tconst reg = new RegExp(\"([\" + chars + \"]+[\\-\" + chars + \"]*[\" + chars + \"]+)|([\" + chars + \"]+)\", \"ig\");\r\n\t\t\tlet res = input.match(reg);\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\tlet words: { word: string, value: number }[] = [];\r\n\t\t\tlet word;\r\n\t\t\twhile (true) {\r\n\t\t\t\tword = res.pop();\r\n\r\n\t\t\t\tif (!word) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet item;\r\n\t\t\t\tfor (let i = 0; i < words.length; i++) {\r\n\t\t\t\t\tif (words[i].word.toLowerCase() == word.toLowerCase()) {\r\n\t\t\t\t\t\titem = words[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\titem.value++;\r\n\t\t\t\t\tif (!this.isCapitalized(word)) {\r\n\t\t\t\t\t\titem.word = word;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twords.push({\r\n\t\t\t\t\t\tword: word,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet excludeWords = this.excludeWords;\r\n\t\t\tif (this.minValue > 1 || this.minWordLength > 1 || (excludeWords && excludeWords.length > 0)) {\r\n\t\t\t\tfor (let i = words.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet w = words[i];\r\n\t\t\t\t\tif (w.value < this.minValue) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w.word.length < this.minWordLength) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (excludeWords.indexOf(w.word) !== -1) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twords.sort(function(a, b) {\r\n\t\t\t\tif (a.value == b.value) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (a.value > b.value) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tif (words.length > this.maxCount) {\r\n\t\t\t\twords = words.slice(0, this.maxCount);\r\n\t\t\t}\r\n\r\n\t\t\treturn words;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if word is capitalized (starts with an uppercase) or not.\r\n\t *\r\n\t * @param   word  Word\r\n\t * @return        Capitalized?\r\n\t */\r\n\tpublic isCapitalized(word: string): boolean {\r\n\t\tlet lword = word.toLowerCase();\r\n\t\treturn word[0] != lword[0]\r\n\t\t\t&& word.substr(1) == lword.substr(1)\r\n\t\t\t&& word != lword;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"WordCloudSeries\"] = WordCloudSeries;\r\nregistry.registeredClasses[\"WordCloudSeriesDataItem\"] = WordCloudSeriesDataItem;\r\n","/**\r\n * WordCloud chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { WordCloudSeries } from \"./WordCloudSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[WordCloud]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class WordCloudDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: WordCloud;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloudDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[WordCloud]].\r\n */\r\nexport interface IWordCloudDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[WordCloud]]\r\n */\r\nexport interface IWordCloudProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[WordCloud]].\r\n */\r\nexport interface IWordCloudEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WordCloud]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWordCloudAdapters extends ISerialChartAdapters, IWordCloudProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IWordCloudEvents} for a list of available Events\r\n * @see {@link IWordCloudAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/wordcloud/} for documentation\r\n */\r\nexport class WordCloud extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IWordCloudDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWordCloudProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWordCloudAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWordCloudEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: WordCloudSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloud\";\r\n\r\n\t\tthis.seriesContainer.isMeasured = true;\r\n\t\tthis.seriesContainer.layout = \"absolute\";\r\n\r\n\t\tthis._usesData = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PercentSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new WordCloudSeries();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\nregistry.registeredClasses[\"WordCloud\"] = WordCloud;\r\nregistry.registeredClasses[\"WordCloudDataItem\"] = WordCloudDataItem;\r\n","import { ITheme } from \"./ITheme\";\r\nimport { is } from \"../core/Registry\";\r\nimport { SpriteState } from \"../core/SpriteState\";\r\nimport { Component } from \"../core/Component\";\r\nimport { BaseObject } from \"../core/Base\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\nimport { Tooltip } from \"../core/elements/Tooltip\";\r\nimport { Series } from \"../charts/series/Series\";\r\nimport { PercentSeries } from \"../charts/series/PercentSeries\";\r\nimport { SankeyDiagram } from \"../charts/types/SankeyDiagram\";\r\nimport { FunnelSeries } from \"../charts/series/FunnelSeries\";\r\nimport { MapSeries } from \"../charts/map/MapSeries\";\r\nimport { FunnelSlice } from \"../charts/elements/FunnelSlice\";\r\nimport { Column } from \"../charts/elements/Column\";\r\nimport { Column3D } from \"../charts/elements/Column3D\";\r\nimport { Slice } from \"../core/elements/Slice\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { Chart } from \"../charts/Chart\";\r\n\r\n\r\n\r\nconst theme: ITheme = (object: BaseObject) => {\r\n\tif (is<SpriteState<any, any>>(object, \"SpriteState\")) {\r\n\t\tobject.transitionDuration = 400;\r\n\t}\r\n\r\n\tif (is<Component>(object, \"Component\")) {\r\n\t\tobject.rangeChangeDuration = 500;\r\n\t\tobject.interpolationDuration = 500;\r\n\t\tobject.sequencedInterpolation = false;\r\n\r\n\t\tif (is<SankeyDiagram>(object, \"SankeyDiagram\")) {\r\n\t\t\tobject.sequencedInterpolation = true;\r\n\t\t}\r\n\r\n\t\tif (is<FunnelSeries>(object, \"FunnelSeries\")) {\r\n\t\t\tobject.sequencedInterpolation = true;\r\n\t\t}\r\n\t}\r\n\r\n\tif (is<Chart>(object, \"Chart\")) {\r\n\t\tobject.defaultState.transitionDuration = 2000;\r\n\t\tobject.hiddenState.transitionDuration = 1000;\r\n\t}\r\n\r\n\tif (is<Tooltip>(object, \"Tooltip\")) {\r\n\t\tobject.animationDuration = 400;\r\n\t\tobject.defaultState.transitionDuration = 400;\r\n\t\tobject.hiddenState.transitionDuration = 400;\r\n\t}\r\n\r\n\tif (is<Scrollbar>(object, \"Scrollbar\")) {\r\n\t\tobject.animationDuration = 500;\r\n\t}\r\n\r\n\tif (is<Series>(object, \"Series\")) {\r\n\t\tobject.defaultState.transitionDuration = 1000;\r\n\t\tobject.hiddenState.transitionDuration = 700;\r\n\t\tobject.hiddenState.properties.opacity = 1;\r\n\t\tobject.showOnInit = true;\r\n\t}\r\n\r\n\tif (is<MapSeries>(object, \"MapSeries\")) {\r\n\t\tobject.hiddenState.properties.opacity = 0;\r\n\t}\r\n\r\n\tif (is<PercentSeries>(object, \"PercentSeries\")) {\r\n\t\tobject.hiddenState.properties.opacity = 0;\r\n\t}\r\n\r\n\tif (is<FunnelSlice>(object, \"FunnelSlice\")) {\r\n\t\tobject.defaultState.transitionDuration = 800;\r\n\t\tobject.hiddenState.transitionDuration = 1000;\r\n\t\tobject.hiddenState.properties.opacity = 1;\r\n\t}\r\n\r\n\tif (is<Slice>(object, \"Slice\")) {\r\n\t\tobject.defaultState.transitionDuration = 700;\r\n\t\tobject.hiddenState.transitionDuration = 1000;\r\n\t\tobject.hiddenState.properties.opacity = 1;\r\n\t}\r\n\r\n\tif (is<Preloader>(object, \"Preloader\")) {\r\n\t\tobject.hiddenState.transitionDuration = 2000;\r\n\t}\r\n\r\n\tif (is<Column>(object, \"Column\")) {\r\n\t\tobject.defaultState.transitionDuration = 700;\r\n\t\tobject.hiddenState.transitionDuration = 1000;\r\n\t\tobject.hiddenState.properties.opacity = 1;\r\n\t}\r\n\r\n\tif (is<Column3D>(object, \"Column3D\")) {\r\n\t\tobject.hiddenState.properties.opacity = 0;\r\n\t}\r\n};\r\n\r\nexport default theme;\r\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n"],"names":["className","cs","InterfaceColorSet","layout","padding","margin","background","fillOpacity","cornerRadius","icon","Sprite","element","paper","add","path","x","y","strokeWidth","pixelPerfect","stroke","getFor","strokeOpacity","align","valign","label","dispose","undefined","position","autoHideDelay","events","on","ev","_autoHideTimeout","setTimeout","hide","applyTheme","this","getPropertyValue","value","setPropertyValue","horizontalCenter","verticalCenter","rotation","width","height","Button","Grip","DataItem","_legend","constructor","Chart","Error","template","Label","titles","List","_disposers","push","chartAndLegendContainer","createChild","Container","shouldClone","chartContainer","showOnInit","processTitle","updateReaderTitleReferences","role","defaultState","transitionDuration","applyInternalDefaults","readerTitle","language","translate","draw","fixLayout","legend","toBack","toFront","isMeasured","feedLegend","event","title","newValue","parent","uidAttr","length","iterator","uid","setSVGAttribute","join","removeSVGAttribute","get","setLegend","set","property","addDisposer","Disposer","reset","processConfig","config","type","copyFrom","source","clone","removeChildren","_dragGrip","tooltipContainer","touch","interactionsEnabled","show","focusable","Component","relevant","Responsive","state","target","stateId","states","create","pixelPaddingLeft","properties","paddingLeft","pixelPaddingRight","paddingRight","pixelPaddingTop","paddingTop","pixelPaddingBottom","paddingBottom","childrenCreated","_label","component","labels","addSprite","itemContainer","removeValue","color","setProperty","_valueLabel","valueLabels","_itemContainer","itemContainers","togglable","toggleDataItem","dataItem","focusedItem","dataContext","readerControls","readerLabelledBy","sprite","isDisposed","visibilitychanged","readerChecked","visible","disableType","isActive","enableType","dataItems","remove","_marker","markers","createMarker","applyOnClones","clickable","cursorOverStyle","body","isEnabled","dispatchImmediately","interfaceColors","marker","setStateOnChildren","propertyFields","fill","disabledColor","activeState","rectangle","text","truncate","fullWords","valueLabel","textAlign","handleScrollbar","createDataItem","LegendDataItem","validateDataElements","scrollbar","start","end","validateDataElement","container","legendDataItem","tempMaxWidth","maxWidth","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","setState","afterDraw","maxLabelWidth","each","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","Math","min","scrollable","measuredHeight","pixelWidth","contentHeight","thumb","updateMasks","contentAlign","maxColumns","invalidate","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","shift","ds","delta","dy","pixelY","maskRectangle","item","isHiding","isHidden","colorOrig","appeared","hidden","svgContainer","readerAlert","locale","handleDataItemPropertyChange","name","Legend","disabled","AxisItemLocation","_grid","isRange","axisRanges","grid","renderer","axis","sprites","_tick","tick","ticks","virtualParent","_axisFill","axisFill","isTemplate","axisFills","_text","_mask","_contents","contents","mask","createFill","_axisBreak","axisBreak","appendChildren","appendDataItem","hasProperty","prop","bullet","minPosition","maxPosition","setVisibility","noChangeValues","_bullet","_gridCount","_series","autoDispose","_axisItemCount","Axis","hideTooltipWhileZooming","minWidth","minHeight","toggleZoomOutButton","zoomable","_dataItemsIterator","createNewItems","tooltip","pointerLength","fitPointerToBounds","filters","clear","readerHidden","series","preventShow","fillRule","index","round","opacity","AxisDataItem","invalidateLayout","invalidateSeries","ghostLabel","updateLabelElement","updateGridCount","gridCount","axisLength","minGridDistance","clearCache","validateLayout","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","initRenderer","above","bulletsContainer","gridContainer","updateGridContainer","validateAxisRanges","axisRange","validateBreaks","_axisBreaks","processBreak","breakContainer","registerSeries","moveValue","createMask","_renderer","chart","positionToAngle","pointToPosition","point","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","angle","startPosition","endPosition","hideTooltip","duration","_tooltipPosition","showTooltipAtPosition","local","_tooltip","toAxisPosition","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","tooltipLocation2","startPoint","positionToPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","globalPoint","line","getTooltipText","delayedPointTo","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","fixDoc","setBounds","roundPosition","location","axisLocation","_axisRanges","processAxisRange","createAxisBreak","a","b","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","key","stackKey","range","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","max","difference","startValue","endValue","adjustedEndValue","breakSize","intersection","isInBreak","fixAxisBreaks","axisBreaks","update","firstAxisBreak","first","getPositionLabel","_chart","createSeriesRange","resetIterators","i","len","map","hasKey","getKey","configOrder","setDisabled","changed","_title","_axis","marginRight","marginTop","marginBottom","fillShape","zIndex","_fillShape","startLine","_startLine","endLine","_endLine","addBreakSprite","createBreakSprites","breakTemplate","updateBreakElement","AxisBreak","invalidateDataItems","AxisBullet","fillPath","measure","setPath","attr","AxisFill","AxisLabel","AxisLine","inside","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","inited","invalidateAxisItems","baseGrid","disposers","setAxis","bind","processRenderer","positionItem","moveTo","position2","getHeight","pixelHeight","getWidth","coordinateToPosition","coordinate","coordinate2","updateGridElement","updateTickElement","updateBullet","updateFillElement","toggleVisibility","updatedStart","updatedEnd","_axisFills","createGrid","_ticks","createTick","_labels","createLabel","AxisRenderer","opposite","pixelX","bigNum","bbx","bby","bbw","bbh","deltaY","maxHeight","x1","x2","w","abs","h","y1","y2","pixelMarginTop","pixelMarginBottom","tickLength","basePoint","wavedRectangle","setWavedSides","inversedPosition","relativePositionSprite","innerWidth","AxisRendererX","innerHeight","deltaX","AxisRendererY","AxisTick","Grid","values","setValue","_stepDecimalPlaces","_prevStepDecimalPlaces","_adjustLabelPrecision","_baseValue","_adjustedStart","_adjustedEnd","_extremesChanged","_deltaMinMax","_dsc","calculateTotals","axisFieldName","Number","MAX_VALUE","keepSelection","includeRangesInMinMax","step","ValueAxisDataItem","_start","_end","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","getIndex","startIndex","endIndex","total","sum","excludeFromTotal","workingValue","setCalculatedValue","getMinMax","calculateZoom","validateAxisElements","positionToValue","differece","minMaxStep","adjustMinMax","stepDecimalPlaces","syncWithAxis","calculated","getCache","_step","fixSmallStep","minZoomed","logarithmic","log","LOG10E","pow","floor","maxZoomed","precisionChanged","find","formatLabel","currentText","oldValue","stepPower","decCount","adjustedMin","adjustedMax","adjustedStep","itemIndex","valueToPosition","fillEndPosition","adjustLabelPrecision","numberFormatter","format","baseValue","_adapterO","apply","valueToPoint","_difference","treatZeroAs","invalidateLabels","breakStartPosition","breakEndPosition","breakStartValue","breakEndValue","E","xToValue","yToValue","animateMinMax","animate","from","to","rangeChangeDuration","rangeChangeEasing","POSITIVE_INFINITY","NEGATIVE_INFINITY","ignoreMinMax","seriesMin","seriesMax","minValue","maxValue","raiseCriticalError","_minReal","_maxReal","dif","fixMin","fixMax","exponent","power","extraMin","extraMax","strict","strictMinMax","animation","_minMaxAnimation","isFinished","_finalMax","_finalMin","validateDataItems","handleSelectionExtremesChange","strictMode","initialMin","initialMax","extra","Infinity","ceil","stepDivisor","maxPrecision","minCount","maxCount","handleExtremesChange","selectionMin","selectionMax","allHidden","outOfRange","seriesSelectionMin","seriesSelectionMax","minMaxStep2","syncAxes","declination","setCache","zoom","getWorkingValue","stack","getValue","extraTooltipPrecision","valueStr","zoomToValues","skipRangeEvent","instantly","axisBreakDif","axisBreakGridCount","breakMinMaxStep","showTooltipAt","count","currentCount","synced","c","diff","omin","omax","ostep","checkSync","processingErrors","xAxis","ValueAxis","ValueAxisBreak","tooltipX","tooltipY","copyToLegendMarker","Bullet","markerContainer","markerCount","getMinFromRules","heatRules","heatRule","getMaxFromRules","valueAxis","reverseOrder","minColor","maxColor","seriesFill","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","gradient","addColor","strokeGradient","rgb","setColorProperty","_valueAxis","dataField","dataFieldDefined","err","updateMinMax","low","high","HeatLegend","nonScalingStroke","Tick","_bullets","bullets","_ignoreMinMax","_showBullets","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","usePercentHack","simplifiedProcessing","Series","minBulletDistance","mainContainer","_shouldBeReady","hiddenState","transitionEasing","setClassName","SeriesDataItem","positionBullet","processBullet","once","itemsFocusable","removeBullet","eachBullet","processValues","getFirstValue","getActualWorkingValue","getAbsoluteFirstValue","rangeChangeUpdate","working","prevValue","ksum","percent","children","updateTooltipBounds","topParent","rect","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","setKey","itemReaderText","xField","yField","isDynamic","deepInvalidate","populateString","hoverable","itemWidth","itemHeight","handleDataItemWorkingValueChange","dataRangeInvalid","invalidateProcessedData","rangesContainer","getAxisField","xPosition","yPosition","invalidateRawData","readerText","_itemReaderText","tooltipText","tooltipHTML","_legendDataItem","notRange","itemLabelText","labelText","e","modal","content","adapter","message","closable","open","console","applyFilters","filter","_heatRules","foundSprite","clonedFrom","anySprite","child","anyChild","ruleTarget","propertyField","rule","parts","split","listitem","maybeIndex","match","maybeColorOrPercent","colors","_usesData","seriesContainer","patterns","createSeries","handleSeriesAdded","handleSeriesRemoved","dataUsers","dataUser","data","di","_dataUsers","handleSeriesAdded2","handleLegendSeriesAdded","hiddenInLegend","addData","dataInvalid","reinit","_data","dataFields","appear","SerialChart","getTime","DateAxisBreak","date","endDate","dates","setDate","_gapBreaks","gridIntervals","groupIntervals","dateFormats","Dictionary","periodChangeDateFormats","_baseIntervalReal","timeUnit","_prevSeriesTime","_minDifference","_firstWeekDay","groupMin","groupMax","snapTooltip","groupCount","getDFFormatter","pushAll","gridInterval","_gridInterval","gridDuration","DateAxisDataItem","baseDuration","periodCount","getFirstWeekDay","mainBaseDuration","mainBaseInterval","maxZoomFactor","dataSetChanged","groupData","modifiedDifference","startLocation","endLocation","groupInterval","chooseInterval","_groupInterval","newId","_currentDataSetId","dispatch","baseAxis","setDataSet","baseInterval","_nextGridUnit","_intervalDuration","_gridDate","Date","_df","utc","timezoneMinutes","timezone","minZoomedStr","toString","startDataItem","currentDataSetId","findFirst","findClosestIndex","maxZoomedStr","endDataItem","validateDataRange","time","previousDataItem","previousDate","validateData","minDifference","seriesGroupUpdate","addEmptyUnitsBreaks","JSON","stringify","_baseInterval","mainDataSet","groupSeriesData","dataGrouped","interval","intervalDuration","_dataSets","dataSetId","dataSet","dataSets","newDataItem","roundedDate","previousTime","dfkey","df","dfk","indexOf","getDate","currentTime","firstDayOfWeek","vkey","setWorkingLocation","locations","dateX","openDateX","dateY","openDateY","_index","dvalues","close","average","fieldValue","f","hasProperties","groupDataItems","groupFieldName","groupFields","dateFormatter","intervalID","startTime","skipEmptyPeriods","startTimeStr","startDate","breakGridCount","gridDate","getGridDate","intervalCount","realIntervalCount","prevTimestamp","newDate","timestamp","durationBreaksRemoved","getBreaklessDate","prevGridDate","markUnitChange","endTimestamp","intervals","lastIndex","dateToPosition","dateToPoint","positionToDate","getTimeByLocation","workingLocations","endTime","timezoneOffset","setTime","getTimezoneOffset","openTime","openDate","prevSeriesTime","_mainBaseInterval","timeInterval","invalidateData","tooltipDate","tooltipDateFormat","dateFormat","deltaValue","nextDate","getCurrentLabelFormat","id","zoomToDates","adjust","parse","isEnd","isStart","mindi","maxdi","yAxis","asIs","field","cursor","snapToSeries","showTooltipAtDataItem","_seriesPoints","makeGap","previous","connect","autoGapCount","prevDate","DateAxis","indexToPosition","category","categoryToIndex","CategoryAxisBreak","seriesDataItems","endCategory","deltaPosition","oldCategory","deltaCoordinate","dataItemsByCategory","_lastDataItem","removeKey","CategoryAxisDataItem","categoryAxisDataItem","seriesId","CategoryAxis","invalidateDataRange","positionToIndex","minIndex","maxIndex","axisDataItem","seriesDataItem","dataCount","MAX_SAFE_INTEGER","frequency","_startIndex","_endIndex","_frequency","fillEndIndex","fillPosition","html","disposeData","processDataItem","getDataItem","breakStartIndex","breakEndIndex","categoryToPosition","categoryToPoint","zoomToCategories","startCategory","zoomToIndexes","startPos","endPos","getFirstSeriesDataItem","categoryX","categoryY","getLastSeriesDataItem","getSeriesDataItemByCategory","categories","tooltipDataItem","breakPosition","positionToCategory","sortBySeries","addDelayedMap","customValue","valueX","valueY","openValueX","openValueY","setLocation","setCategory","openCategoryX","openCategoryY","getMin","fields","stackValue","getMax","_xAxis","_yAxis","_xValueFields","_yValueFields","usesShowFields","_dataSetChanged","_maxxX","_maxxY","_propertiesChanged","cursorHoverEnabled","setElement","stacked","stackToNegative","returnBulletDefaultState","observe","XYSeriesDataItem","resetExtremes","valueYShow","openValueXShow","openValueYShow","defineFields","updateItemReaderText","_xField","_yField","setInitialWorkingValues","updateDataItem","dataItemsX","clearCatAxis","dataItemsY","xAxisFieldName","xOpenField","yAxisFieldName","yOpenField","_xOpenField","_yOpenField","addValueField","setCategoryAxisField","setDateAxisField","getMaskPath","plotContainer","maskBullets","leftAxesContainer","rightAxesContainer","topAxesContainer","bottomAxesContainer","xAxes","setXAxis","oldAxis","yAxes","setYAxis","XYChart","handleYAxisSet","_baseAxis","rawDataItem","removeCount","skipRaw","scrollbarSeries","_parseDataFrom","setData","_prevStartIndex","_prevEndIndex","minX","maxX","minY","maxY","workingStartIndex","workingEndIndex","getStackValue","stackX","stackY","xAxisId","yAxisId","stackedSeries","tmin","isShowing","tmax","_prevTooltipDataItem","getAdjustedXLocation","bulletLocationX","getAdjustedYLocation","bulletLocationY","hideSeriesTooltipsOnSelection","selection","downPoint","tooltipXField","tooltipYField","tooltipPoint","getPoint","interactions","isRealHover","isHover","showTooltip","fireEvent","hasValue","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","middleValue","rightLocation","locationX","leftLocation","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","bulletLocation","updateStacking","anim","delay","interpolationDuration","realDuration","sequencedInterpolation","sequencedInterpolationDelay","disable","enable","axisSeries","backwards","prevSeries","prevDataItem","prevRealValue","_tooltipXField","_tooltipYField","xKey","yKey","stackKeyX","stackKeyY","val","axisBulletsContainer","XYSeries","scrollbarChart","_scrollbarChart","DesaturateFilter","filterUnits","unselectedOverlay","_unselectedOverlay","thumbBackground","hoverState","downState","sourceSeries","zoomOutButton","inputDateFormat","addXAxis","addYAxis","maxZoomCount","minZoomCount","sourceAxis","minDefined","maxDefined","zoomOutAxes","updateByOrientation","off","handleDataChanged","dataProvider","updateThumb","dispatchEvents","Scrollbar","XYChartScrollbar","_axisRendererX","_axisRendererY","arrangeTooltips","topAxesCont","yAxesAndPlotCont","yAxesAndPlotContainer","bottomAxesCont","leftAxesCont","updateXAxesMargins","plotCont","mouseWheelBehavior","_cursorContainer","rightAxesCont","ZoomOutButton","_bulletMask","exportable","updateSeriesLegend","updatePlotElements","leftAxesWidth","rightAxesWidth","handleXAxisChange","updateXAxis","handleYAxisChange","updateYAxis","processXAxis","handleXAxisRangeChange","processAxis","processYAxis","handleYAxisRangeChange","getCommonAxisRange","scrollbarX","zoomAxes","updateScrollbar","minZoomFactor","seriesAppeared","scrollbarY","skipRangeEvents","axes","axisStart","axisEnd","updateSeriesMasks","_xAxes","handleAxisRemoval","_yAxes","next","backgroundOpacity","Color","_cursor","removeDispose","handleCursorPositionChange","handleCursorZoomStart","handleCursorZoomEnd","handleCursorPanStart","handleCursorPanning","handleCursorPanEnd","handleCursorCanceled","handleHideCursor","tapToActivate","setTapToActivate","showSeriesTooltip","snpSeries","getClosest","closestSeries","handleSnap","_cursorXPosition","showAxisTooltip","_cursorYPosition","sortSeriesTooltips","closestDataItem","minDistance","xPos","yPos","dxPosition","dyPosition","distance","sqrt","hideObjectTooltip","seriesPoints","maxTooltipDistance","seriesPoint","fixedPoint","handleOutReal","np","firstSeries","sort","reverse","averageY","SVGContainer","bottom","dropped","nextHeight","pointY","nextY","except","getUpdatedRange","behavior","xRange","priority","yRange","_panStartXRange","_panStartYRange","_panEndXRange","panEndRange","panStartRange","snapOnPan","_panEndYRange","maxPanOut","newStart","newEnd","newRange","_scrollbarX","handleXScrollbarChange","arg","_scrollbarY","handleYScrollbarChange","fixRange","stop","realRange","originalRange","cellWidth","svgPoint","htmlContainer","cssScale","plotPoint","handleWheelReal","handleHorizontalWheel","horizontalMouseWheelBehavior","rangeX","rangeY","shiftStep","differenceX","newStartX","newEndX","differenceY","newStartY","newEndY","location2X","location2Y","wheelable","_mouseWheelDisposer2","dataSourceDateFields","populateDataSourceFields","dataSourceNumberFields","_zoomOutButton","button","addScrollbarData","removeScrollbarData","removeData","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","fillSprite","strokeSprite","drawSegment","points","closePoints","smoothnessX","smoothnessY","smoothing","smooth","closed","lineElement","fillElement","LineSeriesSegment","_baseUnit","durationFormatter","axisDurationFormat","baseUnit","divisors","realDivisor","divisor","reducedCount","getValueUnit","getFormat","_tooltipDurationFormat","tooltipDurationFormat","DurationAxis","DurationAxisDataItem","segments","createSegment","_segmentsIterator","tensionX","tensionY","segmentsContainer","LineSeriesDataItem","initialY","setWorkingValue","initialX","segment","tooltipColorSource","openSegmentWrapper","_adjustedStartIndex","sliceData","findAdjustedIndex","_workingStartIndex","_workingEndIndex","adjustedIndex","openIndex","params","openSegment","getSegment","getFirst","addToClose","closeIndex","propertiesChanged","strokeDasharray","group","node","removeAttribute","valuesFound","updateSegmentProperties","addPoints","closeSegment","itemProperties","checkOnly","propertyName","currentValue","currentValueStr","disposeChildren","Line","Rectangle","hasLabels","LineSeries","connectEnds","RadarSeriesDataItem","radius","startAngle","endAngle","pixelRadius","pixelInnerRadius","unshift","updateRendererRefs","rendererX","rendererY","axisRendererY","RadarSeries","innerRadius","setPercentProperty","AxisFillCircular","GridCircular","fdx","fdy","locationOnPath","textPathElement","axisRadius","sign","pixelRadiusY","axisRadiusY","fixPosition","dx","isNegative","realRadius","Percent","relativeRotation","labelRadius","bent","bbox","dH","dW","_measuredHeight","_measuredWidth","AxisLabelCircular","pixelRadiusReal","useChartAngles","cos","atan2","sin","PI","mr","innerRadiusModifyer","arc","angleToPosition","gridInnerRadius","fitsToBounds","AxisRendererCircular","gridType","axisAngle","gridLocation","WavedCircle","tooltipOrientation","AxisRendererRadial","XYChartDataItem","radarContainer","Circle","C","beforeDraw","innerRect","wr","hr","maxRadius","diameter","_pixelInnerRadius","definedBBox","validatePosition","RadarChart","pin","startWidth","endWidth","hand","Trapezoid","leftSide","rightSide","x0","_pin","_hand","showValue","easing","_value","newAngle","currentAngle","rotationDirection","updateValue","ClockHand","RadarChartDataItem","hands","processHand","GaugeChart","slice","toValue","ticksContainer","labelsContainer","_slice","slices","slicesContainer","_addAllDataItems","ColorSet","alignLabels","createSlice","_slices","initSlice","initTick","initLabel","PercentSeriesDataItem","currentStep","arrangeLabels","lh","nextLabel","getNextLabel","arrangeLabels2","previousTop","nextDataItem","handleSliceScale","handleSliceMove","setAlignLabels","PercentSeries","percentSeriesDataItem","PercentChart","PercentChartDataItem","ix","scale","y0","iy","radiusY","r","PieTick","radiusValue","Slice","PieSeriesDataItem","shiftRadius","lastHitPointer","_leftItems","_rightItems","_currentStartAngle","_arcRect","_maxRadiusPercent","radiusValuePercent","aAngle","middleAngle","bAngle","ignoreZeroValues","normalizedMiddleAngle","arcRect","depth","_pixelRadius","_startAngleInternal","_endAngleInternal","PieSeries","updateRadius","_chartPixelRadius","updateSeriesAngles","chartCont","chartRadius","chartPixelInnerRadius","seriesRadius","_chartPixelInnerRadius","PieChart","PieChartDataItem","depthValue","PieSeries3DDataItem","Slice3D","depthPercent","PieSeries3D","invalidateDataUsers","PieChart3D","SlicedChart","SlicedChartDataItem","draggable","inert","invalidateLinks","handleHit","outgoingDataItems","toNode","link","incomingDataItems","fromNode","colorMode","stops","_incomingDataItems","sortBy","_incomingSorted","fromName","_outgoingDataItems","_outgoingSorted","_background","column","RoundedRectangle","FlowDiagramNode","positionBullets","_bulletsContainer","_bulletsMask","bulletsMask","middleLine","rotationField","setFill","_gradient","measureElement","Polyline","getTooltipX","getTooltipY","LinearGradient","FlowDiagramLink","toName","_link","links","nodePadding","minNodeSize","linksContainer","nodesContainer","nodes","sortNodes","strokeModifier","LinearGradientModifier","opacities","fillModifier","strNode","getNodeValue","_sorted","sortedIterator","incomingTotal","outgoingTotal","totalIncoming","totalOutgoing","changeSorting","FlowDiagramDataItem","_nodes","createNode","_links","createLink","FlowDiagram","hideOversized","handleMaxSize","LabelBullet","nextInCoord","nextOutCoord","nameLabel","endX","endY","linkWidth","valueHeight","startX","startY","SankeyNode","tension","controlPointDistance","Polyspline","makeBackwards","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","_bbox","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","SankeyLink","nodeAlign","_valueHeight","_levelCount","level","getNodeLevel","levels","_counter","checkLoop","calculateValueHeight","_levelSum","_levelNodesCount","maxSum","availableHeight","maxSumLevel","realValue","levelNodeCount","_maxSumLevel","maxSumLevelNodeCount","finalHeight","_heightAnimation","animationOptions","Animation","interpolationEasing","nextCoordinate","levelCoordinate","nodeCount","showReal","nodeHeight","SankeyDiagramDataItem","SankeyDiagram","updateRotation","childAngle","childRadius","labelAngle","adjustedTotal","nextAngle","nonRibbon","percentWidth","valueAngle","mAngle","trueStartAngle","tx","ty","ChordNode","cpx","cpy","p1","p2","cp","d","point1","point2","QuadraticCurve","fromX","fromY","toX","toY","mAngle1","mAngle2","ChordLink","chordContainer","newTotal","ChordDiagramDataItem","ChordDiagram","createAssets","handleKidAdded","Column","_column","setColumn","columns","_rangesColumns","_startLocation","_endLocation","clustered","columnsContainer","_columnsContainer","ColumnSeriesDataItem","baseAxisSeries","ColumnSeries","sortedItem","sortCategoryAxis","disableUnusedColumns","currentPosition","deltaAnimation","validateDataElementReal","getStartLocation","getEndLocation","l","t","percentHeight","outOfBounds","diw","dih","offset","fixHorizontalCoordinate","fixVerticalCoordinate","axisLenght","realX","realY","realWidth","realHeight","setColumnStates","rangeColumn","rangesColumns","_dropFromOpenState","_dropFromPreviousState","_riseFromOpenState","_riseFromPreviousState","change","droppedFromOpen","droppedFromPrevious","_columns","createColumnTemplate","treeMapDataItem","_dataContext","configField","TreeMapSeriesDataItem","hideReal","TreeMapSeries","rows","hasChildren","getDuration","childValue","layoutAlgorithm","squarify","maxLevels","currentLevel","hideParentColumns","sorting","xRenderer","yRenderer","seriesTemplates","zoomToChartDataItem","_homeDataItem","_navigationBar","navigationBar","createTreeSeries","_tempSeries","homeDataItem","_homeText","layoutItems","_updateDataItemIndexes","navigationData","parentDataItem","initSeries","createTreeSeriesReal","currentlyZoomed","Mouse","zoomToSeriesDataItem","toggleBullets","rangeChangeAnimation","_dataDisposers","TreeMapDataItem","binaryTree","dice","sliceDice","validateRawData","n","sums","Array","partition","j","valueOffset","valueTarget","k","hi","mid","valueLeft","valueRight","xk","yk","nodeValue","sumValue","newRatio","minRatio","alpha","beta","ratio","i0","i1","row","handleDataItemValueChange","getLegendLevel","legendParent","getExporting","exporting","info","TreeMap","dx3D","dy3D","handle3DChanged","AxisRendererX3D","column3D","Rectangle3D","Column3D","ColumnSeries3D","ColumnSeries3DDataItem","AxisRendererY3D","fixColumns","depthIndex","s","maskColumns","XYChart3D","lowLine","highLine","Candlestick","lowValueX","lowValueY","highValueX","highValueY","positiveColor","negativeColor","dropFromOpenState","riseFromOpenState","CandlestickSeriesDataItem","validateCandlestick","yOpen","yClose","yLow","yLowField","yHigh","yHighField","xOpen","xClose","xLow","xLowField","xHigh","xHighField","rangeLowLine","rangehighLine","_xLowField","_yLowField","_xHighField","_yHighField","cw","ch","CandlestickSeries","openLine","highLowLine","closeLine","OHLC","OHLCSeriesDataItem","rangeOpenLine","rangeCloseLine","rangeHighLowLine","OHLCSeries","noRisers","vertical","StepLineSeriesSegment","StepLineSeriesDataItem","startLocationX","endLocationX","startLocationY","endLocationY","prevPoint","point0","StepLineSeries","radarColumn","RadarColumn","lAngle","rAngle","tRadius","bRadius","cellAngle","temp","RadarColumnSeries","RadarColumnSeriesDataItem","bottomWidth","topWidth","expandDistance","pt","pb","pr","pl","ed","tl","tw","tr","br","bw","bl","cpr","cpl","qp1","qp2","tickPoint","tt","tb","bt","bb","mlx","mty","FunnelSlice","p0","labelsOpposite","maxRight","maxBottom","FunnelTick","_sliceLink","sliceLinks","_nextY","bottomRatio","FunnelSeriesDataItem","labelTemplate","dItem","_total","_count","getNextValue","nextValue","nextItem","formDataElement","sliceLink","decorateSlice","linkHeight","getLastLabel","lastLabel","lastY","lastX","_sliceLinks","labelAlign","labelValign","FunnelSeries","pyramidHeight","valueIs","PyramidSeriesDataItem","_nextWidth","relValue","_pyramidHeight","_pyramidWidth","absoluteSum","pyramidWidth","sliceTopWidth","tan","sliceHeight","sliceBottomWidth","square","sliceWidth","PyramidSeries","_maskSprite","maskSprite","pictureWidth","pictureHeight","newWidth","newHeight","PictorialStackedSeriesDataItem","hs","PictorialStackedSeries","coneColumn","Cone","ConeColumn","ConeSeries","ConeSeriesDataItem","curvedColumn","CurvedColumn","CurvedColumnSeries","CurvedColumnSeriesDataItem","circle","CircleBullet","errorLine","ErrorBullet","textLink","TextLink","_linksIterator","triangle","Triangle","direction","separators","activeLink","fontWeight","getLast","separator","NavigationBar","NavigationBarDataItem","_stick","trackable","interaction","handleCursorDown","handleCursorUp","handleCursorMove","_generalBehavior","isLocalElement","pointer","svg","_stickPoint","triggerMove","stick","force","triggerMoveReal","invalidatePosition","getPositions","triggerDown","triggerDownReal","setGlobalStyle","triggerUp","triggerUpReal","updatePoint","upPoint","_upPointOrig","_downPointOrig","getHitOption","updateSelection","cancelable","shouldPreventGestures","preventDefault","lockElement","Cursor","_lineX","_lineY","_snapToDisposers","lineX","lineY","updateSize","_usesSelection","_positionPrecision","fixPoint","updateLinePositions","getPanningRanges","selectionX","selectionY","hasMoved","getRanges","handleXTooltipPosition","handleYTooltipPosition","fullWidthLineX","fullWidthLineY","_selection","snap","disposer","xx","yy","animationDuration","animationEasing","XYCursor","truePixelRadius","updateLineX","updateLineY","fillStartAngle","downAngle","downRadius","currentRadius","_prevAngle","downSin","downCos","upAngle","upRadius","RadarCursor","Adder","_partials","Float64Array","_n","p","lo","epsilon","epsilon2","pi","halfPi","quarterPi","tau","degrees","radians","atan","exp","hypot","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","phi0","lambda1","phi1","lambda2","deltaSum","ranges","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","v","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","feature","merged","deltaMax","NaN","_east","_west","_south","_north","updateExtremes","getFeature","bounds","west","south","north","east","ignoreBounds","showInViewport","MapSeriesDataItem","checkInclude","includes","excludes","processIncExc","handleObjectAdded","mapObject","_geodata","geodata","reverseGeodata","processReverseGeodata","madeFromGeoData","splice","_dataSources","getDataSource","loadData","setDataSourceEvents","getFeatures","_mapObjects","_northDefined","_southDefined","_westDefined","_eastDefined","window","MapSeries","res","showTooltipOn","has","handleTooltipMove","setDataItem","applyAccessibility","MapObject","latitude","geoPoint","longitude","projection","d3Projection","d3Path","MapImage","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","rotate","forward","circleStream","t0","t1","cosRadius","sinRadius","circleRadius","ring","center","constant","precision","arguments","_","multiPolygonToGeo","multiPolygon","polygon","surface","hole","geoArea","multiPointToGeo","multiLineToGeo","multiLine","pointToGeo","multiGeoToPoint","geoPoints","geoToPoint","multiGeoLineToMultiLine","multiGeoLine","multiGeoPolygonToMultipolygon","multiGeoPolygon","geoPolygon","getCircle","getBackground","stepLong","stepLat","ln","ll","lt","pathGenerator","calculateVisualCenter","biggestArea","biggestPolygon","area","_visualLongitude","_visualLatitude","convert","visualLongitude","visualLatitude","MapPolygon","_mapPolygon","mapPolygons","_polygon","_multiPolygon","_geoPolygon","_multiGeoPolygon","MapPolygonSeriesDataItem","useGeodata","geoJSON","geodataNames","include","exclude","dataObject","mapPolygon","sortPolygonsBy","sortPolygonsReversed","valA","valB","dirA","dirB","boxArea","_mapPolygons","polygonTemplate","getPolygonById","_dataItem","lines","m","rejoin","pop","concat","result","Intersection","other","entry","o","compareIntersection","startInside","interpolate","subject","clip","forEach","pointEqual","current","isSubject","array","winding","sinPhi1","cosPhi1","absDelta","phiArc","MapPolygonSeries","flatten","arrays","merge","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","ax","ay","methods","transformer","TransformStream","prototype","fit","fitBounds","clipExtent","geoStream","fitExtent","extent","fitSize","size","fitWidth","fitHeight","cosMinDistance","project","delta2","resampleLineTo","d2","phi2","dx2","dy2","dz","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","transformRotate","clipAngle","clipCircle","reflectX","reflectY","equirectangularRaw","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","projectionStream","contextStream","pathArea","pathMeasure","pathBounds","pathCentroid","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","_circle","lengthLineEnd","cosDelta","_d3Projection","_d3Path","invalidateProjection","unproject","deltaLongitude","deltaLatitude","unrotate","intermediatePoint","pointA","pointB","multiDistance","positionToGeoPoint","intermediatePointA","intermediatePointB","pa","totalDistance","currentDistance","positionA","positionB","positionAB","Projection","moveToPosition","updateMapSize","contains","newSeries","rectPoint","spritePoint","seriesPointToGeo","zoomToGeoPoint","zoomLevel","updateRectangle","scaleRatio","getBBox","SmallMap","normalizePoint","wrapAngleTo180","latitude180","normalizeMultiline","multiline","adjustRotation","mapLine","shortestDistance","MapLineObject","_mapImage","mapImages","_geoPoint","multiPoint","multiGeoPoint","MapImageSeriesDataItem","mapImage","_mapImages","getImageById","MapImageSeries","_imageListeners","createLine","images","handleImagesToConnect","isReady","imagesToConnect","image","img","convertedPoints","convertedSegmentPoints","slen","_arrow","lineObjects","handleGlobalScale","_lineObjects","handleLineObjectAdded","mapLineObject","arrow","MapLine","_mapLine","mapLines","_multiLine","_multiGeoLine","_geoLine","geoLine","MapLineSeriesDataItem","_mapLines","lineTemplate","getLineById","MapLineSeries","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","Graticule","longitudeStep","latitudeStep","singleSprite","GraticuleSeriesDataItem","lineStrings","lineString","GraticuleSeries","zoomDuration","zoomEasing","minZoomLevel","maxZoomLevel","_prevZoomGeoPoint","homeZoomLevel","zoomStep","centerMapOnZoomOut","backgroundSeries","handleAllInited","resizable","handleMapTransform","handleDoubleHit","handleDrag","dragWhileResize","previousWidth","previousHeight","updateCenterGeoPoint","_mapAnimation","updateScaleRatio","_zoomGeoPointReal","chartContainerBg","dragStart","downPointers","dragStop","handleMapDown","inertia","inertias","done","hasFocused","_zoomControl","isFocused","pan","handlePanDown","handlePanUp","panSprite","handlePanMove","panBehavior","_downDeltaLongitude","_downDeltaLatitude","isResized","areTransformed","dln","dlt","dlg","downGeoLocal","geoLocal","goHome","updateZoomGeoPoint","maxLeft","maxTop","seriesMaxLeft","seriesMaxRight","seriesMaxTop","seriesMaxBottom","seriesWidth","seriesHeight","_centerGeoPoint","ww","hh","zoomGeoPoint","svgPointToGeo","zoomIn","mouseOptions","sensitivity","zoomOut","_backgroundSeries","foundGraticule","deltaLong","deltaLat","initialScale","_fitWidth","_fitHeight","hScale","vScale","geoPointToSVG","geoPointToSeries","mapPoint","zoomToMapObject","polygonPoint","zoomToRectangle","splitLongitude","newLong","_prevZoomLevel","_smallMap","smallMap","zoomControl","plusButton","minusButton","rotateMap","createClassInstance","homeGeoPoint","centerGeoPoint","setPaper","hideOverflow","asFunction","hasLicense","MapChart","MapSpline","Polyarc","MapArc","MapSplineSeriesDataItem","MapSplineSeries","MapArcSeriesDataItem","MapArcSeries","slider","handleBackgroundClick","updateThumbSize","handleThumbDrag","readerLive","maxPower","LN2","minPower","stepCount","isDown","createBackground","mercatorRaw","mercatorProjection","reclip","ZoomControl","Mercator","SQRT1_2","millerRaw","eckert6Raw","Miller","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","orthographicRaw","Eckert6","stereographicRaw","Orthographic","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","Stereographic","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","streams","multiplex","Albers","naturalEarth1Raw","phi4","AlbersUsa","NaturalEarth1","azimuthalEqualAreaRaw","cxcy","AzimuthalEqualArea","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","W0","W1","z0","EqualEarth","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","azimuthalEquidistantRaw","tany","conicConformalRaw","fy","conicEquidistantRaw","g","gy","nx","gnomonicRaw","sa","kx","ky","transverseMercatorRaw","word","fontSize","_adjustedFont","accuracy","minFontSize","maxFontSize","excludeWords","angles","rotationThreshold","minWordLength","randomness","canvas","document","createElement","style","top","left","_canvas","_ctx","getContext","_spiral","_currentIndex","_processTimeout","fillStyle","fillRect","_points","processItem","fontFace","smallerSize","initialFontSize","random","hardInvalidate","maxL","maxR","maxT","maxB","intersects","rect1","pixel","getImageData","radAngle","textBaseline","font","fillText","progress","WordCloudSeriesDataItem","updateData","getWords","input","chars","reg","RegExp","words","toLowerCase","isCapitalized","lword","substr","WordCloudSeries","WordCloud","WordCloudDataItem","is","Queue","require","polylabel","debug","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports","TinyQueue","compare","defaultCompare","_down","_up","pos","halfLength","best","right"],"sourceRoot":""}