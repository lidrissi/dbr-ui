/*! For license information please see 993.e3bb429d.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkdbr_ui=self.webpackChunkdbr_ui||[]).push([[993],{7993:function(t,e,n){n.d(e,{b6:function(){return b},nx:function(){return vt},Cs:function(){return Tt},Jx:function(){return q},mg:function(){return Mt},YP:function(){return f},Db:function(){return U}});n(42982),n(37762);var i=n(70885),o=n(97326),s=n(15671),r=n(43144),a=n(60136),p=n(54062),l=n(87757),u=n.n(l),h=n(72791),c=n(54164),d=("undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:"undefined"!==typeof self&&self,function(t,e,n,i,o,s,r,a){if(!t){var p;if(void 0===e)p=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,i,o,s,r,a],u=0;(p=new Error(e.replace(/%s/g,(function(){return l[u++]})))).name="Invariant Violation"}throw p.framesToPop=1,p}}),g=(0,h.createContext)(null);function f(){d(!!h.useContext,"useGoogleMap is React hook and requires React version 16.8+");var t=(0,h.useContext)(g);return d(!!t,"useGoogleMap needs a GoogleMap available up in the tree"),t}var v=function(t,e,n,i){var o,s,r={};return o=t,s=function(t,o){var s=n[o];s!==e[o]&&(r[o]=s,t(i,s))},Object.keys(o).forEach((function(t){return s(o[t],t)})),r};function m(t,e,n){var i,o,s,r=(i=n,o=function(n,i,o){return"function"===typeof t[o]&&n.push(google.maps.event.addListener(e,i,t[o])),n},s=[],Object.keys(i).reduce((function(t,e){return o(t,i[e],e)}),s));return r}function y(t){google.maps.event.removeListener(t)}function x(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.forEach(y)}function C(t){var e=t.updaterMap,n=t.eventMap,i=t.prevProps,o=t.nextProps,s=t.instance,r=m(o,s,n);return v(e,i,o,s),r}var k={onDblClick:"dblclick",onDragEnd:"dragend",onDragStart:"dragstart",onMapTypeIdChanged:"maptypeid_changed",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseDown:"mousedown",onMouseUp:"mouseup",onRightClick:"rightclick",onTilesLoaded:"tilesloaded",onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onDrag:"drag",onHeadingChanged:"heading_changed",onIdle:"idle",onProjectionChanged:"projection_changed",onResize:"resize",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},M={extraMapTypes:function(t,e){e.forEach((function(e,n){t.mapTypes.set(String(n),e)}))},center:function(t,e){t.setCenter(e)},clickableIcons:function(t,e){t.setClickableIcons(e)},heading:function(t,e){t.setHeading(e)},mapTypeId:function(t,e){t.setMapTypeId(e)},options:function(t,e){t.setOptions(e)},streetView:function(t,e){t.setStreetView(e)},tilt:function(t,e){t.setTilt(e)},zoom:function(t,e){t.setZoom(e)}},b=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).state={map:null},t.registeredEvents=[],t.mapRef=null,t.getInstance=function(){return null===t.mapRef?null:new google.maps.Map(t.mapRef,t.props.options)},t.panTo=function(e){var n=t.getInstance();n&&n.panTo(e)},t.setMapCallback=function(){null!==t.state.map&&t.props.onLoad&&t.props.onLoad(t.state.map)},t.getRef=function(e){t.mapRef=e},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=this.getInstance();this.registeredEvents=C({updaterMap:M,eventMap:k,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{map:t}}),this.setMapCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.map&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:M,eventMap:k,prevProps:t,nextProps:this.props,instance:this.state.map}))}},{key:"componentWillUnmount",value:function(){null!==this.state.map&&(this.props.onUnmount&&this.props.onUnmount(this.state.map),x(this.registeredEvents))}},{key:"render",value:function(){return h.createElement("div",{id:this.props.id,ref:this.getRef,style:this.props.mapContainerStyle,className:this.props.mapContainerClassName},h.createElement(g.Provider,{value:this.state.map},null!==this.state.map?this.props.children:h.createElement(h.Fragment,null)))}}]),n}(h.PureComponent);function L(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(t);o<i.length;o++)e.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(t,i[o])&&(n[i[o]]=t[i[o]])}return n}function w(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{p(i.next(t))}catch(e){s(e)}}function a(t){try{p(i.throw(t))}catch(e){s(e)}}function p(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}p((i=i.apply(t,e||[])).next())}))}var P="undefined"!==typeof document,E=function(t){var e=t.url,n=t.id,i=t.nonce;return P?new Promise((function(t,o){var s=document.getElementById(n),r=window;if(s){var a=s.getAttribute("data-state");if(s.src===e&&"error"!==a){if("ready"===a)return t(n);var p=r.initMap,l=s.onerror;return r.initMap=function(){p&&p(),t(n)},void(s.onerror=function(t){l&&l(t),o(t)})}s.remove()}var u=document.createElement("script");u.type="text/javascript",u.src=e,u.id=n,u.async=!0,u.nonce=i,u.onerror=function(t){u.setAttribute("data-state","error"),o(t)},r.initMap=function(){u.setAttribute("data-state","ready"),t(n)},document.head.appendChild(u)})).catch((function(t){throw console.error("injectScript error: ",t),t})):Promise.reject(new Error("document is undefined"))},S=function(t){return!(!t.href||0!==t.href.indexOf("https://fonts.googleapis.com/css?family=Roboto"))||("style"===t.tagName.toLowerCase()&&t.styleSheet&&t.styleSheet.cssText&&0===t.styleSheet.cssText.replace("\r\n","").indexOf(".gm-style")?(t.styleSheet.cssText="",!0):"style"===t.tagName.toLowerCase()&&t.innerHTML&&0===t.innerHTML.replace("\r\n","").indexOf(".gm-style")?(t.innerHTML="",!0):"style"===t.tagName.toLowerCase()&&!t.styleSheet&&!t.innerHTML)},_=function(){var t=document.getElementsByTagName("head")[0],e=t.insertBefore.bind(t);t.insertBefore=function(n,i){S(n)||Reflect.apply(e,t,[n,i])};var n=t.appendChild.bind(t);t.appendChild=function(e){S(e)||Reflect.apply(n,t,[e])}};function I(t){var e=t.googleMapsApiKey,n=t.googleMapsClientId,i=t.version,o=void 0===i?"weekly":i,s=t.language,r=t.region,a=t.libraries,p=t.channel,l=t.mapIds,u=[];return d(e&&n||!(e&&n),"You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time."),e?u.push("key=".concat(e)):n&&u.push("client=".concat(n)),o&&u.push("v=".concat(o)),s&&u.push("language=".concat(s)),r&&u.push("region=".concat(r)),a&&a.length&&u.push("libraries=".concat(a.sort().join(","))),p&&u.push("channel=".concat(p)),l&&l.length&&u.push("map_ids=".concat(l.join(","))),u.push("callback=initMap"),"https://maps.googleapis.com/maps/api/js?".concat(u.join("&"))}var Z=!1;function D(){return h.createElement("div",null,"Loading...")}var O,T={id:"script-loader",version:"weekly"},B=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).check=h.createRef(),t.state={loaded:!1},t.cleanupCallback=function(){delete window.google.maps,t.injectScript()},t.isCleaningUp=function(){return w((0,o.Z)(t),void 0,void 0,u().mark((function t(){var e;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=function(t){if(Z){if(P)var e=window.setInterval((function(){Z||(window.clearInterval(e),t())}),1)}else t()},t.abrupt("return",new Promise(e));case 2:case"end":return t.stop()}}),t)})))},t.cleanup=function(){Z=!0;var e=document.getElementById(t.props.id);e&&e.parentNode&&e.parentNode.removeChild(e),Array.prototype.slice.call(document.getElementsByTagName("script")).filter((function(t){return"string"===typeof t.src&&t.src.includes("maps.googleapis")})).forEach((function(t){t.parentNode&&t.parentNode.removeChild(t)})),Array.prototype.slice.call(document.getElementsByTagName("link")).filter((function(t){return"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans"===t.href})).forEach((function(t){t.parentNode&&t.parentNode.removeChild(t)})),Array.prototype.slice.call(document.getElementsByTagName("style")).filter((function(t){return void 0!==t.innerText&&t.innerText.length>0&&t.innerText.includes(".gm-")})).forEach((function(t){t.parentNode&&t.parentNode.removeChild(t)}))},t.injectScript=function(){t.props.preventGoogleFontsLoading&&_(),d(!!t.props.id,'LoadScript requires "id" prop to be a string: %s',t.props.id);var e={id:t.props.id,nonce:t.props.nonce,url:I(t.props)};E(e).then((function(){t.props.onLoad&&t.props.onLoad(),t.setState((function(){return{loaded:!0}}))})).catch((function(e){t.props.onError&&t.props.onError(e),console.error("\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (".concat(t.props.googleMapsApiKey||"-",") or Client ID (").concat(t.props.googleMapsClientId||"-",") to <LoadScript />\n          Otherwise it is a Network issue.\n        "))}))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){if(P){if(window.google&&window.google.maps&&!Z)return void console.error("google api is already presented");this.isCleaningUp().then(this.injectScript).catch((function(t){console.error("Error at injecting script after cleaning up: ",t)}))}}},{key:"componentDidUpdate",value:function(t){this.props.libraries!==t.libraries&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),P&&t.language!==this.props.language&&(this.cleanup(),this.setState((function(){return{loaded:!1}}),this.cleanupCallback))}},{key:"componentWillUnmount",value:function(){var t=this;if(P){this.cleanup();window.setTimeout((function(){t.check.current||(delete window.google,Z=!1)}),1),this.props.onUnmount&&this.props.onUnmount()}}},{key:"render",value:function(){return h.createElement(h.Fragment,null,h.createElement("div",{ref:this.check}),this.state.loaded?this.props.children:this.props.loadingElement||h.createElement(D,null))}}]),n}(h.PureComponent);function U(t){var e=t.id,n=void 0===e?T.id:e,o=t.version,s=void 0===o?T.version:o,r=t.nonce,a=t.googleMapsApiKey,p=t.googleMapsClientId,l=t.language,u=t.region,c=t.libraries,g=t.preventGoogleFontsLoading,f=t.channel,v=t.mapIds,m=h.useRef(!1),y=h.useState(!1),x=(0,i.Z)(y,2),C=x[0],k=x[1],M=h.useState(void 0),b=(0,i.Z)(M,2),L=b[0],w=b[1];h.useEffect((function(){return m.current=!0,function(){m.current=!1}}),[]),h.useEffect((function(){P&&g&&_()}),[g]),h.useEffect((function(){C&&d(!!window.google,"useLoadScript was marked as loaded, but window.google is not present. Something went wrong.")}),[C]);var S=I({version:s,googleMapsApiKey:a,googleMapsClientId:p,language:l,region:u,libraries:c,channel:f,mapIds:v});h.useEffect((function(){function t(){m.current&&(k(!0),O=S)}P&&(window.google&&window.google.maps&&O===S?t():E({id:n,url:S,nonce:r}).then(t).catch((function(t){m.current&&w(t),console.warn("\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (".concat(a||"-",") or Client ID (").concat(p||"-",")\n        Otherwise it is a Network issue.\n      ")),console.error(t)})))}),[n,S,r]);var Z=h.useRef();return h.useEffect((function(){Z.current&&c!==Z.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),Z.current=c}),[c]),{isLoaded:C,loadError:L,url:S}}B.defaultProps=T;var z=h.createElement(D,null);h.memo((function(t){var e=t.loadingElement,n=t.onLoad,i=t.onError,o=t.onUnmount,s=t.children,r=U(L(t,["loadingElement","onLoad","onError","onUnmount","children"])),a=r.isLoaded,p=r.loadError;return h.useEffect((function(){a&&"function"===typeof n&&n()}),[a,n]),h.useEffect((function(){p&&"function"===typeof i&&i(p)}),[p,i]),h.useEffect((function(){return function(){o&&o()}}),[o]),a?s:e||z}));var R={},A={options:function(t,e){t.setOptions(e)}},W=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).state={trafficLayer:null},t.setTrafficLayerCallback=function(){null!==t.state.trafficLayer&&t.props.onLoad&&t.props.onLoad(t.state.trafficLayer)},t.registeredEvents=[],t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.TrafficLayer(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:A,eventMap:R,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{trafficLayer:t}}),this.setTrafficLayerCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.trafficLayer&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:A,eventMap:R,prevProps:t,nextProps:this.props,instance:this.state.trafficLayer}))}},{key:"componentWillUnmount",value:function(){null!==this.state.trafficLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.trafficLayer),x(this.registeredEvents),this.state.trafficLayer.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);W.contextType=g;var V=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).state={bicyclingLayer:null},t.setBicyclingLayerCallback=function(){null!==t.state.bicyclingLayer&&(t.state.bicyclingLayer.setMap(t.context),t.props.onLoad&&t.props.onLoad(t.state.bicyclingLayer))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.BicyclingLayer;this.setState((function(){return{bicyclingLayer:t}}),this.setBicyclingLayerCallback)}},{key:"componentWillUnmount",value:function(){null!==this.state.bicyclingLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.bicyclingLayer),this.state.bicyclingLayer.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);V.contextType=g;var j=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).state={transitLayer:null},t.setTransitLayerCallback=function(){null!==t.state.transitLayer&&(t.state.transitLayer.setMap(t.context),t.props.onLoad&&t.props.onLoad(t.state.transitLayer))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.TransitLayer;this.setState((function(){return{transitLayer:t}}),this.setTransitLayerCallback)}},{key:"componentWillUnmount",value:function(){null!==this.state.transitLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.transitLayer),this.state.transitLayer.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);j.contextType=g;var N={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},H={drawingMode:function(t,e){t.setDrawingMode(e)},options:function(t,e){t.setOptions(e)}};(function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(t){var i;return(0,s.Z)(this,n),(i=e.call(this,t)).registeredEvents=[],i.state={drawingManager:null},i.setDrawingManagerCallback=function(){null!==i.state.drawingManager&&i.props.onLoad&&i.props.onLoad(i.state.drawingManager)},d(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing),i}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.drawing.DrawingManager(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:H,eventMap:N,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{drawingManager:t}}),this.setDrawingManagerCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.drawingManager&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:H,eventMap:N,prevProps:t,nextProps:this.props,instance:this.state.drawingManager}))}},{key:"componentWillUnmount",value:function(){null!==this.state.drawingManager&&(this.props.onUnmount&&this.props.onUnmount(this.state.drawingManager),x(this.registeredEvents),this.state.drawingManager.setMap(null))}},{key:"render",value:function(){return h.createElement(h.Fragment,null)}}]),n}(h.PureComponent)).contextType=g;var F={onAnimationChanged:"animation_changed",onClick:"click",onClickableChanged:"clickable_changed",onCursorChanged:"cursor_changed",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDraggableChanged:"draggable_changed",onDragStart:"dragstart",onFlatChanged:"flat_changed",onIconChanged:"icon_changed",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onPositionChanged:"position_changed",onRightClick:"rightclick",onShapeChanged:"shape_changed",onTitleChanged:"title_changed",onVisibleChanged:"visible_changed",onZindexChanged:"zindex_changed"},G={animation:function(t,e){t.setAnimation(e)},clickable:function(t,e){t.setClickable(e)},cursor:function(t,e){t.setCursor(e)},draggable:function(t,e){t.setDraggable(e)},icon:function(t,e){t.setIcon(e)},label:function(t,e){t.setLabel(e)},map:function(t,e){t.setMap(e)},opacity:function(t,e){t.setOpacity(e)},options:function(t,e){t.setOptions(e)},position:function(t,e){t.setPosition(e)},shape:function(t,e){t.setShape(e)},title:function(t,e){t.setTitle(e)},visible:function(t,e){t.setVisible(e)},zIndex:function(t,e){t.setZIndex(e)}},q=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=Object.assign(Object.assign(Object.assign({},this.props.options||{}),this.props.clusterer?{}:{map:this.context}),{position:this.props.position});this.marker=new google.maps.Marker(t),this.props.clusterer?this.props.clusterer.addMarker(this.marker,!!this.props.noClustererRedraw):this.marker.setMap(this.context),this.registeredEvents=C({updaterMap:G,eventMap:F,prevProps:{},nextProps:this.props,instance:this.marker}),this.props.onLoad&&this.props.onLoad(this.marker)}},{key:"componentDidUpdate",value:function(t){this.marker&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:G,eventMap:F,prevProps:t,nextProps:this.props,instance:this.marker}))}},{key:"componentWillUnmount",value:function(){this.marker&&(this.props.onUnmount&&this.props.onUnmount(this.marker),x(this.registeredEvents),this.props.clusterer?this.props.clusterer.removeMarker(this.marker,!!this.props.noClustererRedraw):this.marker&&this.marker.setMap(null))}},{key:"render",value:function(){var t=this,e=null;return this.props.children&&(e=h.Children.map(this.props.children,(function(e){if(!h.isValidElement(e))return e;var n=e;return h.cloneElement(n,{anchor:t.marker})}))),e||null}}]),n}(h.PureComponent);q.contextType=g;var Y=function(){function t(e,n){e.getClusterer().extend(t,google.maps.OverlayView),this.cluster=e,this.clusterClassName=this.cluster.getClusterer().getClusterClass(),this.className=this.clusterClassName,this.styles=n,this.center=void 0,this.div=null,this.sums=null,this.visible=!1,this.boundsChangedListener=null,this.url="",this.height=0,this.width=0,this.anchorText=[0,0],this.anchorIcon=[0,0],this.textColor="black",this.textSize=11,this.textDecoration="none",this.fontWeight="bold",this.fontStyle="normal",this.fontFamily="Arial,sans-serif",this.backgroundPosition="0 0",this.setMap(e.getMap())}return t.prototype.onAdd=function(){var t,e,n=this;this.div=document.createElement("div"),this.div.className=this.className,this.visible&&this.show(),this.getPanes().overlayMouseTarget.appendChild(this.div),this.boundsChangedListener=google.maps.event.addListener(this.getMap(),"boundschanged",(function(){e=t})),google.maps.event.addDomListener(this.div,"mousedown",(function(){t=!0,e=!1})),google.maps.event.addDomListener(this.div,"click",(function(i){if(t=!1,!e){var o=n.cluster.getClusterer();if(google.maps.event.trigger(o,"click",n.cluster),google.maps.event.trigger(o,"clusterclick",n.cluster),o.getZoomOnClick()){var s=o.getMaxZoom(),r=n.cluster.getBounds();o.getMap().fitBounds(r),setTimeout((function(){o.getMap().fitBounds(r),null!==s&&o.getMap().getZoom()>s&&o.getMap().setZoom(s+1)}),100)}i.cancelBubble=!0,i.stopPropagation&&i.stopPropagation()}})),google.maps.event.addDomListener(this.div,"mouseover",(function(){google.maps.event.trigger(n.cluster.getClusterer(),"mouseover",n.cluster)})),google.maps.event.addDomListener(this.div,"mouseout",(function(){google.maps.event.trigger(n.cluster.getClusterer(),"mouseout",n.cluster)}))},t.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.hide(),null!==this.boundsChangedListener&&google.maps.event.removeListener(this.boundsChangedListener),google.maps.event.clearInstanceListeners(this.div),this.div.parentNode.removeChild(this.div),this.div=null)},t.prototype.draw=function(){if(this.visible&&null!==this.div&&this.center){var t=this.getPosFromLatLng(this.center),e=t.x,n=t.y;this.div.style.top=n+"px",this.div.style.left=e+"px"}},t.prototype.hide=function(){this.div&&(this.div.style.display="none"),this.visible=!1},t.prototype.show=function(){if(this.div&&this.center){var t="",e="",n=this.backgroundPosition.split(" "),i=parseInt(n[0].replace(/^\s+|\s+$/g,""),10),o=parseInt(n[1].replace(/^\s+|\s+$/g,""),10),s=this.getPosFromLatLng(this.center);e=null===this.sums||"undefined"===typeof this.sums.title||""===this.sums.title?this.cluster.getClusterer().getTitle():this.sums.title,this.div.style.cssText=this.createCss(s),t="<img alt='"+e+"' src='"+this.url+"' style='position: absolute; top: "+o+"px; left: "+i+"px; ",this.cluster.getClusterer().enableRetinaIcons||(t+="clip: rect("+-1*o+"px, "+(-1*i+this.width)+"px, "+(-1*o+this.height)+"px, "+-1*i+"px);"),t+="'>",this.div.innerHTML=t+"<div style='position: absolute;top: "+this.anchorText[0]+"px;left: "+this.anchorText[1]+"px;color: "+this.textColor+";font-size: "+this.textSize+"px;font-family: "+this.fontFamily+";font-weight: "+this.fontWeight+";font-style: "+this.fontStyle+";text-decoration: "+this.textDecoration+";text-align: center;width: "+this.width+"px;line-height:"+this.height+"px;'>"+this.sums.text+"</div>",this.div.title=e,this.div.style.display=""}this.visible=!0},t.prototype.useStyle=function(t){this.sums=t;var e=this.cluster.getClusterer().getStyles(),n=e[Math.min(e.length-1,Math.max(0,t.index-1))];this.url=n.url,this.height=n.height,this.width=n.width,n.className&&(this.className=this.clusterClassName+" "+n.className),this.anchorText=n.anchorText||[0,0],this.anchorIcon=n.anchorIcon||[this.height/2,this.width/2],this.textColor=n.textColor||"black",this.textSize=n.textSize||11,this.textDecoration=n.textDecoration||"none",this.fontWeight=n.fontWeight||"bold",this.fontStyle=n.fontStyle||"normal",this.fontFamily=n.fontFamily||"Arial,sans-serif",this.backgroundPosition=n.backgroundPosition||"0 0"},t.prototype.setCenter=function(t){this.center=t},t.prototype.createCss=function(t){var e=[];return e.push("cursor: pointer;"),e.push("position: absolute; top: "+t.y+"px; left: "+t.x+"px;"),e.push("width: "+this.width+"px; height: "+this.height+"px;"),e.join("")},t.prototype.getPosFromLatLng=function(t){var e=this.getProjection().fromLatLngToDivPixel(t);return e.x-=this.anchorIcon[1],e.y-=this.anchorIcon[0],e},t}(),K=function(){function t(t){this.markerClusterer=t,this.map=this.markerClusterer.getMap(),this.gridSize=this.markerClusterer.getGridSize(),this.minClusterSize=this.markerClusterer.getMinimumClusterSize(),this.averageCenter=this.markerClusterer.getAverageCenter(),this.markers=[],this.center=void 0,this.bounds=null,this.clusterIcon=new Y(this,this.markerClusterer.getStyles())}return t.prototype.getSize=function(){return this.markers.length},t.prototype.getMarkers=function(){return this.markers},t.prototype.getCenter=function(){return this.center},t.prototype.getMap=function(){return this.map},t.prototype.getClusterer=function(){return this.markerClusterer},t.prototype.getBounds=function(){for(var t=new google.maps.LatLngBounds(this.center,this.center),e=this.getMarkers(),n=0;n<e.length;n++){var i=e[n].getPosition();i&&t.extend(i)}return t},t.prototype.remove=function(){this.clusterIcon.setMap(null),this.markers=[],delete this.markers},t.prototype.addMarker=function(t){if(this.isMarkerAlreadyAdded(t))return!1;var e;if(this.center){if(this.averageCenter&&(e=t.getPosition())){var n=this.markers.length+1;this.center=new google.maps.LatLng((this.center.lat()*(n-1)+e.lat())/n,(this.center.lng()*(n-1)+e.lng())/n),this.calculateBounds()}}else(e=t.getPosition())&&(this.center=e,this.calculateBounds());t.isAdded=!0,this.markers.push(t);var i=this.markers.length,o=this.markerClusterer.getMaxZoom(),s=this.map.getZoom();if(null!==o&&"undefined"!==typeof s&&s>o)t.getMap()!==this.map&&t.setMap(this.map);else if(i<this.minClusterSize)t.getMap()!==this.map&&t.setMap(this.map);else if(i===this.minClusterSize)for(var r=0;r<i;r++)this.markers[r].setMap(null);else t.setMap(null);return!0},t.prototype.isMarkerInClusterBounds=function(t){if(null!==this.bounds){var e=t.getPosition();if(e)return this.bounds.contains(e)}return!1},t.prototype.calculateBounds=function(){this.bounds=this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center,this.center))},t.prototype.updateIcon=function(){var t=this.markers.length,e=this.markerClusterer.getMaxZoom(),n=this.map.getZoom();null!==e&&"undefined"!==typeof n&&n>e||t<this.minClusterSize?this.clusterIcon.hide():(this.center&&this.clusterIcon.setCenter(this.center),this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers,this.markerClusterer.getStyles().length)),this.clusterIcon.show())},t.prototype.isMarkerAlreadyAdded=function(t){if(this.markers.includes)return this.markers.includes(t);for(var e=0;e<this.markers.length;e++)if(t===this.markers[e])return!0;return!1},t}(),Q=function(t,e){var n=t.length,i=n.toString().length,o=Math.min(i,e);return{text:n.toString(),index:o,title:""}},J=[53,56,66,78,90],X=function(){function t(e,n,i){void 0===n&&(n=[]),void 0===i&&(i={}),this.extend(t,google.maps.OverlayView),this.markers=[],this.clusters=[],this.listeners=[],this.activeMap=null,this.ready=!1,this.gridSize=i.gridSize||60,this.minClusterSize=i.minimumClusterSize||2,this.maxZoom=i.maxZoom||null,this.styles=i.styles||[],this.title=i.title||"",this.zoomOnClick=!0,void 0!==i.zoomOnClick&&(this.zoomOnClick=i.zoomOnClick),this.averageCenter=!1,void 0!==i.averageCenter&&(this.averageCenter=i.averageCenter),this.ignoreHidden=!1,void 0!==i.ignoreHidden&&(this.ignoreHidden=i.ignoreHidden),this.enableRetinaIcons=!1,void 0!==i.enableRetinaIcons&&(this.enableRetinaIcons=i.enableRetinaIcons),this.imagePath=i.imagePath||"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",this.imageExtension=i.imageExtension||"png",this.imageSizes=i.imageSizes||J,this.calculator=i.calculator||Q,this.batchSize=i.batchSize||2e3,this.batchSizeIE=i.batchSizeIE||500,this.clusterClass=i.clusterClass||"cluster",-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize=this.batchSizeIE),this.timerRefStatic=null,this.setupStyles(),this.addMarkers(n,!0),this.setMap(e)}return t.prototype.onAdd=function(){var t=this;this.activeMap=this.getMap(),this.ready=!0,this.repaint(),this.listeners=[google.maps.event.addListener(this.getMap(),"zoom_changed",(function(){t.resetViewport(!1),t.getMap().getZoom()!==(t.get("minZoom")||0)&&t.getMap().getZoom()!==t.get("maxZoom")||google.maps.event.trigger(t,"idle")})),google.maps.event.addListener(this.getMap(),"idle",(function(){t.redraw()}))]},t.prototype.onRemove=function(){for(var t=0;t<this.markers.length;t++)this.markers[t].getMap()!==this.activeMap&&this.markers[t].setMap(this.activeMap);for(t=0;t<this.clusters.length;t++)this.clusters[t].remove();this.clusters=[];for(t=0;t<this.listeners.length;t++)google.maps.event.removeListener(this.listeners[t]);this.listeners=[],this.activeMap=null,this.ready=!1},t.prototype.draw=function(){},t.prototype.setupStyles=function(){if(!(this.styles.length>0))for(var t=0;t<this.imageSizes.length;t++)this.styles.push({url:this.imagePath+(t+1)+"."+this.imageExtension,height:this.imageSizes[t],width:this.imageSizes[t]})},t.prototype.fitMapToMarkers=function(){for(var t=this.getMarkers(),e=new google.maps.LatLngBounds,n=0;n<t.length;n++){var i=t[n].getPosition();i&&e.extend(i)}this.getMap().fitBounds(e)},t.prototype.getGridSize=function(){return this.gridSize},t.prototype.setGridSize=function(t){this.gridSize=t},t.prototype.getMinimumClusterSize=function(){return this.minClusterSize},t.prototype.setMinimumClusterSize=function(t){this.minClusterSize=t},t.prototype.getMaxZoom=function(){return this.maxZoom},t.prototype.setMaxZoom=function(t){this.maxZoom=t},t.prototype.getStyles=function(){return this.styles},t.prototype.setStyles=function(t){this.styles=t},t.prototype.getTitle=function(){return this.title},t.prototype.setTitle=function(t){this.title=t},t.prototype.getZoomOnClick=function(){return this.zoomOnClick},t.prototype.setZoomOnClick=function(t){this.zoomOnClick=t},t.prototype.getAverageCenter=function(){return this.averageCenter},t.prototype.setAverageCenter=function(t){this.averageCenter=t},t.prototype.getIgnoreHidden=function(){return this.ignoreHidden},t.prototype.setIgnoreHidden=function(t){this.ignoreHidden=t},t.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons},t.prototype.setEnableRetinaIcons=function(t){this.enableRetinaIcons=t},t.prototype.getImageExtension=function(){return this.imageExtension},t.prototype.setImageExtension=function(t){this.imageExtension=t},t.prototype.getImagePath=function(){return this.imagePath},t.prototype.setImagePath=function(t){this.imagePath=t},t.prototype.getImageSizes=function(){return this.imageSizes},t.prototype.setImageSizes=function(t){this.imageSizes=t},t.prototype.getCalculator=function(){return this.calculator},t.prototype.setCalculator=function(t){this.calculator=t},t.prototype.getBatchSizeIE=function(){return this.batchSizeIE},t.prototype.setBatchSizeIE=function(t){this.batchSizeIE=t},t.prototype.getClusterClass=function(){return this.clusterClass},t.prototype.setClusterClass=function(t){this.clusterClass=t},t.prototype.getMarkers=function(){return this.markers},t.prototype.getTotalMarkers=function(){return this.markers.length},t.prototype.getClusters=function(){return this.clusters},t.prototype.getTotalClusters=function(){return this.clusters.length},t.prototype.addMarker=function(t,e){this.pushMarkerTo(t),e||this.redraw()},t.prototype.addMarkers=function(t,e){for(var n in t)t.hasOwnProperty(n)&&this.pushMarkerTo(t[n]);e||this.redraw()},t.prototype.pushMarkerTo=function(t){var e=this;t.getDraggable()&&google.maps.event.addListener(t,"dragend",(function(){e.ready&&(t.isAdded=!1,e.repaint())})),t.isAdded=!1,this.markers.push(t)},t.prototype.removeMarker_=function(t){var e=-1;if(this.markers.indexOf)e=this.markers.indexOf(t);else for(var n=0;n<this.markers.length;n++)if(t===this.markers[n]){e=n;break}return-1!==e&&(t.setMap(null),this.markers.splice(e,1),!0)},t.prototype.removeMarker=function(t,e){var n=this.removeMarker_(t);return!e&&n&&this.repaint(),n},t.prototype.removeMarkers=function(t,e){for(var n=!1,i=0;i<t.length;i++)n=n||this.removeMarker_(t[i]);return!e&&n&&this.repaint(),n},t.prototype.clearMarkers=function(){this.resetViewport(!0),this.markers=[]},t.prototype.repaint=function(){var t=this.clusters.slice();this.clusters=[],this.resetViewport(!1),this.redraw(),setTimeout((function(){for(var e=0;e<t.length;e++)t[e].remove()}),0)},t.prototype.getExtendedBounds=function(t){var e=this.getProjection(),n=e.fromLatLngToDivPixel(new google.maps.LatLng(t.getNorthEast().lat(),t.getNorthEast().lng()));n.x+=this.gridSize,n.y-=this.gridSize;var i=e.fromLatLngToDivPixel(new google.maps.LatLng(t.getSouthWest().lat(),t.getSouthWest().lng()));return i.x-=this.gridSize,i.y+=this.gridSize,t.extend(e.fromDivPixelToLatLng(n)),t.extend(e.fromDivPixelToLatLng(i)),t},t.prototype.redraw=function(){this.createClusters(0)},t.prototype.resetViewport=function(t){for(var e=0;e<this.clusters.length;e++)this.clusters[e].remove();this.clusters=[];for(e=0;e<this.markers.length;e++){var n=this.markers[e];n.isAdded=!1,t&&n.setMap(null)}},t.prototype.distanceBetweenPoints=function(t,e){var n=(e.lat()-t.lat())*Math.PI/180,i=(e.lng()-t.lng())*Math.PI/180,o=Math.sin(n/2)*Math.sin(n/2)+Math.cos(t.lat()*Math.PI/180)*Math.cos(e.lat()*Math.PI/180)*Math.sin(i/2)*Math.sin(i/2);return 2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))*6371},t.prototype.isMarkerInBounds=function(t,e){var n=t.getPosition();return!!n&&e.contains(n)},t.prototype.addToClosestCluster=function(t){for(var e,n=4e4,i=null,o=0;o<this.clusters.length;o++){var s=(e=this.clusters[o]).getCenter(),r=t.getPosition();if(s&&r){var a=this.distanceBetweenPoints(s,r);a<n&&(n=a,i=e)}}i&&i.isMarkerInClusterBounds(t)?i.addMarker(t):((e=new K(this)).addMarker(t),this.clusters.push(e))},t.prototype.createClusters=function(t){var e=this;if(this.ready){0===t&&(google.maps.event.trigger(this,"clusteringbegin",this),null!==this.timerRefStatic&&(window.clearTimeout(this.timerRefStatic),delete this.timerRefStatic));for(var n=this.getMap().getZoom()>3?new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625)),i=this.getExtendedBounds(n),o=Math.min(t+this.batchSize,this.markers.length),s=t;s<o;s++){var r=this.markers[s];!r.isAdded&&this.isMarkerInBounds(r,i)&&(!this.ignoreHidden||this.ignoreHidden&&r.getVisible())&&this.addToClosestCluster(r)}if(o<this.markers.length)this.timerRefStatic=window.setTimeout((function(){e.createClusters(o)}),0);else{this.timerRefStatic=null,google.maps.event.trigger(this,"clusteringend",this);for(s=0;s<this.clusters.length;s++)this.clusters[s].updateIcon()}}},t.prototype.extend=function(t,e){return function(t){for(var e in t.prototype)this.prototype[e]=t.prototype[e];return this}.apply(t,[e])},t}(),$={onClick:"click",onClusteringBegin:"clusteringbegin",onClusteringEnd:"clusteringend",onMouseOut:"mouseout",onMouseOver:"mouseover"},tt={averageCenter:function(t,e){t.setAverageCenter(e)},batchSizeIE:function(t,e){t.setBatchSizeIE(e)},calculator:function(t,e){t.setCalculator(e)},clusterClass:function(t,e){t.setClusterClass(e)},enableRetinaIcons:function(t,e){t.setEnableRetinaIcons(e)},gridSize:function(t,e){t.setGridSize(e)},ignoreHidden:function(t,e){t.setIgnoreHidden(e)},imageExtension:function(t,e){t.setImageExtension(e)},imagePath:function(t,e){t.setImagePath(e)},imageSizes:function(t,e){t.setImageSizes(e)},maxZoom:function(t,e){t.setMaxZoom(e)},minimumClusterSize:function(t,e){t.setMinimumClusterSize(e)},styles:function(t,e){t.setStyles(e)},title:function(t,e){t.setTitle(e)},zoomOnClick:function(t,e){t.setZoomOnClick(e)}},et=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={markerClusterer:null},t.setClustererCallback=function(){null!==t.state.markerClusterer&&t.props.onLoad&&t.props.onLoad(t.state.markerClusterer)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){if(this.context){var t=new X(this.context,[],this.props.options);this.registeredEvents=C({updaterMap:tt,eventMap:$,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{markerClusterer:t}}),this.setClustererCallback)}}},{key:"componentDidUpdate",value:function(t){this.state.markerClusterer&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:tt,eventMap:$,prevProps:t,nextProps:this.props,instance:this.state.markerClusterer}))}},{key:"componentWillUnmount",value:function(){null!==this.state.markerClusterer&&(this.props.onUnmount&&this.props.onUnmount(this.state.markerClusterer),x(this.registeredEvents),this.state.markerClusterer.setMap(null))}},{key:"render",value:function(){return null!==this.state.markerClusterer?this.props.children(this.state.markerClusterer):null}}]),n}(h.PureComponent);et.contextType=g;var nt=function(){function t(e){void 0===e&&(e={}),this.extend(t,google.maps.OverlayView),this.content=e.content||"",this.disableAutoPan=e.disableAutoPan||!1,this.maxWidth=e.maxWidth||0,this.pixelOffset=e.pixelOffset||new google.maps.Size(0,0),this.position=e.position||new google.maps.LatLng(0,0),this.zIndex=e.zIndex||null,this.boxClass=e.boxClass||"infoBox",this.boxStyle=e.boxStyle||{},this.closeBoxMargin=e.closeBoxMargin||"2px",this.closeBoxURL=e.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif",""===e.closeBoxURL&&(this.closeBoxURL=""),this.infoBoxClearance=e.infoBoxClearance||new google.maps.Size(1,1),"undefined"===typeof e.visible&&("undefined"===typeof e.isHidden?e.visible=!0:e.visible=!e.isHidden),this.isHidden=!e.visible,this.alignBottom=e.alignBottom||!1,this.pane=e.pane||"floatPane",this.enableEventPropagation=e.enableEventPropagation||!1,this.div=null,this.closeListener=null,this.moveListener=null,this.mapListener=null,this.contextListener=null,this.eventListeners=null,this.fixedWidthSet=null}return t.prototype.createInfoBoxDiv=function(){var t=this;function e(t){t.cancelBubble=!0,t.stopPropagation&&t.stopPropagation()}if(!this.div){if(this.div=document.createElement("div"),this.setBoxStyle(),"string"===typeof this.content?this.div.innerHTML=this.getCloseBoxImg()+this.content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(this.content)),this.getPanes()[this.pane].appendChild(this.div),this.addClickHandler(),this.div.style.width)this.fixedWidthSet=!0;else if(0!==this.maxWidth&&this.div.offsetWidth>this.maxWidth)this.div.style.width=this.maxWidth+"px",this.fixedWidthSet=!0;else{var n=this.getBoxWidths();this.div.style.width=this.div.offsetWidth-n.left-n.right+"px",this.fixedWidthSet=!1}if(this.panBox(this.disableAutoPan),!this.enableEventPropagation){this.eventListeners=[];for(var i=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"],o=0;o<i.length;o++)this.eventListeners.push(google.maps.event.addDomListener(this.div,i[o],e));this.eventListeners.push(google.maps.event.addDomListener(this.div,"mouseover",(function(){t.div&&(t.div.style.cursor="default")})))}this.contextListener=google.maps.event.addDomListener(this.div,"contextmenu",(function(n){n.returnValue=!1,n.preventDefault&&n.preventDefault(),t.enableEventPropagation||e(n)})),google.maps.event.trigger(this,"domready")}},t.prototype.getCloseBoxImg=function(){var t="";return""!==this.closeBoxURL&&(t='<img alt=""',t+=' aria-hidden="true"',t+=" src='"+this.closeBoxURL+"'",t+=" align=right",t+=" style='",t+=" position: relative;",t+=" cursor: pointer;",t+=" margin: "+this.closeBoxMargin+";",t+="'>"),t},t.prototype.addClickHandler=function(){if(this.div&&this.div.firstChild&&""!==this.closeBoxURL){var t=this.div.firstChild;this.closeListener=google.maps.event.addDomListener(t,"click",this.getCloseClickHandler())}else this.closeListener=null},t.prototype.getCloseClickHandler=function(){var t=this;return function(e){e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation(),google.maps.event.trigger(t,"closeclick"),t.close()}},t.prototype.panBox=function(t){if(this.div&&!t){var e=this.getMap();if(e instanceof google.maps.Map){var n=0,i=0,o=e.getBounds();o&&!o.contains(this.position)&&e.setCenter(this.position);var s=e.getDiv(),r=s.offsetWidth,a=s.offsetHeight,p=this.pixelOffset.width,l=this.pixelOffset.height,u=this.div.offsetWidth,h=this.div.offsetHeight,c=this.infoBoxClearance.width,d=this.infoBoxClearance.height,g=this.getProjection().fromLatLngToContainerPixel(this.position);null!==g&&(g.x<-p+c?n=g.x+p-c:g.x+u+p+c>r&&(n=g.x+u+p+c-r),this.alignBottom?g.y<-l+d+h?i=g.y+l-d-h:g.y+l+d>a&&(i=g.y+l+d-a):g.y<-l+d?i=g.y+l-d:g.y+h+l+d>a&&(i=g.y+h+l+d-a)),0===n&&0===i||e.panBy(n,i)}}},t.prototype.setBoxStyle=function(){if(this.div){this.div.className=this.boxClass,this.div.style.cssText="";var t=this.boxStyle;for(var e in t)t.hasOwnProperty(e)&&(this.div.style[e]=t[e]);if(this.div.style.webkitTransform="translateZ(0)","undefined"!==typeof this.div.style.opacity&&""!==this.div.style.opacity){var n=parseFloat(this.div.style.opacity||"");this.div.style.msFilter='"progid:DXImageTransform.Microsoft.Alpha(Opacity='+100*n+')"',this.div.style.filter="alpha(opacity="+100*n+")"}this.div.style.position="absolute",this.div.style.visibility="hidden",null!==this.zIndex&&(this.div.style.zIndex=this.zIndex+""),this.div.style.overflow||(this.div.style.overflow="auto")}},t.prototype.getBoxWidths=function(){var t={top:0,bottom:0,left:0,right:0};if(!this.div)return t;if(document.defaultView&&document.defaultView.getComputedStyle){var e=this.div.ownerDocument,n=e&&e.defaultView?e.defaultView.getComputedStyle(this.div,""):null;n&&(t.top=parseInt(n.borderTopWidth||"",10)||0,t.bottom=parseInt(n.borderBottomWidth||"",10)||0,t.left=parseInt(n.borderLeftWidth||"",10)||0,t.right=parseInt(n.borderRightWidth||"",10)||0)}else if(document.documentElement.currentStyle){var i=this.div.currentStyle;i&&(t.top=parseInt(i.borderTopWidth||"",10)||0,t.bottom=parseInt(i.borderBottomWidth||"",10)||0,t.left=parseInt(i.borderLeftWidth||"",10)||0,t.right=parseInt(i.borderRightWidth||"",10)||0)}return t},t.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.div.parentNode.removeChild(this.div),this.div=null)},t.prototype.draw=function(){if(this.createInfoBoxDiv(),this.div){var t=this.getProjection().fromLatLngToDivPixel(this.position);null!==t&&(this.div.style.left=t.x+this.pixelOffset.width+"px",this.alignBottom?this.div.style.bottom=-(t.y+this.pixelOffset.height)+"px":this.div.style.top=t.y+this.pixelOffset.height+"px"),this.isHidden?this.div.style.visibility="hidden":this.div.style.visibility="visible"}},t.prototype.setOptions=function(t){void 0===t&&(t={}),"undefined"!==typeof t.boxClass&&(this.boxClass=t.boxClass,this.setBoxStyle()),"undefined"!==typeof t.boxStyle&&(this.boxStyle=t.boxStyle,this.setBoxStyle()),"undefined"!==typeof t.content&&this.setContent(t.content),"undefined"!==typeof t.disableAutoPan&&(this.disableAutoPan=t.disableAutoPan),"undefined"!==typeof t.maxWidth&&(this.maxWidth=t.maxWidth),"undefined"!==typeof t.pixelOffset&&(this.pixelOffset=t.pixelOffset),"undefined"!==typeof t.alignBottom&&(this.alignBottom=t.alignBottom),"undefined"!==typeof t.position&&this.setPosition(t.position),"undefined"!==typeof t.zIndex&&this.setZIndex(t.zIndex),"undefined"!==typeof t.closeBoxMargin&&(this.closeBoxMargin=t.closeBoxMargin),"undefined"!==typeof t.closeBoxURL&&(this.closeBoxURL=t.closeBoxURL),"undefined"!==typeof t.infoBoxClearance&&(this.infoBoxClearance=t.infoBoxClearance),"undefined"!==typeof t.isHidden&&(this.isHidden=t.isHidden),"undefined"!==typeof t.visible&&(this.isHidden=!t.visible),"undefined"!==typeof t.enableEventPropagation&&(this.enableEventPropagation=t.enableEventPropagation),this.div&&this.draw()},t.prototype.setContent=function(t){this.content=t,this.div&&(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.fixedWidthSet||(this.div.style.width=""),"string"===typeof t?this.div.innerHTML=this.getCloseBoxImg()+t:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(t)),this.fixedWidthSet||(this.div.style.width=this.div.offsetWidth+"px","string"===typeof t?this.div.innerHTML=this.getCloseBoxImg()+t:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(t))),this.addClickHandler()),google.maps.event.trigger(this,"content_changed")},t.prototype.setPosition=function(t){this.position=t,this.div&&this.draw(),google.maps.event.trigger(this,"position_changed")},t.prototype.setVisible=function(t){this.isHidden=!t,this.div&&(this.div.style.visibility=this.isHidden?"hidden":"visible")},t.prototype.setZIndex=function(t){this.zIndex=t,this.div&&(this.div.style.zIndex=t+""),google.maps.event.trigger(this,"zindex_changed")},t.prototype.getContent=function(){return this.content},t.prototype.getPosition=function(){return this.position},t.prototype.getZIndex=function(){return this.zIndex},t.prototype.getVisible=function(){var t=this.getMap();return"undefined"!==typeof t&&null!==t&&!this.isHidden},t.prototype.show=function(){this.isHidden=!1,this.div&&(this.div.style.visibility="visible")},t.prototype.hide=function(){this.isHidden=!0,this.div&&(this.div.style.visibility="hidden")},t.prototype.open=function(t,e){var n=this;e&&(this.position=e.getPosition(),this.moveListener=google.maps.event.addListener(e,"position_changed",(function(){var t=e.getPosition();n.setPosition(t)})),this.mapListener=google.maps.event.addListener(e,"map_changed",(function(){n.setMap(e.map)}))),this.setMap(t),this.div&&this.panBox()},t.prototype.close=function(){if(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.eventListeners){for(var t=0;t<this.eventListeners.length;t++)google.maps.event.removeListener(this.eventListeners[t]);this.eventListeners=null}this.moveListener&&(google.maps.event.removeListener(this.moveListener),this.moveListener=null),this.mapListener&&(google.maps.event.removeListener(this.mapListener),this.mapListener=null),this.contextListener&&(google.maps.event.removeListener(this.contextListener),this.contextListener=null),this.setMap(null)},t.prototype.extend=function(t,e){return function(t){for(var e in t.prototype)this.prototype.hasOwnProperty(e)||(this.prototype[e]=t.prototype[e]);return this}.apply(t,[e])},t}(),it={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},ot={options:function(t,e){t.setOptions(e)},position:function(t,e){e instanceof google.maps.LatLng?t.setPosition(e):t.setPosition(new google.maps.LatLng(e.lat,e.lng))},visible:function(t,e){t.setVisible(e)},zIndex:function(t,e){t.setZIndex(e)}},st=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.containerElement=null,t.state={infoBox:null},t.open=function(e,n){n?e.open(t.context,n):e.getPosition()?e.open(t.context):d(!1,"You must provide either an anchor or a position prop for <InfoBox>.")},t.setInfoBoxCallback=function(){var e=t.props,n=e.anchor,i=e.onLoad,o=t.state.infoBox;null!==o&&null!==t.containerElement&&(o.setContent(t.containerElement),t.open(o,n),i&&i(o))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t,e=this.props.options||{},n=e.position,i=L(e,["position"]);!n||n instanceof google.maps.LatLng||(t=new google.maps.LatLng(n.lat,n.lng));var o=new nt(Object.assign(Object.assign({},i),t?{position:t}:{}));this.containerElement=document.createElement("div"),this.registeredEvents=C({updaterMap:ot,eventMap:it,prevProps:{},nextProps:this.props,instance:o}),this.setState({infoBox:o},this.setInfoBoxCallback)}},{key:"componentDidUpdate",value:function(t){var e=this.state.infoBox;null!==e&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:ot,eventMap:it,prevProps:t,nextProps:this.props,instance:e}))}},{key:"componentWillUnmount",value:function(){var t=this.props.onUnmount,e=this.state.infoBox;null!==e&&(t&&t(e),x(this.registeredEvents),e.close())}},{key:"render",value:function(){return this.containerElement?c.createPortal(h.Children.only(this.props.children),this.containerElement):null}}]),n}(h.PureComponent);st.contextType=g;var rt={exports:{}},at={exports:{}};!function(t){function e(t,e,n,i){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,e,n,i)}e.prototype.run=function(t,e,n,i){this._init(t,e,n,i);for(var o=0;o<this._datasetLength;o++)if(1!==this._visited[o]){this._visited[o]=1;var s=this._regionQuery(o);if(s.length<this.minPts)this.noise.push(o);else{var r=this.clusters.length;this.clusters.push([]),this._addToCluster(o,r),this._expandCluster(r,s)}}return this.clusters},e.prototype._init=function(t,e,n,i){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}e&&(this.epsilon=e),n&&(this.minPts=n),i&&(this.distance=i)},e.prototype._expandCluster=function(t,e){for(var n=0;n<e.length;n++){var i=e[n];if(1!==this._visited[i]){this._visited[i]=1;var o=this._regionQuery(i);o.length>=this.minPts&&(e=this._mergeArrays(e,o))}1!==this._assigned[i]&&this._addToCluster(i,t)}},e.prototype._addToCluster=function(t,e){this.clusters[e].push(t),this._assigned[t]=1},e.prototype._regionQuery=function(t){for(var e=[],n=0;n<this._datasetLength;n++){this.distance(this.dataset[t],this.dataset[n])<this.epsilon&&e.push(n)}return e},e.prototype._mergeArrays=function(t,e){for(var n=e.length,i=0;i<n;i++){var o=e[i];t.indexOf(o)<0&&t.push(o)}return t},e.prototype._euclideanDistance=function(t,e){for(var n=0,i=Math.min(t.length,e.length);i--;)n+=(t[i]-e[i])*(t[i]-e[i]);return Math.sqrt(n)},t.exports&&(t.exports=e)}(at);var pt={exports:{}};!function(t){function e(t,e,n){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,e,n)}e.prototype.init=function(t,e,n){this.assignments=[],this.centroids=[],"undefined"!==typeof t&&(this.dataset=t),"undefined"!==typeof e&&(this.k=e),"undefined"!==typeof n&&(this.distance=n)},e.prototype.run=function(t,e){this.init(t,e);for(var n=this.dataset.length,i=0;i<this.k;i++)this.centroids[i]=this.randomCentroid();for(var o=!0;o;){o=this.assign();for(var s=0;s<this.k;s++){for(var r=new Array(u),a=0,p=0;p<u;p++)r[p]=0;for(var l=0;l<n;l++){var u=this.dataset[l].length;if(s===this.assignments[l]){for(p=0;p<u;p++)r[p]+=this.dataset[l][p];a++}}if(a>0){for(p=0;p<u;p++)r[p]/=a;this.centroids[s]=r}else this.centroids[s]=this.randomCentroid(),o=!0}}return this.getClusters()},e.prototype.randomCentroid=function(){var t,e,n=this.dataset.length-1;do{e=Math.round(Math.random()*n),t=this.dataset[e]}while(this.centroids.indexOf(t)>=0);return t},e.prototype.assign=function(){for(var t,e=!1,n=this.dataset.length,i=0;i<n;i++)(t=this.argmin(this.dataset[i],this.centroids,this.distance))!=this.assignments[i]&&(this.assignments[i]=t,e=!0);return e},e.prototype.getClusters=function(){for(var t,e=new Array(this.k),n=0;n<this.assignments.length;n++)"undefined"===typeof e[t=this.assignments[n]]&&(e[t]=[]),e[t].push(n);return e},e.prototype.argmin=function(t,e,n){for(var i,o=Number.MAX_VALUE,s=0,r=e.length,a=0;a<r;a++)(i=n(t,e[a]))<o&&(o=i,s=a);return s},e.prototype.distance=function(t,e){for(var n=0,i=Math.min(t.length,e.length);i--;){var o=t[i]-e[i];n+=o*o}return Math.sqrt(n)},t.exports&&(t.exports=e)}(pt);var lt,ut={exports:{}},ht={exports:{}};!function(t){function e(t,e,n){this._queue=[],this._priorities=[],this._sorting="desc",this._init(t,e,n)}e.prototype.insert=function(t,e){for(var n=this._queue.length,i=n;i--;){var o=this._priorities[i];"desc"===this._sorting?e>o&&(n=i):e<o&&(n=i)}this._insertAt(t,e,n)},e.prototype.remove=function(t){for(var e=this._queue.length;e--;){if(t===this._queue[e]){this._queue.splice(e,1),this._priorities.splice(e,1);break}}},e.prototype.forEach=function(t){this._queue.forEach(t)},e.prototype.getElements=function(){return this._queue},e.prototype.getElementPriority=function(t){return this._priorities[t]},e.prototype.getPriorities=function(){return this._priorities},e.prototype.getElementsWithPriorities=function(){for(var t=[],e=0,n=this._queue.length;e<n;e++)t.push([this._queue[e],this._priorities[e]]);return t},e.prototype._init=function(t,e,n){if(t&&e){if(this._queue=[],this._priorities=[],t.length!==e.length)throw new Error("Arrays must have the same length");for(var i=0;i<t.length;i++)this.insert(t[i],e[i])}n&&(this._sorting=n)},e.prototype._insertAt=function(t,e,n){this._queue.length===n?(this._queue.push(t),this._priorities.push(e)):(this._queue.splice(n,0,t),this._priorities.splice(n,0,e))},t.exports&&(t.exports=e)}(ht),function(t){if(t.exports)var e=ht.exports;function n(t,e,n,i){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,e,n,i)}n.prototype.run=function(t,n,i,o){this._init(t,n,i,o);for(var s=0,r=this.dataset.length;s<r;s++)if(1!==this._processed[s]){this._processed[s]=1,this.clusters.push([s]);var a=this.clusters.length-1;this._orderedList.push(s);var p=new e(null,null,"asc"),l=this._regionQuery(s);void 0!==this._distanceToCore(s)&&(this._updateQueue(s,l,p),this._expandCluster(a,p))}return this.clusters},n.prototype.getReachabilityPlot=function(){for(var t=[],e=0,n=this._orderedList.length;e<n;e++){var i=this._orderedList[e],o=this._reachability[i];t.push([i,o])}return t},n.prototype._init=function(t,e,n,i){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}e&&(this.epsilon=e),n&&(this.minPts=n),i&&(this.distance=i)},n.prototype._updateQueue=function(t,e,n){var i=this;this._coreDistance=this._distanceToCore(t),e.forEach((function(e){if(void 0===i._processed[e]){var o=i.distance(i.dataset[t],i.dataset[e]),s=Math.max(i._coreDistance,o);void 0===i._reachability[e]?(i._reachability[e]=s,n.insert(e,s)):s<i._reachability[e]&&(i._reachability[e]=s,n.remove(e),n.insert(e,s))}}))},n.prototype._expandCluster=function(t,e){for(var n=e.getElements(),i=0,o=n.length;i<o;i++){var s=n[i];if(void 0===this._processed[s]){var r=this._regionQuery(s);this._processed[s]=1,this.clusters[t].push(s),this._orderedList.push(s),void 0!==this._distanceToCore(s)&&(this._updateQueue(s,r,e),this._expandCluster(t,e))}}},n.prototype._distanceToCore=function(t){for(var e=this.epsilon,n=0;n<e;n++){if(this._regionQuery(t,n).length>=this.minPts)return n}},n.prototype._regionQuery=function(t,e){e=e||this.epsilon;for(var n=[],i=0,o=this.dataset.length;i<o;i++)this.distance(this.dataset[t],this.dataset[i])<e&&n.push(i);return n},n.prototype._euclideanDistance=function(t,e){for(var n=0,i=Math.min(t.length,e.length);i--;)n+=(t[i]-e[i])*(t[i]-e[i]);return Math.sqrt(n)},t.exports&&(t.exports=n)}(ut),(lt=rt).exports&&(lt.exports={DBSCAN:at.exports,KMEANS:pt.exports,OPTICS:ut.exports,PriorityQueue:ht.exports});var ct={exports:{}};!function(t,e){t.exports=function(){function t(n,i,o,s,r,a){if(!(r-s<=o)){var p=s+r>>1;e(n,i,p,s,r,a%2),t(n,i,o,s,p-1,a+1),t(n,i,o,p+1,r,a+1)}}function e(t,i,o,s,r,a){for(;r>s;){if(r-s>600){var p=r-s+1,l=o-s+1,u=Math.log(p),h=.5*Math.exp(2*u/3),c=.5*Math.sqrt(u*h*(p-h)/p)*(l-p/2<0?-1:1);e(t,i,o,Math.max(s,Math.floor(o-l*h/p+c)),Math.min(r,Math.floor(o+(p-l)*h/p+c)),a)}var d=i[2*o+a],g=s,f=r;for(n(t,i,s,o),i[2*r+a]>d&&n(t,i,s,r);g<f;){for(n(t,i,g,f),g++,f--;i[2*g+a]<d;)g++;for(;i[2*f+a]>d;)f--}i[2*s+a]===d?n(t,i,s,f):n(t,i,++f,r),f<=o&&(s=f+1),o<=f&&(r=f-1)}}function n(t,e,n,o){i(t,n,o),i(e,2*n,2*o),i(e,2*n+1,2*o+1)}function i(t,e,n){var i=t[e];t[e]=t[n],t[n]=i}function o(t,e,n,i,o,s,r){for(var a,p,l=[0,t.length-1,0],u=[];l.length;){var h=l.pop(),c=l.pop(),d=l.pop();if(c-d<=r)for(var g=d;g<=c;g++)a=e[2*g],p=e[2*g+1],a>=n&&a<=o&&p>=i&&p<=s&&u.push(t[g]);else{var f=Math.floor((d+c)/2);a=e[2*f],p=e[2*f+1],a>=n&&a<=o&&p>=i&&p<=s&&u.push(t[f]);var v=(h+1)%2;(0===h?n<=a:i<=p)&&(l.push(d),l.push(f-1),l.push(v)),(0===h?o>=a:s>=p)&&(l.push(f+1),l.push(c),l.push(v))}}return u}function s(t,e,n,i,o,s){for(var a=[0,t.length-1,0],p=[],l=o*o;a.length;){var u=a.pop(),h=a.pop(),c=a.pop();if(h-c<=s)for(var d=c;d<=h;d++)r(e[2*d],e[2*d+1],n,i)<=l&&p.push(t[d]);else{var g=Math.floor((c+h)/2),f=e[2*g],v=e[2*g+1];r(f,v,n,i)<=l&&p.push(t[g]);var m=(u+1)%2;(0===u?n-o<=f:i-o<=v)&&(a.push(c),a.push(g-1),a.push(m)),(0===u?n+o>=f:i+o>=v)&&(a.push(g+1),a.push(h),a.push(m))}}return p}function r(t,e,n,i){var o=t-n,s=e-i;return o*o+s*s}var a=function(t){return t[0]},p=function(t){return t[1]},l=function(e,n,i,o,s){void 0===n&&(n=a),void 0===i&&(i=p),void 0===o&&(o=64),void 0===s&&(s=Float64Array),this.nodeSize=o,this.points=e;for(var r=e.length<65536?Uint16Array:Uint32Array,l=this.ids=new r(e.length),u=this.coords=new s(2*e.length),h=0;h<e.length;h++)l[h]=h,u[2*h]=n(e[h]),u[2*h+1]=i(e[h]);t(l,u,o,0,l.length-1,0)};l.prototype.range=function(t,e,n,i){return o(this.ids,this.coords,t,e,n,i,this.nodeSize)},l.prototype.within=function(t,e,n){return s(this.ids,this.coords,t,e,n,this.nodeSize)};var u,h={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:function(t){return t}},c=Math.fround||(u=new Float32Array(1),function(t){return u[0]=+t,u[0]}),d=function(t){this.options=M(Object.create(h),t),this.trees=new Array(this.options.maxZoom+1)};function g(t,e,n,i,o){return{x:c(t),y:c(e),zoom:1/0,id:n,parentId:-1,numPoints:i,properties:o}}function f(t,e){var n=t.geometry.coordinates,i=n[0],o=n[1];return{x:c(y(i)),y:c(x(o)),zoom:1/0,index:e,parentId:-1}}function v(t){return{type:"Feature",id:t.id,properties:m(t),geometry:{type:"Point",coordinates:[C(t.x),k(t.y)]}}}function m(t){var e=t.numPoints,n=e>=1e4?Math.round(e/1e3)+"k":e>=1e3?Math.round(e/100)/10+"k":e;return M(M({},t.properties),{cluster:!0,cluster_id:t.id,point_count:e,point_count_abbreviated:n})}function y(t){return t/360+.5}function x(t){var e=Math.sin(t*Math.PI/180),n=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return n<0?0:n>1?1:n}function C(t){return 360*(t-.5)}function k(t){var e=(180-360*t)*Math.PI/180;return 360*Math.atan(Math.exp(e))/Math.PI-90}function M(t,e){for(var n in e)t[n]=e[n];return t}function b(t){return t.x}function L(t){return t.y}return d.prototype.load=function(t){var e=this.options,n=e.log,i=e.minZoom,o=e.maxZoom,s=e.nodeSize;n&&console.time("total time");var r="prepare "+t.length+" points";n&&console.time(r),this.points=t;for(var a=[],p=0;p<t.length;p++)t[p].geometry&&a.push(f(t[p],p));this.trees[o+1]=new l(a,b,L,s,Float32Array),n&&console.timeEnd(r);for(var u=o;u>=i;u--){var h=+Date.now();a=this._cluster(a,u),this.trees[u]=new l(a,b,L,s,Float32Array),n&&console.log("z%d: %d clusters in %dms",u,a.length,+Date.now()-h)}return n&&console.timeEnd("total time"),this},d.prototype.getClusters=function(t,e){var n=((t[0]+180)%360+360)%360-180,i=Math.max(-90,Math.min(90,t[1])),o=180===t[2]?180:((t[2]+180)%360+360)%360-180,s=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)n=-180,o=180;else if(n>o){var r=this.getClusters([n,i,180,s],e),a=this.getClusters([-180,i,o,s],e);return r.concat(a)}for(var p=this.trees[this._limitZoom(e)],l=[],u=0,h=p.range(y(n),x(s),y(o),x(i));u<h.length;u+=1){var c=h[u],d=p.points[c];l.push(d.numPoints?v(d):this.points[d.index])}return l},d.prototype.getChildren=function(t){var e=this._getOriginId(t),n=this._getOriginZoom(t),i="No cluster with the specified id.",o=this.trees[n];if(!o)throw new Error(i);var s=o.points[e];if(!s)throw new Error(i);for(var r=this.options.radius/(this.options.extent*Math.pow(2,n-1)),a=[],p=0,l=o.within(s.x,s.y,r);p<l.length;p+=1){var u=l[p],h=o.points[u];h.parentId===t&&a.push(h.numPoints?v(h):this.points[h.index])}if(0===a.length)throw new Error(i);return a},d.prototype.getLeaves=function(t,e,n){e=e||10,n=n||0;var i=[];return this._appendLeaves(i,t,e,n,0),i},d.prototype.getTile=function(t,e,n){var i=this.trees[this._limitZoom(t)],o=Math.pow(2,t),s=this.options,r=s.extent,a=s.radius/r,p=(n-a)/o,l=(n+1+a)/o,u={features:[]};return this._addTileFeatures(i.range((e-a)/o,p,(e+1+a)/o,l),i.points,e,n,o,u),0===e&&this._addTileFeatures(i.range(1-a/o,p,1,l),i.points,o,n,o,u),e===o-1&&this._addTileFeatures(i.range(0,p,a/o,l),i.points,-1,n,o,u),u.features.length?u:null},d.prototype.getClusterExpansionZoom=function(t){for(var e=this._getOriginZoom(t)-1;e<=this.options.maxZoom;){var n=this.getChildren(t);if(e++,1!==n.length)break;t=n[0].properties.cluster_id}return e},d.prototype._appendLeaves=function(t,e,n,i,o){for(var s=0,r=this.getChildren(e);s<r.length;s+=1){var a=r[s],p=a.properties;if(p&&p.cluster?o+p.point_count<=i?o+=p.point_count:o=this._appendLeaves(t,p.cluster_id,n,i,o):o<i?o++:t.push(a),t.length===n)break}return o},d.prototype._addTileFeatures=function(t,e,n,i,o,s){for(var r=0,a=t;r<a.length;r+=1){var p=e[a[r]],l=p.numPoints,u=void 0,h=void 0,c=void 0;if(l)u=m(p),h=p.x,c=p.y;else{var d=this.points[p.index];u=d.properties,h=y(d.geometry.coordinates[0]),c=x(d.geometry.coordinates[1])}var g={type:1,geometry:[[Math.round(this.options.extent*(h*o-n)),Math.round(this.options.extent*(c*o-i))]],tags:u},f=void 0;l?f=p.id:this.options.generateId?f=p.index:this.points[p.index].id&&(f=this.points[p.index].id),void 0!==f&&(g.id=f),s.features.push(g)}},d.prototype._limitZoom=function(t){return Math.max(this.options.minZoom,Math.min(+t,this.options.maxZoom+1))},d.prototype._cluster=function(t,e){for(var n=[],i=this.options,o=i.radius,s=i.extent,r=i.reduce,a=i.minPoints,p=o/(s*Math.pow(2,e)),l=0;l<t.length;l++){var u=t[l];if(!(u.zoom<=e)){u.zoom=e;for(var h=this.trees[e+1],c=h.within(u.x,u.y,p),d=u.numPoints||1,f=d,v=0,m=c;v<m.length;v+=1){var y=m[v],x=h.points[y];x.zoom>e&&(f+=x.numPoints||1)}if(f>d&&f>=a){for(var C=u.x*d,k=u.y*d,M=r&&d>1?this._map(u,!0):null,b=(l<<5)+(e+1)+this.points.length,L=0,w=c;L<w.length;L+=1){var P=w[L],E=h.points[P];if(!(E.zoom<=e)){E.zoom=e;var S=E.numPoints||1;C+=E.x*S,k+=E.y*S,E.parentId=b,r&&(M||(M=this._map(u,!0)),r(M,this._map(E)))}}u.parentId=b,n.push(g(C/f,k/f,b,f,M))}else if(n.push(u),f>1)for(var _=0,I=c;_<I.length;_+=1){var Z=I[_],D=h.points[Z];D.zoom<=e||(D.zoom=e,n.push(D))}}}return n},d.prototype._getOriginId=function(t){return t-this.points.length>>5},d.prototype._getOriginZoom=function(t){return(t-this.points.length)%32},d.prototype._map=function(t,e){if(t.numPoints)return e?M({},t.properties):t.properties;var n=this.points[t.index].properties,i=this.options.map(n);return e&&i===n?M({},i):i},d}()}(ct);var dt;!function(t){t.CLUSTERING_BEGIN="clusteringbegin",t.CLUSTERING_END="clusteringend",t.CLUSTER_CLICK="click"}(dt||(dt={}));var gt={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},ft={options:function(t,e){t.setOptions(e)},position:function(t,e){t.setPosition(e)},zIndex:function(t,e){t.setZIndex(e)}},vt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.containerElement=null,t.state={infoWindow:null},t.open=function(e,n){n?e.open(t.context,n):e.getPosition()?e.open(t.context):d(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.")},t.setInfoWindowCallback=function(){null!==t.state.infoWindow&&null!==t.containerElement&&(t.state.infoWindow.setContent(t.containerElement),t.open(t.state.infoWindow,t.props.anchor),t.props.onLoad&&t.props.onLoad(t.state.infoWindow))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.InfoWindow(Object.assign({},this.props.options||{}));this.containerElement=document.createElement("div"),this.registeredEvents=C({updaterMap:ft,eventMap:gt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{infoWindow:t}}),this.setInfoWindowCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.infoWindow&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:ft,eventMap:gt,prevProps:t,nextProps:this.props,instance:this.state.infoWindow}))}},{key:"componentWillUnmount",value:function(){null!==this.state.infoWindow&&(x(this.registeredEvents),this.state.infoWindow.close())}},{key:"render",value:function(){return this.containerElement?c.createPortal(h.Children.only(this.props.children),this.containerElement):h.createElement(h.Fragment,null)}}]),n}(h.PureComponent);vt.contextType=g;var mt={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},yt={draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},path:function(t,e){t.setPath(e)},visible:function(t,e){t.setVisible(e)}},xt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={polyline:null},t.setPolylineCallback=function(){null!==t.state.polyline&&t.props.onLoad&&t.props.onLoad(t.state.polyline)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.Polyline(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:yt,eventMap:mt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{polyline:t}}),this.setPolylineCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.polyline&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:yt,eventMap:mt,prevProps:t,nextProps:this.props,instance:this.state.polyline}))}},{key:"componentWillUnmount",value:function(){null!==this.state.polyline&&(this.props.onUnmount&&this.props.onUnmount(this.state.polyline),x(this.registeredEvents),this.state.polyline.setMap(null))}},{key:"render",value:function(){return h.createElement(h.Fragment,null)}}]),n}(h.PureComponent);xt.contextType=g;var Ct={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},kt={draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},path:function(t,e){t.setPath(e)},paths:function(t,e){t.setPaths(e)},visible:function(t,e){t.setVisible(e)}},Mt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={polygon:null},t.setPolygonCallback=function(){null!==t.state.polygon&&t.props.onLoad&&t.props.onLoad(t.state.polygon)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.Polygon(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:kt,eventMap:Ct,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{polygon:t}}),this.setPolygonCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.polygon&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:kt,eventMap:Ct,prevProps:t,nextProps:this.props,instance:this.state.polygon}))}},{key:"componentWillUnmount",value:function(){null!==this.state.polygon&&(this.props.onUnmount&&this.props.onUnmount(this.state.polygon),x(this.registeredEvents),this.state.polygon&&this.state.polygon.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Mt.contextType=g;var bt={onBoundsChanged:"bounds_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Lt={bounds:function(t,e){t.setBounds(e)},draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},visible:function(t,e){t.setVisible(e)}},wt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={rectangle:null},t.setRectangleCallback=function(){null!==t.state.rectangle&&t.props.onLoad&&t.props.onLoad(t.state.rectangle)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.Rectangle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:Lt,eventMap:bt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{rectangle:t}}),this.setRectangleCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.rectangle&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:Lt,eventMap:bt,prevProps:t,nextProps:this.props,instance:this.state.rectangle}))}},{key:"componentWillUnmount",value:function(){null!==this.state.rectangle&&(this.props.onUnmount&&this.props.onUnmount(this.state.rectangle),x(this.registeredEvents),this.state.rectangle.setMap(null))}},{key:"render",value:function(){return h.createElement(h.Fragment,null)}}]),n}(h.PureComponent);wt.contextType=g;var Pt={onCenterChanged:"center_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRadiusChanged:"radius_changed",onRightClick:"rightclick"},Et={center:function(t,e){t.setCenter(e)},draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},radius:function(t,e){t.setRadius(e)},visible:function(t,e){t.setVisible(e)}},St=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={circle:null},t.setCircleCallback=function(){null!==t.state.circle&&t.props.onLoad&&t.props.onLoad(t.state.circle)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.Circle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:Et,eventMap:Pt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{circle:t}}),this.setCircleCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.circle&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:Et,eventMap:Pt,prevProps:t,nextProps:this.props,instance:this.state.circle}))}},{key:"componentWillUnmount",value:function(){null!==this.state.circle&&(this.props.onUnmount&&this.props.onUnmount(this.state.circle),x(this.registeredEvents),this.state.circle&&this.state.circle.setMap(null))}},{key:"render",value:function(){return h.createElement(h.Fragment,null)}}]),n}(h.PureComponent);St.contextType=g;var _t={onAddFeature:"addfeature",onClick:"click",onDblClick:"dblclick",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRemoveFeature:"removefeature",onRemoveProperty:"removeproperty",onRightClick:"rightclick",onSetGeometry:"setgeometry",onSetProperty:"setproperty"},It={add:function(t,e){t.add(e)},addgeojson:function(t,e,n){t.addGeoJson(e,n)},contains:function(t,e){t.contains(e)},foreach:function(t,e){t.forEach(e)},loadgeojson:function(t,e,n,i){t.loadGeoJson(e,n,i)},overridestyle:function(t,e,n){t.overrideStyle(e,n)},remove:function(t,e){t.remove(e)},revertstyle:function(t,e){t.revertStyle(e)},controlposition:function(t,e){t.setControlPosition(e)},controls:function(t,e){t.setControls(e)},drawingmode:function(t,e){t.setDrawingMode(e)},map:function(t,e){t.setMap(e)},style:function(t,e){t.setStyle(e)},togeojson:function(t,e){t.toGeoJson(e)}},Zt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={data:null},t.setDataCallback=function(){null!==t.state.data&&t.props.onLoad&&t.props.onLoad(t.state.data)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.Data(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=C({updaterMap:It,eventMap:_t,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{data:t}}),this.setDataCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.data&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:It,eventMap:_t,prevProps:t,nextProps:this.props,instance:this.state.data}))}},{key:"componentWillUnmount",value:function(){null!==this.state.data&&(this.props.onUnmount&&this.props.onUnmount(this.state.data),x(this.registeredEvents),this.state.data&&this.state.data.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Zt.contextType=g;var Dt={onClick:"click",onDefaultViewportChanged:"defaultviewport_changed",onStatusChanged:"status_changed"},Ot={options:function(t,e){t.setOptions(e)},url:function(t,e){t.setUrl(e)},zIndex:function(t,e){t.setZIndex(e)}},Tt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={kmlLayer:null},t.setKmlLayerCallback=function(){null!==t.state.kmlLayer&&t.props.onLoad&&t.props.onLoad(t.state.kmlLayer)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.KmlLayer(Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=C({updaterMap:Ot,eventMap:Dt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{kmlLayer:t}}),this.setKmlLayerCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.kmlLayer&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:Ot,eventMap:Dt,prevProps:t,nextProps:this.props,instance:this.state.kmlLayer}))}},{key:"componentWillUnmount",value:function(){null!==this.state.kmlLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.kmlLayer),x(this.registeredEvents),this.state.kmlLayer.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Tt.contextType=g;var Bt=function(t,e){return new e(t.lat,t.lng)},Ut=function(t,e){return new e(new google.maps.LatLng(t.ne.lat,t.ne.lng),new google.maps.LatLng(t.sw.lat,t.sw.lng))},zt=function(t,e,n){return t instanceof e?t:n(t,e)};function Rt(t){return t?(t instanceof google.maps.LatLng?t:new google.maps.LatLng(t.lat,t.lng))+"":""}function At(t){return t?(t instanceof google.maps.LatLngBounds?t:new google.maps.LatLngBounds(new google.maps.LatLng(t.south,t.east),new google.maps.LatLng(t.north,t.west)))+"":""}var Wt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(t){var i;(0,s.Z)(this,n),(i=e.call(this,t)).state={paneEl:null,containerStyle:{position:"absolute"}},i.updatePane=function(){var t=i.props.mapPaneName,e=i.overlayView.getPanes();d(!!t,"OverlayView requires props.mapPaneName but got %s",t),e?i.setState({paneEl:e[t]}):i.setState({paneEl:null})},i.onAdd=function(){var t,e;i.updatePane(),null===(e=(t=i.props).onLoad)||void 0===e||e.call(t,i.overlayView)},i.onPositionElement=function(){var t,e,n,o,s=function(t,e,n,i){return void 0!==n?function(t,e,n){var i=t&&t.fromLatLngToDivPixel(n.getNorthEast()),o=t&&t.fromLatLngToDivPixel(n.getSouthWest());return i&&o?{left:"".concat(o.x+e.x,"px"),top:"".concat(i.y+e.y,"px"),width:"".concat(i.x-o.x-e.x,"px"),height:"".concat(o.y-i.y-e.y,"px")}:{left:"-9999px",top:"-9999px"}}(t,e,zt(n,google.maps.LatLngBounds,Ut)):function(t,e,n){var i=t&&t.fromLatLngToDivPixel(n);if(i){var o=i.x,s=i.y;return{left:"".concat(o+e.x,"px"),top:"".concat(s+e.y,"px")}}return{left:"-9999px",top:"-9999px"}}(t,e,zt(i,google.maps.LatLng,Bt))}(i.overlayView.getProjection(),Object.assign({x:0,y:0},i.containerRef.current?(t=i.containerRef.current,"function"===typeof(e=i.props.getPixelPositionOffset)?e(t.offsetWidth,t.offsetHeight):{}):{}),i.props.bounds,i.props.position),r=i.state.containerStyle,a=r.left,p=r.top,l=r.width,u=r.height;o={left:a,top:p,width:l,height:u},((n=s).left!==o.left||n.top!==o.top||n.width!==o.height||n.height!==o.height)&&i.setState({containerStyle:Object.assign(Object.assign({},s),{position:"absolute"})})},i.draw=function(){i.onPositionElement()},i.onRemove=function(){var t,e;i.setState((function(){return{paneEl:null}})),null===(e=(t=i.props).onUnmount)||void 0===e||e.call(t,i.overlayView)},i.containerRef=h.createRef();var o=new google.maps.OverlayView;return o.onAdd=i.onAdd,o.draw=i.draw,o.onRemove=i.onRemove,i.overlayView=o,i}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){this.overlayView.setMap(this.context)}},{key:"componentDidUpdate",value:function(t){var e=Rt(t.position),n=Rt(this.props.position),i=At(t.bounds),o=At(this.props.bounds);e===n&&i===o||this.overlayView.draw(),t.mapPaneName!==this.props.mapPaneName&&this.updatePane()}},{key:"componentWillUnmount",value:function(){this.overlayView.setMap(null)}},{key:"render",value:function(){var t=this.state.paneEl;return t?c.createPortal(h.createElement("div",{ref:this.containerRef,style:this.state.containerStyle},h.Children.only(this.props.children)),t):null}}]),n}(h.PureComponent);Wt.FLOAT_PANE="floatPane",Wt.MAP_PANE="mapPane",Wt.MARKER_LAYER="markerLayer",Wt.OVERLAY_LAYER="overlayLayer",Wt.OVERLAY_MOUSE_TARGET="overlayMouseTarget",Wt.contextType=g;var Vt={onDblClick:"dblclick",onClick:"click"},jt={opacity:function(t,e){t.setOpacity(e)}},Nt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={groundOverlay:null},t.setGroundOverlayCallback=function(){null!==t.state.groundOverlay&&t.props.onLoad&&t.props.onLoad(t.state.groundOverlay)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){d(!!this.props.url||!!this.props.bounds,"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655");var t=new google.maps.GroundOverlay(this.props.url,this.props.bounds,Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=C({updaterMap:jt,eventMap:Vt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{groundOverlay:t}}),this.setGroundOverlayCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.groundOverlay&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:jt,eventMap:Vt,prevProps:t,nextProps:this.props,instance:this.state.groundOverlay}))}},{key:"componentWillUnmount",value:function(){this.state.groundOverlay&&(this.props.onUnmount&&this.props.onUnmount(this.state.groundOverlay),this.state.groundOverlay.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Nt.defaultProps={onLoad:function(){}},Nt.contextType=g;var Ht={},Ft={data:function(t,e){t.setData(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)}},Gt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={heatmapLayer:null},t.setHeatmapLayerCallback=function(){null!==t.state.heatmapLayer&&t.props.onLoad&&t.props.onLoad(t.state.heatmapLayer)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){d(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} to <LoadScript />? %s',google.maps.visualization),d(!!this.props.data,"data property is required in HeatmapLayer %s",this.props.data);var t=new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({},this.props.options||{}),{data:this.props.data,map:this.context}));this.registeredEvents=C({updaterMap:Ft,eventMap:Ht,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{heatmapLayer:t}}),this.setHeatmapLayerCallback)}},{key:"componentDidUpdate",value:function(t){x(this.registeredEvents),this.registeredEvents=C({updaterMap:Ft,eventMap:Ht,prevProps:t,nextProps:this.props,instance:this.state.heatmapLayer})}},{key:"componentWillUnmount",value:function(){null!==this.state.heatmapLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.heatmapLayer),x(this.registeredEvents),this.state.heatmapLayer.setMap(null))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Gt.contextType=g;var qt={onCloseClick:"closeclick",onPanoChanged:"pano_changed",onPositionChanged:"position_changed",onPovChanged:"pov_changed",onResize:"resize",onStatusChanged:"status_changed",onVisibleChanged:"visible_changed",onZoomChanged:"zoom_changed"},Yt={register:function(t,e,n){t.registerPanoProvider(e,n)},links:function(t,e){t.setLinks(e)},motionTracking:function(t,e){t.setMotionTracking(e)},options:function(t,e){t.setOptions(e)},pano:function(t,e){t.setPano(e)},position:function(t,e){t.setPosition(e)},pov:function(t,e){t.setPov(e)},visible:function(t,e){t.setVisible(e)},zoom:function(t,e){t.setZoom(e)}},Kt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={streetViewPanorama:null},t.setStreetViewPanoramaCallback=function(){null!==t.state.streetViewPanorama&&t.props.onLoad&&t.props.onLoad(t.state.streetViewPanorama)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=this.context.getStreetView();this.registeredEvents=C({updaterMap:Yt,eventMap:qt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{streetViewPanorama:t}}),this.setStreetViewPanoramaCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.streetViewPanorama&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:Yt,eventMap:qt,prevProps:t,nextProps:this.props,instance:this.state.streetViewPanorama}))}},{key:"componentWillUnmount",value:function(){null!==this.state.streetViewPanorama&&(this.props.onUnmount&&this.props.onUnmount(this.state.streetViewPanorama),x(this.registeredEvents),this.state.streetViewPanorama.setVisible(!1))}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Kt.contextType=g;var Qt=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).state={streetViewService:null},t.setStreetViewServiceCallback=function(){null!==t.state.streetViewService&&t.props.onLoad&&t.props.onLoad(t.state.streetViewService)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.StreetViewService;this.setState((function(){return{streetViewService:t}}),this.setStreetViewServiceCallback)}},{key:"componentWillUnmount",value:function(){null!==this.state.streetViewService&&this.props.onUnmount&&this.props.onUnmount(this.state.streetViewService)}},{key:"render",value:function(){return null}}]),n}(h.PureComponent);Qt.contextType=g;h.PureComponent;var Jt={onDirectionsChanged:"directions_changed"},Xt={directions:function(t,e){t.setDirections(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},panel:function(t,e){t.setPanel(e)},routeIndex:function(t,e){t.setRouteIndex(e)}},$t=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.state={directionsRenderer:null},t.setDirectionsRendererCallback=function(){null!==t.state.directionsRenderer&&(t.state.directionsRenderer.setMap(t.context),t.props.onLoad&&t.props.onLoad(t.state.directionsRenderer))},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){var t=new google.maps.DirectionsRenderer(this.props.options);this.registeredEvents=C({updaterMap:Xt,eventMap:Jt,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{directionsRenderer:t}}),this.setDirectionsRendererCallback)}},{key:"componentDidUpdate",value:function(t){null!==this.state.directionsRenderer&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:Xt,eventMap:Jt,prevProps:t,nextProps:this.props,instance:this.state.directionsRenderer}))}},{key:"componentWillUnmount",value:function(){null!==this.state.directionsRenderer&&(this.props.onUnmount&&this.props.onUnmount(this.state.directionsRenderer),x(this.registeredEvents),this.state.directionsRenderer&&this.state.directionsRenderer.setMap(null))}},{key:"render",value:function(){return h.createElement(h.Fragment,null)}}]),n}(h.PureComponent);$t.contextType=g;h.PureComponent;var te={onPlacesChanged:"places_changed"},ee={bounds:function(t,e){t.setBounds(e)}},ne=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.containerElement=h.createRef(),t.state={searchBox:null},t.setSearchBoxCallback=function(){null!==t.state.searchBox&&t.props.onLoad&&t.props.onLoad(t.state.searchBox)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){if(d(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places),null!==this.containerElement&&null!==this.containerElement.current){var t=this.containerElement.current.querySelector("input");if(null!==t){var e=new google.maps.places.SearchBox(t,this.props.options);this.registeredEvents=C({updaterMap:ee,eventMap:te,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{searchBox:e}}),this.setSearchBoxCallback)}}}},{key:"componentDidUpdate",value:function(t){null!==this.state.searchBox&&(x(this.registeredEvents),this.registeredEvents=C({updaterMap:ee,eventMap:te,prevProps:t,nextProps:this.props,instance:this.state.searchBox}))}},{key:"componentWillUnmount",value:function(){null!==this.state.searchBox&&(this.props.onUnmount&&this.props.onUnmount(this.state.searchBox),x(this.registeredEvents))}},{key:"render",value:function(){return h.createElement("div",{ref:this.containerElement},h.Children.only(this.props.children))}}]),n}(h.PureComponent);ne.contextType=g;var ie={onPlaceChanged:"place_changed"},oe={bounds:function(t,e){t.setBounds(e)},restrictions:function(t,e){t.setComponentRestrictions(e)},fields:function(t,e){t.setFields(e)},options:function(t,e){t.setOptions(e)},types:function(t,e){t.setTypes(e)}},se=function(t){(0,a.Z)(n,t);var e=(0,p.Z)(n);function n(){var t;return(0,s.Z)(this,n),(t=e.apply(this,arguments)).registeredEvents=[],t.containerElement=h.createRef(),t.state={autocomplete:null},t.setAutocompleteCallback=function(){null!==t.state.autocomplete&&t.props.onLoad&&t.props.onLoad(t.state.autocomplete)},t}return(0,r.Z)(n,[{key:"componentDidMount",value:function(){d(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places);var t=this.containerElement.current.querySelector("input");if(t){var e=new google.maps.places.Autocomplete(t,this.props.options);this.registeredEvents=C({updaterMap:oe,eventMap:ie,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{autocomplete:e}}),this.setAutocompleteCallback)}}},{key:"componentDidUpdate",value:function(t){x(this.registeredEvents),this.registeredEvents=C({updaterMap:oe,eventMap:ie,prevProps:t,nextProps:this.props,instance:this.state.autocomplete})}},{key:"componentWillUnmount",value:function(){null!==this.state.autocomplete&&x(this.registeredEvents)}},{key:"render",value:function(){return h.createElement("div",{ref:this.containerElement,className:this.props.className||""},h.Children.only(this.props.children))}}]),n}(h.PureComponent);se.contextType=g}}]);
//# sourceMappingURL=993.e3bb429d.chunk.js.map